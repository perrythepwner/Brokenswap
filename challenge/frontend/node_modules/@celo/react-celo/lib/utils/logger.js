"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setApplicationLogger = exports.getApplicationLogger = exports.Logger = exports.Level = void 0;
var Level;
(function (Level) {
    Level[Level["Silent"] = 0] = "Silent";
    Level[Level["Debug"] = 1] = "Debug";
    Level[Level["Default"] = 2] = "Default";
    Level[Level["Warning"] = 3] = "Warning";
    Level[Level["Error"] = 4] = "Error";
})(Level = exports.Level || (exports.Level = {}));
/**
 * @internal Used the defined the default applicationLogger
 */
class Logger {
    constructor(level = null, namespace = '[react-celo]') {
        this.namespace = namespace;
        if (!level) {
            if (process.env.DEBUG === 'true' ||
                process.env.NODE_ENV !== 'production') {
                this.level = Level.Debug;
            }
            else {
                this.level = Level.Error;
            }
        }
        else {
            this.level = level;
        }
    }
    debug(...args) {
        if (this.level > Level.Debug)
            return;
        console.info(this.namespace, ...args);
    }
    log(...args) {
        if (this.level > Level.Default)
            return;
        console.log(this.namespace, ...args);
    }
    warn(...args) {
        if (this.level > Level.Warning)
            return;
        console.warn(this.namespace, ...args);
    }
    error(...args) {
        if (this.level > Level.Error)
            return;
        console.error(this.namespace, ...args);
    }
}
exports.Logger = Logger;
let applicationLogger = new Logger();
function setApplicationLogger(logger) {
    applicationLogger = logger;
}
exports.setApplicationLogger = setApplicationLogger;
function getApplicationLogger() {
    return applicationLogger;
}
exports.getApplicationLogger = getApplicationLogger;
//# sourceMappingURL=logger.js.map