import { Maybe } from '../types';
export declare enum Level {
    Silent = 0,
    Debug = 1,
    Default = 2,
    Warning = 3,
    Error = 4
}
export interface ILogger {
    debug(...args: unknown[]): void;
    log(...args: unknown[]): void;
    warn(...args: unknown[]): void;
    error(...args: unknown[]): void;
}
/**
 * @internal Used the defined the default applicationLogger
 */
export declare class Logger implements ILogger {
    private namespace;
    level: Level;
    constructor(level?: Maybe<Level>, namespace?: string);
    debug(...args: unknown[]): void;
    log(...args: unknown[]): void;
    warn(...args: unknown[]): void;
    error(...args: unknown[]): void;
}
declare function setApplicationLogger(logger: ILogger): void;
declare function getApplicationLogger(): ILogger;
export { getApplicationLogger, setApplicationLogger };
//# sourceMappingURL=logger.d.ts.map