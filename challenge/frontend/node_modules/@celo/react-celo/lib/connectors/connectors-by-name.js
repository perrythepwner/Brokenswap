"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONNECTOR_TYPES = void 0;
const constants_1 = require("../constants");
const celo_extension_wallet_1 = __importDefault(require("./celo-extension-wallet"));
const coinbase_wallet_1 = __importDefault(require("./coinbase-wallet"));
const injected_1 = __importDefault(require("./injected"));
const ledger_1 = __importDefault(require("./ledger"));
const metamask_1 = __importDefault(require("./metamask"));
const private_key_1 = __importDefault(require("./private-key"));
const unauthenticated_1 = __importDefault(require("./unauthenticated"));
const wallet_connect_1 = __importDefault(require("./wallet-connect"));
/**
 * Connectors for each wallet.
 */
exports.CONNECTOR_TYPES = {
    [constants_1.WalletTypes.CeloExtensionWallet]: celo_extension_wallet_1.default,
    [constants_1.WalletTypes.Injected]: injected_1.default,
    [constants_1.WalletTypes.Ledger]: ledger_1.default,
    [constants_1.WalletTypes.MetaMask]: metamask_1.default,
    [constants_1.WalletTypes.PrivateKey]: private_key_1.default,
    [constants_1.WalletTypes.Unauthenticated]: unauthenticated_1.default,
    [constants_1.WalletTypes.WalletConnect]: wallet_connect_1.default,
    // TODO: only show these ones dynamically depending on the which wallets run on our blockchain (eip155:42220)
    [constants_1.WalletTypes.Valora]: wallet_connect_1.default,
    [constants_1.WalletTypes.CeloDance]: wallet_connect_1.default,
    [constants_1.WalletTypes.CeloTerminal]: wallet_connect_1.default,
    [constants_1.WalletTypes.CeloWallet]: wallet_connect_1.default,
    [constants_1.WalletTypes.CoinbaseWallet]: coinbase_wallet_1.default,
};
//# sourceMappingURL=connectors-by-name.js.map