import { CeloTokenContract } from '@celo/contractkit/lib/base';
import { MiniContractKit } from '@celo/contractkit/lib/mini-kit';
import { WalletTypes } from '../constants';
import { Connector, Network } from '../types';
import { AbstractConnector, updateFeeCurrency } from './common';
export default class PrivateKeyConnector extends AbstractConnector implements Connector {
    private network;
    feeCurrency: CeloTokenContract;
    initialised: boolean;
    type: WalletTypes;
    kit: MiniContractKit;
    private wallet;
    constructor(network: Network, privateKey: string, feeCurrency: CeloTokenContract);
    initialise(): Promise<this>;
    startNetworkChangeFromApp(network: Network): Promise<void>;
    private newKit;
    supportsFeeCurrency(): boolean;
    updateFeeCurrency: typeof updateFeeCurrency;
    close(): void;
}
//# sourceMappingURL=private-key.d.ts.map