"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ledger = void 0;
const react_1 = __importStar(require("react"));
const button_1 = __importDefault(require("../components/button"));
const connector_screen_1 = __importDefault(require("../components/connector-screen"));
const spinner_1 = __importDefault(require("../components/spinner"));
const connectors_1 = require("../connectors");
const use_is_mounted_1 = require("../hooks/use-is-mounted");
const use_theme_1 = __importDefault(require("../hooks/use-theme"));
const use_celo_1 = require("../use-celo");
const tailwind_1 = __importDefault(require("../utils/tailwind"));
const styles = (0, tailwind_1.default)({
    disclaimer: `
    tw-mt-3
    tw-text-sm`,
    container: `
    tw-list-disc
    tw-text-sm
    tw-list-inside
    tw-mt-4`,
    accountInfo: `
    tw-text-sm
    tw-mt-4`,
    error: `
    tw-mt-4
    tw-text-xs`,
    input: `
    tw-ml-1
    tw-text-center
    tw-border
    tw-rounded
    tw-outline-none
    focus:tw-outline-none
    tw-text-current`,
    button: `
    tw-mt-6
    tw-px-4
    tw-py-2
    tw-w-full`,
    spinnerContainer: `
    tw-mt-5
    tw-w-full
    tw-flex
    tw-justify-center`,
});
const Ledger = ({ onSubmit }) => {
    const { network, initConnector, initError: error, feeCurrency, } = (0, use_celo_1.useCeloInternal)();
    const theme = (0, use_theme_1.default)();
    const [submitting, setSubmitting] = (0, react_1.useState)(false);
    const [index, setIndex] = (0, react_1.useState)('0');
    const isMountedRef = (0, use_is_mounted_1.useIsMounted)();
    const submit = () => __awaiter(void 0, void 0, void 0, function* () {
        setSubmitting(true);
        const connector = new connectors_1.LedgerConnector(network, parseInt(index, 10), feeCurrency);
        try {
            yield initConnector(connector);
            onSubmit(connector);
        }
        catch (e) {
            if (isMountedRef.current) {
                setSubmitting(false);
            }
        }
    });
    return (react_1.default.createElement(connector_screen_1.default, { title: "Connect with your Ledger device", content: react_1.default.createElement("div", { style: { color: theme.textSecondary } },
            react_1.default.createElement("p", { className: styles.disclaimer }, "Securely connect to your ledger device. Before proceeding, please ensure you have:"),
            react_1.default.createElement("ul", { className: styles.container },
                react_1.default.createElement("li", null, "Connected your Ledger (via USB)"),
                react_1.default.createElement("li", null, "Unlocked your Ledger"),
                react_1.default.createElement("li", null,
                    "Opened the",
                    ' ',
                    react_1.default.createElement("a", { href: "https://docs.celo.org/celo-owner-guide/ledger", target: "_blank", rel: "noopener noreferrer" }, "Celo application"),
                    ' ')),
            react_1.default.createElement("p", { className: styles.accountInfo },
                "Connect to account at index",
                ' ',
                react_1.default.createElement("input", { type: "number", className: styles.input, style: { width: '40px', background: 'unset' }, value: index, onChange: (e) => setIndex(e.target.value), disabled: submitting })),
            submitting ? (react_1.default.createElement("div", { className: styles.spinnerContainer },
                react_1.default.createElement(spinner_1.default, null))) : (react_1.default.createElement(button_1.default, { as: "button", className: styles.button, onClick: submit, disabled: submitting }, "Connect")),
            error && (react_1.default.createElement("p", { className: styles.error, style: { color: theme.error } }, error.message))), footer: {
            name: 'a Ledger',
            url: 'https://www.ledger.com/',
        } }));
};
exports.Ledger = Ledger;
//# sourceMappingURL=ledger.js.map