/*! tailwindcss v2.0.3 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a more readable tab size (opinionated).
*/

.react-celo {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

.react-celo {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

.react-celo {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

.react-celo {
  font-family: system-ui, -apple-system,
    /* Firefox supports this but not yet `system-ui` */ 'Segoe UI', Roboto,
    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

.react-celo hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct font weight in Edge and Safari.
*/

.react-celo b,
.react-celo strong {
  font-weight: bolder;
}

/**
Add the correct font size in all browsers.
*/

.react-celo small {
  font-size: 80%;
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

.react-celo button,
.react-celo input,
.react-celo optgroup,
.react-celo select,
.react-celo textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

.react-celo button,
.react-celo select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

.react-celo button,
.react-celo [type='button'],
.react-celo [type='reset'],
.react-celo [type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

.react-celo ::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

.react-celo :-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

.react-celo :-moz-ui-invalid {
  box-shadow: none;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

.react-celo progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

.react-celo ::-webkit-inner-spin-button,
.react-celo ::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

.react-celo [type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

.react-celo ::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
Interactive
===========
*/

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

.react-celo h1,
.react-celo h2,
.react-celo h3,
.react-celo h4,
.react-celo h5,
.react-celo h6,
.react-celo hr,
.react-celo figure,
.react-celo p,
.react-celo pre {
  margin: 0;
}

.react-celo button {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.react-celo button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

.react-celo *,
.react-celo ::before,
.react-celo ::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

.react-celo hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

.react-celo img {
  border-style: solid;
}

.react-celo textarea {
  resize: vertical;
}

.react-celo input::-moz-placeholder, .react-celo textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

.react-celo input::placeholder,
.react-celo textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

.react-celo button,
.react-celo [role='button'] {
  cursor: pointer;
}

.react-celo table {
  border-collapse: collapse;
}

.react-celo h1,
.react-celo h2,
.react-celo h3,
.react-celo h4,
.react-celo h5,
.react-celo h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

.react-celo a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

.react-celo button,
.react-celo input,
.react-celo optgroup,
.react-celo select,
.react-celo textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

.react-celo img,
.react-celo video {
  display: block;
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

/*
Scrollbar overrides
===================
*/

.react-celo {
  --scrollbarBG: rgba(255, 255, 255, 0);
  --thumbBG: rgb(243, 244, 246);
  scrollbar-width: thin;
  scrollbar-color: var(--thumbBG) var(--scrollbarBG);
}

.tw-dark .react-celo,
.dark .react-celo {
  --thumbBG: rgb(55, 65, 81);
}

.react-celo ::-webkit-scrollbar {
  width: 4px;
  background-color: var(--scrollbarBG);
}

.react-celo ::-webkit-scrollbar-track {
  background-color: var(--scrollbarBG);
}

.react-celo ::-webkit-scrollbar-thumb {
  background-color: var(--thumbBG);
  border-radius: 6px;
  border: 3px solid var(--scrollbarBG);
}

/* phones */

@media only screen and (max-width: 767px) {
  .react-celo ::-webkit-scrollbar {
    width: 0;
  }
}

/*
Number Input spinner overrides
===============================
*/

/* Chrome, Safari, Edge, Opera */

.react-celo input::-webkit-outer-spin-button,
.react-celo input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */

.react-celo input[type='number'] {
  -moz-appearance: textfield;
}

/*
Spinner
*/

.react-celo .react-celo-spinner {
  animation: react-celo-spinner-rotate 2s linear infinite;
  width: 50px;
  height: 50px;
}

.react-celo .react-celo-spinner .react-celo-spinner-path {
  stroke-linecap: round;
  animation: react-celo-spinner-dash 1.5s ease-in-out infinite;
}

.react-celo .justify-center {
  justify-content: center;
}

.react-celo .justify-between {
  justify-content: space-between;
}

@keyframes react-celo-spinner-rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes react-celo-spinner-dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }

  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}

@media (min-width: 900px) {
  .react-celo-connect-container {
    width: 800px;
    height: 550px;
  }
}

.tw-fixed {
  position: fixed !important;
}

.tw-absolute {
  position: absolute !important;
}

.tw-relative {
  position: relative !important;
}

.tw-sticky {
  position: sticky !important;
}

.tw-inset-0 {
  top: 0px !important;
  right: 0px !important;
  bottom: 0px !important;
  left: 0px !important;
}

.tw-top-5 {
  top: 1.25rem !important;
}

.tw-right-2 {
  right: 0.5rem !important;
}

.tw-right-5 {
  right: 1.25rem !important;
}

.tw-left-2 {
  left: 0.5rem !important;
}

.tw-left-5 {
  left: 1.25rem !important;
}

.tw-top-0 {
  top: 0px !important;
}

.tw-bottom-0 {
  bottom: 0px !important;
}

.tw-top-1\/2 {
  top: 50% !important;
}

.tw-right-auto {
  right: auto !important;
}

.tw-bottom-auto {
  bottom: auto !important;
}

.tw-left-1\/2 {
  left: 50% !important;
}

.tw-z-20 {
  z-index: 20 !important;
}

.tw-z-10 {
  z-index: 10 !important;
}

.tw-z-40 {
  z-index: 40 !important;
}

.tw-my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

.tw-my-8 {
  margin-top: 2rem !important;
  margin-bottom: 2rem !important;
}

.tw-mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.tw-mr-2 {
  margin-right: 0.5rem !important;
}

.tw-mt-4 {
  margin-top: 1rem !important;
}

.tw-mr-4 {
  margin-right: 1rem !important;
}

.tw-mb-4 {
  margin-bottom: 1rem !important;
}

.tw-mt-6 {
  margin-top: 1.5rem !important;
}

.tw-mt-3 {
  margin-top: 0.75rem !important;
}

.tw-ml-1 {
  margin-left: 0.25rem !important;
}

.tw-mt-5 {
  margin-top: 1.25rem !important;
}

.tw-mt-2 {
  margin-top: 0.5rem !important;
}

.tw-flex {
  display: flex !important;
}

.tw-h-full {
  height: 100% !important;
}

.tw-h-4 {
  height: 1rem !important;
}

.tw-h-screen {
  height: 100vh !important;
}

.tw-h-5 {
  height: 1.25rem !important;
}

.tw-h-10 {
  height: 2.5rem !important;
}

.tw-h-7 {
  height: 1.75rem !important;
}

.tw-max-h-screen {
  max-height: 100vh !important;
}

.tw-w-4\/5 {
  width: 80% !important;
}

.tw-w-4 {
  width: 1rem !important;
}

.tw-w-5 {
  width: 1.25rem !important;
}

.tw-w-full {
  width: 100% !important;
}

.tw-w-11\/12 {
  width: 91.666667% !important;
}

.tw-w-10 {
  width: 2.5rem !important;
}

.tw-w-7 {
  width: 1.75rem !important;
}

.tw-w-80 {
  width: 20rem !important;
}

.tw-w-48 {
  width: 12rem !important;
}

.tw-w-screen {
  width: 100vw !important;
}

.tw-flex-shrink-0 {
  flex-shrink: 0 !important;
}

.tw-flex-grow {
  flex-grow: 1 !important;
}

.tw-grow {
  flex-grow: 1 !important;
}

.tw-basis-3\/12 {
  flex-basis: 25% !important;
}

.tw-basis-9\/12 {
  flex-basis: 75% !important;
}

.tw--translate-x-1\/2 {
  --tw-translate-x: -50% !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.tw--translate-y-1\/2 {
  --tw-translate-y: -50% !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.tw-scale-100 {
  --tw-scale-x: 1 !important;
  --tw-scale-y: 1 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.tw-select-none {
  -webkit-user-select: none !important;
     -moz-user-select: none !important;
          user-select: none !important;
}

.tw-list-inside {
  list-style-position: inside !important;
}

.tw-list-disc {
  list-style-type: disc !important;
}

.tw-flex-row {
  flex-direction: row !important;
}

.tw-flex-col {
  flex-direction: column !important;
}

.tw-items-center {
  align-items: center !important;
}

.tw-items-stretch {
  align-items: stretch !important;
}

.tw-justify-start {
  justify-content: flex-start !important;
}

.tw-justify-end {
  justify-content: flex-end !important;
}

.tw-justify-center {
  justify-content: center !important;
}

.tw-justify-between {
  justify-content: space-between !important;
}

.tw-gap-2 {
  gap: 0.5rem !important;
}

.tw-gap-9 {
  gap: 2.25rem !important;
}

.tw-gap-8 {
  gap: 2rem !important;
}

.tw-gap-y-4 {
  row-gap: 1rem !important;
}

.tw-gap-y-1 {
  row-gap: 0.25rem !important;
}

.tw-gap-x-2 {
  -moz-column-gap: 0.5rem !important;
       column-gap: 0.5rem !important;
}

.tw-divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0 !important;
  border-right-width: calc(1px * var(--tw-divide-x-reverse)) !important;
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse))) !important;
}

.tw-self-end {
  align-self: flex-end !important;
}

.tw-self-center {
  align-self: center !important;
}

.tw-overflow-hidden {
  overflow: hidden !important;
}

.tw-overflow-y-auto {
  overflow-y: auto !important;
}

.tw-overflow-x-hidden {
  overflow-x: hidden !important;
}

.tw-overscroll-contain {
  overscroll-behavior: contain !important;
}

.tw-rounded {
  border-radius: 0.25rem !important;
}

.tw-rounded-md {
  border-radius: 0.375rem !important;
}

.tw-rounded-lg {
  border-radius: 0.5rem !important;
}

.tw-border {
  border-width: 1px !important;
}

.tw-border-solid {
  border-style: solid !important;
}

.tw-border-none {
  border-style: none !important;
}

.tw-bg-white {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity)) !important;
}

.tw-fill-current {
  fill: currentColor !important;
}

.tw-fill-white {
  fill: #fff !important;
}

.tw-fill-black {
  fill: #000 !important;
}

.tw-stroke-current {
  stroke: currentColor !important;
}

.tw-p-4 {
  padding: 1rem !important;
}

.tw-p-0\.5 {
  padding: 0.125rem !important;
}

.tw-p-0 {
  padding: 0px !important;
}

.tw-p-5 {
  padding: 1.25rem !important;
}

.tw-px-2 {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
}

.tw-py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}

.tw-py-4 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}

.tw-px-6 {
  padding-left: 1.5rem !important;
  padding-right: 1.5rem !important;
}

.tw-py-1\.5 {
  padding-top: 0.375rem !important;
  padding-bottom: 0.375rem !important;
}

.tw-px-5 {
  padding-left: 1.25rem !important;
  padding-right: 1.25rem !important;
}

.tw-py-6 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}

.tw-px-4 {
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}

.tw-py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}

.tw-px-3 {
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
}

.tw-pb-4 {
  padding-bottom: 1rem !important;
}

.tw-pl-2 {
  padding-left: 0.5rem !important;
}

.tw-pr-2 {
  padding-right: 0.5rem !important;
}

.tw-pb-2 {
  padding-bottom: 0.5rem !important;
}

.tw-pr-1 {
  padding-right: 0.25rem !important;
}

.tw-pb-6 {
  padding-bottom: 1.5rem !important;
}

.tw-pt-4 {
  padding-top: 1rem !important;
}

.tw-pl-8 {
  padding-left: 2rem !important;
}

.tw-pt-2 {
  padding-top: 0.5rem !important;
}

.tw-text-left {
  text-align: left !important;
}

.tw-text-center {
  text-align: center !important;
}

.tw-font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !important;
}

.tw-text-xl {
  font-size: 1.25rem !important;
  line-height: 1.75rem !important;
}

.tw-text-sm {
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}

.tw-text-lg {
  font-size: 1.125rem !important;
  line-height: 1.75rem !important;
}

.tw-text-xs {
  font-size: 0.75rem !important;
  line-height: 1rem !important;
}

.tw-font-medium {
  font-weight: 500 !important;
}

.tw-font-thin {
  font-weight: 100 !important;
}

.tw-font-normal {
  font-weight: 400 !important;
}

.tw-leading-5 {
  line-height: 1.25rem !important;
}

.tw-text-current {
  color: currentColor !important;
}

.tw-antialiased {
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}

.tw-outline-none {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}

.tw-drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06)) !important;
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.tw-transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter !important;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
  transition-duration: 150ms !important;
}

.tw-will-change-transform {
  will-change: transform !important;
}

.react-celo-modal-open-body {
  height: -webkit-fill-available;
  overflow: hidden;
}

@media (max-width: 900px) {
  .react-celo-modal-open-html {
    height: -webkit-fill-available;
  }

  .rc-tray-ios-fix {
    height: -webkit-fill-available;
  }
}

@media (min-width: 900px) {
  .react-celo-modal-open-body {
    min-height: 100vh;
    max-height: 100vh;
  }
}

.tw-drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1))
    drop-shadow(0 1px 1px rgba(0, 0, 0, 0.06)) !important;
  filter: var(--tw-drop-shadow);
}

/* These are use by spinner */

* {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
}

.placeholder\:tw-font-medium::-moz-placeholder {
  font-weight: 500 !important;
}

.placeholder\:tw-font-medium::placeholder {
  font-weight: 500 !important;
}

.placeholder\:tw-text-current::-moz-placeholder {
  color: currentColor !important;
}

.placeholder\:tw-text-current::placeholder {
  color: currentColor !important;
}

.hover\:tw-opacity-80:hover {
  opacity: 0.8 !important;
}

.focus\:tw-outline-none:focus {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}

.focus-visible\:tw-outline-none:focus-visible {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}

.active\:tw-scale-95:active {
  --tw-scale-x: .95 !important;
  --tw-scale-y: .95 !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.tw-dark .dark\:tw-drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06)) !important;
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

@media (min-width: 768px) {
  .md\:tw-mr-5 {
    margin-right: 1.25rem !important;
  }

  .md\:tw-w-96 {
    width: 24rem !important;
  }

  .md\:tw-w-64 {
    width: 16rem !important;
  }
}
