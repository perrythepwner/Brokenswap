{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$();\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { currencyEquals, Token } from '@ubeswap/sdk';\nimport { arrayify } from 'ethers/lib/utils';\nimport { useMemo } from 'react';\nimport { filterTokens } from '../components/SearchModal/filtering';\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks';\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport { useUserAddedTokens } from '../state/user/hooks';\nimport { isAddress } from '../utils';\nimport { useTokenContract } from './useContract';\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap) {\n  _s();\n  const chainId = 31337;\n  return useMemo(() => {\n    if (!chainId || !tokenMap[chainId]) return {};\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token;\n      return newMap;\n    }, {});\n    return mapWithoutUrls;\n  }, [tokenMap]);\n}\n_s(useTokensFromMap, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport function useAllTokens() {\n  _s2();\n  const allTokens = useCombinedActiveList();\n  return useTokensFromMap(allTokens);\n}\n_s2(useAllTokens, \"jCGW4tI4Rs1UGm9shzKA8VnDJ0A=\", false, function () {\n  return [useCombinedActiveList, useTokensFromMap];\n});\nexport function useAllInactiveTokens() {\n  _s3();\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList();\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap);\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens());\n  const filteredInactive = activeTokensAddresses ? Object.keys(inactiveTokens).reduce((newMap, address) => {\n    if (!activeTokensAddresses.includes(address)) {\n      newMap[address] = inactiveTokens[address];\n    }\n    return newMap;\n  }, {}) : inactiveTokens;\n  return filteredInactive;\n}\n_s3(useAllInactiveTokens, \"y9223uP8GCC/3ME2n383kLmFOz4=\", false, function () {\n  return [useCombinedInactiveList, useTokensFromMap, useAllTokens];\n});\nexport function useIsTokenActive(token) {\n  _s4();\n  const activeTokens = useAllTokens();\n  if (!activeTokens || !token) {\n    return false;\n  }\n  return !!activeTokens[token.address];\n}\n\n// used to detect extra search results\n_s4(useIsTokenActive, \"/DZnqUeqi963rU8m84lshLFLG1g=\", false, function () {\n  return [useAllTokens];\n});\nexport function useFoundOnInactiveList(searchQuery) {\n  _s5();\n  const chainId = 62;\n  const inactiveTokens = useAllInactiveTokens();\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined;\n    } else {\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery);\n      return tokens;\n    }\n  }, [chainId, inactiveTokens, searchQuery]);\n}\n\n// Check if currency is included in custom list from user storage\n_s5(useFoundOnInactiveList, \"CHbNST6y0dGVgg9eTLvDjW+3J30=\", false, function () {\n  return [useAllInactiveTokens];\n});\nexport function useIsUserAddedToken(currency) {\n  _s6();\n  const userAddedTokens = useUserAddedTokens();\n  if (!currency) {\n    return false;\n  }\n  return !!userAddedTokens.find(token => currencyEquals(currency, token));\n}\n\n// parse a name or symbol from a token response\n_s6(useIsUserAddedToken, \"/J12HuilTfT8HPlUWn/aslQP0JY=\", false, function () {\n  return [useUserAddedTokens];\n});\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\nexport function parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0 ? str :\n  // need to check for proper bytes string and valid terminator\n  bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0 ? parseBytes32String(bytes32) : defaultValue;\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  _s7();\n  const chainId = 62;\n  const tokens = useAllTokens();\n  const address = isAddress(tokenAddress);\n  const tokenContract = useTokenContract(address ? address : undefined, false);\n  const token = address ? tokens[address] : undefined;\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\n  return useMemo(() => {\n    if (token) return token;\n    if (!chainId || !address) return undefined;\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\n    if (decimals.result) {\n      var _symbol$result, _tokenName$result;\n      return new Token(chainId, address, decimals.result[0], ((_symbol$result = symbol.result) === null || _symbol$result === void 0 ? void 0 : _symbol$result[0]) || 'UNKNOWN', ((_tokenName$result = tokenName.result) === null || _tokenName$result === void 0 ? void 0 : _tokenName$result[0]) || 'Unknown Token');\n    }\n    return undefined;\n  }, [address, chainId, decimals.loading, decimals.result, symbol.loading, symbol.result, token, tokenName.loading, tokenName.result]);\n}\n_s7(useToken, \"lLNIQXXVxme8V/UZ9cvB2zbqbFU=\", false, function () {\n  return [useAllTokens, useTokenContract, useSingleCallResult, useSingleCallResult, useSingleCallResult];\n});\nexport function useCurrency(currencyId) {\n  _s8();\n  const token = useToken(currencyId);\n  return token;\n}\n_s8(useCurrency, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});","map":{"version":3,"names":["parseBytes32String","currencyEquals","Token","arrayify","useMemo","filterTokens","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useTokenContract","useTokensFromMap","tokenMap","_s","chainId","mapWithoutUrls","Object","keys","reduce","newMap","address","token","useAllTokens","_s2","allTokens","useAllInactiveTokens","_s3","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useIsTokenActive","_s4","activeTokens","useFoundOnInactiveList","searchQuery","_s5","undefined","tokens","values","useIsUserAddedToken","currency","_s6","userAddedTokens","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","_s7","tokenContract","tokenName","symbol","decimals","loading","result","_symbol$result","_tokenName$result","useCurrency","currencyId","_s8"],"sources":["/app/src/hooks/Tokens.ts"],"sourcesContent":["import { parseBytes32String } from '@ethersproject/strings'\nimport { currencyEquals, Token } from '@ubeswap/sdk'\nimport { arrayify } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\n\nimport { filterTokens } from '../components/SearchModal/filtering'\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\nimport { TokenAddressMap } from './../state/lists/hooks'\nimport { useTokenContract } from './useContract'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap): { [address: string]: Token } {\n  const chainId = 31337\n\n  return useMemo(() => {\n    if (!chainId || !tokenMap[chainId]) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    return mapWithoutUrls\n  }, [tokenMap])\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const chainId = 62\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    } else {\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n      return tokens\n    }\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Token | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nexport function parseStringOrBytes32(\n  str: string | undefined,\n  bytes32: string | undefined,\n  defaultValue: string\n): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const chainId = 62\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId as number,\n        address,\n        decimals.result[0],\n        symbol.result?.[0] || 'UNKNOWN',\n        tokenName.result?.[0] || 'Unknown Token'\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Token | null | undefined {\n  const token = useToken(currencyId)\n  return token\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}