{"ast":null,"code":"import _taggedTemplateLiteral from \"/app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/app/src/components/Toggle/index.tsx\",\n  _templateObject,\n  _templateObject2;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleElement = styled.span(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: 0.25rem 0.5rem;\\n  border-radius: 14px;\\n  background: \", \";\\n  color: \", \";\\n  font-size: 1rem;\\n  font-weight: 400;\\n\\n  padding: 0.35rem 0.6rem;\\n  border-radius: 12px;\\n  background: \", \";\\n  color: \", \";\\n  font-size: 1rem;\\n  font-weight: \", \";\\n  :hover {\\n    user-select: \", \";\\n    background: \", \";\\n    color: \", \";\\n  }\\n\"])), _ref => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref;\n  return isActive ? isOnSwitch ? theme.primary1 : theme.text4 : 'none';\n}, _ref2 => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref2;\n  return isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text3;\n}, _ref3 => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref3;\n  return isActive ? isOnSwitch ? theme.primary1 : theme.text4 : 'none';\n}, _ref4 => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref4;\n  return isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text2;\n}, _ref5 => {\n  let {\n    isOnSwitch\n  } = _ref5;\n  return isOnSwitch ? '500' : '400';\n}, _ref6 => {\n  let {\n    isOnSwitch\n  } = _ref6;\n  return isOnSwitch ? 'none' : 'initial';\n}, _ref7 => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref7;\n  return isActive ? isOnSwitch ? theme.primary1 : theme.text3 : 'none';\n}, _ref8 => {\n  let {\n    theme,\n    isActive,\n    isOnSwitch\n  } = _ref8;\n  return isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text3;\n});\n_c = ToggleElement;\nconst StyledToggle = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  border-radius: 12px;\\n  border: none;\\n  background: \", \";\\n  display: flex;\\n  width: fit-content;\\n  cursor: pointer;\\n  outline: none;\\n  padding: 0;\\n\"])), _ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.bg3;\n});\n_c2 = StyledToggle;\nexport default function Toggle(_ref10) {\n  let {\n    id,\n    isActive,\n    toggle\n  } = _ref10;\n  return /*#__PURE__*/_jsxDEV(StyledToggle, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ToggleElement, {\n      isActive: isActive,\n      isOnSwitch: true,\n      children: \"On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleElement, {\n      isActive: !isActive,\n      isOnSwitch: false,\n      children: \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Toggle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToggleElement\");\n$RefreshReg$(_c2, \"StyledToggle\");\n$RefreshReg$(_c3, \"Toggle\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","ToggleElement","span","_templateObject","_taggedTemplateLiteral","_ref","theme","isActive","isOnSwitch","primary1","text4","_ref2","white","text2","text3","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_c","StyledToggle","button","_templateObject2","_ref9","bg3","_c2","Toggle","_ref10","id","toggle","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/app/src/components/Toggle/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  font-size: 1rem;\n  font-weight: 400;\n\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text2)};\n  font-size: 1rem;\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\n  :hover {\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\n    background: ${({ theme, isActive, isOnSwitch }) =>\n      isActive ? (isOnSwitch ? theme.primary1 : theme.text3) : 'none'};\n    color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  }\n`\n\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 12px;\n  border: none;\n  background: ${({ theme }) => theme.bg3};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\n        On\n      </ToggleElement>\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\n        Off\n      </ToggleElement>\n    </StyledToggle>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}