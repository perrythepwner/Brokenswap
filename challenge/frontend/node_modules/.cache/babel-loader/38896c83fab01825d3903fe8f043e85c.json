{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { formatUnits } from '@ethersproject/units';\nimport { ERC20_ABI } from 'constants/abis/erc20';\nimport { Contract, Wallet } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport { useAllTokens } from './Tokens';\nimport { useWeb3Provider } from './useContract';\nexport function useConnectionInfo() {\n  _s();\n  const [connectionInfo, setConnectionInfo] = useState([]);\n  const [isInstanceRunning, setIsInstanceRunning] = useState(false);\n  useEffect(() => {\n    const fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          const RPC_ENDPOINT = process.env.REACT_APP_RPC_ENDPOINT;\n          const response = yield fetch(\"connection-info-by-team/\".concat(RPC_ENDPOINT));\n          const data = yield response.json();\n          setConnectionInfo(data);\n          if (!Array.isArray(data)) {\n            setIsInstanceRunning(true);\n          }\n        } catch (error) {\n          setIsInstanceRunning(false);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return [connectionInfo, isInstanceRunning];\n}\n_s(useConnectionInfo, \"dBHUJ9gQusLWb5oJ4Vefn2wUTSA=\");\nexport function useBalances() {\n  _s2();\n  const provider = useWeb3Provider();\n  const [connectionInfo, isInstanceRunning] = useConnectionInfo();\n  const tokens = useAllTokens();\n  const [HtbTokenBalance, setHtbTokenBalance] = useState(0);\n  const [WethTokenBalance, setWethTokenBalance] = useState(0);\n  useEffect(() => {\n    function setBalances() {\n      return _setBalances.apply(this, arguments);\n    }\n    function _setBalances() {\n      _setBalances = _asyncToGenerator(function* () {\n        try {\n          const player_addr = connectionInfo['Player Address'];\n          const signer = new Wallet(connectionInfo['Player Private Key'], provider);\n          const HtbContract = new Contract(Object.values(tokens)[0].address, ERC20_ABI, signer);\n          const WethContract = new Contract(Object.values(tokens)[1].address, ERC20_ABI, signer);\n          const HtbBalance = yield HtbContract.balanceOf(player_addr);\n          const WethBalance = yield WethContract.balanceOf(player_addr);\n          const HtbBalanceInFloat = parseFloat(parseFloat(formatUnits(HtbBalance, 18)).toFixed(6));\n          const WethBalanceInFloat = parseFloat(parseFloat(formatUnits(WethBalance, 18)).toFixed(6));\n          setHtbTokenBalance(HtbBalanceInFloat);\n          setWethTokenBalance(WethBalanceInFloat);\n        } catch (error) {\n          setHtbTokenBalance(0);\n          setWethTokenBalance(0);\n        }\n      });\n      return _setBalances.apply(this, arguments);\n    }\n    if (isInstanceRunning) {\n      setBalances();\n    } else {\n      setHtbTokenBalance(0);\n      setWethTokenBalance(0);\n    }\n  }, [connectionInfo, isInstanceRunning, provider, tokens]);\n  return [HtbTokenBalance, WethTokenBalance];\n}\n_s2(useBalances, \"0weEcFV7eUS9DBocPudxLh2JTwE=\", false, function () {\n  return [useWeb3Provider, useConnectionInfo, useAllTokens];\n});","map":{"version":3,"names":["formatUnits","ERC20_ABI","Contract","Wallet","useEffect","useState","useAllTokens","useWeb3Provider","useConnectionInfo","_s","connectionInfo","setConnectionInfo","isInstanceRunning","setIsInstanceRunning","fetchData","_ref","_asyncToGenerator","RPC_ENDPOINT","process","env","REACT_APP_RPC_ENDPOINT","response","fetch","concat","data","json","Array","isArray","error","apply","arguments","useBalances","_s2","provider","tokens","HtbTokenBalance","setHtbTokenBalance","WethTokenBalance","setWethTokenBalance","setBalances","_setBalances","player_addr","signer","HtbContract","Object","values","address","WethContract","HtbBalance","balanceOf","WethBalance","HtbBalanceInFloat","parseFloat","toFixed","WethBalanceInFloat"],"sources":["/app/src/hooks/useConnectionInfo.ts"],"sourcesContent":["import { formatUnits } from '@ethersproject/units'\nimport { ERC20_ABI } from 'constants/abis/erc20'\nimport { Contract, Wallet } from 'ethers'\nimport { useEffect, useState } from 'react'\n\nimport { useAllTokens } from './Tokens'\nimport { useWeb3Provider } from './useContract'\n\nexport function useConnectionInfo() {\n  const [connectionInfo, setConnectionInfo] = useState([])\n  const [isInstanceRunning, setIsInstanceRunning] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const RPC_ENDPOINT = process.env.REACT_APP_RPC_ENDPOINT\n        const response = await fetch(`connection-info-by-team/${RPC_ENDPOINT}`)\n        const data = await response.json()\n        setConnectionInfo(data)\n        if (!Array.isArray(data)) {\n          setIsInstanceRunning(true)\n        }\n      } catch (error) {\n        setIsInstanceRunning(false)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  return [connectionInfo, isInstanceRunning]\n}\n\nexport function useBalances() {\n  const provider = useWeb3Provider()\n  const [connectionInfo, isInstanceRunning] = useConnectionInfo()\n  const tokens = useAllTokens()\n  const [HtbTokenBalance, setHtbTokenBalance] = useState(0)\n  const [WethTokenBalance, setWethTokenBalance] = useState(0)\n\n  useEffect(() => {\n    async function setBalances() {\n      try {\n        const player_addr = connectionInfo['Player Address' as keyof typeof connectionInfo]\n        const signer = new Wallet(connectionInfo['Player Private Key' as keyof typeof connectionInfo], provider)\n        const HtbContract = new Contract(Object.values(tokens)[0].address, ERC20_ABI, signer)\n        const WethContract = new Contract(Object.values(tokens)[1].address, ERC20_ABI, signer)\n        const HtbBalance = await HtbContract.balanceOf(player_addr)\n        const WethBalance = await WethContract.balanceOf(player_addr)\n        const HtbBalanceInFloat = parseFloat(parseFloat(formatUnits(HtbBalance, 18)).toFixed(6))\n        const WethBalanceInFloat = parseFloat(parseFloat(formatUnits(WethBalance, 18)).toFixed(6))\n        setHtbTokenBalance(HtbBalanceInFloat)\n        setWethTokenBalance(WethBalanceInFloat)\n      } catch (error) {\n        setHtbTokenBalance(0)\n        setWethTokenBalance(0)\n      }\n    }\n    if (isInstanceRunning) {\n      setBalances()\n    } else {\n      setHtbTokenBalance(0)\n      setWethTokenBalance(0)\n    }\n  }, [connectionInfo, isInstanceRunning, provider, tokens])\n  return [HtbTokenBalance, WethTokenBalance]\n}\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,QAAQ;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,eAAe,QAAQ,eAAe;AAE/C,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjED,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACF,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;UACvD,MAAMC,QAAQ,SAASC,KAAK,4BAAAC,MAAA,CAA4BN,YAAY,CAAE,CAAC;UACvE,MAAMO,IAAI,SAASH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCd,iBAAiB,CAACa,IAAI,CAAC;UACvB,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;YACxBX,oBAAoB,CAAC,IAAI,CAAC;UAC5B;QACF,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdf,oBAAoB,CAAC,KAAK,CAAC;QAC7B;MACF,CAAC;MAAA,gBAZKC,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;MAAA;IAAA,GAYd;IAEDhB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACJ,cAAc,EAAEE,iBAAiB,CAAC;AAC5C;AAACH,EAAA,CAvBeD,iBAAiB;AAyBjC,OAAO,SAASuB,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMC,QAAQ,GAAG1B,eAAe,CAAC,CAAC;EAClC,MAAM,CAACG,cAAc,EAAEE,iBAAiB,CAAC,GAAGJ,iBAAiB,CAAC,CAAC;EAC/D,MAAM0B,MAAM,GAAG5B,YAAY,CAAC,CAAC;EAC7B,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAE3DD,SAAS,CAAC,MAAM;IAAA,SACCmC,WAAWA,CAAA;MAAA,OAAAC,YAAA,CAAAX,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAU,aAAA;MAAAA,YAAA,GAAAxB,iBAAA,CAA1B,aAA6B;QAC3B,IAAI;UACF,MAAMyB,WAAW,GAAG/B,cAAc,CAAC,gBAAgB,CAAgC;UACnF,MAAMgC,MAAM,GAAG,IAAIvC,MAAM,CAACO,cAAc,CAAC,oBAAoB,CAAgC,EAAEuB,QAAQ,CAAC;UACxG,MAAMU,WAAW,GAAG,IAAIzC,QAAQ,CAAC0C,MAAM,CAACC,MAAM,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC,CAACY,OAAO,EAAE7C,SAAS,EAAEyC,MAAM,CAAC;UACrF,MAAMK,YAAY,GAAG,IAAI7C,QAAQ,CAAC0C,MAAM,CAACC,MAAM,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC,CAACY,OAAO,EAAE7C,SAAS,EAAEyC,MAAM,CAAC;UACtF,MAAMM,UAAU,SAASL,WAAW,CAACM,SAAS,CAACR,WAAW,CAAC;UAC3D,MAAMS,WAAW,SAASH,YAAY,CAACE,SAAS,CAACR,WAAW,CAAC;UAC7D,MAAMU,iBAAiB,GAAGC,UAAU,CAACA,UAAU,CAACpD,WAAW,CAACgD,UAAU,EAAE,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;UACxF,MAAMC,kBAAkB,GAAGF,UAAU,CAACA,UAAU,CAACpD,WAAW,CAACkD,WAAW,EAAE,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;UAC1FjB,kBAAkB,CAACe,iBAAiB,CAAC;UACrCb,mBAAmB,CAACgB,kBAAkB,CAAC;QACzC,CAAC,CAAC,OAAO1B,KAAK,EAAE;UACdQ,kBAAkB,CAAC,CAAC,CAAC;UACrBE,mBAAmB,CAAC,CAAC,CAAC;QACxB;MACF,CAAC;MAAA,OAAAE,YAAA,CAAAX,KAAA,OAAAC,SAAA;IAAA;IACD,IAAIlB,iBAAiB,EAAE;MACrB2B,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLH,kBAAkB,CAAC,CAAC,CAAC;MACrBE,mBAAmB,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAAC5B,cAAc,EAAEE,iBAAiB,EAAEqB,QAAQ,EAAEC,MAAM,CAAC,CAAC;EACzD,OAAO,CAACC,eAAe,EAAEE,gBAAgB,CAAC;AAC5C;AAACL,GAAA,CAjCeD,WAAW;EAAA,QACRxB,eAAe,EACYC,iBAAiB,EAC9CF,YAAY;AAAA"},"metadata":{},"sourceType":"module"}