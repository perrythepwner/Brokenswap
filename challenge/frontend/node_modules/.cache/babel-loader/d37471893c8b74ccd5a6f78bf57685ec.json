{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _taggedTemplateLiteral from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nconst _excluded = [\"value\", \"onUserInput\", \"placeholder\"];\nvar _jsxFileName = \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/NumericalInput/index.tsx\",\n  _templateObject;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { escapeRegExp } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled.input(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  width: 0;\\n  position: relative;\\n  font-weight: 500;\\n  outline: none;\\n  border: none;\\n  flex: 1 1 auto;\\n  background-color: \", \";\\n  font-size: \", \";\\n  text-align: \", \";\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding: 0px;\\n  -webkit-appearance: textfield;\\n\\n  ::-webkit-search-decoration {\\n    -webkit-appearance: none;\\n  }\\n\\n  [type='number'] {\\n    -moz-appearance: textfield;\\n  }\\n\\n  ::-webkit-outer-spin-button,\\n  ::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n  }\\n\\n  ::placeholder {\\n    color: \", \";\\n  }\\n\"])), _ref => {\n  let {\n    error,\n    theme\n  } = _ref;\n  return error ? theme.red1 : theme.text1;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.bg1;\n}, _ref3 => {\n  let {\n    fontSize\n  } = _ref3;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : '24px';\n}, _ref4 => {\n  let {\n    align\n  } = _ref4;\n  return align && align;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.text4;\n});\n_c = StyledInput;\nconst inputRegex = RegExp(\"^\\\\d*(?:\\\\\\\\[.])?\\\\d*$\"); // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = /*#__PURE__*/React.memo(_c2 = function InnerInput(_ref6) {\n  let {\n      value,\n      onUserInput,\n      placeholder\n    } = _ref6,\n    rest = _objectWithoutProperties(_ref6, _excluded);\n  const enforcer = nextUserInput => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread(_objectSpread({}, rest), {}, {\n    value: value,\n    onChange: event => {\n      // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n      enforcer(event.target.value.replace(/,/g, '.'));\n    }\n    // universal input options\n    ,\n    inputMode: \"decimal\",\n    title: \"Token Amount\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\"\n    // text-specific options\n    ,\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    placeholder: placeholder || '0.0',\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Input;\nexport default Input;\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"Input$React.memo\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"names":["React","styled","escapeRegExp","jsxDEV","_jsxDEV","StyledInput","input","_templateObject","_taggedTemplateLiteral","_ref","error","theme","red1","text1","_ref2","bg1","_ref3","fontSize","_ref4","align","_ref5","text4","_c","inputRegex","RegExp","Input","memo","_c2","InnerInput","_ref6","value","onUserInput","placeholder","rest","_objectWithoutProperties","_excluded","enforcer","nextUserInput","test","_objectSpread","onChange","event","target","replace","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/NumericalInput/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,YAAY,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGJ,MAAM,CAACK,KAAK,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,imBACrBC,IAAA;EAAA,IAAC;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAAA,OAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACE,KAAK;AAAA,CAAC,EAO7CC,KAAA;EAAA,IAAC;IAAEH;EAAM,CAAC,GAAAG,KAAA;EAAA,OAAKH,KAAK,CAACI,GAAG;AAAA,GAC/BC,KAAA;EAAA,IAAC;IAAEC;EAAS,CAAC,GAAAD,KAAA;EAAA,OAAKC,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,MAAM;AAAA,GACnCC,KAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,KAAA;EAAA,OAAKC,KAAK,IAAIA,KAAK;AAAA,GAqBhCC,KAAA;EAAA,IAAC;IAAET;EAAM,CAAC,GAAAS,KAAA;EAAA,OAAKT,KAAK,CAACU,KAAK;AAAA,EAEtC;AAAAC,EAAA,GAjCKjB,WAAW;AAmCjB,MAAMkB,UAAU,GAAGC,MAAM,yBAAyB,CAAC,EAAC;;AAEpD,OAAO,MAAMC,KAAK,gBAAGzB,KAAK,CAAC0B,IAAI,CAAAC,GAAA,GAAC,SAASC,UAAUA,CAAAC,KAAA,EAWqB;EAAA,IAXpB;MAClDC,KAAK;MACLC,WAAW;MACXC;IAQmE,CAAC,GAAAH,KAAA;IAPjEI,IAAI,GAAAC,wBAAA,CAAAL,KAAA,EAAAM,SAAA;EAQP,MAAMC,QAAQ,GAAIC,aAAqB,IAAK;IAC1C,IAAIA,aAAa,KAAK,EAAE,IAAId,UAAU,CAACe,IAAI,CAACpC,YAAY,CAACmC,aAAa,CAAC,CAAC,EAAE;MACxEN,WAAW,CAACM,aAAa,CAAC;IAC5B;EACF,CAAC;EAED,oBACEjC,OAAA,CAACC,WAAW,EAAAkC,aAAA,CAAAA,aAAA,KACNN,IAAI;IACRH,KAAK,EAAEA,KAAM;IACbU,QAAQ,EAAGC,KAAK,IAAK;MACnB;MACAL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACZ,KAAK,CAACa,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACjD;IACA;IAAA;IACAC,SAAS,EAAC,SAAS;IACnBC,KAAK,EAAC,cAAc;IACpBC,YAAY,EAAC,KAAK;IAClBC,WAAW,EAAC;IACZ;IAAA;IACAC,IAAI,EAAC,MAAM;IACXC,OAAO,EAAC,qBAAqB;IAC7BjB,WAAW,EAAEA,WAAW,IAAI,KAAM;IAClCkB,SAAS,EAAE,CAAE;IACbC,SAAS,EAAE,EAAG;IACdC,UAAU,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEN,CAAC,CAAC;AAAAC,GAAA,GAxCWhC,KAAK;AA0ClB,eAAeA,KAAK;;AAEpB;AAAA,IAAAH,EAAA,EAAAK,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}