{"ast":null,"code":"import _objectSpread from \"/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/app/src/pages/Swap/redirects.tsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Redirects to swap but only replace the pathname\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RedirectPathToSwapOnly(_ref) {\n  let {\n    location\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: _objectSpread(_objectSpread({}, location), {}, {\n      pathname: '/swap'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\n_c = RedirectPathToSwapOnly;\nexport function RedirectToSwap(props) {\n  const {\n    location: {\n      search\n    },\n    match: {\n      params: {\n        outputCurrency\n      }\n    }\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: _objectSpread(_objectSpread({}, props.location), {}, {\n      pathname: '/swap',\n      search: search && search.length > 1 ? \"\".concat(search, \"&outputCurrency=\").concat(outputCurrency) : \"?outputCurrency=\".concat(outputCurrency)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RedirectToSwap;\nvar _c, _c2;\n$RefreshReg$(_c, \"RedirectPathToSwapOnly\");\n$RefreshReg$(_c2, \"RedirectToSwap\");","map":{"version":3,"names":["React","Redirect","jsxDEV","_jsxDEV","RedirectPathToSwapOnly","_ref","location","to","_objectSpread","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","RedirectToSwap","props","search","match","params","outputCurrency","length","concat","_c2","$RefreshReg$"],"sources":["/app/src/pages/Swap/redirects.tsx"],"sourcesContent":["import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...props.location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAA6B,kBAAkB;;AAEhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,sBAAsBA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC;EAA8B,CAAC,GAAAD,IAAA;EACtE,oBAAOF,OAAA,CAACF,QAAQ;IAACM,EAAE,EAAAC,aAAA,CAAAA,aAAA,KAAOF,QAAQ;MAAEG,QAAQ,EAAE;IAAO;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D;;AAEA;AAAAC,EAAA,GAJgBV,sBAAsB;AAKtC,OAAO,SAASW,cAAcA,CAACC,KAAsD,EAAE;EACrF,MAAM;IACJV,QAAQ,EAAE;MAAEW;IAAO,CAAC;IACpBC,KAAK,EAAE;MACLC,MAAM,EAAE;QAAEC;MAAe;IAC3B;EACF,CAAC,GAAGJ,KAAK;EAET,oBACEb,OAAA,CAACF,QAAQ;IACPM,EAAE,EAAAC,aAAA,CAAAA,aAAA,KACGQ,KAAK,CAACV,QAAQ;MACjBG,QAAQ,EAAE,OAAO;MACjBQ,MAAM,EACJA,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,MAAAC,MAAA,CACpBL,MAAM,sBAAAK,MAAA,CAAmBF,cAAc,uBAAAE,MAAA,CACvBF,cAAc;IAAE;EACzC;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACU,GAAA,GApBeR,cAAc;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}