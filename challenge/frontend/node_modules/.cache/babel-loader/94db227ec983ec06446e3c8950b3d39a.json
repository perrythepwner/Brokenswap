{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MiniContractCache = void 0;\nvar base_1 = require(\"@celo/base\");\nvar base_2 = require(\"./base\");\nvar celo_tokens_1 = require(\"./celo-tokens\");\nvar Accounts_1 = require(\"./generated/Accounts\");\nvar Exchange_1 = require(\"./generated/Exchange\");\nvar ExchangeBRL_1 = require(\"./generated/ExchangeBRL\");\nvar ExchangeEUR_1 = require(\"./generated/ExchangeEUR\");\nvar GasPriceMinimum_1 = require(\"./generated/GasPriceMinimum\");\nvar GoldToken_1 = require(\"./generated/GoldToken\");\nvar StableToken_1 = require(\"./generated/StableToken\");\nvar StableTokenBRL_1 = require(\"./generated/StableTokenBRL\");\nvar StableTokenEUR_1 = require(\"./generated/StableTokenEUR\");\nvar Accounts_2 = require(\"./wrappers/Accounts\");\nvar Exchange_2 = require(\"./wrappers/Exchange\");\nvar GasPriceMinimum_2 = require(\"./wrappers/GasPriceMinimum\");\nvar GoldTokenWrapper_1 = require(\"./wrappers/GoldTokenWrapper\");\nvar StableTokenWrapper_1 = require(\"./wrappers/StableTokenWrapper\");\nvar MINIMUM_CONTRACTS = (_a = {}, _a[base_2.CeloContract.Accounts] = {\n  newInstance: Accounts_1.newAccounts,\n  wrapper: Accounts_2.AccountsWrapper\n}, _a[base_2.CeloContract.GasPriceMinimum] = {\n  newInstance: GasPriceMinimum_1.newGasPriceMinimum,\n  wrapper: GasPriceMinimum_2.GasPriceMinimumWrapper\n}, _a[base_2.CeloContract.GoldToken] = {\n  newInstance: GoldToken_1.newGoldToken,\n  wrapper: GoldTokenWrapper_1.GoldTokenWrapper\n}, _a[base_2.CeloContract.Exchange] = {\n  newInstance: Exchange_1.newExchange,\n  wrapper: Exchange_2.ExchangeWrapper\n}, _a[base_2.CeloContract.ExchangeEUR] = {\n  newInstance: ExchangeEUR_1.newExchangeEur,\n  wrapper: Exchange_2.ExchangeWrapper\n}, _a[base_2.CeloContract.ExchangeBRL] = {\n  newInstance: ExchangeBRL_1.newExchangeBrl,\n  wrapper: Exchange_2.ExchangeWrapper\n}, _a[base_2.CeloContract.StableToken] = {\n  newInstance: StableToken_1.newStableToken,\n  wrapper: StableTokenWrapper_1.StableTokenWrapper\n}, _a[base_2.CeloContract.StableTokenBRL] = {\n  newInstance: StableTokenBRL_1.newStableTokenBrl,\n  wrapper: StableTokenWrapper_1.StableTokenWrapper\n}, _a[base_2.CeloContract.StableTokenEUR] = {\n  newInstance: StableTokenEUR_1.newStableTokenEur,\n  wrapper: StableTokenWrapper_1.StableTokenWrapper\n}, _a);\nvar contractsWhichRequireCache = new Set([base_2.CeloContract.Attestations, base_2.CeloContract.DoubleSigningSlasher, base_2.CeloContract.DowntimeSlasher, base_2.CeloContract.Election, base_2.CeloContract.Governance, base_2.CeloContract.LockedGold, base_2.CeloContract.Validators]);\n/**\n * Alternative Contract Cache with Minimal Contracts\n *\n * Provides access to a subset of wrappers: {@link AccountsWrapper},  {@link ExchangeWrapper}, {@link GasPriceMinimumWrapper} and Celo Token contracts\n * Used internally by {@link MiniContractKit}\n *\n * @param connection – {@link Connection}\n * @param registry – {@link AddressRegistry}\n */\nvar MiniContractCache = /** @class */function () {\n  function MiniContractCache(connection, registry, contractClasses) {\n    if (contractClasses === void 0) {\n      contractClasses = MINIMUM_CONTRACTS;\n    }\n    this.connection = connection;\n    this.registry = registry;\n    this.contractClasses = contractClasses;\n    this.cache = new Map();\n  }\n  MiniContractCache.prototype.getAccounts = function () {\n    return this.getContract(base_2.CeloContract.Accounts);\n  };\n  MiniContractCache.prototype.getExchange = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = base_1.StableToken.cUSD;\n    }\n    return this.getContract(celo_tokens_1.stableTokenInfos[stableToken].exchangeContract);\n  };\n  MiniContractCache.prototype.getGoldToken = function () {\n    return this.getContract(base_2.CeloContract.GoldToken);\n  };\n  MiniContractCache.prototype.getStableToken = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = base_1.StableToken.cUSD;\n    }\n    return this.getContract(celo_tokens_1.stableTokenInfos[stableToken].contract);\n  };\n  /**\n   * Get Contract wrapper\n   */\n  MiniContractCache.prototype.getContract = function (contract, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.isContractAvailable(contract)) {\n              throw new Error(\"This instance of MiniContracts was not given a mapping for \".concat(contract, \". Either add it or use WrapperCache for full set of contracts\"));\n            }\n            if (contractsWhichRequireCache.has(contract)) {\n              throw new Error(\"\".concat(contract, \" cannot be used with MiniContracts as it requires an instance of WrapperCache to be passed in as an argument\"));\n            }\n            if (!(this.cache.get(contract) == null || address !== undefined)) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.setContract(contract, address)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, this.cache.get(contract)];\n        }\n      });\n    });\n  };\n  MiniContractCache.prototype.setContract = function (contract, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var classes, instance, Klass, wrapper;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!address) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.registry.addressFor(contract)];\n          case 1:\n            address = _a.sent();\n            _a.label = 2;\n          case 2:\n            classes = this.contractClasses[contract];\n            instance = classes.newInstance(this.connection.web3, address);\n            Klass = classes.wrapper;\n            wrapper = new Klass(this.connection, instance);\n            this.cache.set(contract, wrapper);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  MiniContractCache.prototype.invalidateContract = function (contract) {\n    this.cache.delete(contract);\n  };\n  MiniContractCache.prototype.isContractAvailable = function (contract) {\n    return !!this.contractClasses[contract];\n  };\n  return MiniContractCache;\n}();\nexports.MiniContractCache = MiniContractCache;","map":null,"metadata":{},"sourceType":"script"}