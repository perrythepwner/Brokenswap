{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useAllTokenBalances } from '../../state/wallet/hooks';\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA, balanceB) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1;\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1;\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1;\n  }\n  return 0;\n}\nfunction getTokenComparator(balances) {\n  return function sortTokens(tokenA, tokenB) {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address];\n    const balanceB = balances[tokenB.address];\n    const balanceComp = balanceComparator(balanceA, balanceB);\n    if (balanceComp !== 0) return balanceComp;\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1;\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0;\n    }\n  };\n}\nexport function useTokenComparator(inverted) {\n  _s();\n  const balances = useAllTokenBalances();\n  const comparator = useMemo(() => getTokenComparator(balances !== null && balances !== void 0 ? balances : {}), [balances]);\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA, tokenB) => comparator(tokenA, tokenB) * -1;\n    } else {\n      return comparator;\n    }\n  }, [inverted, comparator]);\n}\n_s(useTokenComparator, \"hXJEt3u0yPW0rBCA9PpnEAzwUpI=\", false, function () {\n  return [useAllTokenBalances];\n});","map":{"version":3,"names":["useMemo","useAllTokenBalances","balanceComparator","balanceA","balanceB","greaterThan","equalTo","getTokenComparator","balances","sortTokens","tokenA","tokenB","address","balanceComp","symbol","toLowerCase","useTokenComparator","inverted","_s","comparator"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/SearchModal/sorting.ts"],"sourcesContent":["import { Token, TokenAmount } from '@ubeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n    }\n  }\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    } else {\n      return comparator\n    }\n  }, [inverted, comparator])\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA,SAASC,iBAAiBA,CAACC,QAAsB,EAAEC,QAAsB,EAAE;EACzE,IAAID,QAAQ,IAAIC,QAAQ,EAAE;IACxB,OAAOD,QAAQ,CAACE,WAAW,CAACD,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAGD,QAAQ,CAACG,OAAO,CAACF,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;EACjF,CAAC,MAAM,IAAID,QAAQ,IAAIA,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,EAAE;IAChD,OAAO,CAAC,CAAC;EACX,CAAC,MAAM,IAAID,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAAC,GAAG,CAAC,EAAE;IAChD,OAAO,CAAC;EACV;EACA,OAAO,CAAC;AACV;AAEA,SAASE,kBAAkBA,CAACC,QAE3B,EAA4C;EAC3C,OAAO,SAASC,UAAUA,CAACC,MAAa,EAAEC,MAAa,EAAU;IAC/D;IACA;;IAEA;IACA,MAAMR,QAAQ,GAAGK,QAAQ,CAACE,MAAM,CAACE,OAAO,CAAC;IACzC,MAAMR,QAAQ,GAAGI,QAAQ,CAACG,MAAM,CAACC,OAAO,CAAC;IAEzC,MAAMC,WAAW,GAAGX,iBAAiB,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACzD,IAAIS,WAAW,KAAK,CAAC,EAAE,OAAOA,WAAW;IAEzC,IAAIH,MAAM,CAACI,MAAM,IAAIH,MAAM,CAACG,MAAM,EAAE;MAClC;MACA,OAAOJ,MAAM,CAACI,MAAM,CAACC,WAAW,CAAC,CAAC,GAAGJ,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3E,CAAC,MAAM;MACL,OAAOL,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IACpD;EACF,CAAC;AACH;AAEA,OAAO,SAASE,kBAAkBA,CAACC,QAAiB,EAA4C;EAAAC,EAAA;EAC9F,MAAMV,QAAQ,GAAGP,mBAAmB,CAAC,CAAC;EACtC,MAAMkB,UAAU,GAAGnB,OAAO,CAAC,MAAMO,kBAAkB,CAACC,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,CAAC,CAAC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAChF,OAAOR,OAAO,CAAC,MAAM;IACnB,IAAIiB,QAAQ,EAAE;MACZ,OAAO,CAACP,MAAa,EAAEC,MAAa,KAAKQ,UAAU,CAACT,MAAM,EAAEC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL,OAAOQ,UAAU;IACnB;EACF,CAAC,EAAE,CAACF,QAAQ,EAAEE,UAAU,CAAC,CAAC;AAC5B;AAACD,EAAA,CAVeF,kBAAkB;EAAA,QACff,mBAAmB;AAAA"},"metadata":{},"sourceType":"module"}