{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetaMaskOrInjectedWallet = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst button_1 = __importDefault(require(\"../components/button\"));\nconst connector_screen_1 = __importDefault(require(\"../components/connector-screen\"));\nconst spinner_1 = __importDefault(require(\"../components/spinner\"));\nconst constants_1 = require(\"../constants\");\nconst use_injected_connector_1 = require(\"../hooks/use-injected-connector\");\nconst use_theme_1 = __importDefault(require(\"../hooks/use-theme\"));\nconst ethereum_1 = require(\"../utils/ethereum\");\nconst tailwind_1 = __importDefault(require(\"../utils/tailwind\"));\nconst styles = (0, tailwind_1.default)({\n  container: \"\\n    tw-my-8\\n    tw-flex\\n    tw-flex-col\\n    tw-items-center\\n    tw-justify-center\\n    grid\\n    tw-gap-8\\n    tw-flex-grow\",\n  error: \"\\n    tw-text-md\\n    tw-pb-4\",\n  spinnerContainer: \"\\n    tw-relative\\n    tw-gap-2\\n    tw-items-center\\n    tw-flex\\n    tw-flex-col\",\n  disclaimer: \"\\n    tw-text-center\\n    tw-text-sm\",\n  button: \"\\n    tw-mt-6\\n    tw-px-4\\n    tw-py-2\"\n});\nconst provider = constants_1.PROVIDERS['MetaMask'];\nconst MetaMaskOrInjectedWallet = _ref => {\n  let {\n    onSubmit\n  } = _ref;\n  const theme = (0, use_theme_1.default)();\n  const isMetaMask = (0, ethereum_1.isEthereumFromMetamask)();\n  const {\n    error\n  } = (0, use_injected_connector_1.useInjectedConnector)(onSubmit, isMetaMask);\n  let content;\n  if (react_device_detect_1.isMobile) {\n    content = react_1.default.createElement(button_1.default, {\n      as: \"a\",\n      href: provider.installURL,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      className: styles.button\n    }, provider.description);\n  } else {\n    if (error) {\n      content = react_1.default.createElement(\"p\", {\n        className: styles.error,\n        style: {\n          color: theme.error\n        }\n      }, error.message);\n    } else if (provider.canConnect()) {\n      content = react_1.default.createElement(\"div\", {\n        className: styles.spinnerContainer\n      }, react_1.default.createElement(spinner_1.default, null), react_1.default.createElement(\"p\", {\n        className: styles.disclaimer\n      }, \"No pop-up? Check if your MetaMask extension is unlocked.\"));\n    } else {\n      content = react_1.default.createElement(\"div\", null, react_1.default.createElement(\"p\", {\n        className: styles.disclaimer,\n        style: {\n          color: theme.textSecondary\n        }\n      }, provider.name, \" not detected.\", react_1.default.createElement(\"br\", null), \"Are you sure it is installed in this browser?\"));\n    }\n  }\n  return react_1.default.createElement(connector_screen_1.default, {\n    title: \"Connect your MetaMask wallet\",\n    content: react_1.default.createElement(\"div\", {\n      className: styles.container\n    }, content),\n    footer: {\n      name: 'MetaMask',\n      url: provider.installURL\n    }\n  });\n};\nexports.MetaMaskOrInjectedWallet = MetaMaskOrInjectedWallet;","map":null,"metadata":{},"sourceType":"script"}