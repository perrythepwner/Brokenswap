{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.byteArrayToHashObject = exports.hashObjectToByteArray = void 0;\n/**\n * Pass 8 numbers in an object and set that to inputArray.\n * This function contains multiple same procedures but we intentionally\n * do it step by step to improve performance a bit.\n **/\nfunction hashObjectToByteArray(obj, byteArr, offset) {\n  let tmp = obj.h0;\n  byteArr[0 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[1 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[2 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[3 + offset] = tmp & 0xff;\n  tmp = obj.h1;\n  byteArr[4 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[5 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[6 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[7 + offset] = tmp & 0xff;\n  tmp = obj.h2;\n  byteArr[8 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[9 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[10 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[11 + offset] = tmp & 0xff;\n  tmp = obj.h3;\n  byteArr[12 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[13 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[14 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[15 + offset] = tmp & 0xff;\n  tmp = obj.h4;\n  byteArr[16 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[17 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[18 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[19 + offset] = tmp & 0xff;\n  tmp = obj.h5;\n  byteArr[20 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[21 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[22 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[23 + offset] = tmp & 0xff;\n  tmp = obj.h6;\n  byteArr[24 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[25 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[26 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[27 + offset] = tmp & 0xff;\n  tmp = obj.h7;\n  byteArr[28 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[29 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[30 + offset] = tmp & 0xff;\n  tmp = tmp >> 8;\n  byteArr[31 + offset] = tmp & 0xff;\n}\nexports.hashObjectToByteArray = hashObjectToByteArray;\n/**\n * Parse outputArray into an object of 8 numbers.\n * This is the order that makes Uint32Array the same to Uint8Array\n * This function contains multiple same procedures but we intentionally\n * do it step by step to improve performance a bit.\n **/\nfunction byteArrayToHashObject(byteArr) {\n  let tmp = 0;\n  tmp |= byteArr[3] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[2] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[1] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[0] & 0xff;\n  const h0 = tmp;\n  tmp = 0;\n  tmp |= byteArr[7] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[6] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[5] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[4] & 0xff;\n  const h1 = tmp;\n  tmp = 0;\n  tmp |= byteArr[11] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[10] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[9] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[8] & 0xff;\n  const h2 = tmp;\n  tmp = 0;\n  tmp |= byteArr[15] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[14] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[13] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[12] & 0xff;\n  const h3 = tmp;\n  tmp = 0;\n  tmp |= byteArr[19] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[18] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[17] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[16] & 0xff;\n  const h4 = tmp;\n  tmp = 0;\n  tmp |= byteArr[23] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[22] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[21] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[20] & 0xff;\n  const h5 = tmp;\n  tmp = 0;\n  tmp |= byteArr[27] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[26] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[25] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[24] & 0xff;\n  const h6 = tmp;\n  tmp = 0;\n  tmp |= byteArr[31] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[30] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[29] & 0xff;\n  tmp = tmp << 8;\n  tmp |= byteArr[28] & 0xff;\n  const h7 = tmp;\n  return {\n    h0,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    h7\n  };\n}\nexports.byteArrayToHashObject = byteArrayToHashObject;","map":null,"metadata":{},"sourceType":"script"}