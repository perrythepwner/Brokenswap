{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoneType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NoneType extends basic_1.BasicType {\n  constructor() {\n    super(...arguments);\n    this.typeName = \"none\";\n    this.byteLength = 0;\n    this.itemsPerChunk = 32;\n    this.fixedSize = 0;\n    this.minSize = 0;\n    this.maxSize = 0;\n  }\n  defaultValue() {\n    return null;\n  }\n  // bytes serdes\n  value_serializeToBytes(output, offset, value) {\n    return offset;\n  }\n  value_deserializeFromBytes(data, start) {\n    return null;\n  }\n  tree_serializeToBytes(output, offset, node) {\n    return offset;\n  }\n  tree_deserializeFromBytes(data, start, end) {\n    return persistent_merkle_tree_1.zeroNode(0);\n  }\n  // Fast tree opts\n  tree_getFromNode(leafNode) {\n    return null;\n  }\n  tree_setToNode(leafNode, value) {\n    return;\n  }\n  tree_getFromPackedNode(leafNode, index) {\n    return null;\n  }\n  tree_setToPackedNode(leafNode, index, value) {\n    return;\n  }\n  // JSON\n  fromJson(json) {\n    if (json !== null) {\n      throw Error(\"JSON invalid type none must be null\");\n    }\n    return null;\n  }\n  toJson(value) {\n    return null;\n  }\n}\nexports.NoneType = NoneType;","map":null,"metadata":{},"sourceType":"script"}