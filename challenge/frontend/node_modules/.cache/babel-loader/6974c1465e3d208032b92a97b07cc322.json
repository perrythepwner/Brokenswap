{"ast":null,"code":"import{useMemo}from'react';import{useAllTokenBalances}from'../../state/wallet/hooks';// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA,balanceB){if(balanceA&&balanceB){return balanceA.greaterThan(balanceB)?-1:balanceA.equalTo(balanceB)?0:1;}else if(balanceA&&balanceA.greaterThan('0')){return-1;}else if(balanceB&&balanceB.greaterThan('0')){return 1;}return 0;}function getTokenComparator(balances){return function sortTokens(tokenA,tokenB){// -1 = a is first\n// 1 = b is first\n// sort by balances\nconst balanceA=balances[tokenA.address];const balanceB=balances[tokenB.address];const balanceComp=balanceComparator(balanceA,balanceB);if(balanceComp!==0)return balanceComp;if(tokenA.symbol&&tokenB.symbol){// sort by symbol\nreturn tokenA.symbol.toLowerCase()<tokenB.symbol.toLowerCase()?-1:1;}else{return tokenA.symbol?-1:tokenB.symbol?-1:0;}};}export function useTokenComparator(inverted){const balances=useAllTokenBalances();const comparator=useMemo(()=>getTokenComparator(balances!==null&&balances!==void 0?balances:{}),[balances]);return useMemo(()=>{if(inverted){return(tokenA,tokenB)=>comparator(tokenA,tokenB)*-1;}else{return comparator;}},[inverted,comparator]);}","map":null,"metadata":{},"sourceType":"module"}