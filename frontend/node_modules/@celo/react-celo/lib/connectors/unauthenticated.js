"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("@celo/contractkit/lib/base");
const mini_kit_1 = require("@celo/contractkit/lib/mini-kit");
const constants_1 = require("../constants");
const common_1 = require("./common");
/**
 * Connectors are our link between a DApp and the users wallet. Each
 * wallet has different semantics and these classes attempt to unify
 * them and present a workable API.
 */
class UnauthenticatedConnector extends common_1.AbstractConnector {
    constructor(n) {
        super();
        this.initialised = true;
        this.type = constants_1.WalletTypes.Unauthenticated;
        this.feeCurrency = base_1.CeloContract.GoldToken;
        this.kit = (0, mini_kit_1.newKit)(n.rpcUrl);
    }
    initialise() {
        this.initialised = true;
        return this;
    }
    supportsFeeCurrency() {
        return false;
    }
    startNetworkChangeFromApp(network) {
        this.kit = (0, mini_kit_1.newKit)(network.rpcUrl);
        this.emit(common_1.ConnectorEvents.NETWORK_CHANGED, network.name);
    }
    close() {
        try {
            this.kit.connection.stop();
        }
        finally {
            this.disconnect();
        }
    }
}
exports.default = UnauthenticatedConnector;
//# sourceMappingURL=unauthenticated.js.map