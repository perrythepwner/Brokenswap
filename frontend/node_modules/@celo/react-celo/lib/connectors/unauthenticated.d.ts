import { CeloTokenContract } from '@celo/contractkit/lib/base';
import { MiniContractKit } from '@celo/contractkit/lib/mini-kit';
import { WalletTypes } from '../constants';
import { Connector, Network } from '../types';
import { AbstractConnector } from './common';
/**
 * Connectors are our link between a DApp and the users wallet. Each
 * wallet has different semantics and these classes attempt to unify
 * them and present a workable API.
 */
export default class UnauthenticatedConnector extends AbstractConnector implements Connector {
    initialised: boolean;
    type: WalletTypes;
    kit: MiniContractKit;
    feeCurrency: CeloTokenContract;
    constructor(n: Network);
    initialise(): this;
    supportsFeeCurrency(): boolean;
    startNetworkChangeFromApp(network: Network): void;
    close(): void;
}
//# sourceMappingURL=unauthenticated.d.ts.map