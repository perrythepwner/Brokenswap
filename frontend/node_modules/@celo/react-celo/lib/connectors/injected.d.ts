import { CeloTokenContract } from '@celo/contractkit/lib/base';
import { MiniContractKit } from '@celo/contractkit/lib/mini-kit';
import { WalletTypes } from '../constants';
import { Connector, Network } from '../types';
import { AbstractConnector } from './common';
export default class InjectedConnector extends AbstractConnector implements Connector {
    private manualNetworkMode;
    feeCurrency: CeloTokenContract;
    initialised: boolean;
    type: WalletTypes;
    kit: MiniContractKit;
    private network;
    constructor(network: Network, manualNetworkMode: boolean, feeCurrency: CeloTokenContract, defaultType?: WalletTypes);
    initialise(lastUsedAddress?: string): Promise<this>;
    private newKit;
    startNetworkChangeFromApp(network: Network): Promise<void>;
    continueNetworkUpdateFromWallet(network: Network): void;
    private onChainChanged;
    private onAccountsChanged;
    supportsFeeCurrency(): boolean;
    private removeListenersFromEth;
    close(): void;
}
//# sourceMappingURL=injected.d.ts.map