"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionModal = void 0;
const react_1 = __importDefault(require("react"));
const react_device_detect_1 = require("react-device-detect");
const react_modal_1 = __importDefault(require("react-modal"));
const spinner_1 = __importDefault(require("../components/spinner"));
const use_theme_1 = __importDefault(require("../hooks/use-theme"));
const use_celo_1 = require("../use-celo");
const colors_1 = require("../utils/colors");
const helpers_1 = require("../utils/helpers");
const tailwind_1 = __importDefault(require("../utils/tailwind"));
const connect_1 = require("./connect");
const styles = (0, tailwind_1.default)(Object.assign(Object.assign({}, connect_1.styles), { actionModalContainer: `
    tw-px-5
    tw-py-6`, actionTitle: `
    tw-text-xl
    tw-text-center
    tw-mb-4`, dappName: ``, actionDescription: `
    tw-text-sm
    tw-text-center`, actionSpinnerContainer: `
    tw-my-8
    tw-flex
    tw-items-center
    tw-justify-center`, contentContainer: `
    tw-max-h-screen
  `, content: `
    tw-relative
    tw-w-80
    md:tw-w-96
    ${react_device_detect_1.isMobile
        ? `
      tw-flex
      tw-flex-col
      tw-justify-center
      tw-self-center
      tw-h-screen
      tw-mx-auto
    `
        : ''}
  ` }));
const DefaultActionModalComponent = ({ dappName, pendingActionCount, theme, }) => {
    return (react_1.default.createElement("div", { className: styles.actionModalContainer, style: { color: theme.text } },
        react_1.default.createElement("div", { className: styles.actionTitle }, "Check your wallet"),
        react_1.default.createElement("p", { className: styles.actionDescription },
            react_1.default.createElement("strong", { style: { color: theme.primary } }, dappName),
            " is trying to",
            ' ',
            pendingActionCount > 1
                ? `perform ${pendingActionCount} actions`
                : 'perform an action',
            ". Please check your wallet to confirm."),
        react_1.default.createElement("div", { className: styles.actionSpinnerContainer },
            react_1.default.createElement(spinner_1.default, null))));
};
const ActionModal = ({ reactModalProps, render = DefaultActionModalComponent, }) => {
    const theme = (0, use_theme_1.default)();
    const { pendingActionCount, dapp } = (0, use_celo_1.useCeloInternal)();
    (0, helpers_1.useFixedBody)(pendingActionCount > 0);
    return (react_1.default.createElement(react_modal_1.default, Object.assign({ portalClassName: styles.portal, htmlOpenClassName: 'react-celo-modal-open-html', bodyOpenClassName: 'react-celo-modal-open-body', isOpen: pendingActionCount > 0, 
        // isOpen
        ariaHideApp: false, style: {
            content: {
                background: theme.background,
            },
            overlay: {
                background: (0, colors_1.hexToRGB)(theme.background, 0.8),
            },
        } }, (reactModalProps
        ? reactModalProps
        : {
            className: styles.modal,
            overlayClassName: styles.overlay,
        })),
        react_1.default.createElement("div", { className: `react-celo ${styles.contentContainer}` },
            react_1.default.createElement("div", { className: styles.content }, render({ dappName: dapp.name, pendingActionCount, theme })))));
};
exports.ActionModal = ActionModal;
//# sourceMappingURL=action.js.map