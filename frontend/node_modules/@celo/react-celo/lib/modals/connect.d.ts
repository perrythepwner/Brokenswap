import React from 'react';
import ReactModal from 'react-modal';
import { SupportedProviders } from '../constants';
import { ConnectorProps } from '../screens';
import { Provider, WalletEntry } from '../types';
import { SortingPredicate } from '../utils/sort';
export declare const styles: {
    overlay: string;
    modal: string;
    portal: string;
};
type ReactModalProps = Omit<ReactModal.Props, 'onRequestClose' | 'htmlOpenClassName' | 'bodyOpenClassName'>;
export interface ConnectModalProps {
    screens?: {
        [x in SupportedProviders]?: React.FC<ConnectorProps>;
    };
    RenderProvider?: React.FC<{
        provider: Provider;
        onClick: () => void;
        selected: boolean;
    }>;
    reactModalProps?: Partial<ReactModalProps>;
    title?: string | React.ReactElement;
    providersOptions?: {
        hideFromDefaults?: true | SupportedProviders[];
        additionalWCWallets?: WalletEntry[];
        sort?: SortingPredicate<Provider>;
        searchable?: boolean;
    };
}
export declare const ConnectModal: React.FC<ConnectModalProps>;
export {};
//# sourceMappingURL=connect.d.ts.map