"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerAttestation = exports.authorizeSigner = void 0;
var authorizeSigner = function (_a) {
    var account = _a.account, signer = _a.signer, chainId = _a.chainId, role = _a.role, accountsContractAddress = _a.accountsContractAddress;
    return ({
        types: {
            EIP712Domain: [
                { name: 'name', type: 'string' },
                { name: 'version', type: 'string' },
                { name: 'chainId', type: 'uint256' },
                { name: 'verifyingContract', type: 'address' },
            ],
            AuthorizeSigner: [
                { name: 'account', type: 'address' },
                { name: 'signer', type: 'address' },
                { name: 'role', type: 'bytes32' },
            ],
        },
        primaryType: 'AuthorizeSigner',
        domain: {
            name: 'Celo Core Contracts',
            version: '1.0',
            chainId: chainId,
            verifyingContract: accountsContractAddress,
        },
        message: {
            account: account,
            signer: signer,
            role: role,
        },
    });
};
exports.authorizeSigner = authorizeSigner;
var registerAttestation = function (chainId, contractAddress, message) {
    return {
        types: {
            EIP712Domain: [
                { name: 'name', type: 'string' },
                { name: 'version', type: 'string' },
                { name: 'chainId', type: 'uint256' },
                { name: 'verifyingContract', type: 'address' },
            ],
            OwnershipAttestation: [
                { name: 'identifier', type: 'bytes32' },
                { name: 'issuer', type: 'address' },
                { name: 'account', type: 'address' },
                { name: 'signer', type: 'address' },
                { name: 'issuedOn', type: 'uint64' },
            ],
        },
        primaryType: 'OwnershipAttestation',
        domain: {
            name: 'FederatedAttestations',
            version: '1.0',
            chainId: chainId,
            verifyingContract: contractAddress,
        },
        message: message ? message : {},
    };
};
exports.registerAttestation = registerAttestation;
//# sourceMappingURL=typed-data-constructors.js.map