/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockLendingPool } from "../MockLendingPool";

export class MockLendingPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _core: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLendingPool> {
    return super.deploy(_core, overrides || {}) as Promise<MockLendingPool>;
  }
  getDeployTransaction(
    _core: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_core, overrides || {});
  }
  attach(address: string): MockLendingPool {
    return super.attach(address) as MockLendingPool;
  }
  connect(signer: Signer): MockLendingPool__factory {
    return super.connect(signer) as MockLendingPool__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLendingPool {
    return new Contract(address, _abi, signerOrProvider) as MockLendingPool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MockLendingPoolCore",
        name: "_core",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CELO_MAGIC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract MockLendingPoolCore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract MockAToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516104b13803806104b183398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61041461009d6000396000818160ff0152818161023801526102ed01526104146000f3fe60806040526004361061003f5760003560e01c806380dac97514610044578063d2d0e06614610095578063e4860339146100aa578063f2f4eb26146100ed575b600080fd5b34801561005057600080fd5b5061006c73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a86100a3366004610399565b610121565b005b3480156100b657600080fd5b5061006c6100c5366004610378565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156100f957600080fd5b5061006c7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561029b573482146101e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d6f636b4c656e64696e67506f6f6c3a20616d6f756e74206d7573742065717560448201527f616c206d73672e76616c75650000000000000000000000000000000000000000606482015260840160405180910390fd5b6040517f8340f54900000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8481166024830152604482018490527f00000000000000000000000000000000000000000000000000000000000000001690638340f5499084906064016000604051808303818588803b15801561027d57600080fd5b505af1158015610291573d6000803e3d6000fd5b505050505061034a565b6040517f8340f54900000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8481166024830152604482018490527f00000000000000000000000000000000000000000000000000000000000000001690638340f54990606401600060405180830381600087803b15801561033157600080fd5b505af1158015610345573d6000803e3d6000fd5b505050505b505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461037357600080fd5b919050565b600060208284031215610389578081fd5b6103928261034f565b9392505050565b6000806000606084860312156103ad578182fd5b6103b68461034f565b925060208401359150604084013561ffff811681146103d3578182fd5b80915050925092509256fea2646970667358221220d0145fa38df1b3d305dab233d04ea18ff0636bd35fc23a04aaf8ab852563b70e64736f6c63430008030033";
