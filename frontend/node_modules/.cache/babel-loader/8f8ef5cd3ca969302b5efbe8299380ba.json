{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = void 0;\nclass Watch {\n  constructor() {\n    this.timestamps = new Map();\n  }\n  start(label) {\n    if (this.timestamps.has(label)) {\n      throw new Error(\"Watch already started for label: \".concat(label));\n    }\n    this.timestamps.set(label, {\n      started: Date.now()\n    });\n  }\n  stop(label) {\n    const timestamp = this.get(label);\n    if (typeof timestamp.elapsed !== \"undefined\") {\n      throw new Error(\"Watch already stopped for label: \".concat(label));\n    }\n    const elapsed = Date.now() - timestamp.started;\n    this.timestamps.set(label, {\n      started: timestamp.started,\n      elapsed\n    });\n  }\n  get(label) {\n    const timestamp = this.timestamps.get(label);\n    if (typeof timestamp === \"undefined\") {\n      throw new Error(\"No timestamp found for label: \".concat(label));\n    }\n    return timestamp;\n  }\n  elapsed(label) {\n    const timestamp = this.get(label);\n    const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n    return elapsed;\n  }\n}\nexports.Watch = Watch;\nexports.default = Watch;","map":{"version":3,"sources":["../../src/watch.ts"],"names":[],"mappings":";;;;;;AAEA,MAAa,KAAK,CAAA;EAAlB,WAAA,CAAA,EAAA;IACS,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,CAAA,CAAyB;EA+BtD;EA7BS,KAAK,CAAC,KAAa,EAAA;IACxB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;MAC9B,MAAM,IAAI,KAAK,qCAAA,MAAA,CAAqC,KAAK,CAAE,CAAC;IAC7D;IACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE;MAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAA;IAAE,CAAE,CAAC;EACrD;EAEO,IAAI,CAAC,KAAa,EAAA;IACvB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IACjC,IAAI,OAAO,SAAS,CAAC,OAAO,KAAK,WAAW,EAAE;MAC5C,MAAM,IAAI,KAAK,qCAAA,MAAA,CAAqC,KAAK,CAAE,CAAC;IAC7D;IACD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAA,CAAE,GAAG,SAAS,CAAC,OAAO;IAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE;MAAE,OAAO,EAAE,SAAS,CAAC,OAAO;MAAE;IAAO,CAAE,CAAC;EACrE;EAEO,GAAG,CAAC,KAAa,EAAA;IACtB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;IAC5C,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;MACpC,MAAM,IAAI,KAAK,kCAAA,MAAA,CAAkC,KAAK,CAAE,CAAC;IAC1D;IACD,OAAO,SAAS;EAClB;EAEO,OAAO,CAAC,KAAa,EAAA;IAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IACjC,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAA,CAAE,GAAG,SAAS,CAAC,OAAO;IACnE,OAAO,OAAO;EAChB;AACD;AAhCD,OAAA,CAAA,KAAA,GAAA,KAAA;AAkCA,OAAA,CAAA,OAAA,GAAe,KAAK","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Watch = void 0;\nclass Watch {\n    constructor() {\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, { started: Date.now() });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, { started: timestamp.started, elapsed });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports.default = Watch;\n//# sourceMappingURL=watch.js.map"]},"metadata":{},"sourceType":"script"}