{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pipeToFuture = exports.toFuture = exports.Future = void 0;\n// A Future is like an externally fulfillable (resolvable) promise\n/** @internal */\nvar Future = /** @class */function () {\n  function Future() {\n    var _this = this;\n    this._finished = false;\n    this._error = null;\n    this.promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n  Object.defineProperty(Future.prototype, \"finished\", {\n    get: function get() {\n      return this._finished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Future.prototype, \"error\", {\n    get: function get() {\n      return this._error;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Future.prototype.resolve = function (value) {\n    this._finished = true;\n    this._error = null;\n    this._resolve(value);\n  };\n  Future.prototype.reject = function (error) {\n    this._finished = true;\n    this._error = error;\n    this._reject(error);\n  };\n  Future.prototype.wait = function () {\n    return this.promise;\n  };\n  Future.prototype.asPromise = function () {\n    return this.promise;\n  };\n  return Future;\n}();\nexports.Future = Future;\n/** @internal */\nfunction toFuture(p) {\n  var future = new Future();\n  return pipeToFuture(p, future);\n}\nexports.toFuture = toFuture;\n/** @internal */\nfunction pipeToFuture(p, future) {\n  p.then(future.resolve.bind(future)).catch(future.reject.bind(future));\n  return future;\n}\nexports.pipeToFuture = pipeToFuture;","map":{"version":3,"sources":["../src/future.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA,IAAA,MAAA,GAAA,aAAA,YAAA;EAOE,SAAA,MAAA,CAAA,EAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IALQ,IAAA,CAAA,SAAS,GAAG,KAAK;IACjB,IAAA,CAAA,MAAM,GAAQ,IAAI;IAKxB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAI,UAAC,OAAO,EAAE,MAAM,EAAA;MAC5C,KAAI,CAAC,QAAQ,GAAG,OAAO;MACvB,KAAI,CAAC,OAAO,GAAG,MAAM;IACvB,CAAC,CAAC;EACJ;EAEA,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAA,EAAA,UAAQ,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,SAAS;IACvB,CAAC;;;IAAA;EAED,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAA,EAAA,OAAK,EAAA;SAAT,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;;;IAAA;EAED,MAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,KAAQ,EAAA;IACd,IAAI,CAAC,SAAS,GAAG,IAAI;IACrB,IAAI,CAAC,MAAM,GAAG,IAAI;IAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,KAAU,EAAA;IACf,IAAI,CAAC,SAAS,GAAG,IAAI;IACrB,IAAI,CAAC,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,CAAA,CAAA;AAzCY,OAAA,CAAA,MAAA,GAAA,MAAA;AA0Cb;AACA,SAAgB,QAAQ,CAAI,CAAa,EAAA;EACvC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAA,CAAK;EAC9B,OAAO,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC;AAChC;AAHA,OAAA,CAAA,QAAA,GAAA,QAAA;AAIA;AACA,SAAgB,YAAY,CAAI,CAAa,EAAE,MAAiB,EAAA;EAC9D,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACrE,OAAO,MAAM;AACf;AAHA,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pipeToFuture = exports.toFuture = exports.Future = void 0;\n// A Future is like an externally fulfillable (resolvable) promise\n/** @internal */\nvar Future = /** @class */ (function () {\n    function Future() {\n        var _this = this;\n        this._finished = false;\n        this._error = null;\n        this.promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Future.prototype, \"finished\", {\n        get: function () {\n            return this._finished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Future.prototype, \"error\", {\n        get: function () {\n            return this._error;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Future.prototype.resolve = function (value) {\n        this._finished = true;\n        this._error = null;\n        this._resolve(value);\n    };\n    Future.prototype.reject = function (error) {\n        this._finished = true;\n        this._error = error;\n        this._reject(error);\n    };\n    Future.prototype.wait = function () {\n        return this.promise;\n    };\n    Future.prototype.asPromise = function () {\n        return this.promise;\n    };\n    return Future;\n}());\nexports.Future = Future;\n/** @internal */\nfunction toFuture(p) {\n    var future = new Future();\n    return pipeToFuture(p, future);\n}\nexports.toFuture = toFuture;\n/** @internal */\nfunction pipeToFuture(p, future) {\n    p.then(future.resolve.bind(future)).catch(future.reject.bind(future));\n    return future;\n}\nexports.pipeToFuture = pipeToFuture;\n//# sourceMappingURL=future.js.map"]},"metadata":{},"sourceType":"script"}