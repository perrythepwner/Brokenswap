{"ast":null,"code":"\"use strict\";\n\n/* Generated by ts-generator ver. 0.0.8 */\n/* tslint:disable */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newGrandaMento = exports.ABI = void 0;\nexports.ABI = [{\n  inputs: [{\n    internalType: 'bool',\n    name: 'test',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'constructor'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: 'address',\n    name: 'approver',\n    type: 'address'\n  }],\n  name: 'ApproverSet',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'ExchangeProposalApproved',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'ExchangeProposalCancelled',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'exchanger',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'string',\n    name: 'stableTokenRegistryId',\n    type: 'string'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'sellAmount',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'buyAmount',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    internalType: 'bool',\n    name: 'sellCelo',\n    type: 'bool'\n  }],\n  name: 'ExchangeProposalCreated',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'ExchangeProposalExecuted',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: 'uint256',\n    name: 'maxApprovalExchangeRateChange',\n    type: 'uint256'\n  }],\n  name: 'MaxApprovalExchangeRateChangeSet',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'previousOwner',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'newOwner',\n    type: 'address'\n  }],\n  name: 'OwnershipTransferred',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'registryAddress',\n    type: 'address'\n  }],\n  name: 'RegistrySet',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: 'uint256',\n    name: 'spread',\n    type: 'uint256'\n  }],\n  name: 'SpreadSet',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: 'string',\n    name: 'stableTokenRegistryId',\n    type: 'string'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'minExchangeAmount',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'maxExchangeAmount',\n    type: 'uint256'\n  }],\n  name: 'StableTokenExchangeLimitsSet',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: 'uint256',\n    name: 'vetoPeriodSeconds',\n    type: 'uint256'\n  }],\n  name: 'VetoPeriodSecondsSet',\n  type: 'event'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  name: 'activeProposalIdsSuperset',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'approver',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'exchangeProposalCount',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  name: 'exchangeProposals',\n  outputs: [{\n    internalType: 'address payable',\n    name: 'exchanger',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'stableToken',\n    type: 'address'\n  }, {\n    internalType: 'enum GrandaMento.ExchangeProposalState',\n    name: 'state',\n    type: 'uint8'\n  }, {\n    internalType: 'bool',\n    name: 'sellCelo',\n    type: 'bool'\n  }, {\n    internalType: 'uint256',\n    name: 'sellAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'buyAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'celoStableTokenExchangeRate',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'vetoPeriodSeconds',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'approvalTimestamp',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'initialized',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'isOwner',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'maxApprovalExchangeRateChange',\n  outputs: [{\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'owner',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'registry',\n  outputs: [{\n    internalType: 'contract IRegistry',\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [],\n  name: 'renounceOwnership',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'registryAddress',\n    type: 'address'\n  }],\n  name: 'setRegistry',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'spread',\n  outputs: [{\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  name: 'stableTokenExchangeLimits',\n  outputs: [{\n    internalType: 'uint256',\n    name: 'minExchangeAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'maxExchangeAmount',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'newOwner',\n    type: 'address'\n  }],\n  name: 'transferOwnership',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'vetoPeriodSeconds',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'getVersionNumber',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: '_registry',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: '_approver',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: '_maxApprovalExchangeRateChange',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '_spread',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '_vetoPeriodSeconds',\n    type: 'uint256'\n  }],\n  name: 'initialize',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'string',\n    name: 'stableTokenRegistryId',\n    type: 'string'\n  }, {\n    internalType: 'uint256',\n    name: 'sellAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'bool',\n    name: 'sellCelo',\n    type: 'bool'\n  }],\n  name: 'createExchangeProposal',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'approveExchangeProposal',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'cancelExchangeProposal',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'proposalId',\n    type: 'uint256'\n  }],\n  name: 'executeExchangeProposal',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'celoStableTokenExchangeRate',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'sellAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'bool',\n    name: 'sellCelo',\n    type: 'bool'\n  }],\n  name: 'getBuyAmount',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'index',\n    type: 'uint256'\n  }],\n  name: 'removeFromActiveProposalIdsSuperset',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'getActiveProposalIds',\n  outputs: [{\n    internalType: 'uint256[]',\n    name: '',\n    type: 'uint256[]'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'string',\n    name: 'stableTokenRegistryId',\n    type: 'string'\n  }],\n  name: 'getStableTokenExchangeLimits',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'newApprover',\n    type: 'address'\n  }],\n  name: 'setApprover',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'newMaxApprovalExchangeRateChange',\n    type: 'uint256'\n  }],\n  name: 'setMaxApprovalExchangeRateChange',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'newSpread',\n    type: 'uint256'\n  }],\n  name: 'setSpread',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'string',\n    name: 'stableTokenRegistryId',\n    type: 'string'\n  }, {\n    internalType: 'uint256',\n    name: 'minExchangeAmount',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'maxExchangeAmount',\n    type: 'uint256'\n  }],\n  name: 'setStableTokenExchangeLimits',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'uint256',\n    name: 'newVetoPeriodSeconds',\n    type: 'uint256'\n  }],\n  name: 'setVetoPeriodSeconds',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}];\nfunction newGrandaMento(web3, address) {\n  return new web3.eth.Contract(exports.ABI, address);\n}\nexports.newGrandaMento = newGrandaMento;","map":null,"metadata":{},"sourceType":"script"}