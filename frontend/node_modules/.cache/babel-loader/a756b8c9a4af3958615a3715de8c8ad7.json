{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _s = $RefreshSig$();\nimport { useCelo } from '@celo/react-celo';\nimport { JSBI, TokenAmount } from '@ubeswap/sdk';\nimport { useToken } from 'hooks/Tokens';\nimport { useMultiStakingContract } from 'hooks/useContract';\nimport zip from 'lodash/zip';\nimport { useMemo } from 'react';\nimport { useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks';\nimport { INT_SECONDS_IN_WEEK } from './../../constants/index';\nexport const useMultiStakeRewards = (address, underlyingPool, numRewards, active) => {\n  _s();\n  var _useSingleCallResult, _useSingleCallResult$, _useSingleCallResult2, _useSingleCallResult3, _useSingleCallResult4, _useSingleCallResult5, _useSingleContractMul, _useSingleCallResult6, _useSingleCallResult7, _useSingleCallResult8, _useSingleCallResult9, _useSingleCallResult10, _useSingleCallResult11, _useSingleCallResult12, _useSingleCallResult13;\n  const {\n    address: owner\n  } = useCelo();\n  const accountArg = useMemo(() => [owner !== null && owner !== void 0 ? owner : undefined], [owner]);\n  const stakeRewards = useMultiStakingContract(address);\n  const totalSupply = (_useSingleCallResult = useSingleCallResult(stakeRewards, 'totalSupply', [])) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const rewardRate = (_useSingleCallResult2 = useSingleCallResult(stakeRewards, 'rewardRate', [])) === null || _useSingleCallResult2 === void 0 ? void 0 : (_useSingleCallResult3 = _useSingleCallResult2.result) === null || _useSingleCallResult3 === void 0 ? void 0 : _useSingleCallResult3[0];\n  const rewardsToken = useToken((_useSingleCallResult4 = useSingleCallResult(stakeRewards, 'rewardsToken', [])) === null || _useSingleCallResult4 === void 0 ? void 0 : (_useSingleCallResult5 = _useSingleCallResult4.result) === null || _useSingleCallResult5 === void 0 ? void 0 : _useSingleCallResult5[0]);\n  const externalRewardsTokens = (_useSingleContractMul = useSingleContractMultipleData(stakeRewards, 'externalRewardsTokens', [...[...Array(numRewards - 2).keys()].map(i => [i])])) === null || _useSingleContractMul === void 0 ? void 0 : _useSingleContractMul.map(cr => cr === null || cr === void 0 ? void 0 : cr.result).reduce((acc, curr, idx) => _objectSpread(_objectSpread({}, acc), {}, {\n    [curr]: idx\n  }), {});\n  const stakeBalance = (_useSingleCallResult6 = useSingleCallResult(stakeRewards, 'balanceOf', accountArg)) === null || _useSingleCallResult6 === void 0 ? void 0 : (_useSingleCallResult7 = _useSingleCallResult6.result) === null || _useSingleCallResult7 === void 0 ? void 0 : _useSingleCallResult7[0];\n  const earned = (_useSingleCallResult8 = useSingleCallResult(stakeRewards, 'earned', accountArg)) === null || _useSingleCallResult8 === void 0 ? void 0 : (_useSingleCallResult9 = _useSingleCallResult8.result) === null || _useSingleCallResult9 === void 0 ? void 0 : _useSingleCallResult9[0];\n  const earnedExternal = (_useSingleCallResult10 = useSingleCallResult(stakeRewards, 'earnedExternal', accountArg)) === null || _useSingleCallResult10 === void 0 ? void 0 : (_useSingleCallResult11 = _useSingleCallResult10.result) === null || _useSingleCallResult11 === void 0 ? void 0 : _useSingleCallResult11[0];\n  const periodFinish = (_useSingleCallResult12 = useSingleCallResult(stakeRewards, 'periodFinish', [])) === null || _useSingleCallResult12 === void 0 ? void 0 : (_useSingleCallResult13 = _useSingleCallResult12.result) === null || _useSingleCallResult13 === void 0 ? void 0 : _useSingleCallResult13[0];\n  const data = useMemo(() => ({\n    totalSupply,\n    rewardRate,\n    rewardsToken,\n    periodFinish,\n    myBalance: stakeBalance,\n    earned: [earned, ...(earnedExternal ? earnedExternal : [])]\n  }), [earned, earnedExternal, rewardRate, rewardsToken, stakeBalance, totalSupply, periodFinish]);\n  return useMemo(() => {\n    var _myBalance$toString, _totalSupplyRaw$toStr, _totalRewardRateRaw$t;\n    if (!data || !rewardsToken || !underlyingPool) {\n      return null;\n    }\n    const {\n      totalSupply: totalSupplyRaw,\n      rewardRate: totalRewardRateRaw,\n      myBalance,\n      earned,\n      periodFinish\n    } = data;\n    const {\n      stakingToken\n    } = underlyingPool;\n    const getHypotheticalRewardRate = (stakedAmount, totalStakedAmount, totalRewardRates) => {\n      return totalRewardRates.map(totalRewardRate => {\n        return new TokenAmount(totalRewardRate.token, JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0)) ? JSBI.divide(JSBI.multiply(totalRewardRate.raw, stakedAmount.raw), totalStakedAmount.raw) : JSBI.BigInt(0));\n      });\n    };\n    const rewardsFinished = Math.floor(Date.now() / 1000) - periodFinish.toNumber() > INT_SECONDS_IN_WEEK;\n    const stakedAmount = myBalance ? new TokenAmount(stakingToken, (_myBalance$toString = myBalance === null || myBalance === void 0 ? void 0 : myBalance.toString()) !== null && _myBalance$toString !== void 0 ? _myBalance$toString : '0') : undefined;\n    const totalStakedAmount = new TokenAmount(stakingToken, (_totalSupplyRaw$toStr = totalSupplyRaw === null || totalSupplyRaw === void 0 ? void 0 : totalSupplyRaw.toString()) !== null && _totalSupplyRaw$toStr !== void 0 ? _totalSupplyRaw$toStr : '0');\n    const totalRewardRates = [new TokenAmount(rewardsToken, rewardsFinished ? JSBI.BigInt(0) : (_totalRewardRateRaw$t = totalRewardRateRaw === null || totalRewardRateRaw === void 0 ? void 0 : totalRewardRateRaw.toString()) !== null && _totalRewardRateRaw$t !== void 0 ? _totalRewardRateRaw$t : '0'), ...underlyingPool.totalRewardRates].sort((a, b) => {\n      var _a$token, _b$token;\n      return (_a$token = a.token) !== null && _a$token !== void 0 && _a$token.symbol && b !== null && b !== void 0 && (_b$token = b.token) !== null && _b$token !== void 0 && _b$token.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0;\n    });\n    const rewardRates = stakedAmount ? getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRates) : totalRewardRates.map(totalRewardRate => new TokenAmount(totalRewardRate.token, '0'));\n    const underlyingRewardTokens = underlyingPool.rewardTokens.sort((a, b) => externalRewardsTokens[a === null || a === void 0 ? void 0 : a.address] - externalRewardsTokens[b === null || b === void 0 ? void 0 : b.address]);\n    const rewardTokens = rewardsToken ? [rewardsToken, ...underlyingRewardTokens] : [...underlyingRewardTokens];\n    const earnedAmounts = earned && earned.length === rewardTokens.length ? zip(earned, rewardTokens).map(_ref => {\n      var _amount$toString;\n      let [amount, token] = _ref;\n      return new TokenAmount(token, (_amount$toString = amount === null || amount === void 0 ? void 0 : amount.toString()) !== null && _amount$toString !== void 0 ? _amount$toString : '0');\n    }).sort((a, b) => {\n      var _a$token2, _b$token2;\n      return a !== null && a !== void 0 && (_a$token2 = a.token) !== null && _a$token2 !== void 0 && _a$token2.symbol && b !== null && b !== void 0 && (_b$token2 = b.token) !== null && _b$token2 !== void 0 && _b$token2.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0;\n    }) : undefined;\n    return {\n      stakingRewardAddress: address,\n      stakingToken,\n      tokens: underlyingPool.tokens,\n      stakedAmount,\n      totalStakedAmount,\n      earnedAmounts,\n      rewardRates,\n      totalRewardRates,\n      periodFinish: new Date(),\n      active,\n      getHypotheticalRewardRate,\n      nextPeriodRewards: underlyingPool.nextPeriodRewards,\n      poolInfo: underlyingPool.poolInfo,\n      rewardTokens\n    };\n  }, [data, rewardsToken, underlyingPool, address, active, externalRewardsTokens]);\n};\n_s(useMultiStakeRewards, \"ha+Dhs9Z65PRMOIBMsYLAZ2NOKA=\", false, function () {\n  return [useCelo, useMultiStakingContract, useSingleCallResult, useSingleCallResult, useToken, useSingleCallResult, useSingleContractMultipleData, useSingleCallResult, useSingleCallResult, useSingleCallResult, useSingleCallResult];\n});","map":{"version":3,"names":["useCelo","JSBI","TokenAmount","useToken","useMultiStakingContract","zip","useMemo","useSingleCallResult","useSingleContractMultipleData","INT_SECONDS_IN_WEEK","useMultiStakeRewards","address","underlyingPool","numRewards","active","_s","_useSingleCallResult","_useSingleCallResult$","_useSingleCallResult2","_useSingleCallResult3","_useSingleCallResult4","_useSingleCallResult5","_useSingleContractMul","_useSingleCallResult6","_useSingleCallResult7","_useSingleCallResult8","_useSingleCallResult9","_useSingleCallResult10","_useSingleCallResult11","_useSingleCallResult12","_useSingleCallResult13","owner","accountArg","undefined","stakeRewards","totalSupply","result","rewardRate","rewardsToken","externalRewardsTokens","Array","keys","map","i","cr","reduce","acc","curr","idx","_objectSpread","stakeBalance","earned","earnedExternal","periodFinish","data","myBalance","_myBalance$toString","_totalSupplyRaw$toStr","_totalRewardRateRaw$t","totalSupplyRaw","totalRewardRateRaw","stakingToken","getHypotheticalRewardRate","stakedAmount","totalStakedAmount","totalRewardRates","totalRewardRate","token","greaterThan","raw","BigInt","divide","multiply","rewardsFinished","Math","floor","Date","now","toNumber","toString","sort","a","b","_a$token","_b$token","symbol","localeCompare","rewardRates","underlyingRewardTokens","rewardTokens","earnedAmounts","length","_ref","_amount$toString","amount","_a$token2","_b$token2","stakingRewardAddress","tokens","nextPeriodRewards","poolInfo"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/stake/useDualStakeRewards.ts"],"sourcesContent":["import { Address } from '@celo/contractkit'\nimport { useCelo } from '@celo/react-celo'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { JSBI, Token, TokenAmount } from '@ubeswap/sdk'\nimport { useToken } from 'hooks/Tokens'\nimport { useMultiStakingContract } from 'hooks/useContract'\nimport zip from 'lodash/zip'\nimport { useMemo } from 'react'\nimport { useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\n\nimport { INT_SECONDS_IN_WEEK } from './../../constants/index'\nimport { StakingInfo } from './hooks'\n\nexport const useMultiStakeRewards = (\n  address: Address | undefined,\n  underlyingPool: StakingInfo | undefined | null,\n  numRewards: number,\n  active: boolean\n): StakingInfo | null => {\n  const { address: owner } = useCelo()\n  const accountArg = useMemo(() => [owner ?? undefined], [owner])\n  const stakeRewards = useMultiStakingContract(address)\n\n  const totalSupply = useSingleCallResult(stakeRewards, 'totalSupply', [])?.result?.[0]\n  const rewardRate = useSingleCallResult(stakeRewards, 'rewardRate', [])?.result?.[0]\n  const rewardsToken = useToken(useSingleCallResult(stakeRewards, 'rewardsToken', [])?.result?.[0])\n  const externalRewardsTokens: Record<string, number> = useSingleContractMultipleData(\n    stakeRewards,\n    'externalRewardsTokens',\n    [...[...Array(numRewards - 2).keys()].map((i) => [i])]\n  )\n    ?.map((cr) => cr?.result as unknown as string)\n    .reduce((acc, curr, idx) => ({ ...acc, [curr]: idx }), {})\n\n  const stakeBalance = useSingleCallResult(stakeRewards, 'balanceOf', accountArg)?.result?.[0]\n  const earned = useSingleCallResult(stakeRewards, 'earned', accountArg)?.result?.[0]\n  const earnedExternal = useSingleCallResult(stakeRewards, 'earnedExternal', accountArg)?.result?.[0]\n  const periodFinish = useSingleCallResult(stakeRewards, 'periodFinish', [])?.result?.[0]\n  const data = useMemo(\n    () => ({\n      totalSupply,\n      rewardRate,\n      rewardsToken,\n      periodFinish,\n      myBalance: stakeBalance,\n      earned: [earned, ...(earnedExternal ? earnedExternal : [])],\n    }),\n    [earned, earnedExternal, rewardRate, rewardsToken, stakeBalance, totalSupply, periodFinish]\n  )\n\n  return useMemo((): StakingInfo | null => {\n    if (!data || !rewardsToken || !underlyingPool) {\n      return null\n    }\n    const { totalSupply: totalSupplyRaw, rewardRate: totalRewardRateRaw, myBalance, earned, periodFinish } = data\n    const { stakingToken } = underlyingPool\n\n    const getHypotheticalRewardRate = (\n      stakedAmount: TokenAmount,\n      totalStakedAmount: TokenAmount,\n      totalRewardRates: TokenAmount[]\n    ): TokenAmount[] => {\n      return totalRewardRates.map((totalRewardRate) => {\n        return new TokenAmount(\n          totalRewardRate.token,\n          JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\n            ? JSBI.divide(JSBI.multiply(totalRewardRate.raw, stakedAmount.raw), totalStakedAmount.raw)\n            : JSBI.BigInt(0)\n        )\n      })\n    }\n\n    const rewardsFinished = Math.floor(Date.now() / 1000) - periodFinish.toNumber() > INT_SECONDS_IN_WEEK\n    const stakedAmount = myBalance ? new TokenAmount(stakingToken, myBalance?.toString() ?? '0') : undefined\n    const totalStakedAmount = new TokenAmount(stakingToken, totalSupplyRaw?.toString() ?? '0')\n    const totalRewardRates = [\n      new TokenAmount(rewardsToken, rewardsFinished ? JSBI.BigInt(0) : totalRewardRateRaw?.toString() ?? '0'),\n      ...underlyingPool.totalRewardRates,\n    ].sort((a, b) => (a.token?.symbol && b?.token?.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0))\n\n    const rewardRates = stakedAmount\n      ? getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRates)\n      : totalRewardRates.map((totalRewardRate) => new TokenAmount(totalRewardRate.token, '0'))\n\n    const underlyingRewardTokens = underlyingPool.rewardTokens.sort(\n      (a, b) => externalRewardsTokens[a?.address] - externalRewardsTokens[b?.address]\n    )\n    const rewardTokens = rewardsToken ? [rewardsToken, ...underlyingRewardTokens] : [...underlyingRewardTokens]\n    const earnedAmounts =\n      earned && earned.length === rewardTokens.length\n        ? zip<BigNumber, Token>(earned, rewardTokens)\n            .map(([amount, token]) => new TokenAmount(token as Token, amount?.toString() ?? '0'))\n            .sort((a, b) => (a?.token?.symbol && b?.token?.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0))\n        : undefined\n\n    return {\n      stakingRewardAddress: address,\n      stakingToken,\n      tokens: underlyingPool.tokens,\n      stakedAmount,\n      totalStakedAmount,\n      earnedAmounts,\n      rewardRates,\n      totalRewardRates,\n      periodFinish: new Date(),\n      active,\n      getHypotheticalRewardRate,\n      nextPeriodRewards: underlyingPool.nextPeriodRewards,\n      poolInfo: underlyingPool.poolInfo,\n      rewardTokens,\n    }\n  }, [data, rewardsToken, underlyingPool, address, active, externalRewardsTokens])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}