{"ast":null,"code":"import{useMemo}from'react';import{useSelector}from'react-redux';import useCurrentBlockTimestamp from'./useCurrentBlockTimestamp';// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(){const ttl=useSelector(state=>state.user.userDeadline);const blockTimestamp=useCurrentBlockTimestamp();return useMemo(()=>{if(blockTimestamp&&ttl)return blockTimestamp.add(ttl);return undefined;},[blockTimestamp,ttl]);}","map":{"version":3,"names":["useMemo","useSelector","useCurrentBlockTimestamp","useTransactionDeadline","ttl","state","user","userDeadline","blockTimestamp","add","undefined"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/hooks/useTransactionDeadline.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n"],"mappings":"AACA,OAASA,OAAO,KAAQ,OAAO,CAC/B,OAASC,WAAW,KAAQ,aAAa,CAGzC,MAAO,CAAAC,wBAAwB,KAAM,4BAA4B,CAEjE;AACA,cAAe,SAAS,CAAAC,sBAAsBA,CAAA,CAA0B,CACtE,KAAM,CAAAC,GAAG,CAAGH,WAAW,CAAoBI,KAAK,EAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC,CAC7E,KAAM,CAAAC,cAAc,CAAGN,wBAAwB,CAAC,CAAC,CACjD,MAAO,CAAAF,OAAO,CAAC,IAAM,CACnB,GAAIQ,cAAc,EAAIJ,GAAG,CAAE,MAAO,CAAAI,cAAc,CAACC,GAAG,CAACL,GAAG,CAAC,CACzD,MAAO,CAAAM,SAAS,CAClB,CAAC,CAAE,CAACF,cAAc,CAAEJ,GAAG,CAAC,CAAC,CAC3B"},"metadata":{},"sourceType":"module"}