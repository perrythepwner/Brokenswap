{"ast":null,"code":"import _asyncToGenerator from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError, getBigIntRpcId } from \"@walletconnect/jsonrpc-utils\";\nexport class JsonRpcProvider extends IJsonRpcProvider {\n  constructor(connection) {\n    super(connection);\n    this.events = new EventEmitter();\n    this.hasRegisteredEventListeners = false;\n    this.connection = this.setConnection(connection);\n    if (this.connection.connected) {\n      this.registerEventListeners();\n    }\n  }\n  connect() {\n    var _arguments = arguments,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      let connection = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : _this.connection;\n      yield _this.open(connection);\n    })();\n  }\n  disconnect() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.close();\n    })();\n  }\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n  request(request, context) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);\n    })();\n  }\n  requestStrict(request, context) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resolve, reject) {\n          if (!_this4.connection.connected) {\n            try {\n              yield _this4.open();\n            } catch (e) {\n              reject(e);\n            }\n          }\n          _this4.events.on(\"\".concat(request.id), response => {\n            if (isJsonRpcError(response)) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n          try {\n            yield _this4.connection.send(request, context);\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  setConnection() {\n    let connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n    return connection;\n  }\n  onPayload(payload) {\n    this.events.emit(\"payload\", payload);\n    if (isJsonRpcResponse(payload)) {\n      this.events.emit(\"\".concat(payload.id), payload);\n    } else {\n      this.events.emit(\"message\", {\n        type: payload.method,\n        data: payload.params\n      });\n    }\n  }\n  onClose(event) {\n    if (event && event.code === 3000) {\n      this.events.emit(\"error\", new Error(\"WebSocket connection closed abnormally with code: \".concat(event.code, \" \").concat(event.reason ? \"(\".concat(event.reason, \")\") : \"\")));\n    }\n    this.events.emit(\"disconnect\");\n  }\n  open() {\n    var _arguments2 = arguments,\n      _this5 = this;\n    return _asyncToGenerator(function* () {\n      let connection = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : _this5.connection;\n      if (_this5.connection === connection && _this5.connection.connected) return;\n      if (_this5.connection.connected) _this5.close();\n      if (typeof connection === \"string\") {\n        yield _this5.connection.open(connection);\n        connection = _this5.connection;\n      }\n      _this5.connection = _this5.setConnection(connection);\n      yield _this5.connection.open();\n      _this5.registerEventListeners();\n      _this5.events.emit(\"connect\");\n    })();\n  }\n  close() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      yield _this6.connection.close();\n    })();\n  }\n  registerEventListeners() {\n    if (this.hasRegisteredEventListeners) return;\n    this.connection.on(\"payload\", payload => this.onPayload(payload));\n    this.connection.on(\"close\", event => this.onClose(event));\n    this.connection.on(\"error\", error => this.events.emit(\"error\", error));\n    this.connection.on(\"register_error\", error => this.onClose());\n    this.hasRegisteredEventListeners = true;\n  }\n}\nexport default JsonRpcProvider;","map":{"version":3,"sources":["../../src/provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError, getBigIntRpcId, } from \"@walletconnect/jsonrpc-utils\";\nexport class JsonRpcProvider extends IJsonRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new EventEmitter();\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    async connect(connection = this.connection) {\n        await this.open(connection);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async request(request, context) {\n        return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);\n    }\n    async requestStrict(request, context) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.connection.connected) {\n                try {\n                    await this.open();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            this.events.on(`${request.id}`, response => {\n                if (isJsonRpcError(response)) {\n                    reject(response.error);\n                }\n                else {\n                    resolve(response.result);\n                }\n            });\n            try {\n                await this.connection.send(request, context);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if (isJsonRpcResponse(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    async open(connection = this.connection) {\n        if (this.connection === connection && this.connection.connected)\n            return;\n        if (this.connection.connected)\n            this.close();\n        if (typeof connection === \"string\") {\n            await this.connection.open(connection);\n            connection = this.connection;\n        }\n        this.connection = this.setConnection(connection);\n        await this.connection.open();\n        this.registerEventListeners();\n        this.events.emit(\"connect\");\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexport default JsonRpcProvider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}