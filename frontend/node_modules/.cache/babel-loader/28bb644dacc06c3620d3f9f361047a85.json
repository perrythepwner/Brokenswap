{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fixTheme = exports.contrastCheck = exports.contrast = exports.luminance = exports.RGBToHex = exports.hexToRGB = exports.Color = void 0;\nconst default_1 = __importDefault(require(\"../theme/default\"));\nconst logger_1 = require(\"./logger\");\nconst minmax = function minmax(value) {\n  let lowerBound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let higherBound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.max(lowerBound, Math.min(higherBound, value));\n};\nconst round2 = num => Math.round((num + Number.EPSILON) * 100) / 100;\nvar Format;\n(function (Format) {\n  Format[Format[\"Hex\"] = 0] = \"Hex\";\n  Format[Format[\"Rgb\"] = 1] = \"Rgb\";\n})(Format || (Format = {}));\nclass Color {\n  constructor(color) {\n    this.a = null;\n    if (color.startsWith('#')) {\n      if (color.length === 4) {\n        // eg: #fff, #000\n        this.r = parseInt(color.slice(1, 2) + color.slice(1, 2), 16);\n        this.g = parseInt(color.slice(2, 3) + color.slice(2, 3), 16);\n        this.b = parseInt(color.slice(3, 4) + color.slice(3, 4), 16);\n      } else {\n        // eg: #ffffff, #000000\n        this.r = parseInt(color.slice(1, 3), 16);\n        this.g = parseInt(color.slice(3, 5), 16);\n        this.b = parseInt(color.slice(5, 7), 16);\n        if (color.length === 9) {\n          // eg: #ffffff80, #000000ff\n          this.a = round2(minmax(parseInt(color.slice(7, 9), 16) / 255));\n        }\n      }\n    } else if (color.startsWith('rgb')) {\n      // eg: rgb(0, 0, 0)\n      const values = color.split('(')[1].split(')')[0].split(',');\n      this.r = parseInt(values[0].trim(), 10);\n      this.g = parseInt(values[1].trim(), 10);\n      this.b = parseInt(values[2].trim(), 10);\n      if (values[3]) {\n        // eg: rgba(0, 0, 0, 1)\n        this.a = round2(minmax(parseFloat(values[3])));\n      }\n      (0, logger_1.getApplicationLogger)().warn('[colors]', \"RGB(A) values not officially supported, but were translated to hex (\".concat(color, \" -> \").concat(this.toHex(), \")\"));\n    } else if (color.startsWith('hsl')) {\n      // eg: hsl(100, 50%, 75%)\n      const values = color.split('(')[1].split(')')[0].split(',');\n      const h = parseInt(values[0].trim().replace('deg', ''), 10);\n      const s = parseInt(values[1].trim().replace('%', ''), 10);\n      let l = parseFloat(values[2].trim().replace('%', ''));\n      if (l > 1) {\n        l /= 100;\n      }\n      const a = s * Math.min(l, 1 - l) / 100;\n      const f = n => {\n        const k = (n + h / 30) % 12;\n        const unroundedColor = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n        return Math.round(255 * unroundedColor + Number.EPSILON);\n      };\n      this.r = f(0);\n      this.g = f(8);\n      this.b = f(4);\n      if (values[3]) {\n        // eg: hsla(100, 50%, 75%, 0.8)\n        this.a = round2(minmax(parseFloat(values[3])));\n      }\n      (0, logger_1.getApplicationLogger)().warn('[colors]', \"HSL(A) values not officially supported, but were translated to hex (\".concat(color, \" -> \").concat(this.toHex(), \")\"));\n    } else {\n      throw new Error(\"Malformed color (\".concat(color, \")\"));\n    }\n  }\n  opacity(alpha) {\n    if (alpha != null) {\n      this.a = round2(minmax(alpha));\n    }\n    return this;\n  }\n  toRGB() {\n    if (this.a !== null) {\n      return \"rgba(\".concat(this.r, \", \").concat(this.g, \", \").concat(this.b, \", \").concat(this.a, \")\");\n    }\n    return \"rgb(\".concat(this.r, \", \").concat(this.g, \", \").concat(this.b, \")\");\n  }\n  toHex() {\n    const hex = [this.r.toString(16).padStart(2, '0'), this.g.toString(16).padStart(2, '0'), this.b.toString(16).padStart(2, '0')].join('');\n    if (this.a !== null) {\n      // 0 <= this.a <= 1\n      const alpha = Math.round(this.a * 256).toString(16).padStart(2, '0');\n      return \"#\".concat(hex).concat(alpha);\n    }\n    return \"#\".concat(hex);\n  }\n  toString(format) {\n    switch (format) {\n      case Format.Hex:\n        return this.toHex();\n      case Format.Rgb:\n        return this.toRGB();\n    }\n  }\n}\nexports.Color = Color;\nfunction hexToRGB(hex, alpha) {\n  return new Color(hex).opacity(alpha).toRGB();\n}\nexports.hexToRGB = hexToRGB;\nfunction RGBToHex(rgba) {\n  return new Color(rgba).toHex();\n}\nexports.RGBToHex = RGBToHex;\n// https://en.wikipedia.org/wiki/Relative_luminance#Relative_luminance_and_.22gamma_encoded.22_colorspaces\nfunction luminance(color) {\n  const a = [color.r, color.g, color.b].map(v => {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\nexports.luminance = luminance;\nfunction contrast(a, b) {\n  const lum1 = luminance(a);\n  const lum2 = luminance(b);\n  const brightest = Math.max(lum1, lum2);\n  const darkest = Math.min(lum1, lum2);\n  return round2((brightest + 0.05) / (darkest + 0.05));\n}\nexports.contrast = contrast;\nfunction contrastCheck(theme) {\n  // minimal recommended contrast ratio is 4.\n  // or 3 for larger font-sizes\n  const textToBg = contrast(new Color(theme.background), new Color(theme.text));\n  if (textToBg <= 4) {\n    (0, logger_1.getApplicationLogger)().warn('[colors]', \"Potential accessibility issue between text and background colors (\".concat(textToBg, \")\"));\n  }\n  const textSecondaryToBg = contrast(new Color(theme.background), new Color(theme.textSecondary));\n  if (textSecondaryToBg <= 4) {\n    (0, logger_1.getApplicationLogger)().warn('[colors]', \"Potential accessibility issue between textSecondary and background colors (\".concat(textSecondaryToBg, \")\"));\n  }\n  const primaryToSecondary = contrast(new Color(theme.background), new Color(theme.secondary));\n  if (primaryToSecondary <= 3) {\n    (0, logger_1.getApplicationLogger)().warn('[colors]', \"Potential accessibility issue between primary and secondary colors (\".concat(primaryToSecondary, \")\"));\n  }\n}\nexports.contrastCheck = contrastCheck;\nfunction fixTheme(theme) {\n  Object.entries(theme).forEach(_ref => {\n    let [key, value] = _ref;\n    if (!(key in default_1.default.light)) {\n      (0, logger_1.getApplicationLogger)().error('[colors]', \"Theme key \".concat(key, \" is not valid.\"));\n    }\n    const _key = key;\n    try {\n      const color = new Color(value);\n      theme[_key] = color.toHex();\n    } catch (e) {\n      theme[_key] = '#FF0000';\n      (0, logger_1.getApplicationLogger)().error('[colors]', \"Could not parse theme. \".concat(_key, \" with value \").concat(value, \". Replaced it with red!\"));\n    }\n  });\n}\nexports.fixTheme = fixTheme;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","fixTheme","contrastCheck","contrast","luminance","RGBToHex","hexToRGB","Color","default_1","require","logger_1","minmax","lowerBound","arguments","length","undefined","higherBound","Math","max","min","round2","num","round","Number","EPSILON","Format","constructor","color","a","startsWith","r","parseInt","slice","g","b","values","split","trim","parseFloat","getApplicationLogger","warn","concat","toHex","h","replace","s","l","f","n","k","unroundedColor","Error","opacity","alpha","toRGB","hex","toString","padStart","join","format","Hex","Rgb","rgba","map","v","pow","lum1","lum2","brightest","darkest","theme","textToBg","background","text","textSecondaryToBg","textSecondary","primaryToSecondary","secondary","entries","forEach","_ref","key","default","light","error","_key","e"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/utils/colors.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixTheme = exports.contrastCheck = exports.contrast = exports.luminance = exports.RGBToHex = exports.hexToRGB = exports.Color = void 0;\nconst default_1 = __importDefault(require(\"../theme/default\"));\nconst logger_1 = require(\"./logger\");\nconst minmax = (value, lowerBound = 0, higherBound = 1) => Math.max(lowerBound, Math.min(higherBound, value));\nconst round2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\nvar Format;\n(function (Format) {\n    Format[Format[\"Hex\"] = 0] = \"Hex\";\n    Format[Format[\"Rgb\"] = 1] = \"Rgb\";\n})(Format || (Format = {}));\nclass Color {\n    constructor(color) {\n        this.a = null;\n        if (color.startsWith('#')) {\n            if (color.length === 4) {\n                // eg: #fff, #000\n                this.r = parseInt(color.slice(1, 2) + color.slice(1, 2), 16);\n                this.g = parseInt(color.slice(2, 3) + color.slice(2, 3), 16);\n                this.b = parseInt(color.slice(3, 4) + color.slice(3, 4), 16);\n            }\n            else {\n                // eg: #ffffff, #000000\n                this.r = parseInt(color.slice(1, 3), 16);\n                this.g = parseInt(color.slice(3, 5), 16);\n                this.b = parseInt(color.slice(5, 7), 16);\n                if (color.length === 9) {\n                    // eg: #ffffff80, #000000ff\n                    this.a = round2(minmax(parseInt(color.slice(7, 9), 16) / 255));\n                }\n            }\n        }\n        else if (color.startsWith('rgb')) {\n            // eg: rgb(0, 0, 0)\n            const values = color.split('(')[1].split(')')[0].split(',');\n            this.r = parseInt(values[0].trim(), 10);\n            this.g = parseInt(values[1].trim(), 10);\n            this.b = parseInt(values[2].trim(), 10);\n            if (values[3]) {\n                // eg: rgba(0, 0, 0, 1)\n                this.a = round2(minmax(parseFloat(values[3])));\n            }\n            (0, logger_1.getApplicationLogger)().warn('[colors]', `RGB(A) values not officially supported, but were translated to hex (${color} -> ${this.toHex()})`);\n        }\n        else if (color.startsWith('hsl')) {\n            // eg: hsl(100, 50%, 75%)\n            const values = color.split('(')[1].split(')')[0].split(',');\n            const h = parseInt(values[0].trim().replace('deg', ''), 10);\n            const s = parseInt(values[1].trim().replace('%', ''), 10);\n            let l = parseFloat(values[2].trim().replace('%', ''));\n            if (l > 1) {\n                l /= 100;\n            }\n            const a = (s * Math.min(l, 1 - l)) / 100;\n            const f = (n) => {\n                const k = (n + h / 30) % 12;\n                const unroundedColor = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                return Math.round(255 * unroundedColor + Number.EPSILON);\n            };\n            this.r = f(0);\n            this.g = f(8);\n            this.b = f(4);\n            if (values[3]) {\n                // eg: hsla(100, 50%, 75%, 0.8)\n                this.a = round2(minmax(parseFloat(values[3])));\n            }\n            (0, logger_1.getApplicationLogger)().warn('[colors]', `HSL(A) values not officially supported, but were translated to hex (${color} -> ${this.toHex()})`);\n        }\n        else {\n            throw new Error(`Malformed color (${color})`);\n        }\n    }\n    opacity(alpha) {\n        if (alpha != null) {\n            this.a = round2(minmax(alpha));\n        }\n        return this;\n    }\n    toRGB() {\n        if (this.a !== null) {\n            return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n        }\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n    toHex() {\n        const hex = [\n            this.r.toString(16).padStart(2, '0'),\n            this.g.toString(16).padStart(2, '0'),\n            this.b.toString(16).padStart(2, '0'),\n        ].join('');\n        if (this.a !== null) {\n            // 0 <= this.a <= 1\n            const alpha = Math.round(this.a * 256)\n                .toString(16)\n                .padStart(2, '0');\n            return `#${hex}${alpha}`;\n        }\n        return `#${hex}`;\n    }\n    toString(format) {\n        switch (format) {\n            case Format.Hex:\n                return this.toHex();\n            case Format.Rgb:\n                return this.toRGB();\n        }\n    }\n}\nexports.Color = Color;\nfunction hexToRGB(hex, alpha) {\n    return new Color(hex).opacity(alpha).toRGB();\n}\nexports.hexToRGB = hexToRGB;\nfunction RGBToHex(rgba) {\n    return new Color(rgba).toHex();\n}\nexports.RGBToHex = RGBToHex;\n// https://en.wikipedia.org/wiki/Relative_luminance#Relative_luminance_and_.22gamma_encoded.22_colorspaces\nfunction luminance(color) {\n    const a = [color.r, color.g, color.b].map((v) => {\n        v /= 255;\n        return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n    });\n    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\nexports.luminance = luminance;\nfunction contrast(a, b) {\n    const lum1 = luminance(a);\n    const lum2 = luminance(b);\n    const brightest = Math.max(lum1, lum2);\n    const darkest = Math.min(lum1, lum2);\n    return round2((brightest + 0.05) / (darkest + 0.05));\n}\nexports.contrast = contrast;\nfunction contrastCheck(theme) {\n    // minimal recommended contrast ratio is 4.\n    // or 3 for larger font-sizes\n    const textToBg = contrast(new Color(theme.background), new Color(theme.text));\n    if (textToBg <= 4) {\n        (0, logger_1.getApplicationLogger)().warn('[colors]', `Potential accessibility issue between text and background colors (${textToBg})`);\n    }\n    const textSecondaryToBg = contrast(new Color(theme.background), new Color(theme.textSecondary));\n    if (textSecondaryToBg <= 4) {\n        (0, logger_1.getApplicationLogger)().warn('[colors]', `Potential accessibility issue between textSecondary and background colors (${textSecondaryToBg})`);\n    }\n    const primaryToSecondary = contrast(new Color(theme.background), new Color(theme.secondary));\n    if (primaryToSecondary <= 3) {\n        (0, logger_1.getApplicationLogger)().warn('[colors]', `Potential accessibility issue between primary and secondary colors (${primaryToSecondary})`);\n    }\n}\nexports.contrastCheck = contrastCheck;\nfunction fixTheme(theme) {\n    Object.entries(theme).forEach(([key, value]) => {\n        if (!(key in default_1.default.light)) {\n            (0, logger_1.getApplicationLogger)().error('[colors]', `Theme key ${key} is not valid.`);\n        }\n        const _key = key;\n        try {\n            const color = new Color(value);\n            theme[_key] = color.toHex();\n        }\n        catch (e) {\n            theme[_key] = '#FF0000';\n            (0, logger_1.getApplicationLogger)().error('[colors]', `Could not parse theme. ${_key} with value ${value}. Replaced it with red!`);\n        }\n    });\n}\nexports.fixTheme = fixTheme;\n//# sourceMappingURL=colors.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}