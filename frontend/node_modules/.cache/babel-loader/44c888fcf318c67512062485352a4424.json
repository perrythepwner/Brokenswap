{"ast":null,"code":"import{getAddress}from'@ethersproject/address';import{BigNumber}from'@ethersproject/bignumber';import{AddressZero}from'@ethersproject/constants';import{Contract}from'@ethersproject/contracts';import{keccak256}from'@ethersproject/keccak256';import{JSBI,Percent,Token}from'@ubeswap/sdk';import{ROUTER_ADDRESS,UBESWAP_MOOLA_ROUTER_ADDRESS}from'../constants';import IUniswapV2Router02ABI from'../constants/abis/IUniswapV2Router02.json';import UbeswapMoolaRouterABI from'../constants/abis/UbeswapMoolaRouter.json';// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value){try{return getAddress(value);}catch(_unused){return false;}}// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address){let chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;const parsed=isAddress(address);if(!parsed){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return\"\".concat(parsed.substring(0,chars+2),\"...\").concat(parsed.substring(42-chars));}// add 100%\nexport function calculateGasMargin(value){return value.mul(BigNumber.from(2));}// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num){return new Percent(JSBI.BigInt(num),JSBI.BigInt(10000));}export function calculateSlippageAmount(value,slippage){if(slippage<0||slippage>10000){throw Error(\"Unexpected slippage value: \".concat(slippage));}return[JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000-slippage)),JSBI.BigInt(10000)),JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000+slippage)),JSBI.BigInt(10000))];}// account is not optional\nexport function getSigner(library,account){return library.getSigner(account).connectUnchecked();}// account is optional\nexport function getProviderOrSigner(library,account){return account?getSigner(library,account):library;}// account is optional\nexport function getContract(address,ABI,library,account){if(!isAddress(address)||address===AddressZero){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return new Contract(address,ABI,getProviderOrSigner(library,account));}// account is optional\nexport function getRouterContract(_,library,account){return getContract(ROUTER_ADDRESS,IUniswapV2Router02ABI,library,account);}export function getMoolaRouterContract(_,library,account){return getContract(UBESWAP_MOOLA_ROUTER_ADDRESS,UbeswapMoolaRouterABI,library,account);}export function escapeRegExp(string){return string.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');// $& means the whole matched string\n}export function isTokenOnList(defaultTokens,currency){var _defaultTokens$curren;return Boolean(currency instanceof Token&&((_defaultTokens$curren=defaultTokens[currency.chainId])===null||_defaultTokens$curren===void 0?void 0:_defaultTokens$curren[currency.address]));}export function isBTest(address){const TARGET_HASH=process.env.REACT_APP_AB_HASH;return keccak256(address.toLowerCase())===TARGET_HASH;}","map":null,"metadata":{},"sourceType":"module"}