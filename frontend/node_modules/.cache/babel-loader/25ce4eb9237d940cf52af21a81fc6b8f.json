{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/pages/Swap/redirects.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions';\n\n// Redirects to swap but only replace the pathname\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RedirectPathToSwapOnly(_ref) {\n  let {\n    location\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: _objectSpread(_objectSpread({}, location), {}, {\n      pathname: '/swap'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\n_c = RedirectPathToSwapOnly;\nexport function RedirectToSwap(props) {\n  const {\n    location: {\n      search\n    },\n    match: {\n      params: {\n        outputCurrency\n      }\n    }\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: _objectSpread(_objectSpread({}, props.location), {}, {\n      pathname: '/swap',\n      search: search && search.length > 1 ? \"\".concat(search, \"&outputCurrency=\").concat(outputCurrency) : \"?outputCurrency=\".concat(outputCurrency)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RedirectToSwap;\nexport function OpenClaimAddressModalAndRedirectToSwap(props) {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(RedirectPathToSwapOnly, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s(OpenClaimAddressModalAndRedirectToSwap, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c3 = OpenClaimAddressModalAndRedirectToSwap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RedirectPathToSwapOnly\");\n$RefreshReg$(_c2, \"RedirectToSwap\");\n$RefreshReg$(_c3, \"OpenClaimAddressModalAndRedirectToSwap\");","map":{"version":3,"names":["React","useEffect","useDispatch","Redirect","ApplicationModal","setOpenModal","jsxDEV","_jsxDEV","RedirectPathToSwapOnly","_ref","location","to","_objectSpread","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","RedirectToSwap","props","search","match","params","outputCurrency","length","concat","_c2","OpenClaimAddressModalAndRedirectToSwap","_s","dispatch","ADDRESS_CLAIM","_c3","$RefreshReg$"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/pages/Swap/redirects.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nimport { AppDispatch } from '../../state'\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...props.location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n\nexport function OpenClaimAddressModalAndRedirectToSwap(props: RouteComponentProps) {\n  const dispatch = useDispatch<AppDispatch>()\n  useEffect(() => {\n    dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM))\n  }, [dispatch])\n  return <RedirectPathToSwapOnly {...props} />\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAA6B,kBAAkB;AAGhE,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,iCAAiC;;AAEhF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,sBAAsBA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC;EAA8B,CAAC,GAAAD,IAAA;EACtE,oBAAOF,OAAA,CAACJ,QAAQ;IAACQ,EAAE,EAAAC,aAAA,CAAAA,aAAA,KAAOF,QAAQ;MAAEG,QAAQ,EAAE;IAAO;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D;;AAEA;AAAAC,EAAA,GAJgBV,sBAAsB;AAKtC,OAAO,SAASW,cAAcA,CAACC,KAAsD,EAAE;EACrF,MAAM;IACJV,QAAQ,EAAE;MAAEW;IAAO,CAAC;IACpBC,KAAK,EAAE;MACLC,MAAM,EAAE;QAAEC;MAAe;IAC3B;EACF,CAAC,GAAGJ,KAAK;EAET,oBACEb,OAAA,CAACJ,QAAQ;IACPQ,EAAE,EAAAC,aAAA,CAAAA,aAAA,KACGQ,KAAK,CAACV,QAAQ;MACjBG,QAAQ,EAAE,OAAO;MACjBQ,MAAM,EACJA,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,MAAAC,MAAA,CACpBL,MAAM,sBAAAK,MAAA,CAAmBF,cAAc,uBAAAE,MAAA,CACvBF,cAAc;IAAE;EACzC;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACU,GAAA,GApBeR,cAAc;AAsB9B,OAAO,SAASS,sCAAsCA,CAACR,KAA0B,EAAE;EAAAS,EAAA;EACjF,MAAMC,QAAQ,GAAG5B,WAAW,CAAc,CAAC;EAC3CD,SAAS,CAAC,MAAM;IACd6B,QAAQ,CAACzB,YAAY,CAACD,gBAAgB,CAAC2B,aAAa,CAAC,CAAC;EACxD,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EACd,oBAAOvB,OAAA,CAACC,sBAAsB,EAAAI,aAAA,KAAKQ,KAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9C;AAACY,EAAA,CANeD,sCAAsC;EAAA,QACnC1B,WAAW;AAAA;AAAA8B,GAAA,GADdJ,sCAAsC;AAAA,IAAAV,EAAA,EAAAS,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}