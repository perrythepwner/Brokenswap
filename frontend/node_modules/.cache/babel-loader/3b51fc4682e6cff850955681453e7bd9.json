{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inputSignFormatter = exports.inputAddressFormatter = exports.outputBigNumberFormatter = exports.outputLogFormatter = exports.hexToNumber = exports.outputBlockFormatter = exports.outputBlockHeaderFormatter = exports.inputBlockNumberFormatter = exports.inputDefaultBlockNumberFormatter = exports.outputCeloTxReceiptFormatter = exports.outputCeloTxFormatter = exports.inputCeloTxFormatter = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar address_2 = require(\"@celo/utils/lib/address\");\nvar solidity_1 = require(\"@celo/utils/lib/solidity\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar utf8_1 = require(\"utf8\");\n/**\n * Formats the input of a transaction and converts all values to HEX\n */\nfunction inputCeloTxFormatter(tx) {\n  var _a, _b, _c, _d;\n  tx.from = inputAddressFormatter((_a = tx.from) === null || _a === void 0 ? void 0 : _a.toString());\n  tx.to = inputAddressFormatter(tx.to);\n  tx.feeCurrency = inputAddressFormatter(tx.feeCurrency);\n  tx.gatewayFeeRecipient = inputAddressFormatter(tx.gatewayFeeRecipient);\n  if (tx.data) {\n    tx.data = (0, address_1.ensureLeading0x)(tx.data);\n  }\n  if (tx.data && !isHex(tx.data)) {\n    throw new Error('The data field must be HEX encoded data.');\n  }\n  tx.gas = numberToHex(tx.gas);\n  tx.gasPrice = numberToHex((_b = tx.gasPrice) === null || _b === void 0 ? void 0 : _b.toString());\n  tx.value = numberToHex((_c = tx.value) === null || _c === void 0 ? void 0 : _c.toString());\n  // @ts-ignore - nonce is defined as number, but uses as string (web3)\n  tx.nonce = numberToHex((_d = tx.nonce) === null || _d === void 0 ? void 0 : _d.toString());\n  tx.gatewayFee = numberToHex(tx.gatewayFee);\n  // @ts-ignore - prune undefines\n  Object.keys(tx).forEach(function (key) {\n    return tx[key] === undefined && delete tx[key];\n  });\n  return tx;\n}\nexports.inputCeloTxFormatter = inputCeloTxFormatter;\nfunction outputCeloTxFormatter(tx) {\n  if (tx.blockNumber !== null) {\n    tx.blockNumber = hexToNumber(tx.blockNumber);\n  }\n  if (tx.transactionIndex !== null) {\n    tx.transactionIndex = hexToNumber(tx.transactionIndex);\n  }\n  tx.nonce = hexToNumber(tx.nonce);\n  tx.gas = hexToNumber(tx.gas);\n  tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n  tx.value = outputBigNumberFormatter(tx.value);\n  tx.gatewayFee = outputBigNumberFormatter(tx.gatewayFee);\n  tx.to = tx.to && (0, address_2.isValidAddress)(tx.to) ?\n  // tx.to could be `0x0` or `null` while contract creation\n  tx.to = (0, address_2.toChecksumAddress)(tx.to) : null; // set to `null` if invalid address\n  if (tx.from) {\n    tx.from = (0, address_2.toChecksumAddress)(tx.from);\n  }\n  if (tx.feeCurrency) {\n    tx.feeCurrency = (0, address_2.toChecksumAddress)(tx.feeCurrency);\n  }\n  if (tx.gatewayFeeRecipient) {\n    tx.gatewayFeeRecipient = (0, address_2.toChecksumAddress)(tx.gatewayFeeRecipient);\n  }\n  return tx;\n}\nexports.outputCeloTxFormatter = outputCeloTxFormatter;\nfunction outputCeloTxReceiptFormatter(receipt) {\n  if (typeof receipt !== 'object') {\n    throw new Error('Received receipt is invalid: ' + receipt);\n  }\n  if (receipt.blockNumber !== null) {\n    receipt.blockNumber = hexToNumber(receipt.blockNumber);\n  }\n  if (receipt.transactionIndex !== null) {\n    receipt.transactionIndex = hexToNumber(receipt.transactionIndex);\n  }\n  receipt.cumulativeGasUsed = hexToNumber(receipt.cumulativeGasUsed);\n  receipt.gasUsed = hexToNumber(receipt.gasUsed);\n  if (Array.isArray(receipt.logs)) {\n    receipt.logs = receipt.logs.map(outputLogFormatter);\n  }\n  if (receipt.contractAddress) {\n    receipt.contractAddress = (0, address_2.toChecksumAddress)(receipt.contractAddress);\n  }\n  if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n    receipt.status = Boolean(parseInt((0, address_1.trimLeading0x)(receipt.status), 10));\n  }\n  return receipt;\n}\nexports.outputCeloTxReceiptFormatter = outputCeloTxReceiptFormatter;\nfunction inputDefaultBlockNumberFormatter(blockNumber) {\n  if (blockNumber == null) {\n    blockNumber = 'latest';\n  }\n  return inputBlockNumberFormatter(blockNumber);\n}\nexports.inputDefaultBlockNumberFormatter = inputDefaultBlockNumberFormatter;\nfunction inputBlockNumberFormatter(blockNumber) {\n  if (blockNumber == null) {\n    return undefined;\n  }\n  if (isPredefinedBlockNumber(blockNumber)) {\n    return blockNumber;\n  }\n  if (blockNumber === 'genesis') {\n    return '0x0';\n  }\n  return isHexStrict(blockNumber.toString()) ? blockNumber.toString().toLocaleLowerCase() : numberToHex(blockNumber.toString());\n}\nexports.inputBlockNumberFormatter = inputBlockNumberFormatter;\nfunction outputBlockHeaderFormatter(blockHeader) {\n  // transform to number\n  blockHeader.gasLimit = hexToNumber(blockHeader.gasLimit);\n  blockHeader.gasUsed = hexToNumber(blockHeader.gasUsed);\n  blockHeader.size = hexToNumber(blockHeader.size);\n  blockHeader.timestamp = hexToNumber(blockHeader.timestamp);\n  if (blockHeader.number !== null) {\n    blockHeader.number = hexToNumber(blockHeader.number);\n  }\n  if (blockHeader.miner) {\n    blockHeader.miner = (0, address_2.toChecksumAddress)(blockHeader.miner);\n  }\n  return blockHeader;\n}\nexports.outputBlockHeaderFormatter = outputBlockHeaderFormatter;\nfunction outputBlockFormatter(block) {\n  block = outputBlockHeaderFormatter(block);\n  if (block.difficulty) {\n    block.difficulty = outputBigNumberFormatter(block.difficulty);\n  }\n  if (block.totalDifficulty) {\n    block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n  }\n  if (Array.isArray(block.transactions)) {\n    block.transactions.forEach(function (item) {\n      if (typeof item !== 'string' && !(item instanceof String)) {\n        return outputCeloTxFormatter(item);\n      }\n    });\n  }\n  return block;\n}\nexports.outputBlockFormatter = outputBlockFormatter;\nfunction hexToNumber(hex) {\n  if (hex) {\n    return new bignumber_js_1.default(hex).toNumber();\n  }\n  return undefined;\n}\nexports.hexToNumber = hexToNumber;\nfunction outputLogFormatter(log) {\n  // generate a custom log id\n  if (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string' && typeof log.logIndex === 'string') {\n    var shaId = (0, solidity_1.sha3)((0, address_1.trimLeading0x)(log.blockHash) + (0, address_1.trimLeading0x)(log.transactionHash) + (0, address_1.trimLeading0x)(log.logIndex));\n    log.id = 'log_' + (0, address_1.trimLeading0x)(shaId).substr(0, 8);\n  } else if (!log.id) {\n    log.id = null;\n  }\n  if (log.blockNumber !== null) {\n    log.blockNumber = hexToNumber(log.blockNumber);\n  }\n  if (log.transactionIndex !== null) {\n    log.transactionIndex = hexToNumber(log.transactionIndex);\n  }\n  if (log.logIndex !== null) {\n    log.logIndex = hexToNumber(log.logIndex);\n  }\n  if (log.address) {\n    log.address = (0, address_2.toChecksumAddress)(log.address);\n  }\n  return log;\n}\nexports.outputLogFormatter = outputLogFormatter;\nfunction outputBigNumberFormatter(hex) {\n  return new bignumber_js_1.default(hex).toString(10);\n}\nexports.outputBigNumberFormatter = outputBigNumberFormatter;\nfunction inputAddressFormatter(address) {\n  if (!address || address === '0x') {\n    return undefined;\n  }\n  if ((0, address_2.isValidAddress)(address)) {\n    return (0, address_1.ensureLeading0x)(address).toLocaleLowerCase();\n  }\n  throw new Error(\"Provided address \".concat(address, \" is invalid, the capitalization checksum test failed\"));\n}\nexports.inputAddressFormatter = inputAddressFormatter;\nfunction inputSignFormatter(data) {\n  return isHexStrict(data) ? data : utf8ToHex(data);\n}\nexports.inputSignFormatter = inputSignFormatter;\nfunction utf8ToHex(str) {\n  str = (0, utf8_1.encode)(str);\n  var hex = '';\n  // remove \\u0000 padding from either side\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split('').reverse().join('');\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split('').reverse().join('');\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    // if (code !== 0) {\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n    // }\n  }\n\n  return (0, address_1.ensureLeading0x)(hex);\n}\nfunction isHex(hex) {\n  return /^(-0x|0x)?[0-9a-f]*$/i.test(hex);\n}\nfunction isHexStrict(hex) {\n  return /^(-)?0x[0-9a-f]*$/i.test(hex);\n}\nfunction numberToHex(value) {\n  if (value) {\n    var numberValue = new bignumber_js_1.default(value);\n    var result = (0, address_1.ensureLeading0x)(new bignumber_js_1.default(value).toString(16));\n    // Seen in web3, copied just in case\n    return numberValue.lt(new bignumber_js_1.default(0)) ? \"-\".concat(result) : result;\n  }\n  return undefined;\n}\nfunction isPredefinedBlockNumber(blockNumber) {\n  return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","inputSignFormatter","inputAddressFormatter","outputBigNumberFormatter","outputLogFormatter","hexToNumber","outputBlockFormatter","outputBlockHeaderFormatter","inputBlockNumberFormatter","inputDefaultBlockNumberFormatter","outputCeloTxReceiptFormatter","outputCeloTxFormatter","inputCeloTxFormatter","address_1","require","address_2","solidity_1","bignumber_js_1","utf8_1","tx","_a","_b","_c","_d","from","toString","to","feeCurrency","gatewayFeeRecipient","data","ensureLeading0x","isHex","Error","gas","numberToHex","gasPrice","nonce","gatewayFee","keys","forEach","key","undefined","blockNumber","transactionIndex","isValidAddress","toChecksumAddress","receipt","cumulativeGasUsed","gasUsed","Array","isArray","logs","map","contractAddress","status","Boolean","parseInt","trimLeading0x","isPredefinedBlockNumber","isHexStrict","toLocaleLowerCase","blockHeader","gasLimit","size","timestamp","number","miner","block","difficulty","totalDifficulty","transactions","item","String","hex","default","toNumber","log","blockHash","transactionHash","logIndex","shaId","sha3","id","substr","address","concat","utf8ToHex","str","encode","replace","split","reverse","join","i","length","code","charCodeAt","n","test","numberValue","result","lt"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/connect/lib/utils/formatter.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inputSignFormatter = exports.inputAddressFormatter = exports.outputBigNumberFormatter = exports.outputLogFormatter = exports.hexToNumber = exports.outputBlockFormatter = exports.outputBlockHeaderFormatter = exports.inputBlockNumberFormatter = exports.inputDefaultBlockNumberFormatter = exports.outputCeloTxReceiptFormatter = exports.outputCeloTxFormatter = exports.inputCeloTxFormatter = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar address_2 = require(\"@celo/utils/lib/address\");\nvar solidity_1 = require(\"@celo/utils/lib/solidity\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar utf8_1 = require(\"utf8\");\n/**\n * Formats the input of a transaction and converts all values to HEX\n */\nfunction inputCeloTxFormatter(tx) {\n    var _a, _b, _c, _d;\n    tx.from = inputAddressFormatter((_a = tx.from) === null || _a === void 0 ? void 0 : _a.toString());\n    tx.to = inputAddressFormatter(tx.to);\n    tx.feeCurrency = inputAddressFormatter(tx.feeCurrency);\n    tx.gatewayFeeRecipient = inputAddressFormatter(tx.gatewayFeeRecipient);\n    if (tx.data) {\n        tx.data = (0, address_1.ensureLeading0x)(tx.data);\n    }\n    if (tx.data && !isHex(tx.data)) {\n        throw new Error('The data field must be HEX encoded data.');\n    }\n    tx.gas = numberToHex(tx.gas);\n    tx.gasPrice = numberToHex((_b = tx.gasPrice) === null || _b === void 0 ? void 0 : _b.toString());\n    tx.value = numberToHex((_c = tx.value) === null || _c === void 0 ? void 0 : _c.toString());\n    // @ts-ignore - nonce is defined as number, but uses as string (web3)\n    tx.nonce = numberToHex((_d = tx.nonce) === null || _d === void 0 ? void 0 : _d.toString());\n    tx.gatewayFee = numberToHex(tx.gatewayFee);\n    // @ts-ignore - prune undefines\n    Object.keys(tx).forEach(function (key) { return tx[key] === undefined && delete tx[key]; });\n    return tx;\n}\nexports.inputCeloTxFormatter = inputCeloTxFormatter;\nfunction outputCeloTxFormatter(tx) {\n    if (tx.blockNumber !== null) {\n        tx.blockNumber = hexToNumber(tx.blockNumber);\n    }\n    if (tx.transactionIndex !== null) {\n        tx.transactionIndex = hexToNumber(tx.transactionIndex);\n    }\n    tx.nonce = hexToNumber(tx.nonce);\n    tx.gas = hexToNumber(tx.gas);\n    tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n    tx.value = outputBigNumberFormatter(tx.value);\n    tx.gatewayFee = outputBigNumberFormatter(tx.gatewayFee);\n    tx.to =\n        tx.to && (0, address_2.isValidAddress)(tx.to)\n            ? // tx.to could be `0x0` or `null` while contract creation\n                (tx.to = (0, address_2.toChecksumAddress)(tx.to))\n            : null; // set to `null` if invalid address\n    if (tx.from) {\n        tx.from = (0, address_2.toChecksumAddress)(tx.from);\n    }\n    if (tx.feeCurrency) {\n        tx.feeCurrency = (0, address_2.toChecksumAddress)(tx.feeCurrency);\n    }\n    if (tx.gatewayFeeRecipient) {\n        tx.gatewayFeeRecipient = (0, address_2.toChecksumAddress)(tx.gatewayFeeRecipient);\n    }\n    return tx;\n}\nexports.outputCeloTxFormatter = outputCeloTxFormatter;\nfunction outputCeloTxReceiptFormatter(receipt) {\n    if (typeof receipt !== 'object') {\n        throw new Error('Received receipt is invalid: ' + receipt);\n    }\n    if (receipt.blockNumber !== null) {\n        receipt.blockNumber = hexToNumber(receipt.blockNumber);\n    }\n    if (receipt.transactionIndex !== null) {\n        receipt.transactionIndex = hexToNumber(receipt.transactionIndex);\n    }\n    receipt.cumulativeGasUsed = hexToNumber(receipt.cumulativeGasUsed);\n    receipt.gasUsed = hexToNumber(receipt.gasUsed);\n    if (Array.isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(outputLogFormatter);\n    }\n    if (receipt.contractAddress) {\n        receipt.contractAddress = (0, address_2.toChecksumAddress)(receipt.contractAddress);\n    }\n    if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n        receipt.status = Boolean(parseInt((0, address_1.trimLeading0x)(receipt.status), 10));\n    }\n    return receipt;\n}\nexports.outputCeloTxReceiptFormatter = outputCeloTxReceiptFormatter;\nfunction inputDefaultBlockNumberFormatter(blockNumber) {\n    if (blockNumber == null) {\n        blockNumber = 'latest';\n    }\n    return inputBlockNumberFormatter(blockNumber);\n}\nexports.inputDefaultBlockNumberFormatter = inputDefaultBlockNumberFormatter;\nfunction inputBlockNumberFormatter(blockNumber) {\n    if (blockNumber == null) {\n        return undefined;\n    }\n    if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n    if (blockNumber === 'genesis') {\n        return '0x0';\n    }\n    return isHexStrict(blockNumber.toString())\n        ? blockNumber.toString().toLocaleLowerCase()\n        : numberToHex(blockNumber.toString());\n}\nexports.inputBlockNumberFormatter = inputBlockNumberFormatter;\nfunction outputBlockHeaderFormatter(blockHeader) {\n    // transform to number\n    blockHeader.gasLimit = hexToNumber(blockHeader.gasLimit);\n    blockHeader.gasUsed = hexToNumber(blockHeader.gasUsed);\n    blockHeader.size = hexToNumber(blockHeader.size);\n    blockHeader.timestamp = hexToNumber(blockHeader.timestamp);\n    if (blockHeader.number !== null) {\n        blockHeader.number = hexToNumber(blockHeader.number);\n    }\n    if (blockHeader.miner) {\n        blockHeader.miner = (0, address_2.toChecksumAddress)(blockHeader.miner);\n    }\n    return blockHeader;\n}\nexports.outputBlockHeaderFormatter = outputBlockHeaderFormatter;\nfunction outputBlockFormatter(block) {\n    block = outputBlockHeaderFormatter(block);\n    if (block.difficulty) {\n        block.difficulty = outputBigNumberFormatter(block.difficulty);\n    }\n    if (block.totalDifficulty) {\n        block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n    }\n    if (Array.isArray(block.transactions)) {\n        block.transactions.forEach(function (item) {\n            if (typeof item !== 'string' && !(item instanceof String)) {\n                return outputCeloTxFormatter(item);\n            }\n        });\n    }\n    return block;\n}\nexports.outputBlockFormatter = outputBlockFormatter;\nfunction hexToNumber(hex) {\n    if (hex) {\n        return new bignumber_js_1.default(hex).toNumber();\n    }\n    return undefined;\n}\nexports.hexToNumber = hexToNumber;\nfunction outputLogFormatter(log) {\n    // generate a custom log id\n    if (typeof log.blockHash === 'string' &&\n        typeof log.transactionHash === 'string' &&\n        typeof log.logIndex === 'string') {\n        var shaId = (0, solidity_1.sha3)((0, address_1.trimLeading0x)(log.blockHash) +\n            (0, address_1.trimLeading0x)(log.transactionHash) +\n            (0, address_1.trimLeading0x)(log.logIndex));\n        log.id = 'log_' + (0, address_1.trimLeading0x)(shaId).substr(0, 8);\n    }\n    else if (!log.id) {\n        log.id = null;\n    }\n    if (log.blockNumber !== null) {\n        log.blockNumber = hexToNumber(log.blockNumber);\n    }\n    if (log.transactionIndex !== null) {\n        log.transactionIndex = hexToNumber(log.transactionIndex);\n    }\n    if (log.logIndex !== null) {\n        log.logIndex = hexToNumber(log.logIndex);\n    }\n    if (log.address) {\n        log.address = (0, address_2.toChecksumAddress)(log.address);\n    }\n    return log;\n}\nexports.outputLogFormatter = outputLogFormatter;\nfunction outputBigNumberFormatter(hex) {\n    return new bignumber_js_1.default(hex).toString(10);\n}\nexports.outputBigNumberFormatter = outputBigNumberFormatter;\nfunction inputAddressFormatter(address) {\n    if (!address || address === '0x') {\n        return undefined;\n    }\n    if ((0, address_2.isValidAddress)(address)) {\n        return (0, address_1.ensureLeading0x)(address).toLocaleLowerCase();\n    }\n    throw new Error(\"Provided address \".concat(address, \" is invalid, the capitalization checksum test failed\"));\n}\nexports.inputAddressFormatter = inputAddressFormatter;\nfunction inputSignFormatter(data) {\n    return isHexStrict(data) ? data : utf8ToHex(data);\n}\nexports.inputSignFormatter = inputSignFormatter;\nfunction utf8ToHex(str) {\n    str = (0, utf8_1.encode)(str);\n    var hex = '';\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split('').reverse().join('');\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split('').reverse().join('');\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return (0, address_1.ensureLeading0x)(hex);\n}\nfunction isHex(hex) {\n    return /^(-0x|0x)?[0-9a-f]*$/i.test(hex);\n}\nfunction isHexStrict(hex) {\n    return /^(-)?0x[0-9a-f]*$/i.test(hex);\n}\nfunction numberToHex(value) {\n    if (value) {\n        var numberValue = new bignumber_js_1.default(value);\n        var result = (0, address_1.ensureLeading0x)(new bignumber_js_1.default(value).toString(16));\n        // Seen in web3, copied just in case\n        return numberValue.lt(new bignumber_js_1.default(0)) ? \"-\".concat(result) : result;\n    }\n    return undefined;\n}\nfunction isPredefinedBlockNumber(blockNumber) {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n}\n//# sourceMappingURL=formatter.js.map"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,wBAAwB,GAAGJ,OAAO,CAACK,kBAAkB,GAAGL,OAAO,CAACM,WAAW,GAAGN,OAAO,CAACO,oBAAoB,GAAGP,OAAO,CAACQ,0BAA0B,GAAGR,OAAO,CAACS,yBAAyB,GAAGT,OAAO,CAACU,gCAAgC,GAAGV,OAAO,CAACW,4BAA4B,GAAGX,OAAO,CAACY,qBAAqB,GAAGZ,OAAO,CAACa,oBAAoB,GAAG,KAAK,CAAC;AAClZ,IAAIC,SAAS,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAIE,UAAU,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIG,cAAc,GAAGvB,eAAe,CAACoB,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7D,IAAII,MAAM,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACA;AACA;AACA,SAASF,oBAAoBA,CAACO,EAAE,EAAE;EAC9B,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAClBJ,EAAE,CAACK,IAAI,GAAGtB,qBAAqB,CAAC,CAACkB,EAAE,GAAGD,EAAE,CAACK,IAAI,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,QAAQ,CAAC,CAAC,CAAC;EAClGN,EAAE,CAACO,EAAE,GAAGxB,qBAAqB,CAACiB,EAAE,CAACO,EAAE,CAAC;EACpCP,EAAE,CAACQ,WAAW,GAAGzB,qBAAqB,CAACiB,EAAE,CAACQ,WAAW,CAAC;EACtDR,EAAE,CAACS,mBAAmB,GAAG1B,qBAAqB,CAACiB,EAAE,CAACS,mBAAmB,CAAC;EACtE,IAAIT,EAAE,CAACU,IAAI,EAAE;IACTV,EAAE,CAACU,IAAI,GAAG,CAAC,CAAC,EAAEhB,SAAS,CAACiB,eAAe,EAAEX,EAAE,CAACU,IAAI,CAAC;EACrD;EACA,IAAIV,EAAE,CAACU,IAAI,IAAI,CAACE,KAAK,CAACZ,EAAE,CAACU,IAAI,CAAC,EAAE;IAC5B,MAAM,IAAIG,KAAK,CAAC,0CAA0C,CAAC;EAC/D;EACAb,EAAE,CAACc,GAAG,GAAGC,WAAW,CAACf,EAAE,CAACc,GAAG,CAAC;EAC5Bd,EAAE,CAACgB,QAAQ,GAAGD,WAAW,CAAC,CAACb,EAAE,GAAGF,EAAE,CAACgB,QAAQ,MAAM,IAAI,IAAId,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,QAAQ,CAAC,CAAC,CAAC;EAChGN,EAAE,CAACnB,KAAK,GAAGkC,WAAW,CAAC,CAACZ,EAAE,GAAGH,EAAE,CAACnB,KAAK,MAAM,IAAI,IAAIsB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC1F;EACAN,EAAE,CAACiB,KAAK,GAAGF,WAAW,CAAC,CAACX,EAAE,GAAGJ,EAAE,CAACiB,KAAK,MAAM,IAAI,IAAIb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC1FN,EAAE,CAACkB,UAAU,GAAGH,WAAW,CAACf,EAAE,CAACkB,UAAU,CAAC;EAC1C;EACAxC,MAAM,CAACyC,IAAI,CAACnB,EAAE,CAAC,CAACoB,OAAO,CAAC,UAAUC,GAAG,EAAE;IAAE,OAAOrB,EAAE,CAACqB,GAAG,CAAC,KAAKC,SAAS,IAAI,OAAOtB,EAAE,CAACqB,GAAG,CAAC;EAAE,CAAC,CAAC;EAC3F,OAAOrB,EAAE;AACb;AACApB,OAAO,CAACa,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,qBAAqBA,CAACQ,EAAE,EAAE;EAC/B,IAAIA,EAAE,CAACuB,WAAW,KAAK,IAAI,EAAE;IACzBvB,EAAE,CAACuB,WAAW,GAAGrC,WAAW,CAACc,EAAE,CAACuB,WAAW,CAAC;EAChD;EACA,IAAIvB,EAAE,CAACwB,gBAAgB,KAAK,IAAI,EAAE;IAC9BxB,EAAE,CAACwB,gBAAgB,GAAGtC,WAAW,CAACc,EAAE,CAACwB,gBAAgB,CAAC;EAC1D;EACAxB,EAAE,CAACiB,KAAK,GAAG/B,WAAW,CAACc,EAAE,CAACiB,KAAK,CAAC;EAChCjB,EAAE,CAACc,GAAG,GAAG5B,WAAW,CAACc,EAAE,CAACc,GAAG,CAAC;EAC5Bd,EAAE,CAACgB,QAAQ,GAAGhC,wBAAwB,CAACgB,EAAE,CAACgB,QAAQ,CAAC;EACnDhB,EAAE,CAACnB,KAAK,GAAGG,wBAAwB,CAACgB,EAAE,CAACnB,KAAK,CAAC;EAC7CmB,EAAE,CAACkB,UAAU,GAAGlC,wBAAwB,CAACgB,EAAE,CAACkB,UAAU,CAAC;EACvDlB,EAAE,CAACO,EAAE,GACDP,EAAE,CAACO,EAAE,IAAI,CAAC,CAAC,EAAEX,SAAS,CAAC6B,cAAc,EAAEzB,EAAE,CAACO,EAAE,CAAC;EACvC;EACGP,EAAE,CAACO,EAAE,GAAG,CAAC,CAAC,EAAEX,SAAS,CAAC8B,iBAAiB,EAAE1B,EAAE,CAACO,EAAE,CAAC,GAClD,IAAI,CAAC,CAAC;EAChB,IAAIP,EAAE,CAACK,IAAI,EAAE;IACTL,EAAE,CAACK,IAAI,GAAG,CAAC,CAAC,EAAET,SAAS,CAAC8B,iBAAiB,EAAE1B,EAAE,CAACK,IAAI,CAAC;EACvD;EACA,IAAIL,EAAE,CAACQ,WAAW,EAAE;IAChBR,EAAE,CAACQ,WAAW,GAAG,CAAC,CAAC,EAAEZ,SAAS,CAAC8B,iBAAiB,EAAE1B,EAAE,CAACQ,WAAW,CAAC;EACrE;EACA,IAAIR,EAAE,CAACS,mBAAmB,EAAE;IACxBT,EAAE,CAACS,mBAAmB,GAAG,CAAC,CAAC,EAAEb,SAAS,CAAC8B,iBAAiB,EAAE1B,EAAE,CAACS,mBAAmB,CAAC;EACrF;EACA,OAAOT,EAAE;AACb;AACApB,OAAO,CAACY,qBAAqB,GAAGA,qBAAqB;AACrD,SAASD,4BAA4BA,CAACoC,OAAO,EAAE;EAC3C,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAId,KAAK,CAAC,+BAA+B,GAAGc,OAAO,CAAC;EAC9D;EACA,IAAIA,OAAO,CAACJ,WAAW,KAAK,IAAI,EAAE;IAC9BI,OAAO,CAACJ,WAAW,GAAGrC,WAAW,CAACyC,OAAO,CAACJ,WAAW,CAAC;EAC1D;EACA,IAAII,OAAO,CAACH,gBAAgB,KAAK,IAAI,EAAE;IACnCG,OAAO,CAACH,gBAAgB,GAAGtC,WAAW,CAACyC,OAAO,CAACH,gBAAgB,CAAC;EACpE;EACAG,OAAO,CAACC,iBAAiB,GAAG1C,WAAW,CAACyC,OAAO,CAACC,iBAAiB,CAAC;EAClED,OAAO,CAACE,OAAO,GAAG3C,WAAW,CAACyC,OAAO,CAACE,OAAO,CAAC;EAC9C,IAAIC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACK,IAAI,CAAC,EAAE;IAC7BL,OAAO,CAACK,IAAI,GAAGL,OAAO,CAACK,IAAI,CAACC,GAAG,CAAChD,kBAAkB,CAAC;EACvD;EACA,IAAI0C,OAAO,CAACO,eAAe,EAAE;IACzBP,OAAO,CAACO,eAAe,GAAG,CAAC,CAAC,EAAEtC,SAAS,CAAC8B,iBAAiB,EAAEC,OAAO,CAACO,eAAe,CAAC;EACvF;EACA,IAAI,OAAOP,OAAO,CAACQ,MAAM,KAAK,WAAW,IAAIR,OAAO,CAACQ,MAAM,KAAK,IAAI,EAAE;IAClER,OAAO,CAACQ,MAAM,GAAGC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE3C,SAAS,CAAC4C,aAAa,EAAEX,OAAO,CAACQ,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;EACxF;EACA,OAAOR,OAAO;AAClB;AACA/C,OAAO,CAACW,4BAA4B,GAAGA,4BAA4B;AACnE,SAASD,gCAAgCA,CAACiC,WAAW,EAAE;EACnD,IAAIA,WAAW,IAAI,IAAI,EAAE;IACrBA,WAAW,GAAG,QAAQ;EAC1B;EACA,OAAOlC,yBAAyB,CAACkC,WAAW,CAAC;AACjD;AACA3C,OAAO,CAACU,gCAAgC,GAAGA,gCAAgC;AAC3E,SAASD,yBAAyBA,CAACkC,WAAW,EAAE;EAC5C,IAAIA,WAAW,IAAI,IAAI,EAAE;IACrB,OAAOD,SAAS;EACpB;EACA,IAAIiB,uBAAuB,CAAChB,WAAW,CAAC,EAAE;IACtC,OAAOA,WAAW;EACtB;EACA,IAAIA,WAAW,KAAK,SAAS,EAAE;IAC3B,OAAO,KAAK;EAChB;EACA,OAAOiB,WAAW,CAACjB,WAAW,CAACjB,QAAQ,CAAC,CAAC,CAAC,GACpCiB,WAAW,CAACjB,QAAQ,CAAC,CAAC,CAACmC,iBAAiB,CAAC,CAAC,GAC1C1B,WAAW,CAACQ,WAAW,CAACjB,QAAQ,CAAC,CAAC,CAAC;AAC7C;AACA1B,OAAO,CAACS,yBAAyB,GAAGA,yBAAyB;AAC7D,SAASD,0BAA0BA,CAACsD,WAAW,EAAE;EAC7C;EACAA,WAAW,CAACC,QAAQ,GAAGzD,WAAW,CAACwD,WAAW,CAACC,QAAQ,CAAC;EACxDD,WAAW,CAACb,OAAO,GAAG3C,WAAW,CAACwD,WAAW,CAACb,OAAO,CAAC;EACtDa,WAAW,CAACE,IAAI,GAAG1D,WAAW,CAACwD,WAAW,CAACE,IAAI,CAAC;EAChDF,WAAW,CAACG,SAAS,GAAG3D,WAAW,CAACwD,WAAW,CAACG,SAAS,CAAC;EAC1D,IAAIH,WAAW,CAACI,MAAM,KAAK,IAAI,EAAE;IAC7BJ,WAAW,CAACI,MAAM,GAAG5D,WAAW,CAACwD,WAAW,CAACI,MAAM,CAAC;EACxD;EACA,IAAIJ,WAAW,CAACK,KAAK,EAAE;IACnBL,WAAW,CAACK,KAAK,GAAG,CAAC,CAAC,EAAEnD,SAAS,CAAC8B,iBAAiB,EAAEgB,WAAW,CAACK,KAAK,CAAC;EAC3E;EACA,OAAOL,WAAW;AACtB;AACA9D,OAAO,CAACQ,0BAA0B,GAAGA,0BAA0B;AAC/D,SAASD,oBAAoBA,CAAC6D,KAAK,EAAE;EACjCA,KAAK,GAAG5D,0BAA0B,CAAC4D,KAAK,CAAC;EACzC,IAAIA,KAAK,CAACC,UAAU,EAAE;IAClBD,KAAK,CAACC,UAAU,GAAGjE,wBAAwB,CAACgE,KAAK,CAACC,UAAU,CAAC;EACjE;EACA,IAAID,KAAK,CAACE,eAAe,EAAE;IACvBF,KAAK,CAACE,eAAe,GAAGlE,wBAAwB,CAACgE,KAAK,CAACE,eAAe,CAAC;EAC3E;EACA,IAAIpB,KAAK,CAACC,OAAO,CAACiB,KAAK,CAACG,YAAY,CAAC,EAAE;IACnCH,KAAK,CAACG,YAAY,CAAC/B,OAAO,CAAC,UAAUgC,IAAI,EAAE;MACvC,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,EAAEA,IAAI,YAAYC,MAAM,CAAC,EAAE;QACvD,OAAO7D,qBAAqB,CAAC4D,IAAI,CAAC;MACtC;IACJ,CAAC,CAAC;EACN;EACA,OAAOJ,KAAK;AAChB;AACApE,OAAO,CAACO,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,WAAWA,CAACoE,GAAG,EAAE;EACtB,IAAIA,GAAG,EAAE;IACL,OAAO,IAAIxD,cAAc,CAACyD,OAAO,CAACD,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;EACrD;EACA,OAAOlC,SAAS;AACpB;AACA1C,OAAO,CAACM,WAAW,GAAGA,WAAW;AACjC,SAASD,kBAAkBA,CAACwE,GAAG,EAAE;EAC7B;EACA,IAAI,OAAOA,GAAG,CAACC,SAAS,KAAK,QAAQ,IACjC,OAAOD,GAAG,CAACE,eAAe,KAAK,QAAQ,IACvC,OAAOF,GAAG,CAACG,QAAQ,KAAK,QAAQ,EAAE;IAClC,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAEhE,UAAU,CAACiE,IAAI,EAAE,CAAC,CAAC,EAAEpE,SAAS,CAAC4C,aAAa,EAAEmB,GAAG,CAACC,SAAS,CAAC,GACxE,CAAC,CAAC,EAAEhE,SAAS,CAAC4C,aAAa,EAAEmB,GAAG,CAACE,eAAe,CAAC,GACjD,CAAC,CAAC,EAAEjE,SAAS,CAAC4C,aAAa,EAAEmB,GAAG,CAACG,QAAQ,CAAC,CAAC;IAC/CH,GAAG,CAACM,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,EAAErE,SAAS,CAAC4C,aAAa,EAAEuB,KAAK,CAAC,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACtE,CAAC,MACI,IAAI,CAACP,GAAG,CAACM,EAAE,EAAE;IACdN,GAAG,CAACM,EAAE,GAAG,IAAI;EACjB;EACA,IAAIN,GAAG,CAAClC,WAAW,KAAK,IAAI,EAAE;IAC1BkC,GAAG,CAAClC,WAAW,GAAGrC,WAAW,CAACuE,GAAG,CAAClC,WAAW,CAAC;EAClD;EACA,IAAIkC,GAAG,CAACjC,gBAAgB,KAAK,IAAI,EAAE;IAC/BiC,GAAG,CAACjC,gBAAgB,GAAGtC,WAAW,CAACuE,GAAG,CAACjC,gBAAgB,CAAC;EAC5D;EACA,IAAIiC,GAAG,CAACG,QAAQ,KAAK,IAAI,EAAE;IACvBH,GAAG,CAACG,QAAQ,GAAG1E,WAAW,CAACuE,GAAG,CAACG,QAAQ,CAAC;EAC5C;EACA,IAAIH,GAAG,CAACQ,OAAO,EAAE;IACbR,GAAG,CAACQ,OAAO,GAAG,CAAC,CAAC,EAAErE,SAAS,CAAC8B,iBAAiB,EAAE+B,GAAG,CAACQ,OAAO,CAAC;EAC/D;EACA,OAAOR,GAAG;AACd;AACA7E,OAAO,CAACK,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,wBAAwBA,CAACsE,GAAG,EAAE;EACnC,OAAO,IAAIxD,cAAc,CAACyD,OAAO,CAACD,GAAG,CAAC,CAAChD,QAAQ,CAAC,EAAE,CAAC;AACvD;AACA1B,OAAO,CAACI,wBAAwB,GAAGA,wBAAwB;AAC3D,SAASD,qBAAqBA,CAACkF,OAAO,EAAE;EACpC,IAAI,CAACA,OAAO,IAAIA,OAAO,KAAK,IAAI,EAAE;IAC9B,OAAO3C,SAAS;EACpB;EACA,IAAI,CAAC,CAAC,EAAE1B,SAAS,CAAC6B,cAAc,EAAEwC,OAAO,CAAC,EAAE;IACxC,OAAO,CAAC,CAAC,EAAEvE,SAAS,CAACiB,eAAe,EAAEsD,OAAO,CAAC,CAACxB,iBAAiB,CAAC,CAAC;EACtE;EACA,MAAM,IAAI5B,KAAK,CAAC,mBAAmB,CAACqD,MAAM,CAACD,OAAO,EAAE,sDAAsD,CAAC,CAAC;AAChH;AACArF,OAAO,CAACG,qBAAqB,GAAGA,qBAAqB;AACrD,SAASD,kBAAkBA,CAAC4B,IAAI,EAAE;EAC9B,OAAO8B,WAAW,CAAC9B,IAAI,CAAC,GAAGA,IAAI,GAAGyD,SAAS,CAACzD,IAAI,CAAC;AACrD;AACA9B,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASqF,SAASA,CAACC,GAAG,EAAE;EACpBA,GAAG,GAAG,CAAC,CAAC,EAAErE,MAAM,CAACsE,MAAM,EAAED,GAAG,CAAC;EAC7B,IAAId,GAAG,GAAG,EAAE;EACZ;EACAc,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;EACrCF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACtCL,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;EACrCF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,GAAG,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIE,IAAI,GAAGR,GAAG,CAACS,UAAU,CAACH,CAAC,CAAC;IAC5B;IACA,IAAII,CAAC,GAAGF,IAAI,CAACtE,QAAQ,CAAC,EAAE,CAAC;IACzBgD,GAAG,IAAIwB,CAAC,CAACH,MAAM,GAAG,CAAC,GAAG,GAAG,GAAGG,CAAC,GAAGA,CAAC;IACjC;EACJ;;EACA,OAAO,CAAC,CAAC,EAAEpF,SAAS,CAACiB,eAAe,EAAE2C,GAAG,CAAC;AAC9C;AACA,SAAS1C,KAAKA,CAAC0C,GAAG,EAAE;EAChB,OAAO,uBAAuB,CAACyB,IAAI,CAACzB,GAAG,CAAC;AAC5C;AACA,SAASd,WAAWA,CAACc,GAAG,EAAE;EACtB,OAAO,oBAAoB,CAACyB,IAAI,CAACzB,GAAG,CAAC;AACzC;AACA,SAASvC,WAAWA,CAAClC,KAAK,EAAE;EACxB,IAAIA,KAAK,EAAE;IACP,IAAImG,WAAW,GAAG,IAAIlF,cAAc,CAACyD,OAAO,CAAC1E,KAAK,CAAC;IACnD,IAAIoG,MAAM,GAAG,CAAC,CAAC,EAAEvF,SAAS,CAACiB,eAAe,EAAE,IAAIb,cAAc,CAACyD,OAAO,CAAC1E,KAAK,CAAC,CAACyB,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3F;IACA,OAAO0E,WAAW,CAACE,EAAE,CAAC,IAAIpF,cAAc,CAACyD,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAACW,MAAM,CAACe,MAAM,CAAC,GAAGA,MAAM;EACtF;EACA,OAAO3D,SAAS;AACpB;AACA,SAASiB,uBAAuBA,CAAChB,WAAW,EAAE;EAC1C,OAAOA,WAAW,KAAK,QAAQ,IAAIA,WAAW,KAAK,SAAS,IAAIA,WAAW,KAAK,UAAU;AAC9F"},"metadata":{},"sourceType":"script"}