{"ast":null,"code":"import{useCelo}from'@celo/react-celo';import{JSBI,Percent,TokenAmount}from'@ubeswap/sdk';import{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import{usePair}from'../../data/Reserves';import{useTotalSupply}from'../../data/TotalSupply';import{tryParseAmount}from'../swap/hooks';import{useTokenBalances}from'../wallet/hooks';import{Field,typeInput}from'./actions';export function useBurnState(){return useSelector(state=>state.burn);}export function useDerivedBurnInfo(currencyA,currencyB){var _pair$liquidityToken$,_pair$liquidityToken;const{address:account}=useCelo();const{independentField,typedValue}=useBurnState();// pair + totalsupply\nconst[,pair]=usePair(currencyA,currencyB);// balances\nconst relevantTokenBalances=useTokenBalances(account!==null&&account!==void 0?account:undefined,[pair===null||pair===void 0?void 0:pair.liquidityToken]);const userLiquidity=relevantTokenBalances===null||relevantTokenBalances===void 0?void 0:relevantTokenBalances[(_pair$liquidityToken$=pair===null||pair===void 0?void 0:(_pair$liquidityToken=pair.liquidityToken)===null||_pair$liquidityToken===void 0?void 0:_pair$liquidityToken.address)!==null&&_pair$liquidityToken$!==void 0?_pair$liquidityToken$:''];const[tokenA,tokenB]=[currencyA,currencyB];const tokens={[Field.CURRENCY_A]:tokenA,[Field.CURRENCY_B]:tokenB,[Field.LIQUIDITY]:pair===null||pair===void 0?void 0:pair.liquidityToken};// liquidity values\nconst totalSupply=useTotalSupply(pair===null||pair===void 0?void 0:pair.liquidityToken);const liquidityValueA=pair&&totalSupply&&userLiquidity&&tokenA&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenA,pair.getLiquidityValue(tokenA,totalSupply,userLiquidity,false).raw):undefined;const liquidityValueB=pair&&totalSupply&&userLiquidity&&tokenB&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenB,pair.getLiquidityValue(tokenB,totalSupply,userLiquidity,false).raw):undefined;const liquidityValues={[Field.CURRENCY_A]:liquidityValueA,[Field.CURRENCY_B]:liquidityValueB};let percentToRemove=new Percent('0','100');// user specified a %\nif(independentField===Field.LIQUIDITY_PERCENT){percentToRemove=new Percent(typedValue,'100');}// user specified a specific amount of liquidity tokens\nelse if(independentField===Field.LIQUIDITY){if(pair!==null&&pair!==void 0&&pair.liquidityToken){const independentAmount=tryParseAmount(typedValue,pair.liquidityToken);if(independentAmount&&userLiquidity&&!independentAmount.greaterThan(userLiquidity)){percentToRemove=new Percent(independentAmount.raw,userLiquidity.raw);}}}// user specified a specific amount of token a or b\nelse{if(tokens[independentField]){const independentAmount=tryParseAmount(typedValue,tokens[independentField]);const liquidityValue=liquidityValues[independentField];if(independentAmount&&liquidityValue&&!independentAmount.greaterThan(liquidityValue)){percentToRemove=new Percent(independentAmount.raw,liquidityValue.raw);}}}const parsedAmounts={[Field.LIQUIDITY_PERCENT]:percentToRemove,[Field.LIQUIDITY]:userLiquidity&&percentToRemove&&percentToRemove.greaterThan('0')?new TokenAmount(userLiquidity.token,percentToRemove.multiply(userLiquidity.raw).quotient):undefined,[Field.CURRENCY_A]:tokenA&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueA?new TokenAmount(tokenA,percentToRemove.multiply(liquidityValueA.raw).quotient):undefined,[Field.CURRENCY_B]:tokenB&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueB?new TokenAmount(tokenB,percentToRemove.multiply(liquidityValueB.raw).quotient):undefined};let error;if(!account){error='Connect Wallet';}if(!parsedAmounts[Field.LIQUIDITY]||!parsedAmounts[Field.CURRENCY_A]||!parsedAmounts[Field.CURRENCY_B]){var _error;error=(_error=error)!==null&&_error!==void 0?_error:'Enter an amount';}return{pair,parsedAmounts,error};}export function useBurnActionHandlers(){const dispatch=useDispatch();const onUserInput=useCallback((field,typedValue)=>{dispatch(typeInput({field,typedValue}));},[dispatch]);return{onUserInput};}","map":{"version":3,"names":["useCelo","JSBI","Percent","TokenAmount","useCallback","useDispatch","useSelector","usePair","useTotalSupply","tryParseAmount","useTokenBalances","Field","typeInput","useBurnState","state","burn","useDerivedBurnInfo","currencyA","currencyB","_pair$liquidityToken$","_pair$liquidityToken","address","account","independentField","typedValue","pair","relevantTokenBalances","undefined","liquidityToken","userLiquidity","tokenA","tokenB","tokens","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","liquidityValueA","greaterThanOrEqual","raw","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","greaterThan","liquidityValue","parsedAmounts","token","multiply","quotient","error","_error","useBurnActionHandlers","dispatch","onUserInput","field"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/burn/hooks.ts"],"sourcesContent":["import { useCelo } from '@celo/react-celo'\nimport { JSBI, Pair, Percent, Token, TokenAmount } from '@ubeswap/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Token | undefined,\n  currencyB: Token | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  }\n  error?: string\n} {\n  const { address: account } = useCelo()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [currencyA as Token, currencyB as Token]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput,\n  }\n}\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,kBAAkB,CAC1C,OAASC,IAAI,CAAQC,OAAO,CAASC,WAAW,KAAQ,cAAc,CACtE,OAASC,WAAW,KAAQ,OAAO,CACnC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,OAAO,KAAQ,qBAAqB,CAC7C,OAASC,cAAc,KAAQ,wBAAwB,CAEvD,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,gBAAgB,KAAQ,iBAAiB,CAClD,OAASC,KAAK,CAAEC,SAAS,KAAQ,WAAW,CAE5C,MAAO,SAAS,CAAAC,YAAYA,CAAA,CAAqB,CAC/C,MAAO,CAAAP,WAAW,CAA8BQ,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CACvE,CAEA,MAAO,SAAS,CAAAC,kBAAkBA,CAChCC,SAA4B,CAC5BC,SAA4B,CAU5B,KAAAC,qBAAA,CAAAC,oBAAA,CACA,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGtB,OAAO,CAAC,CAAC,CAEtC,KAAM,CAAEuB,gBAAgB,CAAEC,UAAW,CAAC,CAAGX,YAAY,CAAC,CAAC,CAEvD;AACA,KAAM,EAAGY,IAAI,CAAC,CAAGlB,OAAO,CAACU,SAAS,CAAEC,SAAS,CAAC,CAE9C;AACA,KAAM,CAAAQ,qBAAqB,CAAGhB,gBAAgB,CAACY,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAIK,SAAS,CAAE,CAACF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEG,cAAc,CAAC,CAAC,CAC5F,KAAM,CAAAC,aAAsC,CAAGH,qBAAqB,SAArBA,qBAAqB,iBAArBA,qBAAqB,EAAAP,qBAAA,CAAGM,IAAI,SAAJA,IAAI,kBAAAL,oBAAA,CAAJK,IAAI,CAAEG,cAAc,UAAAR,oBAAA,iBAApBA,oBAAA,CAAsBC,OAAO,UAAAF,qBAAA,UAAAA,qBAAA,CAAI,EAAE,CAAC,CAE3G,KAAM,CAACW,MAAM,CAAEC,MAAM,CAAC,CAAG,CAACd,SAAS,CAAWC,SAAS,CAAU,CACjE,KAAM,CAAAc,MAAM,CAAG,CACb,CAACrB,KAAK,CAACsB,UAAU,EAAGH,MAAM,CAC1B,CAACnB,KAAK,CAACuB,UAAU,EAAGH,MAAM,CAC1B,CAACpB,KAAK,CAACwB,SAAS,EAAGV,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEG,cAC3B,CAAC,CAED;AACA,KAAM,CAAAQ,WAAW,CAAG5B,cAAc,CAACiB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEG,cAAc,CAAC,CACxD,KAAM,CAAAS,eAAe,CACnBZ,IAAI,EACJW,WAAW,EACXP,aAAa,EACbC,MAAM,EACN;AACA7B,IAAI,CAACqC,kBAAkB,CAACF,WAAW,CAACG,GAAG,CAAEV,aAAa,CAACU,GAAG,CAAC,CACvD,GAAI,CAAApC,WAAW,CAAC2B,MAAM,CAAEL,IAAI,CAACe,iBAAiB,CAACV,MAAM,CAAEM,WAAW,CAAEP,aAAa,CAAE,KAAK,CAAC,CAACU,GAAG,CAAC,CAC9FZ,SAAS,CACf,KAAM,CAAAc,eAAe,CACnBhB,IAAI,EACJW,WAAW,EACXP,aAAa,EACbE,MAAM,EACN;AACA9B,IAAI,CAACqC,kBAAkB,CAACF,WAAW,CAACG,GAAG,CAAEV,aAAa,CAACU,GAAG,CAAC,CACvD,GAAI,CAAApC,WAAW,CAAC4B,MAAM,CAAEN,IAAI,CAACe,iBAAiB,CAACT,MAAM,CAAEK,WAAW,CAAEP,aAAa,CAAE,KAAK,CAAC,CAACU,GAAG,CAAC,CAC9FZ,SAAS,CACf,KAAM,CAAAe,eAAuF,CAAG,CAC9F,CAAC/B,KAAK,CAACsB,UAAU,EAAGI,eAAe,CACnC,CAAC1B,KAAK,CAACuB,UAAU,EAAGO,eACtB,CAAC,CAED,GAAI,CAAAE,eAAwB,CAAG,GAAI,CAAAzC,OAAO,CAAC,GAAG,CAAE,KAAK,CAAC,CACtD;AACA,GAAIqB,gBAAgB,GAAKZ,KAAK,CAACiC,iBAAiB,CAAE,CAChDD,eAAe,CAAG,GAAI,CAAAzC,OAAO,CAACsB,UAAU,CAAE,KAAK,CAAC,CAClD,CACA;AAAA,IACK,IAAID,gBAAgB,GAAKZ,KAAK,CAACwB,SAAS,CAAE,CAC7C,GAAIV,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEG,cAAc,CAAE,CACxB,KAAM,CAAAiB,iBAAiB,CAAGpC,cAAc,CAACe,UAAU,CAAEC,IAAI,CAACG,cAAc,CAAC,CACzE,GAAIiB,iBAAiB,EAAIhB,aAAa,EAAI,CAACgB,iBAAiB,CAACC,WAAW,CAACjB,aAAa,CAAC,CAAE,CACvFc,eAAe,CAAG,GAAI,CAAAzC,OAAO,CAAC2C,iBAAiB,CAACN,GAAG,CAAEV,aAAa,CAACU,GAAG,CAAC,CACzE,CACF,CACF,CACA;AAAA,IACK,CACH,GAAIP,MAAM,CAACT,gBAAgB,CAAC,CAAE,CAC5B,KAAM,CAAAsB,iBAAiB,CAAGpC,cAAc,CAACe,UAAU,CAAEQ,MAAM,CAACT,gBAAgB,CAAC,CAAC,CAC9E,KAAM,CAAAwB,cAAc,CAAGL,eAAe,CAACnB,gBAAgB,CAAC,CACxD,GAAIsB,iBAAiB,EAAIE,cAAc,EAAI,CAACF,iBAAiB,CAACC,WAAW,CAACC,cAAc,CAAC,CAAE,CACzFJ,eAAe,CAAG,GAAI,CAAAzC,OAAO,CAAC2C,iBAAiB,CAACN,GAAG,CAAEQ,cAAc,CAACR,GAAG,CAAC,CAC1E,CACF,CACF,CAEA,KAAM,CAAAS,aAKL,CAAG,CACF,CAACrC,KAAK,CAACiC,iBAAiB,EAAGD,eAAe,CAC1C,CAAChC,KAAK,CAACwB,SAAS,EACdN,aAAa,EAAIc,eAAe,EAAIA,eAAe,CAACG,WAAW,CAAC,GAAG,CAAC,CAChE,GAAI,CAAA3C,WAAW,CAAC0B,aAAa,CAACoB,KAAK,CAAEN,eAAe,CAACO,QAAQ,CAACrB,aAAa,CAACU,GAAG,CAAC,CAACY,QAAQ,CAAC,CAC1FxB,SAAS,CACf,CAAChB,KAAK,CAACsB,UAAU,EACfH,MAAM,EAAIa,eAAe,EAAIA,eAAe,CAACG,WAAW,CAAC,GAAG,CAAC,EAAIT,eAAe,CAC5E,GAAI,CAAAlC,WAAW,CAAC2B,MAAM,CAAEa,eAAe,CAACO,QAAQ,CAACb,eAAe,CAACE,GAAG,CAAC,CAACY,QAAQ,CAAC,CAC/ExB,SAAS,CACf,CAAChB,KAAK,CAACuB,UAAU,EACfH,MAAM,EAAIY,eAAe,EAAIA,eAAe,CAACG,WAAW,CAAC,GAAG,CAAC,EAAIL,eAAe,CAC5E,GAAI,CAAAtC,WAAW,CAAC4B,MAAM,CAAEY,eAAe,CAACO,QAAQ,CAACT,eAAe,CAACF,GAAG,CAAC,CAACY,QAAQ,CAAC,CAC/ExB,SACR,CAAC,CAED,GAAI,CAAAyB,KAAyB,CAC7B,GAAI,CAAC9B,OAAO,CAAE,CACZ8B,KAAK,CAAG,gBAAgB,CAC1B,CAEA,GAAI,CAACJ,aAAa,CAACrC,KAAK,CAACwB,SAAS,CAAC,EAAI,CAACa,aAAa,CAACrC,KAAK,CAACsB,UAAU,CAAC,EAAI,CAACe,aAAa,CAACrC,KAAK,CAACuB,UAAU,CAAC,CAAE,KAAAmB,MAAA,CAC3GD,KAAK,EAAAC,MAAA,CAAGD,KAAK,UAAAC,MAAA,UAAAA,MAAA,CAAI,iBAAiB,CACpC,CAEA,MAAO,CAAE5B,IAAI,CAAEuB,aAAa,CAAEI,KAAM,CAAC,CACvC,CAEA,MAAO,SAAS,CAAAE,qBAAqBA,CAAA,CAEnC,CACA,KAAM,CAAAC,QAAQ,CAAGlD,WAAW,CAAc,CAAC,CAE3C,KAAM,CAAAmD,WAAW,CAAGpD,WAAW,CAC7B,CAACqD,KAAY,CAAEjC,UAAkB,GAAK,CACpC+B,QAAQ,CAAC3C,SAAS,CAAC,CAAE6C,KAAK,CAAEjC,UAAW,CAAC,CAAC,CAAC,CAC5C,CAAC,CACD,CAAC+B,QAAQ,CACX,CAAC,CAED,MAAO,CACLC,WACF,CAAC,CACH"},"metadata":{},"sourceType":"module"}