{"ast":null,"code":"import _asyncToGenerator from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useCelo,useProvider}from'@celo/react-celo';import{Percent}from'@ubeswap/sdk';import{useDoTransaction}from'components/swap/routing';import React,{useCallback,useContext,useState}from'react';import{ArrowDown,Plus}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ThemeContext}from'styled-components';import{ButtonConfirmed,ButtonError,ButtonLight,ButtonPrimary}from'../../components/Button';import{BlueCard,LightCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Column';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import CurrencyLogo from'../../components/CurrencyLogo';import DoubleCurrencyLogo from'../../components/DoubleLogo';import{AddRemoveTabs}from'../../components/NavigationTabs';import{MinimalPositionCard}from'../../components/PositionCard';import Row,{RowBetween,RowFixed}from'../../components/Row';import Slider from'../../components/Slider';import{Dots}from'../../components/swap/styleds';import TransactionConfirmationModal,{ConfirmationModalContent}from'../../components/TransactionConfirmationModal';import{ROUTER_ADDRESS}from'../../constants';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import{usePairContract}from'../../hooks/useContract';import useTransactionDeadline from'../../hooks/useTransactionDeadline';import{Field}from'../../state/burn/actions';import{useBurnActionHandlers,useBurnState,useDerivedBurnInfo}from'../../state/burn/hooks';import{useUserSlippageTolerance}from'../../state/user/hooks';import{TYPE}from'../../theme';import{calculateSlippageAmount,getRouterContract}from'../../utils';import{currencyId}from'../../utils/currencyId';import useDebouncedChangeHandler from'../../utils/useDebouncedChangeHandler';import AppBody from'../AppBody';import{ClickableText,MaxButton,Wrapper}from'../Pool/styleds';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function RemoveLiquidity(_ref){var _useCurrency,_useCurrency2,_parsedAmounts$Field$,_parsedAmounts$Field$2,_parsedAmounts$Field$3,_parsedAmounts$Field$4,_parsedAmounts$Field$5,_parsedAmounts$Field$6,_parsedAmounts$Field$7,_pair$liquidityToken,_parsedAmounts$Field$11,_parsedAmounts$Field$12;let{history,match:{params:{currencyIdA,currencyIdB}}}=_ref;const[currencyA,currencyB]=[(_useCurrency=useCurrency(currencyIdA))!==null&&_useCurrency!==void 0?_useCurrency:undefined,(_useCurrency2=useCurrency(currencyIdB))!==null&&_useCurrency2!==void 0?_useCurrency2:undefined];const{address:account,network,connect}=useCelo();const library=useProvider();const chainId=network.chainId;const[tokenA,tokenB]=[currencyA,currencyB];const theme=useContext(ThemeContext);// toggle wallet when disconnected\n// burn state\nconst{independentField,typedValue}=useBurnState();const{pair,parsedAmounts,error}=useDerivedBurnInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined);const{onUserInput:_onUserInput}=useBurnActionHandlers();const isValid=!error;// modal and loading\nconst[showConfirm,setShowConfirm]=useState(false);const[showDetailed,setShowDetailed]=useState(false);const[attemptingTxn,setAttemptingTxn]=useState(false);// clicked confirm\n// txn values\nconst[txHash,setTxHash]=useState('');const deadline=useTransactionDeadline();const[allowedSlippage]=useUserSlippageTolerance();const formattedAmounts={[Field.LIQUIDITY_PERCENT]:parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')?'0':parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1','100'))?'<1':parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),[Field.LIQUIDITY]:independentField===Field.LIQUIDITY?typedValue:(_parsedAmounts$Field$=(_parsedAmounts$Field$2=parsedAmounts[Field.LIQUIDITY])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6))!==null&&_parsedAmounts$Field$!==void 0?_parsedAmounts$Field$:'',[Field.CURRENCY_A]:independentField===Field.CURRENCY_A?typedValue:(_parsedAmounts$Field$3=(_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.toSignificant(6))!==null&&_parsedAmounts$Field$3!==void 0?_parsedAmounts$Field$3:'',[Field.CURRENCY_B]:independentField===Field.CURRENCY_B?typedValue:(_parsedAmounts$Field$5=(_parsedAmounts$Field$6=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$6===void 0?void 0:_parsedAmounts$Field$6.toSignificant(6))!==null&&_parsedAmounts$Field$5!==void 0?_parsedAmounts$Field$5:''};const atMaxAmount=(_parsedAmounts$Field$7=parsedAmounts[Field.LIQUIDITY_PERCENT])===null||_parsedAmounts$Field$7===void 0?void 0:_parsedAmounts$Field$7.equalTo(new Percent('1'));// pair contract\nconst pairContract=usePairContract(pair===null||pair===void 0?void 0:(_pair$liquidityToken=pair.liquidityToken)===null||_pair$liquidityToken===void 0?void 0:_pair$liquidityToken.address);// allowance handling\nconst[signatureData,setSignatureData]=useState(null);const[approval,approveCallback]=useApproveCallback(parsedAmounts[Field.LIQUIDITY],ROUTER_ADDRESS);function onAttemptToApprove(){return _onAttemptToApprove.apply(this,arguments);}// wrapped onUserInput to clear signatures\nfunction _onAttemptToApprove(){_onAttemptToApprove=_asyncToGenerator(function*(){if(!pairContract||!pair||!library||!deadline)throw new Error('missing dependencies');const liquidityAmount=parsedAmounts[Field.LIQUIDITY];if(!liquidityAmount)throw new Error('missing liquidity amount');approveCallback();});return _onAttemptToApprove.apply(this,arguments);}const onUserInput=useCallback((field,typedValue)=>{setSignatureData(null);return _onUserInput(field,typedValue);},[_onUserInput]);const onLiquidityInput=useCallback(typedValue=>onUserInput(Field.LIQUIDITY,typedValue),[onUserInput]);const onCurrencyAInput=useCallback(typedValue=>onUserInput(Field.CURRENCY_A,typedValue),[onUserInput]);const onCurrencyBInput=useCallback(typedValue=>onUserInput(Field.CURRENCY_B,typedValue),[onUserInput]);// tx sending\nconst doTransaction=useDoTransaction();function onRemove(){return _onRemove.apply(this,arguments);}function _onRemove(){_onRemove=_asyncToGenerator(function*(){if(!chainId||!library||!account||!deadline)throw new Error('missing dependencies');const{[Field.CURRENCY_A]:currencyAmountA,[Field.CURRENCY_B]:currencyAmountB}=parsedAmounts;if(!currencyAmountA||!currencyAmountB){throw new Error('missing currency amounts');}const router=getRouterContract(chainId,library,account);const amountsMin={[Field.CURRENCY_A]:calculateSlippageAmount(currencyAmountA,allowedSlippage)[0],[Field.CURRENCY_B]:calculateSlippageAmount(currencyAmountB,allowedSlippage)[0]};if(!currencyA||!currencyB)throw new Error('missing tokens');const liquidityAmount=parsedAmounts[Field.LIQUIDITY];if(!liquidityAmount)throw new Error('missing liquidity amount');if(!tokenA||!tokenB)throw new Error('could not wrap');// we have approval, use normal remove liquidity\nif(approval!==ApprovalState.APPROVED){throw new Error('Attempting to confirm without approval or a signature. Please contact support.');}// removeLiquidity\nsetAttemptingTxn(true);try{var _parsedAmounts$Field$13,_parsedAmounts$Field$14;const response=yield doTransaction(router,'removeLiquidity',{args:[tokenA.address,tokenB.address,liquidityAmount.raw.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadline.toHexString()],summary:'Remove '+((_parsedAmounts$Field$13=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$13===void 0?void 0:_parsedAmounts$Field$13.toSignificant(3))+' '+(currencyA===null||currencyA===void 0?void 0:currencyA.symbol)+' and '+((_parsedAmounts$Field$14=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$14===void 0?void 0:_parsedAmounts$Field$14.toSignificant(3))+' '+(currencyB===null||currencyB===void 0?void 0:currencyB.symbol)});setAttemptingTxn(false);setTxHash(response.hash);ReactGA.event({category:'Liquidity',action:'Remove',label:[currencyA===null||currencyA===void 0?void 0:currencyA.symbol,currencyB===null||currencyB===void 0?void 0:currencyB.symbol].join('/')});}catch(error){setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\nconsole.error(error);}});return _onRemove.apply(this,arguments);}function modalHeader(){var _parsedAmounts$Field$8,_parsedAmounts$Field$9;return/*#__PURE__*/_jsxs(AutoColumn,{gap:'md',style:{marginTop:'20px'},children:[/*#__PURE__*/_jsxs(RowBetween,{align:\"flex-end\",children:[/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,children:(_parsedAmounts$Field$8=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$8===void 0?void 0:_parsedAmounts$Field$8.toSignificant(6)}),/*#__PURE__*/_jsxs(RowFixed,{gap:\"4px\",children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencyA,size:'24px'}),/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,style:{marginLeft:'10px'},children:currencyA===null||currencyA===void 0?void 0:currencyA.symbol})]})]}),/*#__PURE__*/_jsx(RowFixed,{children:/*#__PURE__*/_jsx(Plus,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsxs(RowBetween,{align:\"flex-end\",children:[/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,children:(_parsedAmounts$Field$9=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$9===void 0?void 0:_parsedAmounts$Field$9.toSignificant(6)}),/*#__PURE__*/_jsxs(RowFixed,{gap:\"4px\",children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencyB,size:'24px'}),/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,style:{marginLeft:'10px'},children:currencyB===null||currencyB===void 0?void 0:currencyB.symbol})]})]}),/*#__PURE__*/_jsx(TYPE.italic,{fontSize:12,color:theme.text2,textAlign:\"left\",padding:'12px 0 0 0',children:\"Output is estimated. If the price changes by more than \".concat(allowedSlippage/100,\"% your transaction will revert.\")})]});}function modalBottom(){var _parsedAmounts$Field$10;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(Text,{color:theme.text2,fontWeight:500,fontSize:16,children:['UBE '+(currencyA===null||currencyA===void 0?void 0:currencyA.symbol)+'/'+(currencyB===null||currencyB===void 0?void 0:currencyB.symbol),\" Burned\"]}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencyA,currency1:currencyB,margin:true}),/*#__PURE__*/_jsx(Text,{fontWeight:500,fontSize:16,children:(_parsedAmounts$Field$10=parsedAmounts[Field.LIQUIDITY])===null||_parsedAmounts$Field$10===void 0?void 0:_parsedAmounts$Field$10.toSignificant(6)})]})]}),pair&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Text,{color:theme.text2,fontWeight:500,fontSize:16,children:\"Price\"}),/*#__PURE__*/_jsxs(Text,{fontWeight:500,fontSize:16,color:theme.text1,children:[\"1 \",currencyA===null||currencyA===void 0?void 0:currencyA.symbol,\" = \",tokenA?pair.priceOf(tokenA).toSignificant(6):'-',\" \",currencyB===null||currencyB===void 0?void 0:currencyB.symbol]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(Text,{fontWeight:500,fontSize:16,color:theme.text1,children:[\"1 \",currencyB===null||currencyB===void 0?void 0:currencyB.symbol,\" = \",tokenB?pair.priceOf(tokenB).toSignificant(6):'-',\" \",currencyA===null||currencyA===void 0?void 0:currencyA.symbol]})]})]}),/*#__PURE__*/_jsx(ButtonPrimary,{disabled:!(approval===ApprovalState.APPROVED||signatureData!==null),onClick:onRemove,children:/*#__PURE__*/_jsx(Text,{fontWeight:500,fontSize:20,children:\"Confirm\"})})]});}const pendingText=\"Removing \".concat((_parsedAmounts$Field$11=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$11===void 0?void 0:_parsedAmounts$Field$11.toSignificant(6),\" \").concat(currencyA===null||currencyA===void 0?void 0:currencyA.symbol,\" and \").concat((_parsedAmounts$Field$12=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$12===void 0?void 0:_parsedAmounts$Field$12.toSignificant(6),\" \").concat(currencyB===null||currencyB===void 0?void 0:currencyB.symbol);const liquidityPercentChangeCallback=useCallback(value=>{onUserInput(Field.LIQUIDITY_PERCENT,value.toString());},[onUserInput]);const handleSelectCurrencyA=useCallback(currency=>{if(currencyIdB&&currencyId(currency)===currencyIdB){history.push(\"/remove/\".concat(currencyId(currency),\"/\").concat(currencyIdA));}else{history.push(\"/remove/\".concat(currencyId(currency),\"/\").concat(currencyIdB));}},[currencyIdA,currencyIdB,history]);const handleSelectCurrencyB=useCallback(currency=>{if(currencyIdA&&currencyId(currency)===currencyIdA){history.push(\"/remove/\".concat(currencyIdB,\"/\").concat(currencyId(currency)));}else{history.push(\"/remove/\".concat(currencyIdA,\"/\").concat(currencyId(currency)));}},[currencyIdA,currencyIdB,history]);const handleDismissConfirmation=useCallback(()=>{setShowConfirm(false);setSignatureData(null);// important that we clear signature data to avoid bad sigs\n// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.LIQUIDITY_PERCENT,'0');}setTxHash('');},[onUserInput,txHash]);const[innerLiquidityPercentage,setInnerLiquidityPercentage]=useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),liquidityPercentChangeCallback);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AddRemoveTabs,{creating:false,adding:false}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(TransactionConfirmationModal,{isOpen:showConfirm,onDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash?txHash:'',content:()=>/*#__PURE__*/_jsx(ConfirmationModalContent,{title:'You will receive',onDismiss:handleDismissConfirmation,topContent:modalHeader,bottomContent:modalBottom}),pendingText:pendingText}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(BlueCard,{children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"10px\",children:/*#__PURE__*/_jsxs(TYPE.link,{fontWeight:400,color:'primaryText1',children:[/*#__PURE__*/_jsx(\"b\",{children:\"Tip:\"}),\" Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\"]})})}),/*#__PURE__*/_jsx(LightCard,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:500,children:\"Amount\"}),/*#__PURE__*/_jsx(ClickableText,{fontWeight:500,onClick:()=>{setShowDetailed(!showDetailed);},children:showDetailed?'Simple':'Detailed'})]}),/*#__PURE__*/_jsx(Row,{style:{alignItems:'flex-end'},children:/*#__PURE__*/_jsxs(Text,{fontSize:72,fontWeight:500,children:[formattedAmounts[Field.LIQUIDITY_PERCENT],\"%\"]})}),!showDetailed&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Slider,{value:innerLiquidityPercentage,onChange:setInnerLiquidityPercentage}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(MaxButton,{onClick:()=>onUserInput(Field.LIQUIDITY_PERCENT,'25'),width:\"20%\",children:\"25%\"}),/*#__PURE__*/_jsx(MaxButton,{onClick:()=>onUserInput(Field.LIQUIDITY_PERCENT,'50'),width:\"20%\",children:\"50%\"}),/*#__PURE__*/_jsx(MaxButton,{onClick:()=>onUserInput(Field.LIQUIDITY_PERCENT,'75'),width:\"20%\",children:\"75%\"}),/*#__PURE__*/_jsx(MaxButton,{onClick:()=>onUserInput(Field.LIQUIDITY_PERCENT,'100'),width:\"20%\",children:\"Max\"})]})]})]})}),!showDetailed&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsx(LightCard,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"10px\",children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,children:formattedAmounts[Field.CURRENCY_A]||'-'}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencyA,style:{marginRight:'12px'}}),/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,id:\"remove-liquidity-tokena-symbol\",children:currencyA===null||currencyA===void 0?void 0:currencyA.symbol})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,children:formattedAmounts[Field.CURRENCY_B]||'-'}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currencyB,style:{marginRight:'12px'}}),/*#__PURE__*/_jsx(Text,{fontSize:24,fontWeight:500,id:\"remove-liquidity-tokenb-symbol\",children:currencyB===null||currencyB===void 0?void 0:currencyB.symbol})]})]})]})})]}),showDetailed&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.LIQUIDITY],onUserInput:onLiquidityInput,onMax:()=>{onUserInput(Field.LIQUIDITY_PERCENT,'100');},showMaxButton:!atMaxAmount,disableCurrencySelect:true,currency:pair===null||pair===void 0?void 0:pair.liquidityToken,pair:pair,id:\"liquidity-amount\"}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{hideBalance:true,value:formattedAmounts[Field.CURRENCY_A],onUserInput:onCurrencyAInput,onMax:()=>onUserInput(Field.LIQUIDITY_PERCENT,'100'),showMaxButton:!atMaxAmount,currency:currencyA,label:'Output',onCurrencySelect:handleSelectCurrencyA,id:\"remove-liquidity-tokena\"}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(Plus,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{hideBalance:true,value:formattedAmounts[Field.CURRENCY_B],onUserInput:onCurrencyBInput,onMax:()=>onUserInput(Field.LIQUIDITY_PERCENT,'100'),showMaxButton:!atMaxAmount,currency:currencyB,label:'Output',onCurrencySelect:handleSelectCurrencyB,id:\"remove-liquidity-tokenb\"})]}),pair&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px 20px'},children:[/*#__PURE__*/_jsxs(RowBetween,{children:[\"Price:\",/*#__PURE__*/_jsxs(\"div\",{children:[\"1 \",currencyA===null||currencyA===void 0?void 0:currencyA.symbol,\" = \",tokenA?pair.priceOf(tokenA).toSignificant(6):'-',\" \",currencyB===null||currencyB===void 0?void 0:currencyB.symbol]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"1 \",currencyB===null||currencyB===void 0?void 0:currencyB.symbol,\" = \",tokenB?pair.priceOf(tokenB).toSignificant(6):'-',\" \",currencyA===null||currencyA===void 0?void 0:currencyA.symbol]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'relative'},children:!account?/*#__PURE__*/_jsx(ButtonLight,{onClick:()=>connect().catch(console.warn),children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(ButtonConfirmed,{onClick:onAttemptToApprove,confirmed:approval===ApprovalState.APPROVED||signatureData!==null,disabled:approval!==ApprovalState.NOT_APPROVED||signatureData!==null,mr:\"0.5rem\",fontWeight:500,fontSize:16,children:approval===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:\"Approving\"}):approval===ApprovalState.APPROVED||signatureData!==null?'Approved':'Approve'}),/*#__PURE__*/_jsx(ButtonError,{onClick:()=>{setShowConfirm(true);},disabled:!isValid||signatureData===null&&approval!==ApprovalState.APPROVED,error:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B],children:/*#__PURE__*/_jsx(Text,{fontSize:16,fontWeight:500,children:error||'Remove'})})]})})]})]})]}),pair?/*#__PURE__*/_jsx(AutoColumn,{style:{minWidth:'20rem',width:'100%',maxWidth:'400px',marginTop:'1rem'},children:/*#__PURE__*/_jsx(MinimalPositionCard,{pair:pair})}):null]});}","map":null,"metadata":{},"sourceType":"module"}