{"ast":null,"code":"import{isDualTradeBetter}from'components/swap/routing/hooks/calculateBestTrades';import{ZERO_PERCENT}from'./../constants/index';// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(tradeA,tradeB){let minimumDelta=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ZERO_PERCENT;return isDualTradeBetter(tradeA,tradeB,minimumDelta);}","map":{"version":3,"names":["isDualTradeBetter","ZERO_PERCENT","isTradeBetter","tradeA","tradeB","minimumDelta","arguments","length","undefined"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/trades.ts"],"sourcesContent":["import { Percent } from '@ubeswap/sdk'\nimport { isDualTradeBetter } from 'components/swap/routing/hooks/calculateBestTrades'\nimport { UbeswapTrade } from 'components/swap/routing/trade'\n\nimport { ZERO_PERCENT } from './../constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: UbeswapTrade | undefined | null,\n  tradeB: UbeswapTrade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  return isDualTradeBetter(tradeA, tradeB, minimumDelta)\n}\n"],"mappings":"AACA,OAASA,iBAAiB,KAAQ,mDAAmD,CAGrF,OAASC,YAAY,KAAQ,sBAAsB,CAEnD;AACA,MAAO,SAAS,CAAAC,aAAaA,CAC3BC,MAAuC,CACvCC,MAAuC,CAElB,IADrB,CAAAC,YAAqB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGL,YAAY,CAEpC,MAAO,CAAAD,iBAAiB,CAACG,MAAM,CAAEC,MAAM,CAAEC,YAAY,CAAC,CACxD"},"metadata":{},"sourceType":"module"}