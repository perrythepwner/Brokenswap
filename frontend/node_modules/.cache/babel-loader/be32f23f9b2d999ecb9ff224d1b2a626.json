{"ast":null,"code":"import { fill, isThenable, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-postgres package */\nvar Postgres = /** @class */function () {\n  function Postgres(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n    this.name = Postgres.id;\n    this._usePgNative = !!options.usePgNative;\n  }\n  /**\n   * @inheritDoc\n   */\n  Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n    var _a;\n    var pkg = loadModule('pg');\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n    if (this._usePgNative && !((_a = pkg.native) === null || _a === void 0 ? void 0 : _a.Client)) {\n      IS_DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n    var Client = (this._usePgNative ? pkg.native : pkg).Client;\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig) {\n      return function (config, values, callback) {\n        var _a, _b, _c;\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof config === 'string' ? config : config.text,\n          op: 'db'\n        });\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result);\n          });\n        }\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result);\n          });\n        }\n        var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n        if (isThenable(rv)) {\n          return rv.then(function (res) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            return res;\n          });\n        }\n        (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n        return rv;\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  Postgres.id = 'Postgres';\n  return Postgres;\n}();\nexport { Postgres };","map":null,"metadata":{},"sourceType":"module"}