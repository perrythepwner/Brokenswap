{"ast":null,"code":"import _objectSpread from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createReducer}from'@reduxjs/toolkit';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';const initialState={independentField:Field.INPUT,typedValue:'',[Field.INPUT]:{currencyId:''},[Field.OUTPUT]:{currencyId:''},recipient:null};export default createReducer(initialState,builder=>builder.addCase(replaceSwapState,(state,_ref)=>{let{payload:{typedValue,recipient,field,inputCurrencyId,outputCurrencyId}}=_ref;return{[Field.INPUT]:{currencyId:inputCurrencyId},[Field.OUTPUT]:{currencyId:outputCurrencyId},independentField:field,typedValue:typedValue,recipient};}).addCase(selectCurrency,(state,_ref2)=>{let{payload:{currencyId,field}}=_ref2;const otherField=field===Field.INPUT?Field.OUTPUT:Field.INPUT;if(currencyId===state[otherField].currencyId){// the case where we have to swap the order\nreturn _objectSpread(_objectSpread({},state),{},{independentField:state.independentField===Field.INPUT?Field.OUTPUT:Field.INPUT,[field]:{currencyId:currencyId},[otherField]:{currencyId:state[field].currencyId}});}else{// the normal case\nreturn _objectSpread(_objectSpread({},state),{},{[field]:{currencyId:currencyId}});}}).addCase(switchCurrencies,state=>{return _objectSpread(_objectSpread({},state),{},{// independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n[Field.INPUT]:{currencyId:state[Field.OUTPUT].currencyId},[Field.OUTPUT]:{currencyId:state[Field.INPUT].currencyId}});}).addCase(typeInput,(state,_ref3)=>{let{payload:{field,typedValue}}=_ref3;return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue});}).addCase(setRecipient,(state,_ref4)=>{let{payload:{recipient}}=_ref4;state.recipient=recipient;}));","map":{"version":3,"names":["createReducer","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","initialState","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","builder","addCase","state","_ref","payload","field","inputCurrencyId","outputCurrencyId","_ref2","otherField","_objectSpread","_ref3","_ref4"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/swap/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue: typedValue,\n          recipient,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId: currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      } else {\n        // the normal case\n        return {\n          ...state,\n          [field]: { currencyId: currencyId },\n        }\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        // independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}