{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SINGULAR_CLAIM_TYPES = exports.VALIDATABLE_CLAIM_TYPES = exports.VERIFIABLE_CLAIM_TYPES = exports.ClaimTypes = exports.now = exports.TimestampType = exports.SignatureType = void 0;\nvar t = __importStar(require(\"io-ts\"));\nexports.SignatureType = t.string;\nexports.TimestampType = t.number;\n/** @internal */\nvar now = function now() {\n  return Math.round(new Date().getTime() / 1000);\n};\nexports.now = now;\nvar ClaimTypes;\n(function (ClaimTypes) {\n  ClaimTypes[\"ATTESTATION_SERVICE_URL\"] = \"ATTESTATION_SERVICE_URL\";\n  ClaimTypes[\"ACCOUNT\"] = \"ACCOUNT\";\n  ClaimTypes[\"DOMAIN\"] = \"DOMAIN\";\n  ClaimTypes[\"KEYBASE\"] = \"KEYBASE\";\n  ClaimTypes[\"NAME\"] = \"NAME\";\n  ClaimTypes[\"PROFILE_PICTURE\"] = \"PROFILE_PICTURE\";\n  ClaimTypes[\"STORAGE\"] = \"STORAGE\";\n  ClaimTypes[\"TWITTER\"] = \"TWITTER\";\n})(ClaimTypes = exports.ClaimTypes || (exports.ClaimTypes = {}));\nexports.VERIFIABLE_CLAIM_TYPES = [ClaimTypes.KEYBASE, ClaimTypes.ACCOUNT, ClaimTypes.DOMAIN];\n// Claims whose status can be validated\nexports.VALIDATABLE_CLAIM_TYPES = [ClaimTypes.ATTESTATION_SERVICE_URL];\nexports.SINGULAR_CLAIM_TYPES = [ClaimTypes.NAME, ClaimTypes.ATTESTATION_SERVICE_URL];","map":null,"metadata":{},"sourceType":"script"}