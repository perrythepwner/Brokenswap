{"ast":null,"code":"import{currencyEquals,TokenAmount,Trade}from'@ubeswap/sdk';import{ONE_HUNDRED_PERCENT,ZERO_PERCENT}from'constants/index';import{getMoolaDual}from'../moola/useMoola';import{MoolaRouterTrade}from'./useTrade';// returns whether tradeB is better than tradeA by at least a threshold percentage amount\n// does not check currency matching\nexport function isDualTradeBetter(tradeA,tradeB){let minimumDelta=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ZERO_PERCENT;if(tradeA&&!tradeB)return false;if(tradeB&&!tradeA)return true;if(!tradeA||!tradeB)return undefined;const inTokenA=tradeA.inputAmount.token;const inTokenB=tradeB.inputAmount.token;const outTokenA=tradeA.outputAmount.token;const outTokenB=tradeB.outputAmount.token;if(tradeA.tradeType!==tradeB.tradeType||!currencyEquals(inTokenA,inTokenB)||!currencyEquals(outTokenA,outTokenB)){throw new Error('Trades are not comparable');}if(minimumDelta.equalTo(ZERO_PERCENT)){return tradeA.executionPrice.lessThan(tradeB.executionPrice);}else{return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);}}export const bestTradeExactOut=(pairs,tokenIn,tokenAmountOut,directTrade,options)=>{var _filter$reduce;const inDual=tokenIn&&getMoolaDual(tokenIn);const outDual=tokenAmountOut&&getMoolaDual(tokenAmountOut.token);const inDualTrades=inDual?Trade.bestTradeExactOut(pairs.slice(),inDual,tokenAmountOut,options).map(trade=>new MoolaRouterTrade(tokenIn,null,trade)):[];const outDualTrades=outDual?Trade.bestTradeExactOut(pairs.slice(),tokenIn,new TokenAmount(outDual,tokenAmountOut.raw),options).map(trade=>new MoolaRouterTrade(null,tokenAmountOut.token,trade)):[];const inAndOutDualTrades=inDual&&outDual?Trade.bestTradeExactOut(pairs.slice(),inDual,new TokenAmount(outDual,tokenAmountOut.raw),options).map(trade=>new MoolaRouterTrade(tokenIn,tokenAmountOut.token,trade)):[];return(_filter$reduce=[directTrade,inDualTrades[0],outDualTrades[0],inAndOutDualTrades[0]].filter(x=>!!x).reduce((best,trade)=>isDualTradeBetter(best,trade,options===null||options===void 0?void 0:options.minimumDelta)?trade:best,null))!==null&&_filter$reduce!==void 0?_filter$reduce:null;};export const bestTradeExactIn=(pairs,tokenAmountIn,tokenOut,directTrade,options)=>{var _filter$reduce2;const inDual=tokenAmountIn&&getMoolaDual(tokenAmountIn.token);const outDual=tokenOut&&getMoolaDual(tokenOut);const inDualTrades=inDual?Trade.bestTradeExactIn(pairs.slice(),new TokenAmount(inDual,tokenAmountIn.raw),tokenOut,options).map(trade=>new MoolaRouterTrade(tokenAmountIn.token,null,trade)):[];const outDualTrades=outDual?Trade.bestTradeExactIn(pairs.slice(),tokenAmountIn,outDual,options).map(trade=>new MoolaRouterTrade(null,tokenOut,trade)):[];const inAndOutDualTrades=inDual&&outDual?Trade.bestTradeExactIn(pairs.slice(),new TokenAmount(inDual,tokenAmountIn.raw),outDual,options).map(trade=>new MoolaRouterTrade(tokenAmountIn.token,tokenOut,trade)):[];return(_filter$reduce2=[directTrade,inDualTrades[0],outDualTrades[0],inAndOutDualTrades[0]].filter(x=>!!x).reduce((best,trade)=>best===null||isDualTradeBetter(best,trade,options===null||options===void 0?void 0:options.minimumDelta)?trade:best,null))!==null&&_filter$reduce2!==void 0?_filter$reduce2:null;};","map":{"version":3,"names":["currencyEquals","TokenAmount","Trade","ONE_HUNDRED_PERCENT","ZERO_PERCENT","getMoolaDual","MoolaRouterTrade","isDualTradeBetter","tradeA","tradeB","minimumDelta","arguments","length","undefined","inTokenA","inputAmount","token","inTokenB","outTokenA","outputAmount","outTokenB","tradeType","Error","equalTo","executionPrice","lessThan","raw","multiply","add","bestTradeExactOut","pairs","tokenIn","tokenAmountOut","directTrade","options","_filter$reduce","inDual","outDual","inDualTrades","slice","map","trade","outDualTrades","inAndOutDualTrades","filter","x","reduce","best","bestTradeExactIn","tokenAmountIn","tokenOut","_filter$reduce2"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/routing/hooks/calculateBestTrades.ts"],"sourcesContent":["import { BestTradeOptions, currencyEquals, Pair, Percent, Token, TokenAmount, Trade } from '@ubeswap/sdk'\nimport { ONE_HUNDRED_PERCENT, ZERO_PERCENT } from 'constants/index'\n\nimport { getMoolaDual } from '../moola/useMoola'\nimport { UbeswapTrade } from '../trade'\nimport { MoolaRouterTrade } from './useTrade'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\n// does not check currency matching\nexport function isDualTradeBetter(\n  tradeA: UbeswapTrade | undefined | null,\n  tradeB: UbeswapTrade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n\n  if (!tradeA || !tradeB) return undefined\n\n  const inTokenA = tradeA.inputAmount.token\n  const inTokenB = tradeB.inputAmount.token\n\n  const outTokenA = tradeA.outputAmount.token\n  const outTokenB = tradeB.outputAmount.token\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(inTokenA, inTokenB) ||\n    !currencyEquals(outTokenA, outTokenB)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  } else {\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n  }\n}\n\ninterface BestUbeswapTradeOptions extends BestTradeOptions {\n  minimumDelta?: Percent\n}\n\nexport const bestTradeExactOut = (\n  pairs: readonly Pair[],\n  tokenIn: Token,\n  tokenAmountOut: TokenAmount,\n  directTrade: UbeswapTrade | null,\n  options?: BestUbeswapTradeOptions\n): UbeswapTrade | null => {\n  const inDual = tokenIn && getMoolaDual(tokenIn)\n  const outDual = tokenAmountOut && getMoolaDual(tokenAmountOut.token)\n\n  const inDualTrades = inDual\n    ? Trade.bestTradeExactOut(pairs.slice(), inDual, tokenAmountOut, options).map(\n        (trade) => new MoolaRouterTrade(tokenIn, null, trade)\n      )\n    : []\n  const outDualTrades = outDual\n    ? Trade.bestTradeExactOut(pairs.slice(), tokenIn, new TokenAmount(outDual, tokenAmountOut.raw), options).map(\n        (trade) => new MoolaRouterTrade(null, tokenAmountOut.token, trade)\n      )\n    : []\n  const inAndOutDualTrades =\n    inDual && outDual\n      ? Trade.bestTradeExactOut(pairs.slice(), inDual, new TokenAmount(outDual, tokenAmountOut.raw), options).map(\n          (trade) => new MoolaRouterTrade(tokenIn, tokenAmountOut.token, trade)\n        )\n      : []\n\n  return (\n    [directTrade, inDualTrades[0], outDualTrades[0], inAndOutDualTrades[0]]\n      .filter((x) => !!x)\n      .reduce(\n        (best: UbeswapTrade | null, trade) => (isDualTradeBetter(best, trade, options?.minimumDelta) ? trade : best),\n        null\n      ) ?? null\n  )\n}\n\nexport const bestTradeExactIn = (\n  pairs: readonly Pair[],\n  tokenAmountIn: TokenAmount,\n  tokenOut: Token,\n  directTrade: UbeswapTrade | null,\n  options?: BestUbeswapTradeOptions\n): UbeswapTrade | null => {\n  const inDual = tokenAmountIn && getMoolaDual(tokenAmountIn.token)\n  const outDual = tokenOut && getMoolaDual(tokenOut)\n\n  const inDualTrades = inDual\n    ? Trade.bestTradeExactIn(pairs.slice(), new TokenAmount(inDual, tokenAmountIn.raw), tokenOut, options).map(\n        (trade) => new MoolaRouterTrade(tokenAmountIn.token, null, trade)\n      )\n    : []\n  const outDualTrades = outDual\n    ? Trade.bestTradeExactIn(pairs.slice(), tokenAmountIn, outDual, options).map(\n        (trade) => new MoolaRouterTrade(null, tokenOut, trade)\n      )\n    : []\n  const inAndOutDualTrades =\n    inDual && outDual\n      ? Trade.bestTradeExactIn(pairs.slice(), new TokenAmount(inDual, tokenAmountIn.raw), outDual, options).map(\n          (trade) => new MoolaRouterTrade(tokenAmountIn.token, tokenOut, trade)\n        )\n      : []\n\n  return (\n    [directTrade, inDualTrades[0], outDualTrades[0], inAndOutDualTrades[0]]\n      .filter((x) => !!x)\n      .reduce(\n        (best: UbeswapTrade | null, trade) =>\n          best === null || isDualTradeBetter(best, trade, options?.minimumDelta) ? trade : best,\n        null\n      ) ?? null\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}