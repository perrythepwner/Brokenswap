{"ast":null,"code":"import{useCelo}from'@celo/react-celo';import{Pair,Token}from'@ubeswap/sdk';import flatMap from'lodash.flatmap';import{useCallback,useEffect,useMemo}from'react';import ReactGA from'react-ga';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'../../constants';import{useAllTokens}from'../../hooks/Tokens';import{colors}from'../../theme';import{addSerializedPair,addSerializedToken,removeSerializedToken,toggleURLWarning,updateUserAllowMoolaWithdrawal,updateUserDarkMode,updateUserDeadline,updateUserDisableSmartRouting,updateUserExpertMode,updateUserMinApprove,updateUserSingleHopOnly,updateUserSlippageTolerance}from'./actions';function serializeToken(token){return{chainId:token.chainId,address:token.address,decimals:token.decimals,symbol:token.symbol,name:token.name};}function deserializeToken(serializedToken){return new Token(serializedToken.chainId,serializedToken.address,serializedToken.decimals,serializedToken.symbol,serializedToken.name);}export function useIsDarkMode(){const{userDarkMode,matchesDarkMode}=useSelector(_ref=>{let{user:{matchesDarkMode,userDarkMode}}=_ref;return{userDarkMode,matchesDarkMode};},shallowEqual);return userDarkMode===null?matchesDarkMode:userDarkMode;}export function useDarkModeManager(){const dispatch=useDispatch();const darkMode=true;// should be useIsDarkMode() but in ctf only dark mode allowed\nconst{updateTheme}=useCelo();useEffect(()=>{const _colors=colors(darkMode);updateTheme({background:_colors.bg2,error:_colors.red1,primary:_colors.primary1,secondary:_colors.bg3,text:_colors.text1,textSecondary:_colors.text2,textTertiary:_colors.text2,muted:_colors.text4});},[updateTheme,darkMode]);const toggleSetDarkMode=useCallback(()=>{dispatch(updateUserDarkMode({userDarkMode:!darkMode}));},[darkMode,dispatch]);return[darkMode,toggleSetDarkMode];}export function useIsExpertMode(){return useSelector(state=>state.user.userExpertMode);}export function useExpertModeManager(){const dispatch=useDispatch();const expertMode=useIsExpertMode();const toggleSetExpertMode=useCallback(()=>{dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useUserMinApprove(){const dispatch=useDispatch();const minApprove=useSelector(state=>state.user.userMinApprove);const setMinApprove=useCallback(newMinApprove=>{dispatch(updateUserMinApprove({userMinApprove:newMinApprove}));},[dispatch]);return[minApprove,setMinApprove];}export function useUserAllowMoolaWithdrawal(){const dispatch=useDispatch();const allowMoolaWithdrawal=useSelector(state=>state.user.userAllowMoolaWithdrawal);const setAllowMoolaWithdrawal=useCallback(newallowMoolaWithdrawal=>{dispatch(updateUserAllowMoolaWithdrawal({userAllowMoolaWithdrawal:newallowMoolaWithdrawal}));},[dispatch]);return[allowMoolaWithdrawal,setAllowMoolaWithdrawal];}export function useUserDisableSmartRouting(){const dispatch=useDispatch();const disableSmartRouting=useSelector(state=>state.user.userDisableSmartRouting);const setDisableSmartRouting=useCallback(newSmartRouting=>{dispatch(updateUserDisableSmartRouting({userDisableSmartRouting:newSmartRouting}));},[dispatch]);return[disableSmartRouting,setDisableSmartRouting];}export function useUserSingleHopOnly(){const dispatch=useDispatch();const singleHopOnly=useSelector(state=>state.user.userSingleHopOnly);const setSingleHopOnly=useCallback(newSingleHopOnly=>{ReactGA.event({category:'Routing',action:newSingleHopOnly?'enable single hop':'disable single hop'});dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){const dispatch=useDispatch();const userSlippageTolerance=useSelector(state=>{return state.user.userSlippageTolerance;});const setUserSlippageTolerance=useCallback(userSlippageTolerance=>{dispatch(updateUserSlippageTolerance({userSlippageTolerance}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserTransactionTTL(){const dispatch=useDispatch();const userDeadline=useSelector(state=>{return state.user.userDeadline;});const setUserDeadline=useCallback(userDeadline=>{dispatch(updateUserDeadline({userDeadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){const dispatch=useDispatch();return useCallback(token=>{dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){const dispatch=useDispatch();return useCallback((chainId,address)=>{dispatch(removeSerializedToken({chainId,address}));},[dispatch]);}export function useUserAddedTokens(){const{network}=useCelo();const chainId=network.chainId;const serializedTokensMap=useSelector(_ref2=>{let{user:{tokens}}=_ref2;return tokens;});return useMemo(()=>{var _serializedTokensMap$;if(!chainId)return[];return Object.values((_serializedTokensMap$=serializedTokensMap[chainId])!==null&&_serializedTokensMap$!==void 0?_serializedTokensMap$:{}).map(deserializeToken);},[serializedTokensMap,chainId]);}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){const dispatch=useDispatch();return useCallback(pair=>{dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}export function useURLWarningVisible(){return useSelector(state=>state.user.URLWarningVisible);}export function useURLWarningToggle(){const dispatch=useDispatch();return useCallback(()=>dispatch(toggleURLWarning()),[dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref3){let[tokenA,tokenB]=_ref3;return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'ULP','Ubeswap LP Token');}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){const{network}=useCelo();const chainId=network.chainId;const tokens=useAllTokens();// pinned pairs\nconst pinnedPairs=useMemo(()=>{var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nconst generatedPairs=useMemo(()=>chainId?flatMap(Object.keys(tokens),tokenAddress=>{var _BASES_TO_TRACK_LIQUI;const token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]// to construct pairs of the given token with each base\n).map(base=>{if(base.address===token.address){return null;}else{return[base,token];}}).filter(p=>p!==null));}):[],[tokens,chainId]);// pairs saved by users\nconst savedSerializedPairs=useSelector(_ref4=>{let{user:{pairs}}=_ref4;return pairs;});const userPairs=useMemo(()=>{if(!chainId||!savedSerializedPairs)return[];const forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(pairId=>{return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);const combinedList=useMemo(()=>userPairs.concat(generatedPairs).concat(pinnedPairs),[generatedPairs,pinnedPairs,userPairs]);return useMemo(()=>{// dedupes pairs of tokens in the combined list\nconst keyed=combinedList.reduce((memo,_ref5)=>{let[tokenA,tokenB]=_ref5;const sorted=tokenA.sortsBefore(tokenB);const key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(key=>keyed[key]);},[combinedList]);}export function useIsAprMode(){return useSelector(state=>state.user.userAprMode);}","map":{"version":3,"names":["useCelo","Pair","Token","flatMap","useCallback","useEffect","useMemo","ReactGA","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useAllTokens","colors","addSerializedPair","addSerializedToken","removeSerializedToken","toggleURLWarning","updateUserAllowMoolaWithdrawal","updateUserDarkMode","updateUserDeadline","updateUserDisableSmartRouting","updateUserExpertMode","updateUserMinApprove","updateUserSingleHopOnly","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","dispatch","darkMode","updateTheme","_colors","background","bg2","error","red1","primary","primary1","secondary","bg3","text","text1","textSecondary","text2","textTertiary","muted","text4","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserMinApprove","minApprove","userMinApprove","setMinApprove","newMinApprove","useUserAllowMoolaWithdrawal","allowMoolaWithdrawal","userAllowMoolaWithdrawal","setAllowMoolaWithdrawal","newallowMoolaWithdrawal","useUserDisableSmartRouting","disableSmartRouting","userDisableSmartRouting","setDisableSmartRouting","newSmartRouting","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","event","category","action","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","network","serializedTokensMap","_ref2","tokens","_serializedTokensMap$","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","toV2LiquidityToken","_ref3","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","keys","tokenAddress","_BASES_TO_TRACK_LIQUI","base","filter","p","savedSerializedPairs","_ref4","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref5","sorted","sortsBefore","key","useIsAprMode","userAprMode"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/user/hooks.tsx"],"sourcesContent":["import { useCelo } from '@celo/react-celo'\nimport { Pair, Token } from '@ubeswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { colors } from '../../theme'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  toggleURLWarning,\n  updateUserAllowMoolaWithdrawal,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserDisableSmartRouting,\n  updateUserExpertMode,\n  updateUserMinApprove,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = true // should be useIsDarkMode() but in ctf only dark mode allowed\n  const { updateTheme } = useCelo()\n\n  useEffect(() => {\n    const _colors = colors(darkMode)\n    updateTheme({\n      background: _colors.bg2,\n      error: _colors.red1,\n      primary: _colors.primary1,\n      secondary: _colors.bg3,\n      text: _colors.text1,\n      textSecondary: _colors.text2,\n      textTertiary: _colors.text2,\n      muted: _colors.text4,\n    })\n  }, [updateTheme, darkMode])\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserMinApprove(): [boolean, (minApprove: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const minApprove = useSelector<AppState, AppState['user']['userMinApprove']>((state) => state.user.userMinApprove)\n  const setMinApprove = useCallback(\n    (newMinApprove: boolean) => {\n      dispatch(updateUserMinApprove({ userMinApprove: newMinApprove }))\n    },\n    [dispatch]\n  )\n  return [minApprove, setMinApprove]\n}\n\nexport function useUserAllowMoolaWithdrawal(): [boolean, (allowMoolaWithdrawal: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const allowMoolaWithdrawal = useSelector<AppState, AppState['user']['userAllowMoolaWithdrawal']>(\n    (state) => state.user.userAllowMoolaWithdrawal\n  )\n  const setAllowMoolaWithdrawal = useCallback(\n    (newallowMoolaWithdrawal: boolean) => {\n      dispatch(updateUserAllowMoolaWithdrawal({ userAllowMoolaWithdrawal: newallowMoolaWithdrawal }))\n    },\n    [dispatch]\n  )\n  return [allowMoolaWithdrawal, setAllowMoolaWithdrawal]\n}\n\nexport function useUserDisableSmartRouting(): [boolean, (disableSmartRouting: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const disableSmartRouting = useSelector<AppState, AppState['user']['userDisableSmartRouting']>(\n    (state) => state.user.userDisableSmartRouting\n  )\n  const setDisableSmartRouting = useCallback(\n    (newSmartRouting: boolean) => {\n      dispatch(updateUserDisableSmartRouting({ userDisableSmartRouting: newSmartRouting }))\n    },\n    [dispatch]\n  )\n  return [disableSmartRouting, setDisableSmartRouting]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      ReactGA.event({\n        category: 'Routing',\n        action: newSingleHopOnly ? 'enable single hop' : 'disable single hop',\n      })\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch]\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { network } = useCelo()\n  const chainId = network.chainId\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'ULP', 'Ubeswap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { network } = useCelo()\n  const chainId = network.chainId\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport function useIsAprMode(): boolean {\n  return useSelector<AppState, AppState['user']['userAprMode']>((state) => state.user.userAprMode)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}