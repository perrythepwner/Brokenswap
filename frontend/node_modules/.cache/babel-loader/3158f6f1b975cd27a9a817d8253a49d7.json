{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeSig = exports.verifySignatureWithoutPrefix = exports.verifyEIP712TypedDataSigner = exports.recoverMessageSigner = exports.getSignerFromTxCIP42 = exports.recoverTransaction = exports.extractSignature = exports.encodeTransaction = exports.isPriceToLow = exports.rlpEncodedTx = exports.stringNumberOrBNToHex = exports.getHashFromEncoded = exports.chainIdTransformationForSigning = exports.thirtyTwo = exports.sixtyFour = exports.publicKeyPrefix = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar connect_1 = require(\"@celo/connect\");\nvar formatter_1 = require(\"@celo/connect/lib/utils/formatter\");\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\nvar util_1 = require(\"@ethereumjs/util\");\nvar debug_1 = __importDefault(require(\"debug\"));\n// @ts-ignore-next-line eth-lib types not found\nvar eth_lib_1 = require(\"eth-lib\");\nvar keccak_1 = require(\"ethereum-cryptography/keccak\");\nvar utils_js_1 = require(\"ethereum-cryptography/utils.js\");\nvar web3_1 = __importDefault(require(\"web3\")); // TODO try to do this without web3 direct\nvar web3_eth_accounts_1 = __importDefault(require(\"web3-eth-accounts\"));\nvar debug = (0, debug_1.default)('wallet-base:tx:sign');\n// Original code taken from\n// https://github.com/ethereum/web3.js/blob/1.x/packages/web3-eth-accounts/src/index.js\n// 0x04 prefix indicates that the key is not compressed\n// https://tools.ietf.org/html/rfc5480#section-2.2\nexports.publicKeyPrefix = 0x04;\nexports.sixtyFour = 64;\nexports.thirtyTwo = 32;\nvar Y_PARITY_EIP_2098 = 27;\nfunction isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n// Simple replay attack protection\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md\nfunction chainIdTransformationForSigning(chainId) {\n  return chainId * 2 + 35;\n}\nexports.chainIdTransformationForSigning = chainIdTransformationForSigning;\nfunction getHashFromEncoded(rlpEncode) {\n  return eth_lib_1.hash.keccak256(rlpEncode);\n}\nexports.getHashFromEncoded = getHashFromEncoded;\nfunction trimLeadingZero(hex) {\n  while (hex && hex.startsWith('0x0')) {\n    hex = (0, address_1.ensureLeading0x)(hex.slice(3));\n  }\n  return hex;\n}\nfunction makeEven(hex) {\n  if (hex.length % 2 === 1) {\n    hex = hex.replace('0x', '0x0');\n  }\n  return hex;\n}\nfunction signatureFormatter(signature, type) {\n  var v = signature.v;\n  if (type !== 'celo-legacy') {\n    v = signature.v === Y_PARITY_EIP_2098 ? 0 : 1;\n  }\n  return {\n    v: stringNumberToHex(v),\n    r: makeEven(trimLeadingZero((0, address_1.ensureLeading0x)(signature.r.toString('hex')))),\n    s: makeEven(trimLeadingZero((0, address_1.ensureLeading0x)(signature.s.toString('hex'))))\n  };\n}\nfunction stringNumberOrBNToHex(num) {\n  if (typeof num === 'string' || typeof num === 'number' || num === undefined) {\n    return stringNumberToHex(num);\n  } else {\n    return makeEven(\"0x\" + num.toString(16));\n  }\n}\nexports.stringNumberOrBNToHex = stringNumberOrBNToHex;\nfunction stringNumberToHex(num) {\n  var auxNumber = Number(num);\n  if (num === '0x' || num === undefined || auxNumber === 0) {\n    return '0x';\n  }\n  return makeEven(web3_1.default.utils.numberToHex(num));\n}\nfunction rlpEncodedTx(tx) {\n  assertSerializableTX(tx);\n  var transaction = (0, formatter_1.inputCeloTxFormatter)(tx);\n  transaction.to = eth_lib_1.bytes.fromNat(tx.to || '0x').toLowerCase();\n  transaction.nonce = Number((tx.nonce !== '0x' ? tx.nonce : 0) || 0);\n  transaction.data = eth_lib_1.bytes.fromNat(tx.data || '0x').toLowerCase();\n  transaction.value = stringNumberOrBNToHex(tx.value);\n  transaction.gas = stringNumberOrBNToHex(tx.gas);\n  transaction.chainId = tx.chainId || 1;\n  // Celo Specific\n  transaction.feeCurrency = eth_lib_1.bytes.fromNat(tx.feeCurrency || '0x').toLowerCase();\n  transaction.gatewayFeeRecipient = eth_lib_1.bytes.fromNat(tx.gatewayFeeRecipient || '0x').toLowerCase();\n  transaction.gatewayFee = stringNumberOrBNToHex(tx.gatewayFee);\n  // Legacy\n  transaction.gasPrice = stringNumberOrBNToHex(tx.gasPrice);\n  // EIP1559 / CIP42\n  transaction.maxFeePerGas = stringNumberOrBNToHex(tx.maxFeePerGas);\n  transaction.maxPriorityFeePerGas = stringNumberOrBNToHex(tx.maxPriorityFeePerGas);\n  var rlpEncode;\n  if (isCIP42(tx)) {\n    // There shall be a typed transaction with the code 0x7c that has the following format:\n    // 0x7c || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, feecurrency, gatewayFeeRecipient, gatewayfee, destination, amount, data, access_list, signature_y_parity, signature_r, signature_s]).\n    // This will be in addition to the type 0x02 transaction as specified in EIP-1559.\n    rlpEncode = eth_lib_1.RLP.encode([stringNumberToHex(transaction.chainId), stringNumberToHex(transaction.nonce), transaction.maxPriorityFeePerGas || '0x', transaction.maxFeePerGas || '0x', transaction.gas || '0x', transaction.feeCurrency || '0x', transaction.gatewayFeeRecipient || '0x', transaction.gatewayFee || '0x', transaction.to || '0x', transaction.value || '0x', transaction.data || '0x', transaction.accessList || []]);\n    return {\n      transaction: transaction,\n      rlpEncode: concatHex(['0x7c', rlpEncode]),\n      type: 'cip42'\n    };\n  } else if (isEIP1559(tx)) {\n    // https://eips.ethereum.org/EIPS/eip-1559\n    // 0x02 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, destination, amount, data, access_list, signature_y_parity, signature_r, signature_s]).\n    rlpEncode = eth_lib_1.RLP.encode([stringNumberToHex(transaction.chainId), stringNumberToHex(transaction.nonce), transaction.maxPriorityFeePerGas || '0x', transaction.maxFeePerGas || '0x', transaction.gas || '0x', transaction.to || '0x', transaction.value || '0x', transaction.data || '0x', transaction.accessList || []]);\n    return {\n      transaction: transaction,\n      rlpEncode: concatHex(['0x02', rlpEncode]),\n      type: 'eip1559'\n    };\n  } else {\n    // This order should match the order in Geth.\n    // https://github.com/celo-org/celo-blockchain/blob/027dba2e4584936cc5a8e8993e4e27d28d5247b8/core/types/transaction.go#L65\n    rlpEncode = eth_lib_1.RLP.encode([stringNumberToHex(transaction.nonce), transaction.gasPrice, transaction.gas, transaction.feeCurrency, transaction.gatewayFeeRecipient, transaction.gatewayFee, transaction.to, transaction.value, transaction.data, stringNumberToHex(transaction.chainId), '0x', '0x']);\n    return {\n      transaction: transaction,\n      rlpEncode: rlpEncode,\n      type: 'celo-legacy'\n    };\n  }\n}\nexports.rlpEncodedTx = rlpEncodedTx;\nvar TxTypeToPrefix;\n(function (TxTypeToPrefix) {\n  TxTypeToPrefix[\"celo-legacy\"] = \"\";\n  TxTypeToPrefix[\"cip42\"] = \"0x7c\";\n  TxTypeToPrefix[\"eip1559\"] = \"0x02\";\n})(TxTypeToPrefix || (TxTypeToPrefix = {}));\nfunction concatTypePrefixHex(rawTransaction, txType) {\n  var prefix = TxTypeToPrefix[txType];\n  if (prefix) {\n    return concatHex([prefix, rawTransaction]);\n  }\n  return rawTransaction;\n}\nfunction assertSerializableTX(tx) {\n  if (!tx.gas) {\n    throw new Error('\"gas\" is missing');\n  }\n  // ensure at least gasPrice or maxFeePerGas and maxPriorityFeePerGas are set\n  if (!(0, connect_1.isPresent)(tx.gasPrice) && (!(0, connect_1.isPresent)(tx.maxFeePerGas) || !(0, connect_1.isPresent)(tx.maxPriorityFeePerGas))) {\n    throw new Error('\"gasPrice\" or \"maxFeePerGas\" and \"maxPriorityFeePerGas\" are missing');\n  }\n  // ensure that gasPrice and maxFeePerGas are not set at the same time\n  if ((0, connect_1.isPresent)(tx.gasPrice) && ((0, connect_1.isPresent)(tx.maxFeePerGas) || (0, connect_1.isPresent)(tx.maxPriorityFeePerGas))) {\n    throw new Error('when \"maxFeePerGas\" or \"maxPriorityFeePerGas\" are set, \"gasPrice\" must not be set');\n  }\n  if (isNullOrUndefined(tx.nonce) || isNullOrUndefined(tx.chainId)) {\n    throw new Error('One of the values \"chainId\" or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify({\n      chainId: tx.chainId,\n      nonce: tx.nonce\n    }));\n  }\n  if (isLessThanZero(tx.nonce) || isLessThanZero(tx.gas) || isLessThanZero(tx.chainId)) {\n    throw new Error('Gas, nonce or chainId is less than than 0');\n  }\n  isPriceToLow(tx);\n}\nfunction isPriceToLow(tx) {\n  var prices = [tx.gasPrice, tx.maxFeePerGas, tx.maxPriorityFeePerGas].filter(function (price) {\n    return price !== undefined;\n  });\n  var isLow = false;\n  for (var _i = 0, prices_1 = prices; _i < prices_1.length; _i++) {\n    var price = prices_1[_i];\n    if (isLessThanZero(price)) {\n      throw new Error('GasPrice or maxFeePerGas or maxPriorityFeePerGas is less than than 0');\n    }\n  }\n  return isLow;\n}\nexports.isPriceToLow = isPriceToLow;\nfunction isEIP1559(tx) {\n  return (0, connect_1.isPresent)(tx.maxFeePerGas) && (0, connect_1.isPresent)(tx.maxPriorityFeePerGas);\n}\nfunction isCIP42(tx) {\n  return isEIP1559(tx) && ((0, connect_1.isPresent)(tx.feeCurrency) || (0, connect_1.isPresent)(tx.gatewayFeeRecipient) || (0, connect_1.isPresent)(tx.gatewayFee));\n}\nfunction concatHex(values) {\n  return \"0x\".concat(values.reduce(function (acc, x) {\n    return acc + x.replace('0x', '');\n  }, ''));\n}\nfunction isLessThanZero(value) {\n  if (isNullOrUndefined(value)) {\n    return true;\n  }\n  switch (typeof value) {\n    case 'string':\n    case 'number':\n      return Number(value) < 0;\n    default:\n      return (value === null || value === void 0 ? void 0 : value.lt(web3_1.default.utils.toBN(0))) || false;\n  }\n}\nfunction encodeTransaction(rlpEncoded, signature) {\n  return __awaiter(this, void 0, void 0, function () {\n    var sanitizedSignature, v, r, s, decodedTX, rawTx, rawTransaction, hash, baseTX, tx, result;\n    return __generator(this, function (_a) {\n      sanitizedSignature = signatureFormatter(signature, rlpEncoded.type);\n      v = sanitizedSignature.v;\n      r = sanitizedSignature.r;\n      s = sanitizedSignature.s;\n      decodedTX = prefixAwareRLPDecode(rlpEncoded.rlpEncode, rlpEncoded.type);\n      rawTx = (rlpEncoded.type === 'celo-legacy' ? decodedTX.slice(0, 9) : decodedTX).concat([v, r, s]);\n      rawTransaction = concatTypePrefixHex(eth_lib_1.RLP.encode(rawTx), rlpEncoded.type);\n      hash = getHashFromEncoded(rawTransaction);\n      baseTX = {\n        nonce: rlpEncoded.transaction.nonce.toString(),\n        gas: rlpEncoded.transaction.gas.toString(),\n        to: rlpEncoded.transaction.to.toString(),\n        value: rlpEncoded.transaction.value.toString(),\n        input: rlpEncoded.transaction.data,\n        v: v,\n        r: r,\n        s: s,\n        hash: hash\n      };\n      tx = baseTX;\n      if (rlpEncoded.type === 'eip1559' || rlpEncoded.type === 'cip42') {\n        tx = __assign(__assign({}, tx), {\n          // @ts-expect-error -- just a matter of how  this tx is built\n          maxFeePerGas: rlpEncoded.transaction.maxFeePerGas.toString(),\n          maxPriorityFeePerGas: rlpEncoded.transaction.maxPriorityFeePerGas.toString(),\n          accessList: (0, formatter_1.parseAccessList)(rlpEncoded.transaction.accessList || [])\n        });\n      }\n      if (rlpEncoded.type === 'cip42' || rlpEncoded.type === 'celo-legacy') {\n        tx = __assign(__assign({}, tx), {\n          // @ts-expect-error -- just a matter of how  this tx is built\n          feeCurrency: rlpEncoded.transaction.feeCurrency.toString(),\n          gatewayFeeRecipient: rlpEncoded.transaction.gatewayFeeRecipient.toString(),\n          gatewayFee: rlpEncoded.transaction.gatewayFee.toString()\n        });\n      }\n      if (rlpEncoded.type === 'celo-legacy') {\n        tx = __assign(__assign({}, tx), {\n          // @ts-expect-error -- just a matter of how  this tx is built\n          gasPrice: rlpEncoded.transaction.gasPrice.toString()\n        });\n      }\n      result = {\n        tx: tx,\n        raw: rawTransaction,\n        type: rlpEncoded.type\n      };\n      return [2 /*return*/, result];\n    });\n  });\n}\nexports.encodeTransaction = encodeTransaction;\n// new types have prefix but legacy does not\nfunction prefixAwareRLPDecode(rlpEncode, type) {\n  return type === 'celo-legacy' ? eth_lib_1.RLP.decode(rlpEncode) : eth_lib_1.RLP.decode(\"0x\".concat(rlpEncode.slice(4)));\n}\nfunction correctLengthWithSignatureOf(type) {\n  switch (type) {\n    case 'cip42':\n      return 15;\n    case 'celo-legacy':\n    case 'eip1559':\n      return 12;\n  }\n}\n// Based on the return type of ensureLeading0x this was not a Buffer\nfunction extractSignature(rawTx) {\n  var type = determineTXType(rawTx);\n  var rawValues = prefixAwareRLPDecode(rawTx, type);\n  var length = rawValues.length;\n  if (correctLengthWithSignatureOf(type) !== length) {\n    throw new Error(\"@extractSignature: provided transaction has \".concat(length, \" elements but \").concat(type, \" txs with a signature have \").concat(correctLengthWithSignatureOf(type), \" \").concat(JSON.stringify(rawValues)));\n  }\n  return extractSignatureFromDecoded(rawValues);\n}\nexports.extractSignature = extractSignature;\nfunction extractSignatureFromDecoded(rawValues) {\n  // signature is always (for the tx we support so far) the last three elements of the array in order v, r, s,\n  var v = rawValues.at(-3);\n  var r = rawValues.at(-2);\n  var s = rawValues.at(-1);\n  // https://github.com/wagmi-dev/viem/blob/993321689b3e2220976504e7e170fe47731297ce/src/utils/transaction/parseTransaction.ts#L281\n  // Account.recover cannot handle canonicalized signatures\n  // A canonicalized signature may have the first byte removed if its value is 0\n  r = (0, address_1.ensureLeading0x)((0, address_1.trimLeading0x)(r).padStart(64, '0'));\n  s = (0, address_1.ensureLeading0x)((0, address_1.trimLeading0x)(s).padStart(64, '0'));\n  return {\n    v: v,\n    r: r,\n    s: s\n  };\n}\n// Recover transaction and sender address from a raw transaction.\n// This is used for testing.\nfunction recoverTransaction(rawTx) {\n  if (!rawTx.startsWith('0x')) {\n    throw new Error('rawTx must start with 0x');\n  }\n  switch (determineTXType(rawTx)) {\n    case 'cip42':\n      return recoverTransactionCIP42(rawTx);\n    case 'eip1559':\n      return recoverTransactionEIP1559(rawTx);\n    default:\n      var rawValues = eth_lib_1.RLP.decode(rawTx);\n      debug('signing-utils@recoverTransaction: values are %s', rawValues);\n      var recovery = eth_lib_1.bytes.toNumber(rawValues[9]);\n      // tslint:disable-next-line:no-bitwise\n      var chainId = eth_lib_1.bytes.fromNumber(recovery - 35 >> 1);\n      var celoTx = {\n        type: 'celo-legacy',\n        nonce: rawValues[0].toLowerCase() === '0x' ? 0 : parseInt(rawValues[0], 16),\n        gasPrice: rawValues[1].toLowerCase() === '0x' ? 0 : parseInt(rawValues[1], 16),\n        gas: rawValues[2].toLowerCase() === '0x' ? 0 : parseInt(rawValues[2], 16),\n        feeCurrency: rawValues[3],\n        gatewayFeeRecipient: rawValues[4],\n        gatewayFee: rawValues[5],\n        to: rawValues[6],\n        value: rawValues[7],\n        data: rawValues[8],\n        chainId: chainId\n      };\n      var _a = extractSignatureFromDecoded(rawValues),\n        r = _a.r,\n        v = _a.v,\n        s = _a.s;\n      var signature = eth_lib_1.account.encodeSignature([v, r, s]);\n      var extraData = recovery < 35 ? [] : [chainId, '0x', '0x'];\n      var signingData = rawValues.slice(0, 9).concat(extraData);\n      var signingDataHex = eth_lib_1.RLP.encode(signingData);\n      var signer = eth_lib_1.account.recover(getHashFromEncoded(signingDataHex), signature);\n      return [celoTx, signer];\n  }\n}\nexports.recoverTransaction = recoverTransaction;\n// inspired by @ethereumjs/tx\nfunction getPublicKeyofSignerFromTx(transactionArray) {\n  var base = transactionArray.slice(0, 12); // 12 is length of cip42 without vrs fields\n  var message = concatHex([TxTypeToPrefix.cip42, eth_lib_1.RLP.encode(base).slice(2)]);\n  var msgHash = (0, keccak_1.keccak256)((0, utils_js_1.hexToBytes)(message));\n  var _a = extractSignatureFromDecoded(transactionArray),\n    v = _a.v,\n    r = _a.r,\n    s = _a.s;\n  try {\n    return (0, util_1.ecrecover)((0, util_1.toBuffer)(msgHash), v === '0x' || v === undefined ? BigInt(0) : BigInt(1), (0, util_1.toBuffer)(r), (0, util_1.toBuffer)(s));\n  } catch (e) {\n    throw new Error(e);\n  }\n}\nfunction getSignerFromTxCIP42(serializedTransaction) {\n  var transactionArray = eth_lib_1.RLP.decode(\"0x\".concat(serializedTransaction.slice(4)));\n  var signer = getPublicKeyofSignerFromTx(transactionArray);\n  return (0, util_1.toChecksumAddress)(util_1.Address.fromPublicKey(signer).toString());\n}\nexports.getSignerFromTxCIP42 = getSignerFromTxCIP42;\nfunction determineTXType(serializedTransaction) {\n  var prefix = serializedTransaction.slice(0, 4);\n  if (prefix === '0x02') {\n    return 'eip1559';\n  } else if (prefix === '0x7c') {\n    return 'cip42';\n  }\n  return 'celo-legacy';\n}\nfunction vrsForRecovery(vRaw, r, s) {\n  var v = vRaw === '0x' || (0, formatter_1.hexToNumber)(vRaw) === 0 ? Y_PARITY_EIP_2098 : Y_PARITY_EIP_2098 + 1;\n  return {\n    v: v,\n    r: r,\n    s: s,\n    yParity: v === Y_PARITY_EIP_2098 ? 0 : 1\n  };\n}\nfunction recoverTransactionCIP42(serializedTransaction) {\n  var transactionArray = prefixAwareRLPDecode(serializedTransaction, 'cip42');\n  debug('signing-utils@recoverTransactionCIP42: values are %s', transactionArray);\n  if (transactionArray.length !== 15 && transactionArray.length !== 12) {\n    throw new Error(\"Invalid transaction length for type CIP42: \".concat(transactionArray.length, \" instead of 15 or 12. array: \").concat(transactionArray));\n  }\n  var chainId = transactionArray[0],\n    nonce = transactionArray[1],\n    maxPriorityFeePerGas = transactionArray[2],\n    maxFeePerGas = transactionArray[3],\n    gas = transactionArray[4],\n    feeCurrency = transactionArray[5],\n    gatewayFeeRecipient = transactionArray[6],\n    gatewayFee = transactionArray[7],\n    to = transactionArray[8],\n    value = transactionArray[9],\n    data = transactionArray[10],\n    accessList = transactionArray[11],\n    vRaw = transactionArray[12],\n    r = transactionArray[13],\n    s = transactionArray[14];\n  var celoTX = __assign({\n    type: 'cip42',\n    nonce: nonce.toLowerCase() === '0x' ? 0 : parseInt(nonce, 16),\n    maxPriorityFeePerGas: maxPriorityFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxPriorityFeePerGas, 16),\n    maxFeePerGas: maxFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxFeePerGas, 16),\n    gas: gas.toLowerCase() === '0x' ? 0 : parseInt(gas, 16),\n    feeCurrency: feeCurrency,\n    gatewayFeeRecipient: gatewayFeeRecipient,\n    gatewayFee: gatewayFee,\n    to: to,\n    value: value.toLowerCase() === '0x' ? 0 : parseInt(value, 16),\n    data: data,\n    chainId: chainId.toLowerCase() === '0x' ? 0 : parseInt(chainId, 16),\n    accessList: (0, formatter_1.parseAccessList)(accessList)\n  }, vrsForRecovery(vRaw, r, s));\n  var signer = transactionArray.length === 15 ? getSignerFromTxCIP42(serializedTransaction) : 'unsigned';\n  return [celoTX, signer];\n}\nfunction recoverTransactionEIP1559(serializedTransaction) {\n  var transactionArray = prefixAwareRLPDecode(serializedTransaction, 'eip1559');\n  debug('signing-utils@recoverTransactionEIP1559: values are %s', transactionArray);\n  var chainId = transactionArray[0],\n    nonce = transactionArray[1],\n    maxPriorityFeePerGas = transactionArray[2],\n    maxFeePerGas = transactionArray[3],\n    gas = transactionArray[4],\n    to = transactionArray[5],\n    value = transactionArray[6],\n    data = transactionArray[7],\n    accessList = transactionArray[8],\n    vRaw = transactionArray[9],\n    r = transactionArray[10],\n    s = transactionArray[11];\n  var celoTx = __assign({\n    type: 'eip1559',\n    nonce: nonce.toLowerCase() === '0x' ? 0 : parseInt(nonce, 16),\n    gas: gas.toLowerCase() === '0x' ? 0 : parseInt(gas, 16),\n    maxPriorityFeePerGas: maxPriorityFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxPriorityFeePerGas, 16),\n    maxFeePerGas: maxFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxFeePerGas, 16),\n    to: to,\n    value: value.toLowerCase() === '0x' ? 0 : parseInt(value, 16),\n    data: data,\n    chainId: chainId.toLowerCase() === '0x' ? 0 : parseInt(chainId, 16),\n    accessList: (0, formatter_1.parseAccessList)(accessList)\n  }, vrsForRecovery(vRaw, r, s));\n  var web3Account = new web3_eth_accounts_1.default();\n  var signer = web3Account.recoverTransaction(serializedTransaction);\n  return [celoTx, signer];\n}\nfunction recoverMessageSigner(signingDataHex, signedData) {\n  var dataBuff = (0, util_1.toBuffer)(signingDataHex);\n  var msgHashBuff = (0, util_1.hashPersonalMessage)(dataBuff);\n  var signature = (0, util_1.fromRpcSig)(signedData);\n  var publicKey = (0, util_1.ecrecover)(msgHashBuff, signature.v, signature.r, signature.s);\n  var address = (0, util_1.pubToAddress)(publicKey, true);\n  return (0, address_1.ensureLeading0x)(address.toString('hex'));\n}\nexports.recoverMessageSigner = recoverMessageSigner;\nfunction verifyEIP712TypedDataSigner(typedData, signedData, expectedAddress) {\n  var dataHex = (0, util_1.bufferToHex)((0, sign_typed_data_utils_1.generateTypedDataHash)(typedData));\n  return verifySignatureWithoutPrefix(dataHex, signedData, expectedAddress);\n}\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\nfunction verifySignatureWithoutPrefix(messageHash, signature, signer) {\n  try {\n    (0, signatureUtils_1.parseSignatureWithoutPrefix)(messageHash, signature, signer);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nexports.verifySignatureWithoutPrefix = verifySignatureWithoutPrefix;\nfunction decodeSig(sig) {\n  var _a = eth_lib_1.account.decodeSignature(sig),\n    v = _a[0],\n    r = _a[1],\n    s = _a[2];\n  return {\n    v: parseInt(v, 16),\n    r: (0, util_1.toBuffer)(r),\n    s: (0, util_1.toBuffer)(s)\n  };\n}\nexports.decodeSig = decodeSig;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__importDefault","mod","__esModule","defineProperty","exports","decodeSig","verifySignatureWithoutPrefix","verifyEIP712TypedDataSigner","recoverMessageSigner","getSignerFromTxCIP42","recoverTransaction","extractSignature","encodeTransaction","isPriceToLow","rlpEncodedTx","stringNumberOrBNToHex","getHashFromEncoded","chainIdTransformationForSigning","thirtyTwo","sixtyFour","publicKeyPrefix","address_1","require","connect_1","formatter_1","sign_typed_data_utils_1","signatureUtils_1","util_1","debug_1","eth_lib_1","keccak_1","utils_js_1","web3_1","web3_eth_accounts_1","debug","default","Y_PARITY_EIP_2098","isNullOrUndefined","undefined","chainId","rlpEncode","hash","keccak256","trimLeadingZero","hex","startsWith","ensureLeading0x","slice","makeEven","replace","signatureFormatter","signature","type","stringNumberToHex","r","toString","num","auxNumber","Number","utils","numberToHex","tx","assertSerializableTX","transaction","inputCeloTxFormatter","to","bytes","fromNat","toLowerCase","nonce","data","gas","feeCurrency","gatewayFeeRecipient","gatewayFee","gasPrice","maxFeePerGas","maxPriorityFeePerGas","isCIP42","RLP","encode","accessList","concatHex","isEIP1559","TxTypeToPrefix","concatTypePrefixHex","rawTransaction","txType","prefix","Error","isPresent","JSON","stringify","isLessThanZero","prices","filter","price","isLow","_i","prices_1","values","concat","reduce","acc","x","lt","toBN","rlpEncoded","sanitizedSignature","decodedTX","rawTx","baseTX","_a","prefixAwareRLPDecode","input","parseAccessList","raw","decode","correctLengthWithSignatureOf","determineTXType","rawValues","extractSignatureFromDecoded","at","trimLeading0x","padStart","recoverTransactionCIP42","recoverTransactionEIP1559","recovery","toNumber","fromNumber","celoTx","parseInt","account","encodeSignature","extraData","signingData","signingDataHex","signer","recover","getPublicKeyofSignerFromTx","transactionArray","base","message","cip42","msgHash","hexToBytes","ecrecover","toBuffer","BigInt","serializedTransaction","toChecksumAddress","Address","fromPublicKey","vrsForRecovery","vRaw","hexToNumber","yParity","celoTX","web3Account","signedData","dataBuff","msgHashBuff","hashPersonalMessage","fromRpcSig","publicKey","address","pubToAddress","typedData","expectedAddress","dataHex","bufferToHex","generateTypedDataHash","messageHash","parseSignatureWithoutPrefix","error","sig","decodeSignature"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/wallet-base/lib/signing-utils.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeSig = exports.verifySignatureWithoutPrefix = exports.verifyEIP712TypedDataSigner = exports.recoverMessageSigner = exports.getSignerFromTxCIP42 = exports.recoverTransaction = exports.extractSignature = exports.encodeTransaction = exports.isPriceToLow = exports.rlpEncodedTx = exports.stringNumberOrBNToHex = exports.getHashFromEncoded = exports.chainIdTransformationForSigning = exports.thirtyTwo = exports.sixtyFour = exports.publicKeyPrefix = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar connect_1 = require(\"@celo/connect\");\nvar formatter_1 = require(\"@celo/connect/lib/utils/formatter\");\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\nvar util_1 = require(\"@ethereumjs/util\");\nvar debug_1 = __importDefault(require(\"debug\"));\n// @ts-ignore-next-line eth-lib types not found\nvar eth_lib_1 = require(\"eth-lib\");\nvar keccak_1 = require(\"ethereum-cryptography/keccak\");\nvar utils_js_1 = require(\"ethereum-cryptography/utils.js\");\nvar web3_1 = __importDefault(require(\"web3\")); // TODO try to do this without web3 direct\nvar web3_eth_accounts_1 = __importDefault(require(\"web3-eth-accounts\"));\nvar debug = (0, debug_1.default)('wallet-base:tx:sign');\n// Original code taken from\n// https://github.com/ethereum/web3.js/blob/1.x/packages/web3-eth-accounts/src/index.js\n// 0x04 prefix indicates that the key is not compressed\n// https://tools.ietf.org/html/rfc5480#section-2.2\nexports.publicKeyPrefix = 0x04;\nexports.sixtyFour = 64;\nexports.thirtyTwo = 32;\nvar Y_PARITY_EIP_2098 = 27;\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n// Simple replay attack protection\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md\nfunction chainIdTransformationForSigning(chainId) {\n    return chainId * 2 + 35;\n}\nexports.chainIdTransformationForSigning = chainIdTransformationForSigning;\nfunction getHashFromEncoded(rlpEncode) {\n    return eth_lib_1.hash.keccak256(rlpEncode);\n}\nexports.getHashFromEncoded = getHashFromEncoded;\nfunction trimLeadingZero(hex) {\n    while (hex && hex.startsWith('0x0')) {\n        hex = (0, address_1.ensureLeading0x)(hex.slice(3));\n    }\n    return hex;\n}\nfunction makeEven(hex) {\n    if (hex.length % 2 === 1) {\n        hex = hex.replace('0x', '0x0');\n    }\n    return hex;\n}\nfunction signatureFormatter(signature, type) {\n    var v = signature.v;\n    if (type !== 'celo-legacy') {\n        v = signature.v === Y_PARITY_EIP_2098 ? 0 : 1;\n    }\n    return {\n        v: stringNumberToHex(v),\n        r: makeEven(trimLeadingZero((0, address_1.ensureLeading0x)(signature.r.toString('hex')))),\n        s: makeEven(trimLeadingZero((0, address_1.ensureLeading0x)(signature.s.toString('hex')))),\n    };\n}\nfunction stringNumberOrBNToHex(num) {\n    if (typeof num === 'string' || typeof num === 'number' || num === undefined) {\n        return stringNumberToHex(num);\n    }\n    else {\n        return makeEven(\"0x\" + num.toString(16));\n    }\n}\nexports.stringNumberOrBNToHex = stringNumberOrBNToHex;\nfunction stringNumberToHex(num) {\n    var auxNumber = Number(num);\n    if (num === '0x' || num === undefined || auxNumber === 0) {\n        return '0x';\n    }\n    return makeEven(web3_1.default.utils.numberToHex(num));\n}\nfunction rlpEncodedTx(tx) {\n    assertSerializableTX(tx);\n    var transaction = (0, formatter_1.inputCeloTxFormatter)(tx);\n    transaction.to = eth_lib_1.bytes.fromNat(tx.to || '0x').toLowerCase();\n    transaction.nonce = Number((tx.nonce !== '0x' ? tx.nonce : 0) || 0);\n    transaction.data = eth_lib_1.bytes.fromNat(tx.data || '0x').toLowerCase();\n    transaction.value = stringNumberOrBNToHex(tx.value);\n    transaction.gas = stringNumberOrBNToHex(tx.gas);\n    transaction.chainId = tx.chainId || 1;\n    // Celo Specific\n    transaction.feeCurrency = eth_lib_1.bytes.fromNat(tx.feeCurrency || '0x').toLowerCase();\n    transaction.gatewayFeeRecipient = eth_lib_1.bytes.fromNat(tx.gatewayFeeRecipient || '0x').toLowerCase();\n    transaction.gatewayFee = stringNumberOrBNToHex(tx.gatewayFee);\n    // Legacy\n    transaction.gasPrice = stringNumberOrBNToHex(tx.gasPrice);\n    // EIP1559 / CIP42\n    transaction.maxFeePerGas = stringNumberOrBNToHex(tx.maxFeePerGas);\n    transaction.maxPriorityFeePerGas = stringNumberOrBNToHex(tx.maxPriorityFeePerGas);\n    var rlpEncode;\n    if (isCIP42(tx)) {\n        // There shall be a typed transaction with the code 0x7c that has the following format:\n        // 0x7c || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, feecurrency, gatewayFeeRecipient, gatewayfee, destination, amount, data, access_list, signature_y_parity, signature_r, signature_s]).\n        // This will be in addition to the type 0x02 transaction as specified in EIP-1559.\n        rlpEncode = eth_lib_1.RLP.encode([\n            stringNumberToHex(transaction.chainId),\n            stringNumberToHex(transaction.nonce),\n            transaction.maxPriorityFeePerGas || '0x',\n            transaction.maxFeePerGas || '0x',\n            transaction.gas || '0x',\n            transaction.feeCurrency || '0x',\n            transaction.gatewayFeeRecipient || '0x',\n            transaction.gatewayFee || '0x',\n            transaction.to || '0x',\n            transaction.value || '0x',\n            transaction.data || '0x',\n            transaction.accessList || [],\n        ]);\n        return { transaction: transaction, rlpEncode: concatHex(['0x7c', rlpEncode]), type: 'cip42' };\n    }\n    else if (isEIP1559(tx)) {\n        // https://eips.ethereum.org/EIPS/eip-1559\n        // 0x02 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, destination, amount, data, access_list, signature_y_parity, signature_r, signature_s]).\n        rlpEncode = eth_lib_1.RLP.encode([\n            stringNumberToHex(transaction.chainId),\n            stringNumberToHex(transaction.nonce),\n            transaction.maxPriorityFeePerGas || '0x',\n            transaction.maxFeePerGas || '0x',\n            transaction.gas || '0x',\n            transaction.to || '0x',\n            transaction.value || '0x',\n            transaction.data || '0x',\n            transaction.accessList || [],\n        ]);\n        return { transaction: transaction, rlpEncode: concatHex(['0x02', rlpEncode]), type: 'eip1559' };\n    }\n    else {\n        // This order should match the order in Geth.\n        // https://github.com/celo-org/celo-blockchain/blob/027dba2e4584936cc5a8e8993e4e27d28d5247b8/core/types/transaction.go#L65\n        rlpEncode = eth_lib_1.RLP.encode([\n            stringNumberToHex(transaction.nonce),\n            transaction.gasPrice,\n            transaction.gas,\n            transaction.feeCurrency,\n            transaction.gatewayFeeRecipient,\n            transaction.gatewayFee,\n            transaction.to,\n            transaction.value,\n            transaction.data,\n            stringNumberToHex(transaction.chainId),\n            '0x',\n            '0x',\n        ]);\n        return { transaction: transaction, rlpEncode: rlpEncode, type: 'celo-legacy' };\n    }\n}\nexports.rlpEncodedTx = rlpEncodedTx;\nvar TxTypeToPrefix;\n(function (TxTypeToPrefix) {\n    TxTypeToPrefix[\"celo-legacy\"] = \"\";\n    TxTypeToPrefix[\"cip42\"] = \"0x7c\";\n    TxTypeToPrefix[\"eip1559\"] = \"0x02\";\n})(TxTypeToPrefix || (TxTypeToPrefix = {}));\nfunction concatTypePrefixHex(rawTransaction, txType) {\n    var prefix = TxTypeToPrefix[txType];\n    if (prefix) {\n        return concatHex([prefix, rawTransaction]);\n    }\n    return rawTransaction;\n}\nfunction assertSerializableTX(tx) {\n    if (!tx.gas) {\n        throw new Error('\"gas\" is missing');\n    }\n    // ensure at least gasPrice or maxFeePerGas and maxPriorityFeePerGas are set\n    if (!(0, connect_1.isPresent)(tx.gasPrice) &&\n        (!(0, connect_1.isPresent)(tx.maxFeePerGas) || !(0, connect_1.isPresent)(tx.maxPriorityFeePerGas))) {\n        throw new Error('\"gasPrice\" or \"maxFeePerGas\" and \"maxPriorityFeePerGas\" are missing');\n    }\n    // ensure that gasPrice and maxFeePerGas are not set at the same time\n    if ((0, connect_1.isPresent)(tx.gasPrice) &&\n        ((0, connect_1.isPresent)(tx.maxFeePerGas) || (0, connect_1.isPresent)(tx.maxPriorityFeePerGas))) {\n        throw new Error('when \"maxFeePerGas\" or \"maxPriorityFeePerGas\" are set, \"gasPrice\" must not be set');\n    }\n    if (isNullOrUndefined(tx.nonce) || isNullOrUndefined(tx.chainId)) {\n        throw new Error('One of the values \"chainId\" or \"nonce\" couldn\\'t be fetched: ' +\n            JSON.stringify({ chainId: tx.chainId, nonce: tx.nonce }));\n    }\n    if (isLessThanZero(tx.nonce) || isLessThanZero(tx.gas) || isLessThanZero(tx.chainId)) {\n        throw new Error('Gas, nonce or chainId is less than than 0');\n    }\n    isPriceToLow(tx);\n}\nfunction isPriceToLow(tx) {\n    var prices = [tx.gasPrice, tx.maxFeePerGas, tx.maxPriorityFeePerGas].filter(function (price) { return price !== undefined; });\n    var isLow = false;\n    for (var _i = 0, prices_1 = prices; _i < prices_1.length; _i++) {\n        var price = prices_1[_i];\n        if (isLessThanZero(price)) {\n            throw new Error('GasPrice or maxFeePerGas or maxPriorityFeePerGas is less than than 0');\n        }\n    }\n    return isLow;\n}\nexports.isPriceToLow = isPriceToLow;\nfunction isEIP1559(tx) {\n    return (0, connect_1.isPresent)(tx.maxFeePerGas) && (0, connect_1.isPresent)(tx.maxPriorityFeePerGas);\n}\nfunction isCIP42(tx) {\n    return (isEIP1559(tx) &&\n        ((0, connect_1.isPresent)(tx.feeCurrency) || (0, connect_1.isPresent)(tx.gatewayFeeRecipient) || (0, connect_1.isPresent)(tx.gatewayFee)));\n}\nfunction concatHex(values) {\n    return \"0x\".concat(values.reduce(function (acc, x) { return acc + x.replace('0x', ''); }, ''));\n}\nfunction isLessThanZero(value) {\n    if (isNullOrUndefined(value)) {\n        return true;\n    }\n    switch (typeof value) {\n        case 'string':\n        case 'number':\n            return Number(value) < 0;\n        default:\n            return (value === null || value === void 0 ? void 0 : value.lt(web3_1.default.utils.toBN(0))) || false;\n    }\n}\nfunction encodeTransaction(rlpEncoded, signature) {\n    return __awaiter(this, void 0, void 0, function () {\n        var sanitizedSignature, v, r, s, decodedTX, rawTx, rawTransaction, hash, baseTX, tx, result;\n        return __generator(this, function (_a) {\n            sanitizedSignature = signatureFormatter(signature, rlpEncoded.type);\n            v = sanitizedSignature.v;\n            r = sanitizedSignature.r;\n            s = sanitizedSignature.s;\n            decodedTX = prefixAwareRLPDecode(rlpEncoded.rlpEncode, rlpEncoded.type);\n            rawTx = (rlpEncoded.type === 'celo-legacy' ? decodedTX.slice(0, 9) : decodedTX).concat([\n                v,\n                r,\n                s,\n            ]);\n            rawTransaction = concatTypePrefixHex(eth_lib_1.RLP.encode(rawTx), rlpEncoded.type);\n            hash = getHashFromEncoded(rawTransaction);\n            baseTX = {\n                nonce: rlpEncoded.transaction.nonce.toString(),\n                gas: rlpEncoded.transaction.gas.toString(),\n                to: rlpEncoded.transaction.to.toString(),\n                value: rlpEncoded.transaction.value.toString(),\n                input: rlpEncoded.transaction.data,\n                v: v,\n                r: r,\n                s: s,\n                hash: hash,\n            };\n            tx = baseTX;\n            if (rlpEncoded.type === 'eip1559' || rlpEncoded.type === 'cip42') {\n                tx = __assign(__assign({}, tx), { \n                    // @ts-expect-error -- just a matter of how  this tx is built\n                    maxFeePerGas: rlpEncoded.transaction.maxFeePerGas.toString(), maxPriorityFeePerGas: rlpEncoded.transaction.maxPriorityFeePerGas.toString(), accessList: (0, formatter_1.parseAccessList)(rlpEncoded.transaction.accessList || []) });\n            }\n            if (rlpEncoded.type === 'cip42' || rlpEncoded.type === 'celo-legacy') {\n                tx = __assign(__assign({}, tx), { \n                    // @ts-expect-error -- just a matter of how  this tx is built\n                    feeCurrency: rlpEncoded.transaction.feeCurrency.toString(), gatewayFeeRecipient: rlpEncoded.transaction.gatewayFeeRecipient.toString(), gatewayFee: rlpEncoded.transaction.gatewayFee.toString() });\n            }\n            if (rlpEncoded.type === 'celo-legacy') {\n                tx = __assign(__assign({}, tx), { \n                    // @ts-expect-error -- just a matter of how  this tx is built\n                    gasPrice: rlpEncoded.transaction.gasPrice.toString() });\n            }\n            result = {\n                tx: tx,\n                raw: rawTransaction,\n                type: rlpEncoded.type,\n            };\n            return [2 /*return*/, result];\n        });\n    });\n}\nexports.encodeTransaction = encodeTransaction;\n// new types have prefix but legacy does not\nfunction prefixAwareRLPDecode(rlpEncode, type) {\n    return type === 'celo-legacy' ? eth_lib_1.RLP.decode(rlpEncode) : eth_lib_1.RLP.decode(\"0x\".concat(rlpEncode.slice(4)));\n}\nfunction correctLengthWithSignatureOf(type) {\n    switch (type) {\n        case 'cip42':\n            return 15;\n        case 'celo-legacy':\n        case 'eip1559':\n            return 12;\n    }\n}\n// Based on the return type of ensureLeading0x this was not a Buffer\nfunction extractSignature(rawTx) {\n    var type = determineTXType(rawTx);\n    var rawValues = prefixAwareRLPDecode(rawTx, type);\n    var length = rawValues.length;\n    if (correctLengthWithSignatureOf(type) !== length) {\n        throw new Error(\"@extractSignature: provided transaction has \".concat(length, \" elements but \").concat(type, \" txs with a signature have \").concat(correctLengthWithSignatureOf(type), \" \").concat(JSON.stringify(rawValues)));\n    }\n    return extractSignatureFromDecoded(rawValues);\n}\nexports.extractSignature = extractSignature;\nfunction extractSignatureFromDecoded(rawValues) {\n    // signature is always (for the tx we support so far) the last three elements of the array in order v, r, s,\n    var v = rawValues.at(-3);\n    var r = rawValues.at(-2);\n    var s = rawValues.at(-1);\n    // https://github.com/wagmi-dev/viem/blob/993321689b3e2220976504e7e170fe47731297ce/src/utils/transaction/parseTransaction.ts#L281\n    // Account.recover cannot handle canonicalized signatures\n    // A canonicalized signature may have the first byte removed if its value is 0\n    r = (0, address_1.ensureLeading0x)((0, address_1.trimLeading0x)(r).padStart(64, '0'));\n    s = (0, address_1.ensureLeading0x)((0, address_1.trimLeading0x)(s).padStart(64, '0'));\n    return {\n        v: v,\n        r: r,\n        s: s,\n    };\n}\n// Recover transaction and sender address from a raw transaction.\n// This is used for testing.\nfunction recoverTransaction(rawTx) {\n    if (!rawTx.startsWith('0x')) {\n        throw new Error('rawTx must start with 0x');\n    }\n    switch (determineTXType(rawTx)) {\n        case 'cip42':\n            return recoverTransactionCIP42(rawTx);\n        case 'eip1559':\n            return recoverTransactionEIP1559(rawTx);\n        default:\n            var rawValues = eth_lib_1.RLP.decode(rawTx);\n            debug('signing-utils@recoverTransaction: values are %s', rawValues);\n            var recovery = eth_lib_1.bytes.toNumber(rawValues[9]);\n            // tslint:disable-next-line:no-bitwise\n            var chainId = eth_lib_1.bytes.fromNumber((recovery - 35) >> 1);\n            var celoTx = {\n                type: 'celo-legacy',\n                nonce: rawValues[0].toLowerCase() === '0x' ? 0 : parseInt(rawValues[0], 16),\n                gasPrice: rawValues[1].toLowerCase() === '0x' ? 0 : parseInt(rawValues[1], 16),\n                gas: rawValues[2].toLowerCase() === '0x' ? 0 : parseInt(rawValues[2], 16),\n                feeCurrency: rawValues[3],\n                gatewayFeeRecipient: rawValues[4],\n                gatewayFee: rawValues[5],\n                to: rawValues[6],\n                value: rawValues[7],\n                data: rawValues[8],\n                chainId: chainId,\n            };\n            var _a = extractSignatureFromDecoded(rawValues), r = _a.r, v = _a.v, s = _a.s;\n            var signature = eth_lib_1.account.encodeSignature([v, r, s]);\n            var extraData = recovery < 35 ? [] : [chainId, '0x', '0x'];\n            var signingData = rawValues.slice(0, 9).concat(extraData);\n            var signingDataHex = eth_lib_1.RLP.encode(signingData);\n            var signer = eth_lib_1.account.recover(getHashFromEncoded(signingDataHex), signature);\n            return [celoTx, signer];\n    }\n}\nexports.recoverTransaction = recoverTransaction;\n// inspired by @ethereumjs/tx\nfunction getPublicKeyofSignerFromTx(transactionArray) {\n    var base = transactionArray.slice(0, 12); // 12 is length of cip42 without vrs fields\n    var message = concatHex([TxTypeToPrefix.cip42, eth_lib_1.RLP.encode(base).slice(2)]);\n    var msgHash = (0, keccak_1.keccak256)((0, utils_js_1.hexToBytes)(message));\n    var _a = extractSignatureFromDecoded(transactionArray), v = _a.v, r = _a.r, s = _a.s;\n    try {\n        return (0, util_1.ecrecover)((0, util_1.toBuffer)(msgHash), v === '0x' || v === undefined ? BigInt(0) : BigInt(1), (0, util_1.toBuffer)(r), (0, util_1.toBuffer)(s));\n    }\n    catch (e) {\n        throw new Error(e);\n    }\n}\nfunction getSignerFromTxCIP42(serializedTransaction) {\n    var transactionArray = eth_lib_1.RLP.decode(\"0x\".concat(serializedTransaction.slice(4)));\n    var signer = getPublicKeyofSignerFromTx(transactionArray);\n    return (0, util_1.toChecksumAddress)(util_1.Address.fromPublicKey(signer).toString());\n}\nexports.getSignerFromTxCIP42 = getSignerFromTxCIP42;\nfunction determineTXType(serializedTransaction) {\n    var prefix = serializedTransaction.slice(0, 4);\n    if (prefix === '0x02') {\n        return 'eip1559';\n    }\n    else if (prefix === '0x7c') {\n        return 'cip42';\n    }\n    return 'celo-legacy';\n}\nfunction vrsForRecovery(vRaw, r, s) {\n    var v = vRaw === '0x' || (0, formatter_1.hexToNumber)(vRaw) === 0 ? Y_PARITY_EIP_2098 : Y_PARITY_EIP_2098 + 1;\n    return {\n        v: v,\n        r: r,\n        s: s,\n        yParity: v === Y_PARITY_EIP_2098 ? 0 : 1,\n    };\n}\nfunction recoverTransactionCIP42(serializedTransaction) {\n    var transactionArray = prefixAwareRLPDecode(serializedTransaction, 'cip42');\n    debug('signing-utils@recoverTransactionCIP42: values are %s', transactionArray);\n    if (transactionArray.length !== 15 && transactionArray.length !== 12) {\n        throw new Error(\"Invalid transaction length for type CIP42: \".concat(transactionArray.length, \" instead of 15 or 12. array: \").concat(transactionArray));\n    }\n    var chainId = transactionArray[0], nonce = transactionArray[1], maxPriorityFeePerGas = transactionArray[2], maxFeePerGas = transactionArray[3], gas = transactionArray[4], feeCurrency = transactionArray[5], gatewayFeeRecipient = transactionArray[6], gatewayFee = transactionArray[7], to = transactionArray[8], value = transactionArray[9], data = transactionArray[10], accessList = transactionArray[11], vRaw = transactionArray[12], r = transactionArray[13], s = transactionArray[14];\n    var celoTX = __assign({ type: 'cip42', nonce: nonce.toLowerCase() === '0x' ? 0 : parseInt(nonce, 16), maxPriorityFeePerGas: maxPriorityFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxPriorityFeePerGas, 16), maxFeePerGas: maxFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxFeePerGas, 16), gas: gas.toLowerCase() === '0x' ? 0 : parseInt(gas, 16), feeCurrency: feeCurrency, gatewayFeeRecipient: gatewayFeeRecipient, gatewayFee: gatewayFee, to: to, value: value.toLowerCase() === '0x' ? 0 : parseInt(value, 16), data: data, chainId: chainId.toLowerCase() === '0x' ? 0 : parseInt(chainId, 16), accessList: (0, formatter_1.parseAccessList)(accessList) }, vrsForRecovery(vRaw, r, s));\n    var signer = transactionArray.length === 15 ? getSignerFromTxCIP42(serializedTransaction) : 'unsigned';\n    return [celoTX, signer];\n}\nfunction recoverTransactionEIP1559(serializedTransaction) {\n    var transactionArray = prefixAwareRLPDecode(serializedTransaction, 'eip1559');\n    debug('signing-utils@recoverTransactionEIP1559: values are %s', transactionArray);\n    var chainId = transactionArray[0], nonce = transactionArray[1], maxPriorityFeePerGas = transactionArray[2], maxFeePerGas = transactionArray[3], gas = transactionArray[4], to = transactionArray[5], value = transactionArray[6], data = transactionArray[7], accessList = transactionArray[8], vRaw = transactionArray[9], r = transactionArray[10], s = transactionArray[11];\n    var celoTx = __assign({ type: 'eip1559', nonce: nonce.toLowerCase() === '0x' ? 0 : parseInt(nonce, 16), gas: gas.toLowerCase() === '0x' ? 0 : parseInt(gas, 16), maxPriorityFeePerGas: maxPriorityFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxPriorityFeePerGas, 16), maxFeePerGas: maxFeePerGas.toLowerCase() === '0x' ? 0 : parseInt(maxFeePerGas, 16), to: to, value: value.toLowerCase() === '0x' ? 0 : parseInt(value, 16), data: data, chainId: chainId.toLowerCase() === '0x' ? 0 : parseInt(chainId, 16), accessList: (0, formatter_1.parseAccessList)(accessList) }, vrsForRecovery(vRaw, r, s));\n    var web3Account = new web3_eth_accounts_1.default();\n    var signer = web3Account.recoverTransaction(serializedTransaction);\n    return [celoTx, signer];\n}\nfunction recoverMessageSigner(signingDataHex, signedData) {\n    var dataBuff = (0, util_1.toBuffer)(signingDataHex);\n    var msgHashBuff = (0, util_1.hashPersonalMessage)(dataBuff);\n    var signature = (0, util_1.fromRpcSig)(signedData);\n    var publicKey = (0, util_1.ecrecover)(msgHashBuff, signature.v, signature.r, signature.s);\n    var address = (0, util_1.pubToAddress)(publicKey, true);\n    return (0, address_1.ensureLeading0x)(address.toString('hex'));\n}\nexports.recoverMessageSigner = recoverMessageSigner;\nfunction verifyEIP712TypedDataSigner(typedData, signedData, expectedAddress) {\n    var dataHex = (0, util_1.bufferToHex)((0, sign_typed_data_utils_1.generateTypedDataHash)(typedData));\n    return verifySignatureWithoutPrefix(dataHex, signedData, expectedAddress);\n}\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\nfunction verifySignatureWithoutPrefix(messageHash, signature, signer) {\n    try {\n        (0, signatureUtils_1.parseSignatureWithoutPrefix)(messageHash, signature, signer);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.verifySignatureWithoutPrefix = verifySignatureWithoutPrefix;\nfunction decodeSig(sig) {\n    var _a = eth_lib_1.account.decodeSignature(sig), v = _a[0], r = _a[1], s = _a[2];\n    return {\n        v: parseInt(v, 16),\n        r: (0, util_1.toBuffer)(r),\n        s: (0, util_1.toBuffer)(s),\n    };\n}\nexports.decodeSig = decodeSig;\n//# sourceMappingURL=signing-utils.js.map"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACL,KAAK,CAACE,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,IAAIM,WAAW,GAAI,IAAI,IAAI,IAAI,CAACA,WAAW,IAAK,UAAUjB,OAAO,EAAEkB,IAAI,EAAE;EACrE,IAAIC,CAAC,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAAA,KAAA,EAAW;QAAE,IAAIjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,CAAC,CAAC,CAAC,CAAC;QAAE,OAAOA,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC;MAAEkC,IAAI,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC;IAAEC,CAAC;IAAEC,CAAC;IAAErC,CAAC;IAAEsC,CAAC;EAChH,OAAOA,CAAC,GAAG;IAAEf,IAAI,EAAEgB,IAAI,CAAC,CAAC,CAAC;IAAE,OAAO,EAAEA,IAAI,CAAC,CAAC,CAAC;IAAE,QAAQ,EAAEA,IAAI,CAAC,CAAC;EAAE,CAAC,EAAE,OAAOC,MAAM,KAAK,UAAU,KAAKF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,GAAG,YAAW;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,EAAEH,CAAC;EACxJ,SAASC,IAAIA,CAACpC,CAAC,EAAE;IAAE,OAAO,UAAUuC,CAAC,EAAE;MAAE,OAAOpB,IAAI,CAAC,CAACnB,CAAC,EAAEuC,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE;EACjE,SAASpB,IAAIA,CAACqB,EAAE,EAAE;IACd,IAAIP,CAAC,EAAE,MAAM,IAAIQ,SAAS,CAAC,iCAAiC,CAAC;IAC7D,OAAOb,CAAC,EAAE,IAAI;MACV,IAAIK,CAAC,GAAG,CAAC,EAAEC,CAAC,KAAKrC,CAAC,GAAG2C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGN,CAAC,CAAC,QAAQ,CAAC,GAAGM,EAAE,CAAC,CAAC,CAAC,GAAGN,CAAC,CAAC,OAAO,CAAC,KAAK,CAACrC,CAAC,GAAGqC,CAAC,CAAC,QAAQ,CAAC,KAAKrC,CAAC,CAACS,IAAI,CAAC4B,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,CAACd,IAAI,CAAC,IAAI,CAAC,CAACvB,CAAC,GAAGA,CAAC,CAACS,IAAI,CAAC4B,CAAC,EAAEM,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEhB,IAAI,EAAE,OAAO3B,CAAC;MAC5J,IAAIqC,CAAC,GAAG,CAAC,EAAErC,CAAC,EAAE2C,EAAE,GAAG,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE3C,CAAC,CAACiB,KAAK,CAAC;MACvC,QAAQ0B,EAAE,CAAC,CAAC,CAAC;QACT,KAAK,CAAC;QAAE,KAAK,CAAC;UAAE3C,CAAC,GAAG2C,EAAE;UAAE;QACxB,KAAK,CAAC;UAAEZ,CAAC,CAACC,KAAK,EAAE;UAAE,OAAO;YAAEf,KAAK,EAAE0B,EAAE,CAAC,CAAC,CAAC;YAAEhB,IAAI,EAAE;UAAM,CAAC;QACvD,KAAK,CAAC;UAAEI,CAAC,CAACC,KAAK,EAAE;UAAEK,CAAC,GAAGM,EAAE,CAAC,CAAC,CAAC;UAAEA,EAAE,GAAG,CAAC,CAAC,CAAC;UAAE;QACxC,KAAK,CAAC;UAAEA,EAAE,GAAGZ,CAAC,CAACI,GAAG,CAACU,GAAG,CAAC,CAAC;UAAEd,CAAC,CAACG,IAAI,CAACW,GAAG,CAAC,CAAC;UAAE;QACxC;UACI,IAAI,EAAE7C,CAAC,GAAG+B,CAAC,CAACG,IAAI,EAAElC,CAAC,GAAGA,CAAC,CAACK,MAAM,GAAG,CAAC,IAAIL,CAAC,CAACA,CAAC,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC,KAAKsC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YAAEZ,CAAC,GAAG,CAAC;YAAE;UAAU;UAC3G,IAAIY,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC3C,CAAC,IAAK2C,EAAE,CAAC,CAAC,CAAC,GAAG3C,CAAC,CAAC,CAAC,CAAC,IAAI2C,EAAE,CAAC,CAAC,CAAC,GAAG3C,CAAC,CAAC,CAAC,CAAE,CAAC,EAAE;YAAE+B,CAAC,CAACC,KAAK,GAAGW,EAAE,CAAC,CAAC,CAAC;YAAE;UAAO;UACrF,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIZ,CAAC,CAACC,KAAK,GAAGhC,CAAC,CAAC,CAAC,CAAC,EAAE;YAAE+B,CAAC,CAACC,KAAK,GAAGhC,CAAC,CAAC,CAAC,CAAC;YAAEA,CAAC,GAAG2C,EAAE;YAAE;UAAO;UACpE,IAAI3C,CAAC,IAAI+B,CAAC,CAACC,KAAK,GAAGhC,CAAC,CAAC,CAAC,CAAC,EAAE;YAAE+B,CAAC,CAACC,KAAK,GAAGhC,CAAC,CAAC,CAAC,CAAC;YAAE+B,CAAC,CAACI,GAAG,CAACW,IAAI,CAACH,EAAE,CAAC;YAAE;UAAO;UAClE,IAAI3C,CAAC,CAAC,CAAC,CAAC,EAAE+B,CAAC,CAACI,GAAG,CAACU,GAAG,CAAC,CAAC;UACrBd,CAAC,CAACG,IAAI,CAACW,GAAG,CAAC,CAAC;UAAE;MACtB;MACAF,EAAE,GAAGb,IAAI,CAACrB,IAAI,CAACG,OAAO,EAAEmB,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOP,CAAC,EAAE;MAAEmB,EAAE,GAAG,CAAC,CAAC,EAAEnB,CAAC,CAAC;MAAEa,CAAC,GAAG,CAAC;IAAE,CAAC,SAAS;MAAED,CAAC,GAAGpC,CAAC,GAAG,CAAC;IAAE;IACzD,IAAI2C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,EAAE,CAAC,CAAC,CAAC;IAAE,OAAO;MAAE1B,KAAK,EAAE0B,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAAEhB,IAAI,EAAE;IAAK,CAAC;EACpF;AACJ,CAAC;AACD,IAAIoB,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDlD,MAAM,CAACoD,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAElC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DkC,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACE,4BAA4B,GAAGF,OAAO,CAACG,2BAA2B,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,oBAAoB,GAAGL,OAAO,CAACM,kBAAkB,GAAGN,OAAO,CAACO,gBAAgB,GAAGP,OAAO,CAACQ,iBAAiB,GAAGR,OAAO,CAACS,YAAY,GAAGT,OAAO,CAACU,YAAY,GAAGV,OAAO,CAACW,qBAAqB,GAAGX,OAAO,CAACY,kBAAkB,GAAGZ,OAAO,CAACa,+BAA+B,GAAGb,OAAO,CAACc,SAAS,GAAGd,OAAO,CAACe,SAAS,GAAGf,OAAO,CAACgB,eAAe,GAAG,KAAK,CAAC;AAChd,IAAIC,SAAS,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAe,CAAC;AACxC,IAAIE,WAAW,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AAC9D,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,uCAAuC,CAAC;AAC9E,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,gCAAgC,CAAC;AAChE,IAAIK,MAAM,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIM,OAAO,GAAG5B,eAAe,CAACsB,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,SAAS,CAAC;AAClC,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,8BAA8B,CAAC;AACtD,IAAIS,UAAU,GAAGT,OAAO,CAAC,gCAAgC,CAAC;AAC1D,IAAIU,MAAM,GAAGhC,eAAe,CAACsB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAIW,mBAAmB,GAAGjC,eAAe,CAACsB,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACvE,IAAIY,KAAK,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACO,OAAO,EAAE,qBAAqB,CAAC;AACvD;AACA;AACA;AACA;AACA/B,OAAO,CAACgB,eAAe,GAAG,IAAI;AAC9BhB,OAAO,CAACe,SAAS,GAAG,EAAE;AACtBf,OAAO,CAACc,SAAS,GAAG,EAAE;AACtB,IAAIkB,iBAAiB,GAAG,EAAE;AAC1B,SAASC,iBAAiBA,CAACnE,KAAK,EAAE;EAC9B,OAAOA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKoE,SAAS;AAChD;AACA;AACA;AACA,SAASrB,+BAA+BA,CAACsB,OAAO,EAAE;EAC9C,OAAOA,OAAO,GAAG,CAAC,GAAG,EAAE;AAC3B;AACAnC,OAAO,CAACa,+BAA+B,GAAGA,+BAA+B;AACzE,SAASD,kBAAkBA,CAACwB,SAAS,EAAE;EACnC,OAAOX,SAAS,CAACY,IAAI,CAACC,SAAS,CAACF,SAAS,CAAC;AAC9C;AACApC,OAAO,CAACY,kBAAkB,GAAGA,kBAAkB;AAC/C,SAAS2B,eAAeA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IACjCD,GAAG,GAAG,CAAC,CAAC,EAAEvB,SAAS,CAACyB,eAAe,EAAEF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EACtD;EACA,OAAOH,GAAG;AACd;AACA,SAASI,QAAQA,CAACJ,GAAG,EAAE;EACnB,IAAIA,GAAG,CAACtF,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACtBsF,GAAG,GAAGA,GAAG,CAACK,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;EAClC;EACA,OAAOL,GAAG;AACd;AACA,SAASM,kBAAkBA,CAACC,SAAS,EAAEC,IAAI,EAAE;EACzC,IAAIzD,CAAC,GAAGwD,SAAS,CAACxD,CAAC;EACnB,IAAIyD,IAAI,KAAK,aAAa,EAAE;IACxBzD,CAAC,GAAGwD,SAAS,CAACxD,CAAC,KAAKyC,iBAAiB,GAAG,CAAC,GAAG,CAAC;EACjD;EACA,OAAO;IACHzC,CAAC,EAAE0D,iBAAiB,CAAC1D,CAAC,CAAC;IACvB2D,CAAC,EAAEN,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC,EAAEtB,SAAS,CAACyB,eAAe,EAAEK,SAAS,CAACG,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzFrG,CAAC,EAAE8F,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC,EAAEtB,SAAS,CAACyB,eAAe,EAAEK,SAAS,CAACjG,CAAC,CAACqG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5F,CAAC;AACL;AACA,SAASxC,qBAAqBA,CAACyC,GAAG,EAAE;EAChC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAKlB,SAAS,EAAE;IACzE,OAAOe,iBAAiB,CAACG,GAAG,CAAC;EACjC,CAAC,MACI;IACD,OAAOR,QAAQ,CAAC,IAAI,GAAGQ,GAAG,CAACD,QAAQ,CAAC,EAAE,CAAC,CAAC;EAC5C;AACJ;AACAnD,OAAO,CAACW,qBAAqB,GAAGA,qBAAqB;AACrD,SAASsC,iBAAiBA,CAACG,GAAG,EAAE;EAC5B,IAAIC,SAAS,GAAGC,MAAM,CAACF,GAAG,CAAC;EAC3B,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKlB,SAAS,IAAImB,SAAS,KAAK,CAAC,EAAE;IACtD,OAAO,IAAI;EACf;EACA,OAAOT,QAAQ,CAAChB,MAAM,CAACG,OAAO,CAACwB,KAAK,CAACC,WAAW,CAACJ,GAAG,CAAC,CAAC;AAC1D;AACA,SAAS1C,YAAYA,CAAC+C,EAAE,EAAE;EACtBC,oBAAoB,CAACD,EAAE,CAAC;EACxB,IAAIE,WAAW,GAAG,CAAC,CAAC,EAAEvC,WAAW,CAACwC,oBAAoB,EAAEH,EAAE,CAAC;EAC3DE,WAAW,CAACE,EAAE,GAAGpC,SAAS,CAACqC,KAAK,CAACC,OAAO,CAACN,EAAE,CAACI,EAAE,IAAI,IAAI,CAAC,CAACG,WAAW,CAAC,CAAC;EACrEL,WAAW,CAACM,KAAK,GAAGX,MAAM,CAAC,CAACG,EAAE,CAACQ,KAAK,KAAK,IAAI,GAAGR,EAAE,CAACQ,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;EACnEN,WAAW,CAACO,IAAI,GAAGzC,SAAS,CAACqC,KAAK,CAACC,OAAO,CAACN,EAAE,CAACS,IAAI,IAAI,IAAI,CAAC,CAACF,WAAW,CAAC,CAAC;EACzEL,WAAW,CAAC7F,KAAK,GAAG6C,qBAAqB,CAAC8C,EAAE,CAAC3F,KAAK,CAAC;EACnD6F,WAAW,CAACQ,GAAG,GAAGxD,qBAAqB,CAAC8C,EAAE,CAACU,GAAG,CAAC;EAC/CR,WAAW,CAACxB,OAAO,GAAGsB,EAAE,CAACtB,OAAO,IAAI,CAAC;EACrC;EACAwB,WAAW,CAACS,WAAW,GAAG3C,SAAS,CAACqC,KAAK,CAACC,OAAO,CAACN,EAAE,CAACW,WAAW,IAAI,IAAI,CAAC,CAACJ,WAAW,CAAC,CAAC;EACvFL,WAAW,CAACU,mBAAmB,GAAG5C,SAAS,CAACqC,KAAK,CAACC,OAAO,CAACN,EAAE,CAACY,mBAAmB,IAAI,IAAI,CAAC,CAACL,WAAW,CAAC,CAAC;EACvGL,WAAW,CAACW,UAAU,GAAG3D,qBAAqB,CAAC8C,EAAE,CAACa,UAAU,CAAC;EAC7D;EACAX,WAAW,CAACY,QAAQ,GAAG5D,qBAAqB,CAAC8C,EAAE,CAACc,QAAQ,CAAC;EACzD;EACAZ,WAAW,CAACa,YAAY,GAAG7D,qBAAqB,CAAC8C,EAAE,CAACe,YAAY,CAAC;EACjEb,WAAW,CAACc,oBAAoB,GAAG9D,qBAAqB,CAAC8C,EAAE,CAACgB,oBAAoB,CAAC;EACjF,IAAIrC,SAAS;EACb,IAAIsC,OAAO,CAACjB,EAAE,CAAC,EAAE;IACb;IACA;IACA;IACArB,SAAS,GAAGX,SAAS,CAACkD,GAAG,CAACC,MAAM,CAAC,CAC7B3B,iBAAiB,CAACU,WAAW,CAACxB,OAAO,CAAC,EACtCc,iBAAiB,CAACU,WAAW,CAACM,KAAK,CAAC,EACpCN,WAAW,CAACc,oBAAoB,IAAI,IAAI,EACxCd,WAAW,CAACa,YAAY,IAAI,IAAI,EAChCb,WAAW,CAACQ,GAAG,IAAI,IAAI,EACvBR,WAAW,CAACS,WAAW,IAAI,IAAI,EAC/BT,WAAW,CAACU,mBAAmB,IAAI,IAAI,EACvCV,WAAW,CAACW,UAAU,IAAI,IAAI,EAC9BX,WAAW,CAACE,EAAE,IAAI,IAAI,EACtBF,WAAW,CAAC7F,KAAK,IAAI,IAAI,EACzB6F,WAAW,CAACO,IAAI,IAAI,IAAI,EACxBP,WAAW,CAACkB,UAAU,IAAI,EAAE,CAC/B,CAAC;IACF,OAAO;MAAElB,WAAW,EAAEA,WAAW;MAAEvB,SAAS,EAAE0C,SAAS,CAAC,CAAC,MAAM,EAAE1C,SAAS,CAAC,CAAC;MAAEY,IAAI,EAAE;IAAQ,CAAC;EACjG,CAAC,MACI,IAAI+B,SAAS,CAACtB,EAAE,CAAC,EAAE;IACpB;IACA;IACArB,SAAS,GAAGX,SAAS,CAACkD,GAAG,CAACC,MAAM,CAAC,CAC7B3B,iBAAiB,CAACU,WAAW,CAACxB,OAAO,CAAC,EACtCc,iBAAiB,CAACU,WAAW,CAACM,KAAK,CAAC,EACpCN,WAAW,CAACc,oBAAoB,IAAI,IAAI,EACxCd,WAAW,CAACa,YAAY,IAAI,IAAI,EAChCb,WAAW,CAACQ,GAAG,IAAI,IAAI,EACvBR,WAAW,CAACE,EAAE,IAAI,IAAI,EACtBF,WAAW,CAAC7F,KAAK,IAAI,IAAI,EACzB6F,WAAW,CAACO,IAAI,IAAI,IAAI,EACxBP,WAAW,CAACkB,UAAU,IAAI,EAAE,CAC/B,CAAC;IACF,OAAO;MAAElB,WAAW,EAAEA,WAAW;MAAEvB,SAAS,EAAE0C,SAAS,CAAC,CAAC,MAAM,EAAE1C,SAAS,CAAC,CAAC;MAAEY,IAAI,EAAE;IAAU,CAAC;EACnG,CAAC,MACI;IACD;IACA;IACAZ,SAAS,GAAGX,SAAS,CAACkD,GAAG,CAACC,MAAM,CAAC,CAC7B3B,iBAAiB,CAACU,WAAW,CAACM,KAAK,CAAC,EACpCN,WAAW,CAACY,QAAQ,EACpBZ,WAAW,CAACQ,GAAG,EACfR,WAAW,CAACS,WAAW,EACvBT,WAAW,CAACU,mBAAmB,EAC/BV,WAAW,CAACW,UAAU,EACtBX,WAAW,CAACE,EAAE,EACdF,WAAW,CAAC7F,KAAK,EACjB6F,WAAW,CAACO,IAAI,EAChBjB,iBAAiB,CAACU,WAAW,CAACxB,OAAO,CAAC,EACtC,IAAI,EACJ,IAAI,CACP,CAAC;IACF,OAAO;MAAEwB,WAAW,EAAEA,WAAW;MAAEvB,SAAS,EAAEA,SAAS;MAAEY,IAAI,EAAE;IAAc,CAAC;EAClF;AACJ;AACAhD,OAAO,CAACU,YAAY,GAAGA,YAAY;AACnC,IAAIsE,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE;EAClCA,cAAc,CAAC,OAAO,CAAC,GAAG,MAAM;EAChCA,cAAc,CAAC,SAAS,CAAC,GAAG,MAAM;AACtC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,SAASC,mBAAmBA,CAACC,cAAc,EAAEC,MAAM,EAAE;EACjD,IAAIC,MAAM,GAAGJ,cAAc,CAACG,MAAM,CAAC;EACnC,IAAIC,MAAM,EAAE;IACR,OAAON,SAAS,CAAC,CAACM,MAAM,EAAEF,cAAc,CAAC,CAAC;EAC9C;EACA,OAAOA,cAAc;AACzB;AACA,SAASxB,oBAAoBA,CAACD,EAAE,EAAE;EAC9B,IAAI,CAACA,EAAE,CAACU,GAAG,EAAE;IACT,MAAM,IAAIkB,KAAK,CAAC,kBAAkB,CAAC;EACvC;EACA;EACA,IAAI,CAAC,CAAC,CAAC,EAAElE,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACc,QAAQ,CAAC,KACrC,CAAC,CAAC,CAAC,EAAEpD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACe,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAErD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACgB,oBAAoB,CAAC,CAAC,EAAE;IACpG,MAAM,IAAIY,KAAK,CAAC,qEAAqE,CAAC;EAC1F;EACA;EACA,IAAI,CAAC,CAAC,EAAElE,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACc,QAAQ,CAAC,KACpC,CAAC,CAAC,EAAEpD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACe,YAAY,CAAC,IAAI,CAAC,CAAC,EAAErD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACgB,oBAAoB,CAAC,CAAC,EAAE;IAClG,MAAM,IAAIY,KAAK,CAAC,mFAAmF,CAAC;EACxG;EACA,IAAIpD,iBAAiB,CAACwB,EAAE,CAACQ,KAAK,CAAC,IAAIhC,iBAAiB,CAACwB,EAAE,CAACtB,OAAO,CAAC,EAAE;IAC9D,MAAM,IAAIkD,KAAK,CAAC,+DAA+D,GAC3EE,IAAI,CAACC,SAAS,CAAC;MAAErD,OAAO,EAAEsB,EAAE,CAACtB,OAAO;MAAE8B,KAAK,EAAER,EAAE,CAACQ;IAAM,CAAC,CAAC,CAAC;EACjE;EACA,IAAIwB,cAAc,CAAChC,EAAE,CAACQ,KAAK,CAAC,IAAIwB,cAAc,CAAChC,EAAE,CAACU,GAAG,CAAC,IAAIsB,cAAc,CAAChC,EAAE,CAACtB,OAAO,CAAC,EAAE;IAClF,MAAM,IAAIkD,KAAK,CAAC,2CAA2C,CAAC;EAChE;EACA5E,YAAY,CAACgD,EAAE,CAAC;AACpB;AACA,SAAShD,YAAYA,CAACgD,EAAE,EAAE;EACtB,IAAIiC,MAAM,GAAG,CAACjC,EAAE,CAACc,QAAQ,EAAEd,EAAE,CAACe,YAAY,EAAEf,EAAE,CAACgB,oBAAoB,CAAC,CAACkB,MAAM,CAAC,UAAUC,KAAK,EAAE;IAAE,OAAOA,KAAK,KAAK1D,SAAS;EAAE,CAAC,CAAC;EAC7H,IAAI2D,KAAK,GAAG,KAAK;EACjB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,QAAQ,GAAGL,MAAM,EAAEI,EAAE,GAAGC,QAAQ,CAAC7I,MAAM,EAAE4I,EAAE,EAAE,EAAE;IAC5D,IAAIF,KAAK,GAAGG,QAAQ,CAACD,EAAE,CAAC;IACxB,IAAIL,cAAc,CAACG,KAAK,CAAC,EAAE;MACvB,MAAM,IAAIP,KAAK,CAAC,sEAAsE,CAAC;IAC3F;EACJ;EACA,OAAOQ,KAAK;AAChB;AACA7F,OAAO,CAACS,YAAY,GAAGA,YAAY;AACnC,SAASsE,SAASA,CAACtB,EAAE,EAAE;EACnB,OAAO,CAAC,CAAC,EAAEtC,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACe,YAAY,CAAC,IAAI,CAAC,CAAC,EAAErD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACgB,oBAAoB,CAAC;AACzG;AACA,SAASC,OAAOA,CAACjB,EAAE,EAAE;EACjB,OAAQsB,SAAS,CAACtB,EAAE,CAAC,KAChB,CAAC,CAAC,EAAEtC,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACW,WAAW,CAAC,IAAI,CAAC,CAAC,EAAEjD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACY,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAElD,SAAS,CAACmE,SAAS,EAAE7B,EAAE,CAACa,UAAU,CAAC,CAAC;AACjJ;AACA,SAASQ,SAASA,CAACkB,MAAM,EAAE;EACvB,OAAO,IAAI,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAAC,UAAUC,GAAG,EAAEC,CAAC,EAAE;IAAE,OAAOD,GAAG,GAAGC,CAAC,CAACvD,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAClG;AACA,SAAS4C,cAAcA,CAAC3H,KAAK,EAAE;EAC3B,IAAImE,iBAAiB,CAACnE,KAAK,CAAC,EAAE;IAC1B,OAAO,IAAI;EACf;EACA,QAAQ,OAAOA,KAAK;IAChB,KAAK,QAAQ;IACb,KAAK,QAAQ;MACT,OAAOwF,MAAM,CAACxF,KAAK,CAAC,GAAG,CAAC;IAC5B;MACI,OAAO,CAACA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACuI,EAAE,CAACzE,MAAM,CAACG,OAAO,CAACwB,KAAK,CAAC+C,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;EAC9G;AACJ;AACA,SAAS9F,iBAAiBA,CAAC+F,UAAU,EAAExD,SAAS,EAAE;EAC9C,OAAOvF,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;IAC/C,IAAIgJ,kBAAkB,EAAEjH,CAAC,EAAE2D,CAAC,EAAEpG,CAAC,EAAE2J,SAAS,EAAEC,KAAK,EAAExB,cAAc,EAAE7C,IAAI,EAAEsE,MAAM,EAAElD,EAAE,EAAElF,MAAM;IAC3F,OAAOG,WAAW,CAAC,IAAI,EAAE,UAAUkI,EAAE,EAAE;MACnCJ,kBAAkB,GAAG1D,kBAAkB,CAACC,SAAS,EAAEwD,UAAU,CAACvD,IAAI,CAAC;MACnEzD,CAAC,GAAGiH,kBAAkB,CAACjH,CAAC;MACxB2D,CAAC,GAAGsD,kBAAkB,CAACtD,CAAC;MACxBpG,CAAC,GAAG0J,kBAAkB,CAAC1J,CAAC;MACxB2J,SAAS,GAAGI,oBAAoB,CAACN,UAAU,CAACnE,SAAS,EAAEmE,UAAU,CAACvD,IAAI,CAAC;MACvE0D,KAAK,GAAG,CAACH,UAAU,CAACvD,IAAI,KAAK,aAAa,GAAGyD,SAAS,CAAC9D,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG8D,SAAS,EAAER,MAAM,CAAC,CACnF1G,CAAC,EACD2D,CAAC,EACDpG,CAAC,CACJ,CAAC;MACFoI,cAAc,GAAGD,mBAAmB,CAACxD,SAAS,CAACkD,GAAG,CAACC,MAAM,CAAC8B,KAAK,CAAC,EAAEH,UAAU,CAACvD,IAAI,CAAC;MAClFX,IAAI,GAAGzB,kBAAkB,CAACsE,cAAc,CAAC;MACzCyB,MAAM,GAAG;QACL1C,KAAK,EAAEsC,UAAU,CAAC5C,WAAW,CAACM,KAAK,CAACd,QAAQ,CAAC,CAAC;QAC9CgB,GAAG,EAAEoC,UAAU,CAAC5C,WAAW,CAACQ,GAAG,CAAChB,QAAQ,CAAC,CAAC;QAC1CU,EAAE,EAAE0C,UAAU,CAAC5C,WAAW,CAACE,EAAE,CAACV,QAAQ,CAAC,CAAC;QACxCrF,KAAK,EAAEyI,UAAU,CAAC5C,WAAW,CAAC7F,KAAK,CAACqF,QAAQ,CAAC,CAAC;QAC9C2D,KAAK,EAAEP,UAAU,CAAC5C,WAAW,CAACO,IAAI;QAClC3E,CAAC,EAAEA,CAAC;QACJ2D,CAAC,EAAEA,CAAC;QACJpG,CAAC,EAAEA,CAAC;QACJuF,IAAI,EAAEA;MACV,CAAC;MACDoB,EAAE,GAAGkD,MAAM;MACX,IAAIJ,UAAU,CAACvD,IAAI,KAAK,SAAS,IAAIuD,UAAU,CAACvD,IAAI,KAAK,OAAO,EAAE;QAC9DS,EAAE,GAAG/G,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+G,EAAE,CAAC,EAAE;UAC5B;UACAe,YAAY,EAAE+B,UAAU,CAAC5C,WAAW,CAACa,YAAY,CAACrB,QAAQ,CAAC,CAAC;UAAEsB,oBAAoB,EAAE8B,UAAU,CAAC5C,WAAW,CAACc,oBAAoB,CAACtB,QAAQ,CAAC,CAAC;UAAE0B,UAAU,EAAE,CAAC,CAAC,EAAEzD,WAAW,CAAC2F,eAAe,EAAER,UAAU,CAAC5C,WAAW,CAACkB,UAAU,IAAI,EAAE;QAAE,CAAC,CAAC;MAC5O;MACA,IAAI0B,UAAU,CAACvD,IAAI,KAAK,OAAO,IAAIuD,UAAU,CAACvD,IAAI,KAAK,aAAa,EAAE;QAClES,EAAE,GAAG/G,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+G,EAAE,CAAC,EAAE;UAC5B;UACAW,WAAW,EAAEmC,UAAU,CAAC5C,WAAW,CAACS,WAAW,CAACjB,QAAQ,CAAC,CAAC;UAAEkB,mBAAmB,EAAEkC,UAAU,CAAC5C,WAAW,CAACU,mBAAmB,CAAClB,QAAQ,CAAC,CAAC;UAAEmB,UAAU,EAAEiC,UAAU,CAAC5C,WAAW,CAACW,UAAU,CAACnB,QAAQ,CAAC;QAAE,CAAC,CAAC;MAC3M;MACA,IAAIoD,UAAU,CAACvD,IAAI,KAAK,aAAa,EAAE;QACnCS,EAAE,GAAG/G,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+G,EAAE,CAAC,EAAE;UAC5B;UACAc,QAAQ,EAAEgC,UAAU,CAAC5C,WAAW,CAACY,QAAQ,CAACpB,QAAQ,CAAC;QAAE,CAAC,CAAC;MAC/D;MACA5E,MAAM,GAAG;QACLkF,EAAE,EAAEA,EAAE;QACNuD,GAAG,EAAE9B,cAAc;QACnBlC,IAAI,EAAEuD,UAAU,CAACvD;MACrB,CAAC;MACD,OAAO,CAAC,CAAC,CAAC,YAAYzE,MAAM,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACAyB,OAAO,CAACQ,iBAAiB,GAAGA,iBAAiB;AAC7C;AACA,SAASqG,oBAAoBA,CAACzE,SAAS,EAAEY,IAAI,EAAE;EAC3C,OAAOA,IAAI,KAAK,aAAa,GAAGvB,SAAS,CAACkD,GAAG,CAACsC,MAAM,CAAC7E,SAAS,CAAC,GAAGX,SAAS,CAACkD,GAAG,CAACsC,MAAM,CAAC,IAAI,CAAChB,MAAM,CAAC7D,SAAS,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3H;AACA,SAASuE,4BAA4BA,CAAClE,IAAI,EAAE;EACxC,QAAQA,IAAI;IACR,KAAK,OAAO;MACR,OAAO,EAAE;IACb,KAAK,aAAa;IAClB,KAAK,SAAS;MACV,OAAO,EAAE;EACjB;AACJ;AACA;AACA,SAASzC,gBAAgBA,CAACmG,KAAK,EAAE;EAC7B,IAAI1D,IAAI,GAAGmE,eAAe,CAACT,KAAK,CAAC;EACjC,IAAIU,SAAS,GAAGP,oBAAoB,CAACH,KAAK,EAAE1D,IAAI,CAAC;EACjD,IAAI9F,MAAM,GAAGkK,SAAS,CAAClK,MAAM;EAC7B,IAAIgK,4BAA4B,CAAClE,IAAI,CAAC,KAAK9F,MAAM,EAAE;IAC/C,MAAM,IAAImI,KAAK,CAAC,8CAA8C,CAACY,MAAM,CAAC/I,MAAM,EAAE,gBAAgB,CAAC,CAAC+I,MAAM,CAACjD,IAAI,EAAE,6BAA6B,CAAC,CAACiD,MAAM,CAACiB,4BAA4B,CAAClE,IAAI,CAAC,EAAE,GAAG,CAAC,CAACiD,MAAM,CAACV,IAAI,CAACC,SAAS,CAAC4B,SAAS,CAAC,CAAC,CAAC;EAClO;EACA,OAAOC,2BAA2B,CAACD,SAAS,CAAC;AACjD;AACApH,OAAO,CAACO,gBAAgB,GAAGA,gBAAgB;AAC3C,SAAS8G,2BAA2BA,CAACD,SAAS,EAAE;EAC5C;EACA,IAAI7H,CAAC,GAAG6H,SAAS,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC;EACxB,IAAIpE,CAAC,GAAGkE,SAAS,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC;EACxB,IAAIxK,CAAC,GAAGsK,SAAS,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC;EACxB;EACA;EACA;EACApE,CAAC,GAAG,CAAC,CAAC,EAAEjC,SAAS,CAACyB,eAAe,EAAE,CAAC,CAAC,EAAEzB,SAAS,CAACsG,aAAa,EAAErE,CAAC,CAAC,CAACsE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;EACrF1K,CAAC,GAAG,CAAC,CAAC,EAAEmE,SAAS,CAACyB,eAAe,EAAE,CAAC,CAAC,EAAEzB,SAAS,CAACsG,aAAa,EAAEzK,CAAC,CAAC,CAAC0K,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;EACrF,OAAO;IACHjI,CAAC,EAAEA,CAAC;IACJ2D,CAAC,EAAEA,CAAC;IACJpG,CAAC,EAAEA;EACP,CAAC;AACL;AACA;AACA;AACA,SAASwD,kBAAkBA,CAACoG,KAAK,EAAE;EAC/B,IAAI,CAACA,KAAK,CAACjE,UAAU,CAAC,IAAI,CAAC,EAAE;IACzB,MAAM,IAAI4C,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,QAAQ8B,eAAe,CAACT,KAAK,CAAC;IAC1B,KAAK,OAAO;MACR,OAAOe,uBAAuB,CAACf,KAAK,CAAC;IACzC,KAAK,SAAS;MACV,OAAOgB,yBAAyB,CAAChB,KAAK,CAAC;IAC3C;MACI,IAAIU,SAAS,GAAG3F,SAAS,CAACkD,GAAG,CAACsC,MAAM,CAACP,KAAK,CAAC;MAC3C5E,KAAK,CAAC,iDAAiD,EAAEsF,SAAS,CAAC;MACnE,IAAIO,QAAQ,GAAGlG,SAAS,CAACqC,KAAK,CAAC8D,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC,CAAC;MACrD;MACA,IAAIjF,OAAO,GAAGV,SAAS,CAACqC,KAAK,CAAC+D,UAAU,CAAEF,QAAQ,GAAG,EAAE,IAAK,CAAC,CAAC;MAC9D,IAAIG,MAAM,GAAG;QACT9E,IAAI,EAAE,aAAa;QACnBiB,KAAK,EAAEmD,SAAS,CAAC,CAAC,CAAC,CAACpD,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC3E7C,QAAQ,EAAE6C,SAAS,CAAC,CAAC,CAAC,CAACpD,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC9EjD,GAAG,EAAEiD,SAAS,CAAC,CAAC,CAAC,CAACpD,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACzEhD,WAAW,EAAEgD,SAAS,CAAC,CAAC,CAAC;QACzB/C,mBAAmB,EAAE+C,SAAS,CAAC,CAAC,CAAC;QACjC9C,UAAU,EAAE8C,SAAS,CAAC,CAAC,CAAC;QACxBvD,EAAE,EAAEuD,SAAS,CAAC,CAAC,CAAC;QAChBtJ,KAAK,EAAEsJ,SAAS,CAAC,CAAC,CAAC;QACnBlD,IAAI,EAAEkD,SAAS,CAAC,CAAC,CAAC;QAClBjF,OAAO,EAAEA;MACb,CAAC;MACD,IAAIyE,EAAE,GAAGS,2BAA2B,CAACD,SAAS,CAAC;QAAElE,CAAC,GAAG0D,EAAE,CAAC1D,CAAC;QAAE3D,CAAC,GAAGqH,EAAE,CAACrH,CAAC;QAAEzC,CAAC,GAAG8J,EAAE,CAAC9J,CAAC;MAC7E,IAAIiG,SAAS,GAAGtB,SAAS,CAACuG,OAAO,CAACC,eAAe,CAAC,CAAC1I,CAAC,EAAE2D,CAAC,EAAEpG,CAAC,CAAC,CAAC;MAC5D,IAAIoL,SAAS,GAAGP,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAACxF,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;MAC1D,IAAIgG,WAAW,GAAGf,SAAS,CAACzE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACsD,MAAM,CAACiC,SAAS,CAAC;MACzD,IAAIE,cAAc,GAAG3G,SAAS,CAACkD,GAAG,CAACC,MAAM,CAACuD,WAAW,CAAC;MACtD,IAAIE,MAAM,GAAG5G,SAAS,CAACuG,OAAO,CAACM,OAAO,CAAC1H,kBAAkB,CAACwH,cAAc,CAAC,EAAErF,SAAS,CAAC;MACrF,OAAO,CAAC+E,MAAM,EAAEO,MAAM,CAAC;EAC/B;AACJ;AACArI,OAAO,CAACM,kBAAkB,GAAGA,kBAAkB;AAC/C;AACA,SAASiI,0BAA0BA,CAACC,gBAAgB,EAAE;EAClD,IAAIC,IAAI,GAAGD,gBAAgB,CAAC7F,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC1C,IAAI+F,OAAO,GAAG5D,SAAS,CAAC,CAACE,cAAc,CAAC2D,KAAK,EAAElH,SAAS,CAACkD,GAAG,CAACC,MAAM,CAAC6D,IAAI,CAAC,CAAC9F,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACpF,IAAIiG,OAAO,GAAG,CAAC,CAAC,EAAElH,QAAQ,CAACY,SAAS,EAAE,CAAC,CAAC,EAAEX,UAAU,CAACkH,UAAU,EAAEH,OAAO,CAAC,CAAC;EAC1E,IAAI9B,EAAE,GAAGS,2BAA2B,CAACmB,gBAAgB,CAAC;IAAEjJ,CAAC,GAAGqH,EAAE,CAACrH,CAAC;IAAE2D,CAAC,GAAG0D,EAAE,CAAC1D,CAAC;IAAEpG,CAAC,GAAG8J,EAAE,CAAC9J,CAAC;EACpF,IAAI;IACA,OAAO,CAAC,CAAC,EAAEyE,MAAM,CAACuH,SAAS,EAAE,CAAC,CAAC,EAAEvH,MAAM,CAACwH,QAAQ,EAAEH,OAAO,CAAC,EAAErJ,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK2C,SAAS,GAAG8G,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEzH,MAAM,CAACwH,QAAQ,EAAE7F,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE3B,MAAM,CAACwH,QAAQ,EAAEjM,CAAC,CAAC,CAAC;EACxK,CAAC,CACD,OAAOuB,CAAC,EAAE;IACN,MAAM,IAAIgH,KAAK,CAAChH,CAAC,CAAC;EACtB;AACJ;AACA,SAASgC,oBAAoBA,CAAC4I,qBAAqB,EAAE;EACjD,IAAIT,gBAAgB,GAAG/G,SAAS,CAACkD,GAAG,CAACsC,MAAM,CAAC,IAAI,CAAChB,MAAM,CAACgD,qBAAqB,CAACtG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACxF,IAAI0F,MAAM,GAAGE,0BAA0B,CAACC,gBAAgB,CAAC;EACzD,OAAO,CAAC,CAAC,EAAEjH,MAAM,CAAC2H,iBAAiB,EAAE3H,MAAM,CAAC4H,OAAO,CAACC,aAAa,CAACf,MAAM,CAAC,CAAClF,QAAQ,CAAC,CAAC,CAAC;AACzF;AACAnD,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD,SAAS8G,eAAeA,CAAC8B,qBAAqB,EAAE;EAC5C,IAAI7D,MAAM,GAAG6D,qBAAqB,CAACtG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,IAAIyC,MAAM,KAAK,MAAM,EAAE;IACnB,OAAO,SAAS;EACpB,CAAC,MACI,IAAIA,MAAM,KAAK,MAAM,EAAE;IACxB,OAAO,OAAO;EAClB;EACA,OAAO,aAAa;AACxB;AACA,SAASiE,cAAcA,CAACC,IAAI,EAAEpG,CAAC,EAAEpG,CAAC,EAAE;EAChC,IAAIyC,CAAC,GAAG+J,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,EAAElI,WAAW,CAACmI,WAAW,EAAED,IAAI,CAAC,KAAK,CAAC,GAAGtH,iBAAiB,GAAGA,iBAAiB,GAAG,CAAC;EAC7G,OAAO;IACHzC,CAAC,EAAEA,CAAC;IACJ2D,CAAC,EAAEA,CAAC;IACJpG,CAAC,EAAEA,CAAC;IACJ0M,OAAO,EAAEjK,CAAC,KAAKyC,iBAAiB,GAAG,CAAC,GAAG;EAC3C,CAAC;AACL;AACA,SAASyF,uBAAuBA,CAACwB,qBAAqB,EAAE;EACpD,IAAIT,gBAAgB,GAAG3B,oBAAoB,CAACoC,qBAAqB,EAAE,OAAO,CAAC;EAC3EnH,KAAK,CAAC,sDAAsD,EAAE0G,gBAAgB,CAAC;EAC/E,IAAIA,gBAAgB,CAACtL,MAAM,KAAK,EAAE,IAAIsL,gBAAgB,CAACtL,MAAM,KAAK,EAAE,EAAE;IAClE,MAAM,IAAImI,KAAK,CAAC,6CAA6C,CAACY,MAAM,CAACuC,gBAAgB,CAACtL,MAAM,EAAE,+BAA+B,CAAC,CAAC+I,MAAM,CAACuC,gBAAgB,CAAC,CAAC;EAC5J;EACA,IAAIrG,OAAO,GAAGqG,gBAAgB,CAAC,CAAC,CAAC;IAAEvE,KAAK,GAAGuE,gBAAgB,CAAC,CAAC,CAAC;IAAE/D,oBAAoB,GAAG+D,gBAAgB,CAAC,CAAC,CAAC;IAAEhE,YAAY,GAAGgE,gBAAgB,CAAC,CAAC,CAAC;IAAErE,GAAG,GAAGqE,gBAAgB,CAAC,CAAC,CAAC;IAAEpE,WAAW,GAAGoE,gBAAgB,CAAC,CAAC,CAAC;IAAEnE,mBAAmB,GAAGmE,gBAAgB,CAAC,CAAC,CAAC;IAAElE,UAAU,GAAGkE,gBAAgB,CAAC,CAAC,CAAC;IAAE3E,EAAE,GAAG2E,gBAAgB,CAAC,CAAC,CAAC;IAAE1K,KAAK,GAAG0K,gBAAgB,CAAC,CAAC,CAAC;IAAEtE,IAAI,GAAGsE,gBAAgB,CAAC,EAAE,CAAC;IAAE3D,UAAU,GAAG2D,gBAAgB,CAAC,EAAE,CAAC;IAAEc,IAAI,GAAGd,gBAAgB,CAAC,EAAE,CAAC;IAAEtF,CAAC,GAAGsF,gBAAgB,CAAC,EAAE,CAAC;IAAE1L,CAAC,GAAG0L,gBAAgB,CAAC,EAAE,CAAC;EACje,IAAIiB,MAAM,GAAG/M,QAAQ,CAAC;IAAEsG,IAAI,EAAE,OAAO;IAAEiB,KAAK,EAAEA,KAAK,CAACD,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC9D,KAAK,EAAE,EAAE,CAAC;IAAEQ,oBAAoB,EAAEA,oBAAoB,CAACT,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACtD,oBAAoB,EAAE,EAAE,CAAC;IAAED,YAAY,EAAEA,YAAY,CAACR,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACvD,YAAY,EAAE,EAAE,CAAC;IAAEL,GAAG,EAAEA,GAAG,CAACH,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC5D,GAAG,EAAE,EAAE,CAAC;IAAEC,WAAW,EAAEA,WAAW;IAAEC,mBAAmB,EAAEA,mBAAmB;IAAEC,UAAU,EAAEA,UAAU;IAAET,EAAE,EAAEA,EAAE;IAAE/F,KAAK,EAAEA,KAAK,CAACkG,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACjK,KAAK,EAAE,EAAE,CAAC;IAAEoG,IAAI,EAAEA,IAAI;IAAE/B,OAAO,EAAEA,OAAO,CAAC6B,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC5F,OAAO,EAAE,EAAE,CAAC;IAAE0C,UAAU,EAAE,CAAC,CAAC,EAAEzD,WAAW,CAAC2F,eAAe,EAAElC,UAAU;EAAE,CAAC,EAAEwE,cAAc,CAACC,IAAI,EAAEpG,CAAC,EAAEpG,CAAC,CAAC,CAAC;EAC1qB,IAAIuL,MAAM,GAAGG,gBAAgB,CAACtL,MAAM,KAAK,EAAE,GAAGmD,oBAAoB,CAAC4I,qBAAqB,CAAC,GAAG,UAAU;EACtG,OAAO,CAACQ,MAAM,EAAEpB,MAAM,CAAC;AAC3B;AACA,SAASX,yBAAyBA,CAACuB,qBAAqB,EAAE;EACtD,IAAIT,gBAAgB,GAAG3B,oBAAoB,CAACoC,qBAAqB,EAAE,SAAS,CAAC;EAC7EnH,KAAK,CAAC,wDAAwD,EAAE0G,gBAAgB,CAAC;EACjF,IAAIrG,OAAO,GAAGqG,gBAAgB,CAAC,CAAC,CAAC;IAAEvE,KAAK,GAAGuE,gBAAgB,CAAC,CAAC,CAAC;IAAE/D,oBAAoB,GAAG+D,gBAAgB,CAAC,CAAC,CAAC;IAAEhE,YAAY,GAAGgE,gBAAgB,CAAC,CAAC,CAAC;IAAErE,GAAG,GAAGqE,gBAAgB,CAAC,CAAC,CAAC;IAAE3E,EAAE,GAAG2E,gBAAgB,CAAC,CAAC,CAAC;IAAE1K,KAAK,GAAG0K,gBAAgB,CAAC,CAAC,CAAC;IAAEtE,IAAI,GAAGsE,gBAAgB,CAAC,CAAC,CAAC;IAAE3D,UAAU,GAAG2D,gBAAgB,CAAC,CAAC,CAAC;IAAEc,IAAI,GAAGd,gBAAgB,CAAC,CAAC,CAAC;IAAEtF,CAAC,GAAGsF,gBAAgB,CAAC,EAAE,CAAC;IAAE1L,CAAC,GAAG0L,gBAAgB,CAAC,EAAE,CAAC;EAC9W,IAAIV,MAAM,GAAGpL,QAAQ,CAAC;IAAEsG,IAAI,EAAE,SAAS;IAAEiB,KAAK,EAAEA,KAAK,CAACD,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC9D,KAAK,EAAE,EAAE,CAAC;IAAEE,GAAG,EAAEA,GAAG,CAACH,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC5D,GAAG,EAAE,EAAE,CAAC;IAAEM,oBAAoB,EAAEA,oBAAoB,CAACT,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACtD,oBAAoB,EAAE,EAAE,CAAC;IAAED,YAAY,EAAEA,YAAY,CAACR,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACvD,YAAY,EAAE,EAAE,CAAC;IAAEX,EAAE,EAAEA,EAAE;IAAE/F,KAAK,EAAEA,KAAK,CAACkG,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAACjK,KAAK,EAAE,EAAE,CAAC;IAAEoG,IAAI,EAAEA,IAAI;IAAE/B,OAAO,EAAEA,OAAO,CAAC6B,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG+D,QAAQ,CAAC5F,OAAO,EAAE,EAAE,CAAC;IAAE0C,UAAU,EAAE,CAAC,CAAC,EAAEzD,WAAW,CAAC2F,eAAe,EAAElC,UAAU;EAAE,CAAC,EAAEwE,cAAc,CAACC,IAAI,EAAEpG,CAAC,EAAEpG,CAAC,CAAC,CAAC;EAChlB,IAAI4M,WAAW,GAAG,IAAI7H,mBAAmB,CAACE,OAAO,CAAC,CAAC;EACnD,IAAIsG,MAAM,GAAGqB,WAAW,CAACpJ,kBAAkB,CAAC2I,qBAAqB,CAAC;EAClE,OAAO,CAACnB,MAAM,EAAEO,MAAM,CAAC;AAC3B;AACA,SAASjI,oBAAoBA,CAACgI,cAAc,EAAEuB,UAAU,EAAE;EACtD,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAErI,MAAM,CAACwH,QAAQ,EAAEX,cAAc,CAAC;EACnD,IAAIyB,WAAW,GAAG,CAAC,CAAC,EAAEtI,MAAM,CAACuI,mBAAmB,EAAEF,QAAQ,CAAC;EAC3D,IAAI7G,SAAS,GAAG,CAAC,CAAC,EAAExB,MAAM,CAACwI,UAAU,EAAEJ,UAAU,CAAC;EAClD,IAAIK,SAAS,GAAG,CAAC,CAAC,EAAEzI,MAAM,CAACuH,SAAS,EAAEe,WAAW,EAAE9G,SAAS,CAACxD,CAAC,EAAEwD,SAAS,CAACG,CAAC,EAAEH,SAAS,CAACjG,CAAC,CAAC;EACzF,IAAImN,OAAO,GAAG,CAAC,CAAC,EAAE1I,MAAM,CAAC2I,YAAY,EAAEF,SAAS,EAAE,IAAI,CAAC;EACvD,OAAO,CAAC,CAAC,EAAE/I,SAAS,CAACyB,eAAe,EAAEuH,OAAO,CAAC9G,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClE;AACAnD,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,2BAA2BA,CAACgK,SAAS,EAAER,UAAU,EAAES,eAAe,EAAE;EACzE,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAE9I,MAAM,CAAC+I,WAAW,EAAE,CAAC,CAAC,EAAEjJ,uBAAuB,CAACkJ,qBAAqB,EAAEJ,SAAS,CAAC,CAAC;EACpG,OAAOjK,4BAA4B,CAACmK,OAAO,EAAEV,UAAU,EAAES,eAAe,CAAC;AAC7E;AACApK,OAAO,CAACG,2BAA2B,GAAGA,2BAA2B;AACjE,SAASD,4BAA4BA,CAACsK,WAAW,EAAEzH,SAAS,EAAEsF,MAAM,EAAE;EAClE,IAAI;IACA,CAAC,CAAC,EAAE/G,gBAAgB,CAACmJ,2BAA2B,EAAED,WAAW,EAAEzH,SAAS,EAAEsF,MAAM,CAAC;IACjF,OAAO,IAAI;EACf,CAAC,CACD,OAAOqC,KAAK,EAAE;IACV,OAAO,KAAK;EAChB;AACJ;AACA1K,OAAO,CAACE,4BAA4B,GAAGA,4BAA4B;AACnE,SAASD,SAASA,CAAC0K,GAAG,EAAE;EACpB,IAAI/D,EAAE,GAAGnF,SAAS,CAACuG,OAAO,CAAC4C,eAAe,CAACD,GAAG,CAAC;IAAEpL,CAAC,GAAGqH,EAAE,CAAC,CAAC,CAAC;IAAE1D,CAAC,GAAG0D,EAAE,CAAC,CAAC,CAAC;IAAE9J,CAAC,GAAG8J,EAAE,CAAC,CAAC,CAAC;EAChF,OAAO;IACHrH,CAAC,EAAEwI,QAAQ,CAACxI,CAAC,EAAE,EAAE,CAAC;IAClB2D,CAAC,EAAE,CAAC,CAAC,EAAE3B,MAAM,CAACwH,QAAQ,EAAE7F,CAAC,CAAC;IAC1BpG,CAAC,EAAE,CAAC,CAAC,EAAEyE,MAAM,CAACwH,QAAQ,EAAEjM,CAAC;EAC7B,CAAC;AACL;AACAkD,OAAO,CAACC,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}