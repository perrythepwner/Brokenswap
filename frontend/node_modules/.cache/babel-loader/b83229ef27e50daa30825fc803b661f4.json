{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport { raw } from 'hast-util-raw';\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  ðŸ™Œ\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return (tree, file) => {\n    // Assume that when a root was given, itâ€™s also returned.\n    const result = /** @type {Root} */raw(tree, file, options);\n    return result;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}