{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.celoReactReducer = void 0;\nconst logger_1 = require(\"./utils/logger\");\nfunction celoReactReducer(state, action) {\n  switch (action.type) {\n    case 'decrementPendingActionCount':\n      return Object.assign(Object.assign({}, state), {\n        pendingActionCount: state.pendingActionCount - 1\n      });\n    case 'setAddress':\n      if (action.payload === state.address) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        address: action.payload\n      });\n    case 'setWalletChainId':\n      return Object.assign(Object.assign({}, state), {\n        walletChainId: action.payload\n      });\n    case 'setNetwork':\n      if (action.payload === state.network) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        network: action.payload\n      });\n    case 'setNetworkByName':\n      {\n        const network = state.networks.find(net => net.name === action.payload);\n        if (network) {\n          return Object.assign(Object.assign({}, state), {\n            network\n          });\n        }\n        return state;\n      }\n    case 'setFeeCurrency':\n      if (action.payload === state.feeCurrency) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        feeCurrency: action.payload\n      });\n    case 'initialisedConnector':\n      {\n        return Object.assign(Object.assign({}, state), {\n          connector: action.payload\n        });\n      }\n    case 'connect':\n      {\n        const network = state.networks.find(net => net.name === action.payload.networkName);\n        return Object.assign(Object.assign({}, state), {\n          address: action.payload.address,\n          network: network,\n          walletChainId: action.payload.walletChainId\n        });\n      }\n    case 'disconnect':\n      return Object.assign(Object.assign({}, state), {\n        address: null\n      });\n    default:\n      // This checks to see if the action type is `set<fieldname>`\n      if (action.type.slice(0, 3) === 'set') {\n        // This builds the proper camel-case field name from the action type\n        // e.g., setFieldName -> fieldName\n        const key = \"\".concat(action.type.charAt(3).toLowerCase()).concat(action.type.slice(4));\n        return Object.assign(Object.assign({}, state), {\n          [key]: action.payload\n        });\n      } else {\n        (0, logger_1.getApplicationLogger)().error('[reducer]', new Error(\"Unrecognized action type \".concat(action.type)));\n      }\n      return state;\n  }\n}\nexports.celoReactReducer = celoReactReducer;","map":{"version":3,"names":["Object","defineProperty","exports","value","celoReactReducer","logger_1","require","state","action","type","assign","pendingActionCount","payload","address","walletChainId","network","networks","find","net","name","feeCurrency","connector","networkName","slice","key","concat","charAt","toLowerCase","getApplicationLogger","error","Error"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/react-celo-reducer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.celoReactReducer = void 0;\nconst logger_1 = require(\"./utils/logger\");\nfunction celoReactReducer(state, action) {\n    switch (action.type) {\n        case 'decrementPendingActionCount':\n            return Object.assign(Object.assign({}, state), { pendingActionCount: state.pendingActionCount - 1 });\n        case 'setAddress':\n            if (action.payload === state.address) {\n                return state;\n            }\n            return Object.assign(Object.assign({}, state), { address: action.payload });\n        case 'setWalletChainId':\n            return Object.assign(Object.assign({}, state), { walletChainId: action.payload });\n        case 'setNetwork':\n            if (action.payload === state.network) {\n                return state;\n            }\n            return Object.assign(Object.assign({}, state), { network: action.payload });\n        case 'setNetworkByName': {\n            const network = state.networks.find((net) => net.name === action.payload);\n            if (network) {\n                return Object.assign(Object.assign({}, state), { network });\n            }\n            return state;\n        }\n        case 'setFeeCurrency':\n            if (action.payload === state.feeCurrency) {\n                return state;\n            }\n            return Object.assign(Object.assign({}, state), { feeCurrency: action.payload });\n        case 'initialisedConnector': {\n            return Object.assign(Object.assign({}, state), { connector: action.payload });\n        }\n        case 'connect': {\n            const network = state.networks.find((net) => net.name === action.payload.networkName);\n            return Object.assign(Object.assign({}, state), { address: action.payload.address, network: network, walletChainId: action.payload.walletChainId });\n        }\n        case 'disconnect':\n            return Object.assign(Object.assign({}, state), { address: null });\n        default:\n            // This checks to see if the action type is `set<fieldname>`\n            if (action.type.slice(0, 3) === 'set') {\n                // This builds the proper camel-case field name from the action type\n                // e.g., setFieldName -> fieldName\n                const key = `${action.type.charAt(3).toLowerCase()}${action.type.slice(4)}`;\n                return Object.assign(Object.assign({}, state), { [key]: action.payload });\n            }\n            else {\n                (0, logger_1.getApplicationLogger)().error('[reducer]', new Error(`Unrecognized action type ${action.type}`));\n            }\n            return state;\n    }\n}\nexports.celoReactReducer = celoReactReducer;\n//# sourceMappingURL=react-celo-reducer.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}