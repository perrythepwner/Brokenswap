{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$();\nimport { ChainId } from '@celo/react-celo';\nimport UBESWAP_TOKEN_LIST from '@ubeswap/default-token-list';\nimport { Token } from '@ubeswap/sdk';\nimport UNISWAP_TOKEN_LIST from '@uniswap/default-token-list';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport sortByListPriority from 'utils/listSort';\nimport { UNSUPPORTED_LIST_URLS } from './../../constants/lists';\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo, tags) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tags = void 0;\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n}\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [ChainId.Mainnet]: {},\n  [ChainId.Alfajores]: {},\n  [ChainId.Baklava]: {}\n};\nconst listCache = typeof WeakMap !== 'undefined' ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenInfo$tags$map$f, _tokenInfo$tags, _tokenInfo$tags$map, _tokenMap$token$chain;\n    const tags = (_tokenInfo$tags$map$f = (_tokenInfo$tags = tokenInfo.tags) === null || _tokenInfo$tags === void 0 ? void 0 : (_tokenInfo$tags$map = _tokenInfo$tags.map(tagId => {\n      var _list$tags;\n      if (!((_list$tags = list.tags) !== null && _list$tags !== void 0 && _list$tags[tagId])) return undefined;\n      return _objectSpread(_objectSpread({}, list.tags[tagId]), {}, {\n        id: tagId\n      });\n    })) === null || _tokenInfo$tags$map === void 0 ? void 0 : _tokenInfo$tags$map.filter(x => Boolean(x))) !== null && _tokenInfo$tags$map$f !== void 0 ? _tokenInfo$tags$map$f : [];\n    const token = new WrappedTokenInfo(tokenInfo, tags);\n    if (((_tokenMap$token$chain = tokenMap[token.chainId]) === null || _tokenMap$token$chain === void 0 ? void 0 : _tokenMap$token$chain[token.address]) !== undefined) throw Error(\"Duplicate tokens found for \".concat(token.name));\n    return _objectSpread(_objectSpread({}, tokenMap), {}, {\n      [token.chainId]: _objectSpread(_objectSpread({}, tokenMap[token.chainId]), {}, {\n        [token.address]: {\n          token,\n          list: list\n        }\n      })\n    });\n  }, _objectSpread({}, EMPTY_LIST));\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\nexport function useAllLists() {\n  _s();\n  return useSelector(state => state.lists.byUrl);\n}\n_s(useAllLists, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nfunction combineMaps(map1, map2) {\n  return {\n    [ChainId.Mainnet]: _objectSpread(_objectSpread({}, map1[ChainId.Mainnet]), map2[ChainId.Mainnet]),\n    [ChainId.Alfajores]: _objectSpread(_objectSpread({}, map1[ChainId.Alfajores]), map2[ChainId.Alfajores]),\n    [ChainId.Baklava]: _objectSpread(_objectSpread({}, map1[ChainId.Baklava]), map2[ChainId.Baklava])\n  };\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls) {\n  _s2();\n  const lists = useAllLists();\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n    return urls.slice()\n    // sort by priority so top priority goes last\n    .sort(sortByListPriority).reduce((allTokens, currentUrl) => {\n      var _lists$currentUrl;\n      const current = (_lists$currentUrl = lists[currentUrl]) === null || _lists$currentUrl === void 0 ? void 0 : _lists$currentUrl.current;\n      if (!current) return allTokens;\n      try {\n        const newTokens = Object.assign(listToTokenMap(current));\n        return combineMaps(allTokens, newTokens);\n      } catch (error) {\n        console.error('Could not show token list due to error', error);\n        return allTokens;\n      }\n    }, EMPTY_LIST);\n  }, [lists, urls]);\n}\n\n// filter out unsupported lists\n_s2(useCombinedTokenMapFromUrls, \"dehXRrnFU9pff84Mq4UWf/sQUEg=\", false, function () {\n  return [useAllLists];\n});\nexport function useActiveListUrls() {\n  _s3();\n  var _useSelector;\n  return (_useSelector = useSelector(state => state.lists.activeListUrls)) === null || _useSelector === void 0 ? void 0 : _useSelector.filter(url => !UNSUPPORTED_LIST_URLS.includes(url));\n}\n_s3(useActiveListUrls, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useInactiveListUrls() {\n  _s4();\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter(url => !(allActiveListUrls !== null && allActiveListUrls !== void 0 && allActiveListUrls.includes(url)) && !UNSUPPORTED_LIST_URLS.includes(url));\n}\n\n// get all the tokens from active lists, combine with local default tokens\n_s4(useInactiveListUrls, \"Aaa3RmQiPVrq8Yq5CzTAgDsk1NQ=\", false, function () {\n  return [useAllLists, useActiveListUrls];\n});\nexport function useCombinedActiveList() {\n  _s5();\n  const activeListUrls = useActiveListUrls();\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls);\n  const defaultTokenMap = listToTokenMap(_objectSpread(_objectSpread({}, UBESWAP_TOKEN_LIST), UNISWAP_TOKEN_LIST));\n  return combineMaps(activeTokens, defaultTokenMap);\n}\n\n// all tokens from inactive lists\n_s5(useCombinedActiveList, \"QZotrOQv4eqlrVbyAJUYHF4JEV4=\", false, function () {\n  return [useActiveListUrls, useCombinedTokenMapFromUrls];\n});\nexport function useCombinedInactiveList() {\n  _s6();\n  const allInactiveListUrls = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n}\n\n// used to hide warnings on import for default tokens\n_s6(useCombinedInactiveList, \"KkTaFdmygCZo4aYLCj+AgUEN+q4=\", false, function () {\n  return [useInactiveListUrls, useCombinedTokenMapFromUrls];\n});\nexport function useDefaultTokenList() {\n  return _objectSpread(_objectSpread({}, listToTokenMap(UBESWAP_TOKEN_LIST)), listToTokenMap(UNISWAP_TOKEN_LIST));\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList() {\n  _s7();\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS);\n\n  // format into one token address map\n  return loadedUnsupportedListMap;\n}\n_s7(useUnsupportedTokenList, \"IDLqbTCADDxqzN3Mo99zPBv+VI4=\", false, function () {\n  return [useCombinedTokenMapFromUrls];\n});\nexport function useIsListActive(url) {\n  _s8();\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls === null || activeListUrls === void 0 ? void 0 : activeListUrls.includes(url));\n}\n_s8(useIsListActive, \"OzLukTCRH8SDpmsIh1vZXvu7OrM=\", false, function () {\n  return [useActiveListUrls];\n});","map":{"version":3,"names":["ChainId","UBESWAP_TOKEN_LIST","Token","UNISWAP_TOKEN_LIST","useMemo","useSelector","sortByListPriority","UNSUPPORTED_LIST_URLS","WrappedTokenInfo","constructor","tokenInfo","tags","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","Mainnet","Alfajores","Baklava","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","_tokenInfo$tags$map$f","_tokenInfo$tags","_tokenInfo$tags$map","_tokenMap$token$chain","tagId","_list$tags","undefined","_objectSpread","id","filter","x","Boolean","token","Error","concat","set","useAllLists","_s","state","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","_s2","slice","sort","allTokens","currentUrl","_lists$currentUrl","current","newTokens","Object","assign","error","console","useActiveListUrls","_s3","_useSelector","activeListUrls","url","includes","useInactiveListUrls","_s4","allActiveListUrls","keys","useCombinedActiveList","_s5","activeTokens","defaultTokenMap","useCombinedInactiveList","_s6","allInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","_s7","loadedUnsupportedListMap","useIsListActive","_s8"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/lists/hooks.ts"],"sourcesContent":["import { ChainId } from '@celo/react-celo'\nimport UBESWAP_TOKEN_LIST from '@ubeswap/default-token-list'\nimport { Token } from '@ubeswap/sdk'\nimport UNISWAP_TOKEN_LIST from '@uniswap/default-token-list'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport sortByListPriority from 'utils/listSort'\n\nimport { AppState } from '../index'\nimport { UNSUPPORTED_LIST_URLS } from './../../constants/lists'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n  public readonly tags: TagInfo[]\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{\n  [chainId: number]: Readonly<{\n    [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\n  }>\n}>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.Mainnet]: {},\n  [ChainId.Alfajores]: {},\n  [ChainId.Baklava]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId]?.[token.address] !== undefined)\n        throw Error(`Duplicate tokens found for ${token.name}`)\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list: list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.Mainnet]: { ...map1[ChainId.Mainnet], ...map2[ChainId.Mainnet] },\n    [ChainId.Alfajores]: { ...map1[ChainId.Alfajores], ...map2[ChainId.Alfajores] },\n    [ChainId.Baklava]: { ...map1[ChainId.Baklava], ...map2[ChainId.Baklava] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url)\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap({ ...UBESWAP_TOKEN_LIST, ...UNISWAP_TOKEN_LIST })\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return { ...listToTokenMap(UBESWAP_TOKEN_LIST), ...listToTokenMap(UNISWAP_TOKEN_LIST) }\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return loadedUnsupportedListMap\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}