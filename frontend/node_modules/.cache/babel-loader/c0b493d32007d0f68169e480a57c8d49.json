{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkLabels = void 0;\nObject.defineProperty(exports, \"decodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.decodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"decodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.decodeLabelhash;\n  }\n});\nexports.emptyAddress = void 0;\nObject.defineProperty(exports, \"encodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.encodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"encodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.encodeLabelhash;\n  }\n});\nexports.getEnsStartBlock = getEnsStartBlock;\nObject.defineProperty(exports, \"isDecrypted\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isDecrypted;\n  }\n});\nObject.defineProperty(exports, \"isEncodedLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isEncodedLabelhash;\n  }\n});\nexports.isLabelValid = isLabelValid;\nObject.defineProperty(exports, \"isValidContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.isValidContenthash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.labelhash;\n  }\n});\nexports.mergeLabels = void 0;\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _namehash.namehash;\n  }\n});\nexports.uniq = exports.parseSearchTerm = void 0;\nexports.validateName = validateName;\nvar _ethers = require(\"ethers\");\nvar _labelhash = require(\"./labelhash\");\nvar _contents = require(\"./contents\");\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\nvar _namehash = require(\"./namehash\");\n\n//import { checkLabelHash } from '../updaters/preImageDB'\nvar uniq = function uniq(a, param) {\n  return a.filter(function (item, pos) {\n    return a.map(function (mapItem) {\n      return mapItem[param];\n    }).indexOf(item[param]) === pos;\n  });\n};\nexports.uniq = uniq;\nvar checkLabels = function checkLabels() {\n  for (var _len = arguments.length, labelHashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    labelHashes[_key] = arguments[_key];\n  }\n  return labelHashes.map(function (hash) {\n    return null;\n  });\n};\nexports.checkLabels = checkLabels;\nfunction getEnsStartBlock(networkId) {\n  switch (networkId) {\n    case 1:\n    case '1':\n      return 3327417;\n    case 3:\n    case '3':\n      return 25409;\n    default:\n      return 0;\n  }\n} // export const checkLabels = (...labelHashes) =>\n//   labelHashes.map(labelHash => checkLabelHash(labelHash) || null)\n\nvar mergeLabels = function mergeLabels(labels1, labels2) {\n  return labels1.map(function (label, index) {\n    return label ? label : labels2[index];\n  });\n};\nexports.mergeLabels = mergeLabels;\nfunction validateName(name) {\n  var nameArray = name.split('.');\n  var hasEmptyLabels = nameArray.filter(function (e) {\n    return e.length < 1;\n  }).length > 0;\n  if (hasEmptyLabels) throw new Error('Domain cannot have empty labels');\n  var normalizedArray = nameArray.map(function (label) {\n    return (0, _labelhash.isEncodedLabelhash)(label) ? label : (0, _ethEnsNamehash.normalize)(label);\n  });\n  try {\n    return normalizedArray.join('.');\n  } catch (e) {\n    throw e;\n  }\n}\nfunction isLabelValid(name) {\n  try {\n    validateName(name);\n    if (name.indexOf('.') === -1) {\n      return true;\n    }\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\nvar parseSearchTerm = function parseSearchTerm(term, validTld) {\n  var regex = /[^.]+$/;\n  try {\n    validateName(term);\n  } catch (e) {\n    return 'invalid';\n  }\n  if (term.indexOf('.') !== -1) {\n    var termArray = term.split('.');\n    var tld = term.match(regex) ? term.match(regex)[0] : '';\n    if (validTld) {\n      if (tld === 'eth' && termArray[termArray.length - 2].length < 3) {\n        return 'short';\n      }\n      return 'supported';\n    }\n    return 'unsupported';\n  } else if (_ethers.ethers.utils.isAddress(term)) {\n    return 'address';\n  } else {\n    //check if the search term is actually a tld\n    if (validTld) {\n      return 'tld';\n    }\n    return 'search';\n  }\n};\nexports.parseSearchTerm = parseSearchTerm;\nvar emptyAddress = '0x0000000000000000000000000000000000000000';\nexports.emptyAddress = emptyAddress;","map":{"version":3,"names":["Object","defineProperty","exports","value","checkLabels","enumerable","get","_contents","decodeContenthash","_labelhash","decodeLabelhash","emptyAddress","encodeContenthash","encodeLabelhash","getEnsStartBlock","isDecrypted","isEncodedLabelhash","isLabelValid","isValidContenthash","labelhash","mergeLabels","_namehash","namehash","uniq","parseSearchTerm","validateName","_ethers","require","_ethEnsNamehash","a","param","filter","item","pos","map","mapItem","indexOf","_len","arguments","length","labelHashes","Array","_key","hash","networkId","labels1","labels2","label","index","name","nameArray","split","hasEmptyLabels","e","Error","normalizedArray","normalize","join","console","log","term","validTld","regex","termArray","tld","match","ethers","utils","isAddress"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@ensdomains/ensjs/dist/utils/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkLabels = void 0;\nObject.defineProperty(exports, \"decodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.decodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"decodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.decodeLabelhash;\n  }\n});\nexports.emptyAddress = void 0;\nObject.defineProperty(exports, \"encodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.encodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"encodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.encodeLabelhash;\n  }\n});\nexports.getEnsStartBlock = getEnsStartBlock;\nObject.defineProperty(exports, \"isDecrypted\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isDecrypted;\n  }\n});\nObject.defineProperty(exports, \"isEncodedLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isEncodedLabelhash;\n  }\n});\nexports.isLabelValid = isLabelValid;\nObject.defineProperty(exports, \"isValidContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.isValidContenthash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.labelhash;\n  }\n});\nexports.mergeLabels = void 0;\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _namehash.namehash;\n  }\n});\nexports.uniq = exports.parseSearchTerm = void 0;\nexports.validateName = validateName;\n\nvar _ethers = require(\"ethers\");\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _contents = require(\"./contents\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar _namehash = require(\"./namehash\");\n\n//import { checkLabelHash } from '../updaters/preImageDB'\nvar uniq = function uniq(a, param) {\n  return a.filter(function (item, pos) {\n    return a.map(function (mapItem) {\n      return mapItem[param];\n    }).indexOf(item[param]) === pos;\n  });\n};\n\nexports.uniq = uniq;\n\nvar checkLabels = function checkLabels() {\n  for (var _len = arguments.length, labelHashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    labelHashes[_key] = arguments[_key];\n  }\n\n  return labelHashes.map(function (hash) {\n    return null;\n  });\n};\n\nexports.checkLabels = checkLabels;\n\nfunction getEnsStartBlock(networkId) {\n  switch (networkId) {\n    case 1:\n    case '1':\n      return 3327417;\n\n    case 3:\n    case '3':\n      return 25409;\n\n    default:\n      return 0;\n  }\n} // export const checkLabels = (...labelHashes) =>\n//   labelHashes.map(labelHash => checkLabelHash(labelHash) || null)\n\n\nvar mergeLabels = function mergeLabels(labels1, labels2) {\n  return labels1.map(function (label, index) {\n    return label ? label : labels2[index];\n  });\n};\n\nexports.mergeLabels = mergeLabels;\n\nfunction validateName(name) {\n  var nameArray = name.split('.');\n  var hasEmptyLabels = nameArray.filter(function (e) {\n    return e.length < 1;\n  }).length > 0;\n  if (hasEmptyLabels) throw new Error('Domain cannot have empty labels');\n  var normalizedArray = nameArray.map(function (label) {\n    return (0, _labelhash.isEncodedLabelhash)(label) ? label : (0, _ethEnsNamehash.normalize)(label);\n  });\n\n  try {\n    return normalizedArray.join('.');\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction isLabelValid(name) {\n  try {\n    validateName(name);\n\n    if (name.indexOf('.') === -1) {\n      return true;\n    }\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nvar parseSearchTerm = function parseSearchTerm(term, validTld) {\n  var regex = /[^.]+$/;\n\n  try {\n    validateName(term);\n  } catch (e) {\n    return 'invalid';\n  }\n\n  if (term.indexOf('.') !== -1) {\n    var termArray = term.split('.');\n    var tld = term.match(regex) ? term.match(regex)[0] : '';\n\n    if (validTld) {\n      if (tld === 'eth' && termArray[termArray.length - 2].length < 3) {\n        return 'short';\n      }\n\n      return 'supported';\n    }\n\n    return 'unsupported';\n  } else if (_ethers.ethers.utils.isAddress(term)) {\n    return 'address';\n  } else {\n    //check if the search term is actually a tld\n    if (validTld) {\n      return 'tld';\n    }\n\n    return 'search';\n  }\n};\n\nexports.parseSearchTerm = parseSearchTerm;\nvar emptyAddress = '0x0000000000000000000000000000000000000000';\nexports.emptyAddress = emptyAddress;"],"mappings":"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"},"metadata":{},"sourceType":"script"}