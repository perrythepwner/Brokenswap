{"ast":null,"code":"import _objectSpread from \"/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Field, typeInput } from './actions';\nconst initialState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0'\n};\nexport default createReducer(initialState, builder => builder.addCase(typeInput, (state, _ref) => {\n  let {\n    payload: {\n      field,\n      typedValue\n    }\n  } = _ref;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    independentField: field,\n    typedValue\n  });\n}));","map":{"version":3,"names":["createReducer","Field","typeInput","initialState","independentField","LIQUIDITY_PERCENT","typedValue","builder","addCase","state","_ref","payload","field","_objectSpread"],"sources":["/app/src/state/burn/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  })\n)\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,KAAK,EAAEC,SAAS,QAAQ,WAAW;AAO5C,MAAMC,YAAuB,GAAG;EAC9BC,gBAAgB,EAAEH,KAAK,CAACI,iBAAiB;EACzCC,UAAU,EAAE;AACd,CAAC;AAED,eAAeN,aAAa,CAAYG,YAAY,EAAGI,OAAO,IAC5DA,OAAO,CAACC,OAAO,CAACN,SAAS,EAAE,CAACO,KAAK,EAAAC,IAAA,KAAyC;EAAA,IAAvC;IAAEC,OAAO,EAAE;MAAEC,KAAK;MAAEN;IAAW;EAAE,CAAC,GAAAI,IAAA;EACnE,OAAAG,aAAA,CAAAA,aAAA,KACKJ,KAAK;IACRL,gBAAgB,EAAEQ,KAAK;IACvBN;EAAU;AAEd,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module"}