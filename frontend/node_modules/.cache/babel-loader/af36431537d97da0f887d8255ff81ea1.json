{"ast":null,"code":"import { checkParams, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n  return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n  return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n  const required = [\"topic\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}\nexport function isPublishRequest(request) {\n  return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n  return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n  const required = [\"message\", \"topic\", \"ttl\"];\n  const optional = [\"prompt\", \"tag\"];\n  return checkParams(params, required, optional);\n}\nexport function isUnsubscribeRequest(request) {\n  return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\nexport function isUnsubscribeMethod(method) {\n  return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n  const required = [\"id\", \"topic\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}\nexport function isSubscriptionRequest(request) {\n  return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\nexport function isSubscriptionMethod(method) {\n  return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n  const required = [\"id\", \"data\"];\n  const optional = [];\n  return checkParams(params, required, optional);\n}","map":{"version":3,"sources":["../../src/validators.ts"],"names":[],"mappings":"AAEA,SAAS,WAAW,EAAE,cAAc,QAAQ,QAAQ;AAKpD,OAAM,SAAU,kBAAkB,CAChC,OAAuB,EAAA;EAEvB,OAAO,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC;AAC/E;AAEA,OAAM,SAAU,iBAAiB,CAAC,MAAc,EAAA;EAC9C,OAAO,cAAc,CAAC,MAAM,EAAE,WAAW,CAAC;AAC5C;AAEA,OAAM,SAAU,iBAAiB,CAC/B,MAAW,EAAA;EAEX,MAAM,QAAQ,GAAG,CAAC,OAAO,CAAC;EAC1B,MAAM,QAAQ,GAAG,EAAE;EACnB,OAAO,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAChD;AAIA,OAAM,SAAU,gBAAgB,CAC9B,OAAuB,EAAA;EAEvB,OAAO,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;AAC3E;AAEA,OAAM,SAAU,eAAe,CAAC,MAAc,EAAA;EAC5C,OAAO,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC;AAC1C;AAEA,OAAM,SAAU,eAAe,CAC7B,MAAW,EAAA;EAEX,MAAM,QAAQ,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;EAC5C,MAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;EAClC,OAAO,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAChD;AAIA,OAAM,SAAU,oBAAoB,CAClC,OAAuB,EAAA;EAEvB,OACE,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC;AAE9E;AAEA,OAAM,SAAU,mBAAmB,CAAC,MAAc,EAAA;EAChD,OAAO,cAAc,CAAC,MAAM,EAAE,aAAa,CAAC;AAC9C;AAEA,OAAM,SAAU,mBAAmB,CACjC,MAAW,EAAA;EAEX,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC;EAChC,MAAM,QAAQ,GAAG,EAAE;EACnB,OAAO,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAChD;AAIA,OAAM,SAAU,qBAAqB,CACnC,OAAuB,EAAA;EAEvB,OACE,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC;AAEhF;AAEA,OAAM,SAAU,oBAAoB,CAAC,MAAc,EAAA;EACjD,OAAO,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC;AAC/C;AAEA,OAAM,SAAU,oBAAoB,CAClC,MAAW,EAAA;EAEX,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;EAC/B,MAAM,QAAQ,GAAG,EAAE;EACnB,OAAO,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAChD","sourceRoot":"","sourcesContent":["import { checkParams, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n    return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n    const required = [\"topic\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\nexport function isPublishRequest(request) {\n    return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n    return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n    const required = [\"message\", \"topic\", \"ttl\"];\n    const optional = [\"prompt\", \"tag\"];\n    return checkParams(params, required, optional);\n}\nexport function isUnsubscribeRequest(request) {\n    return (isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params));\n}\nexport function isUnsubscribeMethod(method) {\n    return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n    const required = [\"id\", \"topic\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\nexport function isSubscriptionRequest(request) {\n    return (isSubscriptionMethod(request.method) && isSubscriptionParams(request.params));\n}\nexport function isSubscriptionMethod(method) {\n    return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n    const required = [\"id\", \"data\"];\n    const optional = [];\n    return checkParams(params, required, optional);\n}\n//# sourceMappingURL=validators.js.map"]},"metadata":{},"sourceType":"module"}