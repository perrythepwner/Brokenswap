{"ast":null,"code":"import{DEFAULT_LIST_OF_LISTS}from'./../constants/lists';// use ordering of default list of lists to assign priority\nexport default function sortByListPriority(urlA,urlB){const first=DEFAULT_LIST_OF_LISTS.includes(urlA)?DEFAULT_LIST_OF_LISTS.indexOf(urlA):Number.MAX_SAFE_INTEGER;const second=DEFAULT_LIST_OF_LISTS.includes(urlB)?DEFAULT_LIST_OF_LISTS.indexOf(urlB):Number.MAX_SAFE_INTEGER;// need reverse order to make sure mapping includes top priority last\nif(first<second)return 1;else if(first>second)return-1;return 0;}","map":{"version":3,"names":["DEFAULT_LIST_OF_LISTS","sortByListPriority","urlA","urlB","first","includes","indexOf","Number","MAX_SAFE_INTEGER","second"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/listSort.ts"],"sourcesContent":["import { DEFAULT_LIST_OF_LISTS } from './../constants/lists'\n\n// use ordering of default list of lists to assign priority\nexport default function sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  else if (first > second) return -1\n  return 0\n}\n"],"mappings":"AAAA,OAASA,qBAAqB,KAAQ,sBAAsB,CAE5D;AACA,cAAe,SAAS,CAAAC,kBAAkBA,CAACC,IAAY,CAAEC,IAAY,CAAE,CACrE,KAAM,CAAAC,KAAK,CAAGJ,qBAAqB,CAACK,QAAQ,CAACH,IAAI,CAAC,CAAGF,qBAAqB,CAACM,OAAO,CAACJ,IAAI,CAAC,CAAGK,MAAM,CAACC,gBAAgB,CAClH,KAAM,CAAAC,MAAM,CAAGT,qBAAqB,CAACK,QAAQ,CAACF,IAAI,CAAC,CAAGH,qBAAqB,CAACM,OAAO,CAACH,IAAI,CAAC,CAAGI,MAAM,CAACC,gBAAgB,CAEnH;AACA,GAAIJ,KAAK,CAAGK,MAAM,CAAE,MAAO,EAAC,KACvB,IAAIL,KAAK,CAAGK,MAAM,CAAE,MAAO,CAAC,CAAC,CAClC,MAAO,EAAC,CACV"},"metadata":{},"sourceType":"module"}