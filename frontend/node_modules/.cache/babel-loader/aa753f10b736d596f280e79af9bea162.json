{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namehash = namehash;\nvar _labelhash = require(\"./labelhash\");\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\nvar sha3 = require('js-sha3').keccak_256;\nfunction namehash(inputName) {\n  var node = '';\n  for (var i = 0; i < 32; i++) {\n    node += '00';\n  }\n  if (inputName) {\n    var labels = inputName.split('.');\n    for (var _i = labels.length - 1; _i >= 0; _i--) {\n      var labelSha = void 0;\n      if ((0, _labelhash.isEncodedLabelhash)(labels[_i])) {\n        labelSha = (0, _labelhash.decodeLabelhash)(labels[_i]);\n      } else {\n        var normalisedLabel = (0, _ethEnsNamehash.normalize)(labels[_i]);\n        labelSha = sha3(normalisedLabel);\n      }\n      node = sha3(new Buffer(node + labelSha, 'hex'));\n    }\n  }\n  return '0x' + node;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","namehash","_labelhash","require","_ethEnsNamehash","sha3","keccak_256","inputName","node","i","labels","split","_i","length","labelSha","isEncodedLabelhash","decodeLabelhash","normalisedLabel","normalize","Buffer"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@ensdomains/ensjs/dist/utils/namehash.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namehash = namehash;\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar sha3 = require('js-sha3').keccak_256;\n\nfunction namehash(inputName) {\n  var node = '';\n\n  for (var i = 0; i < 32; i++) {\n    node += '00';\n  }\n\n  if (inputName) {\n    var labels = inputName.split('.');\n\n    for (var _i = labels.length - 1; _i >= 0; _i--) {\n      var labelSha = void 0;\n\n      if ((0, _labelhash.isEncodedLabelhash)(labels[_i])) {\n        labelSha = (0, _labelhash.decodeLabelhash)(labels[_i]);\n      } else {\n        var normalisedLabel = (0, _ethEnsNamehash.normalize)(labels[_i]);\n        labelSha = sha3(normalisedLabel);\n      }\n\n      node = sha3(new Buffer(node + labelSha, 'hex'));\n    }\n  }\n\n  return '0x' + node;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAE3B,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEvC,IAAIC,eAAe,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEjD,IAAIE,IAAI,GAAGF,OAAO,CAAC,SAAS,CAAC,CAACG,UAAU;AAExC,SAASL,QAAQA,CAACM,SAAS,EAAE;EAC3B,IAAIC,IAAI,GAAG,EAAE;EAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BD,IAAI,IAAI,IAAI;EACd;EAEA,IAAID,SAAS,EAAE;IACb,IAAIG,MAAM,GAAGH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC;IAEjC,KAAK,IAAIC,EAAE,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAED,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;MAC9C,IAAIE,QAAQ,GAAG,KAAK,CAAC;MAErB,IAAI,CAAC,CAAC,EAAEZ,UAAU,CAACa,kBAAkB,EAAEL,MAAM,CAACE,EAAE,CAAC,CAAC,EAAE;QAClDE,QAAQ,GAAG,CAAC,CAAC,EAAEZ,UAAU,CAACc,eAAe,EAAEN,MAAM,CAACE,EAAE,CAAC,CAAC;MACxD,CAAC,MAAM;QACL,IAAIK,eAAe,GAAG,CAAC,CAAC,EAAEb,eAAe,CAACc,SAAS,EAAER,MAAM,CAACE,EAAE,CAAC,CAAC;QAChEE,QAAQ,GAAGT,IAAI,CAACY,eAAe,CAAC;MAClC;MAEAT,IAAI,GAAGH,IAAI,CAAC,IAAIc,MAAM,CAACX,IAAI,GAAGM,QAAQ,EAAE,KAAK,CAAC,CAAC;IACjD;EACF;EAEA,OAAO,IAAI,GAAGN,IAAI;AACpB"},"metadata":{},"sourceType":"script"}