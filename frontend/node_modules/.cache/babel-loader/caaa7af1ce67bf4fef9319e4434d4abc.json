{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _asyncToGenerator = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\nclass FilterPolyfill {\n  constructor(provider) {\n    this.logFilters = new Map(); // <id, filter>\n    this.blockFilters = new Set(); // <id>\n    this.pendingTransactionFilters = new Set(); // <id, true>\n    this.cursors = new Map(); // <id, cursor>\n    this.timeouts = new Map(); // <id, setTimeout id>\n    this.nextFilterId = (0, types_1.IntNumber)(1);\n    this.provider = provider;\n  }\n  newFilter(param) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const filter = filterFromParam(param);\n      const id = _this.makeFilterId();\n      const cursor = yield _this.setInitialCursorPosition(id, filter.fromBlock);\n      console.log(\"Installing new log filter(\".concat(id, \"):\"), filter, \"initial cursor position:\", cursor);\n      _this.logFilters.set(id, filter);\n      _this.setFilterTimeout(id);\n      return (0, util_1.hexStringFromIntNumber)(id);\n    })();\n  }\n  newBlockFilter() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const id = _this2.makeFilterId();\n      const cursor = yield _this2.setInitialCursorPosition(id, \"latest\");\n      console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n      _this2.blockFilters.add(id);\n      _this2.setFilterTimeout(id);\n      return (0, util_1.hexStringFromIntNumber)(id);\n    })();\n  }\n  newPendingTransactionFilter() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const id = _this3.makeFilterId();\n      const cursor = yield _this3.setInitialCursorPosition(id, \"latest\");\n      console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n      _this3.pendingTransactionFilters.add(id);\n      _this3.setFilterTimeout(id);\n      return (0, util_1.hexStringFromIntNumber)(id);\n    })();\n  }\n  uninstallFilter(filterId) {\n    const id = (0, util_1.intNumberFromHexString)(filterId);\n    console.log(\"Uninstalling filter (\".concat(id, \")\"));\n    this.deleteFilter(id);\n    return true;\n  }\n  getFilterChanges(filterId) {\n    const id = (0, util_1.intNumberFromHexString)(filterId);\n    if (this.timeouts.has(id)) {\n      // extend timeout\n      this.setFilterTimeout(id);\n    }\n    if (this.logFilters.has(id)) {\n      return this.getLogFilterChanges(id);\n    } else if (this.blockFilters.has(id)) {\n      return this.getBlockFilterChanges(id);\n    } else if (this.pendingTransactionFilters.has(id)) {\n      return this.getPendingTransactionFilterChanges(id);\n    }\n    return Promise.resolve(filterNotFoundError());\n  }\n  getFilterLogs(filterId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const id = (0, util_1.intNumberFromHexString)(filterId);\n      const filter = _this4.logFilters.get(id);\n      if (!filter) {\n        return filterNotFoundError();\n      }\n      return _this4.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getLogs\",\n        params: [paramFromFilter(filter)]\n      }));\n    })();\n  }\n  makeFilterId() {\n    return (0, types_1.IntNumber)(++this.nextFilterId);\n  }\n  sendAsyncPromise(request) {\n    return new Promise((resolve, reject) => {\n      this.provider.sendAsync(request, (err, response) => {\n        if (err) {\n          return reject(err);\n        }\n        if (Array.isArray(response) || response == null) {\n          return reject(new Error(\"unexpected response received: \".concat(JSON.stringify(response))));\n        }\n        resolve(response);\n      });\n    });\n  }\n  deleteFilter(id) {\n    console.log(\"Deleting filter (\".concat(id, \")\"));\n    this.logFilters.delete(id);\n    this.blockFilters.delete(id);\n    this.pendingTransactionFilters.delete(id);\n    this.cursors.delete(id);\n    this.timeouts.delete(id);\n  }\n  getLogFilterChanges(id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const filter = _this5.logFilters.get(id);\n      const cursorPosition = _this5.cursors.get(id);\n      if (!cursorPosition || !filter) {\n        return filterNotFoundError();\n      }\n      const currentBlockHeight = yield _this5.getCurrentBlockHeight();\n      const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n      if (cursorPosition > currentBlockHeight) {\n        return emptyResult();\n      }\n      if (cursorPosition > filter.toBlock) {\n        return emptyResult();\n      }\n      console.log(\"Fetching logs from \".concat(cursorPosition, \" to \").concat(toBlock, \" for filter \").concat(id));\n      const response = yield _this5.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getLogs\",\n        params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n          fromBlock: cursorPosition,\n          toBlock\n        }))]\n      }));\n      if (Array.isArray(response.result)) {\n        const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n        const highestBlock = Math.max(...blocks);\n        if (highestBlock && highestBlock > cursorPosition) {\n          const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n          console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n          _this5.cursors.set(id, newCursorPosition);\n        }\n      }\n      return response;\n    })();\n  }\n  getBlockFilterChanges(id) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const cursorPosition = _this6.cursors.get(id);\n      if (!cursorPosition) {\n        return filterNotFoundError();\n      }\n      const currentBlockHeight = yield _this6.getCurrentBlockHeight();\n      if (cursorPosition > currentBlockHeight) {\n        return emptyResult();\n      }\n      console.log(\"Fetching blocks from \".concat(cursorPosition, \" to \").concat(currentBlockHeight, \" for filter (\").concat(id, \")\"));\n      const blocks = (yield Promise.all(\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => _this6.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n      console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n      _this6.cursors.set(id, newCursorPosition);\n      return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        result: blocks\n      });\n    })();\n  }\n  getPendingTransactionFilterChanges(_id) {\n    return _asyncToGenerator(function* () {\n      // pending transaction filters are not supported\n      return Promise.resolve(emptyResult());\n    })();\n  }\n  setInitialCursorPosition(id, startBlock) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const currentBlockHeight = yield _this7.getCurrentBlockHeight();\n      const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n      _this7.cursors.set(id, initialCursorPosition);\n      return initialCursorPosition;\n    })();\n  }\n  setFilterTimeout(id) {\n    const existing = this.timeouts.get(id);\n    if (existing) {\n      window.clearTimeout(existing);\n    }\n    const timeout = window.setTimeout(() => {\n      console.log(\"Filter (\".concat(id, \") timed out\"));\n      this.deleteFilter(id);\n    }, TIMEOUT);\n    this.timeouts.set(id, timeout);\n  }\n  getCurrentBlockHeight() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        result\n      } = yield _this8.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_blockNumber\",\n        params: []\n      }));\n      return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    })();\n  }\n  getBlockHashByNumber(blockNumber) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const response = yield _this9.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n        method: \"eth_getBlockByNumber\",\n        params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false]\n      }));\n      if (response.result && typeof response.result.hash === \"string\") {\n        return (0, util_1.ensureHexString)(response.result.hash);\n      }\n      return null;\n    })();\n  }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n  const param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n  return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return (0, types_1.IntNumber)(0);\n  } else if ((0, util_1.isHexString)(value)) {\n    return (0, util_1.intNumberFromHexString)(value);\n  }\n  throw new Error(\"Invalid block option: \".concat(String(value)));\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n  return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","constructor","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","newFilter","param","_this","filter","makeFilterId","cursor","setInitialCursorPosition","fromBlock","console","log","concat","set","setFilterTimeout","hexStringFromIntNumber","newBlockFilter","_this2","add","newPendingTransactionFilter","_this3","uninstallFilter","filterId","intNumberFromHexString","deleteFilter","getFilterChanges","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","getFilterLogs","_this4","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","_this5","cursorPosition","currentBlockHeight","getCurrentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","_this6","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","_this7","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","_this8","ensureHexString","_this9","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","String","error","code","message"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@coinbase/wallet-sdk/dist/provider/FilterPolyfill.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0,\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = (0, types_1.IntNumber)(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    uninstallFilter(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock })),\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return (0, util_1.ensureHexString)(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || [],\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics,\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return (0, types_1.IntNumber)(0);\n    }\n    else if ((0, util_1.isHexString)(value)) {\n        return (0, util_1.intNumberFromHexString)(value);\n    }\n    throw new Error(`Invalid block option: ${String(value)}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}