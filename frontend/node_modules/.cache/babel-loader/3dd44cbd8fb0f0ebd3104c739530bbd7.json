{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\nfunction hash(a, b) {\n  input.set(a, 0);\n  input.set(b, 32);\n  return as_sha256_1.digest64(input);\n}\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\nfunction hashTwoObjects(a, b) {\n  return as_sha256_1.digest64HashObjects(a, b);\n}\nexports.hashTwoObjects = hashTwoObjects;\nfunction hashObjectToUint8Array(obj) {\n  const byteArr = new Uint8Array(32);\n  as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n  return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n  return as_sha256_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\nfunction isHashObject(hash) {\n  // @ts-ignore\n  return hash.length === undefined;\n}\nexports.isHashObject = isHashObject;","map":null,"metadata":{},"sourceType":"script"}