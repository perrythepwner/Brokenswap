{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$();\nimport { Pair, Token } from '@ubeswap/sdk';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { colors } from '../../theme';\nimport { addSerializedPair, addSerializedToken, updateUserAllowMoolaWithdrawal, updateUserDarkMode, updateUserDeadline, updateUserDisableSmartRouting, updateUserExpertMode, updateUserMinApprove, updateUserSingleHopOnly, updateUserSlippageTolerance } from './actions';\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useIsDarkMode() {\n  _s();\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useSelector(_ref => {\n    let {\n      user: {\n        matchesDarkMode,\n        userDarkMode\n      }\n    } = _ref;\n    return {\n      userDarkMode,\n      matchesDarkMode\n    };\n  }, shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n_s(useIsDarkMode, \"fn6etfcHXfMs02JV/usc15XJU0k=\", false, function () {\n  return [useSelector];\n});\nexport function useDarkModeManager() {\n  _s2();\n  const dispatch = useDispatch();\n  const darkMode = true; // should be useIsDarkMode() but in this ctf only dark mode allowed\n\n  useEffect(() => {\n    const _colors = colors(darkMode);\n  }, [darkMode]);\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n_s2(useDarkModeManager, \"s41K7Ca+v2cpAnx23+r8oUWd1WI=\", false, function () {\n  return [useDispatch];\n});\nexport function useIsExpertMode() {\n  _s3();\n  return useSelector(state => state.user.userExpertMode);\n}\n_s3(useIsExpertMode, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useExpertModeManager() {\n  _s4();\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n_s4(useExpertModeManager, \"ULLfsmjCcahFerd6rXziokiA+RI=\", false, function () {\n  return [useDispatch, useIsExpertMode];\n});\nexport function useUserMinApprove() {\n  _s5();\n  const dispatch = useDispatch();\n  const minApprove = useSelector(state => state.user.userMinApprove);\n  const setMinApprove = useCallback(newMinApprove => {\n    dispatch(updateUserMinApprove({\n      userMinApprove: newMinApprove\n    }));\n  }, [dispatch]);\n  return [minApprove, setMinApprove];\n}\n_s5(useUserMinApprove, \"1Xh7jWXqFKtuDuaI52q24+Ao4PQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserAllowMoolaWithdrawal() {\n  _s6();\n  const dispatch = useDispatch();\n  const allowMoolaWithdrawal = useSelector(state => state.user.userAllowMoolaWithdrawal);\n  const setAllowMoolaWithdrawal = useCallback(newallowMoolaWithdrawal => {\n    dispatch(updateUserAllowMoolaWithdrawal({\n      userAllowMoolaWithdrawal: newallowMoolaWithdrawal\n    }));\n  }, [dispatch]);\n  return [allowMoolaWithdrawal, setAllowMoolaWithdrawal];\n}\n_s6(useUserAllowMoolaWithdrawal, \"ztmt9AJfAdGYsTYs9tn1apSCfOY=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserDisableSmartRouting() {\n  _s7();\n  const dispatch = useDispatch();\n  const disableSmartRouting = useSelector(state => state.user.userDisableSmartRouting);\n  const setDisableSmartRouting = useCallback(newSmartRouting => {\n    dispatch(updateUserDisableSmartRouting({\n      userDisableSmartRouting: newSmartRouting\n    }));\n  }, [dispatch]);\n  return [disableSmartRouting, setDisableSmartRouting];\n}\n_s7(useUserDisableSmartRouting, \"b9kMReP+gMT4g1cetyHR79ehrj8=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserSingleHopOnly() {\n  _s8();\n  const dispatch = useDispatch();\n  const singleHopOnly = useSelector(state => state.user.userSingleHopOnly);\n  const setSingleHopOnly = useCallback(newSingleHopOnly => {\n    ReactGA.event({\n      category: 'Routing',\n      action: newSingleHopOnly ? 'enable single hop' : 'disable single hop'\n    });\n    dispatch(updateUserSingleHopOnly({\n      userSingleHopOnly: newSingleHopOnly\n    }));\n  }, [dispatch]);\n  return [singleHopOnly, setSingleHopOnly];\n}\n_s8(useUserSingleHopOnly, \"WikX7qzoMFkBpAxkb0uK96O/O0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserSlippageTolerance() {\n  _s9();\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(userSlippageTolerance => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\n_s9(useUserSlippageTolerance, \"lO9PfBe6MbiNxNv0Q3TS/IyxyIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserTransactionTTL() {\n  _s10();\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\n_s10(useUserTransactionTTL, \"nR4EOlfoy/fKrJpN3ITukwrTqzM=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useAddUserToken() {\n  _s11();\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n_s11(useAddUserToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useUserAddedTokens() {\n  _s12();\n  const serializedTokensMap = useSelector(_ref2 => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref2;\n    return tokens;\n  });\n  return useMemo(() => {\n    var _serializedTokensMap$;\n    return Object.values((_serializedTokensMap$ = serializedTokensMap[1]) !== null && _serializedTokensMap$ !== void 0 ? _serializedTokensMap$ : {}).map(deserializeToken);\n  }, [serializedTokensMap, 1]);\n}\n_s12(useUserAddedTokens, \"r15JkOSjYvKH0n2bjj0wmrYXKfM=\", false, function () {\n  return [useSelector];\n});\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  _s13();\n  const dispatch = useDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n_s13(usePairAdder, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useURLWarningVisible() {\n  _s14();\n  return useSelector(state => state.user.URLWarningVisible);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n_s14(useURLWarningVisible, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function toV2LiquidityToken(_ref3) {\n  let [tokenA, tokenB] = _ref3;\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'ULP', 'Ubeswap LP Token');\n}","map":{"version":3,"names":["Pair","Token","useCallback","useEffect","useMemo","ReactGA","shallowEqual","useDispatch","useSelector","colors","addSerializedPair","addSerializedToken","updateUserAllowMoolaWithdrawal","updateUserDarkMode","updateUserDeadline","updateUserDisableSmartRouting","updateUserExpertMode","updateUserMinApprove","updateUserSingleHopOnly","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","_s","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","_s2","dispatch","darkMode","_colors","toggleSetDarkMode","useIsExpertMode","_s3","state","userExpertMode","useExpertModeManager","_s4","expertMode","toggleSetExpertMode","useUserMinApprove","_s5","minApprove","userMinApprove","setMinApprove","newMinApprove","useUserAllowMoolaWithdrawal","_s6","allowMoolaWithdrawal","userAllowMoolaWithdrawal","setAllowMoolaWithdrawal","newallowMoolaWithdrawal","useUserDisableSmartRouting","_s7","disableSmartRouting","userDisableSmartRouting","setDisableSmartRouting","newSmartRouting","useUserSingleHopOnly","_s8","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","event","category","action","useUserSlippageTolerance","_s9","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","_s10","userDeadline","setUserDeadline","useAddUserToken","_s11","useUserAddedTokens","_s12","serializedTokensMap","_ref2","tokens","_serializedTokensMap$","Object","values","map","serializePair","pair","token0","token1","usePairAdder","_s13","serializedPair","useURLWarningVisible","_s14","URLWarningVisible","toV2LiquidityToken","_ref3","tokenA","tokenB","getAddress"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/user/hooks.tsx"],"sourcesContent":["import { Pair, Token } from '@ubeswap/sdk'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { colors } from '../../theme'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserAllowMoolaWithdrawal,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserDisableSmartRouting,\n  updateUserExpertMode,\n  updateUserMinApprove,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = true // should be useIsDarkMode() but in this ctf only dark mode allowed\n\n  useEffect(() => {\n    const _colors = colors(darkMode)\n  }, [darkMode])\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserMinApprove(): [boolean, (minApprove: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const minApprove = useSelector<AppState, AppState['user']['userMinApprove']>((state) => state.user.userMinApprove)\n  const setMinApprove = useCallback(\n    (newMinApprove: boolean) => {\n      dispatch(updateUserMinApprove({ userMinApprove: newMinApprove }))\n    },\n    [dispatch]\n  )\n  return [minApprove, setMinApprove]\n}\n\nexport function useUserAllowMoolaWithdrawal(): [boolean, (allowMoolaWithdrawal: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const allowMoolaWithdrawal = useSelector<AppState, AppState['user']['userAllowMoolaWithdrawal']>(\n    (state) => state.user.userAllowMoolaWithdrawal\n  )\n  const setAllowMoolaWithdrawal = useCallback(\n    (newallowMoolaWithdrawal: boolean) => {\n      dispatch(updateUserAllowMoolaWithdrawal({ userAllowMoolaWithdrawal: newallowMoolaWithdrawal }))\n    },\n    [dispatch]\n  )\n  return [allowMoolaWithdrawal, setAllowMoolaWithdrawal]\n}\n\nexport function useUserDisableSmartRouting(): [boolean, (disableSmartRouting: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const disableSmartRouting = useSelector<AppState, AppState['user']['userDisableSmartRouting']>(\n    (state) => state.user.userDisableSmartRouting\n  )\n  const setDisableSmartRouting = useCallback(\n    (newSmartRouting: boolean) => {\n      dispatch(updateUserDisableSmartRouting({ userDisableSmartRouting: newSmartRouting }))\n    },\n    [dispatch]\n  )\n  return [disableSmartRouting, setDisableSmartRouting]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      ReactGA.event({\n        category: 'Routing',\n        action: newSingleHopOnly ? 'enable single hop' : 'disable single hop',\n      })\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch]\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    return Object.values(serializedTokensMap[1] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, 1])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'ULP', 'Ubeswap LP Token')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}