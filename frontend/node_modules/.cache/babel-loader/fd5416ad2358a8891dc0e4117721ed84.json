{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst base_1 = require(\"@celo/contractkit/lib/base\");\nconst mini_kit_1 = require(\"@celo/contractkit/lib/mini-kit\");\nconst constants_1 = require(\"../constants\");\nconst common_1 = require(\"./common\");\n/**\n * Connectors are our link between a DApp and the users wallet. Each\n * wallet has different semantics and these classes attempt to unify\n * them and present a workable API.\n */\nclass UnauthenticatedConnector extends common_1.AbstractConnector {\n  constructor(n) {\n    super();\n    this.initialised = true;\n    this.type = constants_1.WalletTypes.Unauthenticated;\n    this.feeCurrency = base_1.CeloContract.GoldToken;\n    this.kit = (0, mini_kit_1.newKit)(n.rpcUrl);\n  }\n  initialise() {\n    this.initialised = true;\n    return this;\n  }\n  supportsFeeCurrency() {\n    return false;\n  }\n  startNetworkChangeFromApp(network) {\n    this.kit = (0, mini_kit_1.newKit)(network.rpcUrl);\n    this.emit(common_1.ConnectorEvents.NETWORK_CHANGED, network.name);\n  }\n  close() {\n    try {\n      this.kit.connection.stop();\n    } finally {\n      this.disconnect();\n    }\n  }\n}\nexports.default = UnauthenticatedConnector;","map":null,"metadata":{},"sourceType":"script"}