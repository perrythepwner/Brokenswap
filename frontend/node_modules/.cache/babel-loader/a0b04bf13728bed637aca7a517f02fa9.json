{"ast":null,"code":"import{useCelo,useProvider}from'@celo/react-celo';import{ChainId,currencyEquals,JSBI,Pair,Route,TokenAmount}from'@ubeswap/sdk';import{useMemo}from'react';import{useUserAllowMoolaWithdrawal}from'state/user/hooks';import{moolaDuals}from'./useMoola';const BIG_NUMBER=JSBI.exponentiate(JSBI.BigInt(2),JSBI.BigInt(255));export const useMoolaDirectRoute=(inputCurrency,outputCurrency)=>{const library=useProvider();const{network}=useCelo();const chainId=network.chainId;const[allowMoolaWithdrawal]=useUserAllowMoolaWithdrawal();return useMemo(()=>{if(chainId===ChainId.BAKLAVA){return null;}if(!library){return null;}if(!inputCurrency||!outputCurrency){return null;}const withdrawalRoutes=moolaDuals.map(dual=>dual.map(token=>token[chainId]));const depositRoutes=withdrawalRoutes.map(route=>route.reverse());const routes=[...depositRoutes,...(allowMoolaWithdrawal?withdrawalRoutes:[])];const routeRaw=inputCurrency&&outputCurrency&&routes.find(_ref=>{let[a,b]=_ref;return currencyEquals(inputCurrency,a)&&currencyEquals(outputCurrency,b);});if(!routeRaw){return null;}return new Route([new Pair(new TokenAmount(inputCurrency,BIG_NUMBER),new TokenAmount(outputCurrency,BIG_NUMBER))],inputCurrency,outputCurrency);},[inputCurrency,outputCurrency,allowMoolaWithdrawal,chainId,library]);};","map":{"version":3,"names":["useCelo","useProvider","ChainId","currencyEquals","JSBI","Pair","Route","TokenAmount","useMemo","useUserAllowMoolaWithdrawal","moolaDuals","BIG_NUMBER","exponentiate","BigInt","useMoolaDirectRoute","inputCurrency","outputCurrency","library","network","chainId","allowMoolaWithdrawal","BAKLAVA","withdrawalRoutes","map","dual","token","depositRoutes","route","reverse","routes","routeRaw","find","_ref","a","b"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/routing/moola/useMoolaDirectRoute.ts"],"sourcesContent":["import { useCelo, useProvider } from '@celo/react-celo'\nimport { ChainId, currencyEquals, JSBI, Pair, Route, Token, TokenAmount } from '@ubeswap/sdk'\nimport { useMemo } from 'react'\nimport { useUserAllowMoolaWithdrawal } from 'state/user/hooks'\n\nimport { moolaDuals } from './useMoola'\n\nconst BIG_NUMBER = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(255))\n\nexport const useMoolaDirectRoute = (\n  inputCurrency: Token | null | undefined,\n  outputCurrency: Token | null | undefined\n): Route | null => {\n  const library = useProvider()\n  const { network } = useCelo()\n  const chainId = network.chainId as unknown as ChainId\n  const [allowMoolaWithdrawal] = useUserAllowMoolaWithdrawal()\n\n  return useMemo(() => {\n    if (chainId === ChainId.BAKLAVA) {\n      return null\n    }\n\n    if (!library) {\n      return null\n    }\n\n    if (!inputCurrency || !outputCurrency) {\n      return null\n    }\n\n    const withdrawalRoutes = moolaDuals.map((dual) => dual.map((token) => token[chainId]))\n    const depositRoutes = withdrawalRoutes.map((route) => route.reverse())\n\n    const routes = [...depositRoutes, ...(allowMoolaWithdrawal ? withdrawalRoutes : [])] as const\n\n    const routeRaw =\n      inputCurrency &&\n      outputCurrency &&\n      routes.find(([a, b]) => currencyEquals(inputCurrency, a) && currencyEquals(outputCurrency, b))\n    if (!routeRaw) {\n      return null\n    }\n\n    return new Route(\n      [new Pair(new TokenAmount(inputCurrency, BIG_NUMBER), new TokenAmount(outputCurrency, BIG_NUMBER))],\n      inputCurrency,\n      outputCurrency\n    )\n  }, [inputCurrency, outputCurrency, allowMoolaWithdrawal, chainId, library])\n}\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,WAAW,KAAQ,kBAAkB,CACvD,OAASC,OAAO,CAAEC,cAAc,CAAEC,IAAI,CAAEC,IAAI,CAAEC,KAAK,CAASC,WAAW,KAAQ,cAAc,CAC7F,OAASC,OAAO,KAAQ,OAAO,CAC/B,OAASC,2BAA2B,KAAQ,kBAAkB,CAE9D,OAASC,UAAU,KAAQ,YAAY,CAEvC,KAAM,CAAAC,UAAU,CAAGP,IAAI,CAACQ,YAAY,CAACR,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC,CAAET,IAAI,CAACS,MAAM,CAAC,GAAG,CAAC,CAAC,CAEtE,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CACjCC,aAAuC,CACvCC,cAAwC,GACvB,CACjB,KAAM,CAAAC,OAAO,CAAGhB,WAAW,CAAC,CAAC,CAC7B,KAAM,CAAEiB,OAAQ,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAC7B,KAAM,CAAAmB,OAAO,CAAGD,OAAO,CAACC,OAA6B,CACrD,KAAM,CAACC,oBAAoB,CAAC,CAAGX,2BAA2B,CAAC,CAAC,CAE5D,MAAO,CAAAD,OAAO,CAAC,IAAM,CACnB,GAAIW,OAAO,GAAKjB,OAAO,CAACmB,OAAO,CAAE,CAC/B,MAAO,KAAI,CACb,CAEA,GAAI,CAACJ,OAAO,CAAE,CACZ,MAAO,KAAI,CACb,CAEA,GAAI,CAACF,aAAa,EAAI,CAACC,cAAc,CAAE,CACrC,MAAO,KAAI,CACb,CAEA,KAAM,CAAAM,gBAAgB,CAAGZ,UAAU,CAACa,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACD,GAAG,CAAEE,KAAK,EAAKA,KAAK,CAACN,OAAO,CAAC,CAAC,CAAC,CACtF,KAAM,CAAAO,aAAa,CAAGJ,gBAAgB,CAACC,GAAG,CAAEI,KAAK,EAAKA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAEtE,KAAM,CAAAC,MAAM,CAAG,CAAC,GAAGH,aAAa,CAAE,IAAIN,oBAAoB,CAAGE,gBAAgB,CAAG,EAAE,CAAC,CAAU,CAE7F,KAAM,CAAAQ,QAAQ,CACZf,aAAa,EACbC,cAAc,EACda,MAAM,CAACE,IAAI,CAACC,IAAA,MAAC,CAACC,CAAC,CAAEC,CAAC,CAAC,CAAAF,IAAA,OAAK,CAAA7B,cAAc,CAACY,aAAa,CAAEkB,CAAC,CAAC,EAAI9B,cAAc,CAACa,cAAc,CAAEkB,CAAC,CAAC,GAAC,CAChG,GAAI,CAACJ,QAAQ,CAAE,CACb,MAAO,KAAI,CACb,CAEA,MAAO,IAAI,CAAAxB,KAAK,CACd,CAAC,GAAI,CAAAD,IAAI,CAAC,GAAI,CAAAE,WAAW,CAACQ,aAAa,CAAEJ,UAAU,CAAC,CAAE,GAAI,CAAAJ,WAAW,CAACS,cAAc,CAAEL,UAAU,CAAC,CAAC,CAAC,CACnGI,aAAa,CACbC,cACF,CAAC,CACH,CAAC,CAAE,CAACD,aAAa,CAAEC,cAAc,CAAEI,oBAAoB,CAAED,OAAO,CAAEF,OAAO,CAAC,CAAC,CAC7E,CAAC"},"metadata":{},"sourceType":"module"}