{"ast":null,"code":"import _objectSpread from \"/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Field, replaceLimitState, selectCurrency, setBuying, setRecipient, switchCurrencies, typeInput } from './actions';\nconst initialState = {\n  priceTypedValue: '',\n  tokenTypedValue: '',\n  [Field.TOKEN]: {\n    currencyId: ''\n  },\n  [Field.PRICE]: {\n    currencyId: ''\n  },\n  recipient: null,\n  buying: true\n};\nexport default createReducer(initialState, builder => builder.addCase(replaceLimitState, (state, _ref) => {\n  let {\n    payload: {\n      tokenTypedValue,\n      priceTypedValue,\n      recipient,\n      field,\n      tokenCurrencyId,\n      priceCurrencyId,\n      buying\n    }\n  } = _ref;\n  return {\n    [Field.TOKEN]: {\n      currencyId: tokenCurrencyId\n    },\n    [Field.PRICE]: {\n      currencyId: priceCurrencyId\n    },\n    independentField: field,\n    tokenTypedValue,\n    priceTypedValue,\n    recipient,\n    buying\n  };\n}).addCase(selectCurrency, (state, _ref2) => {\n  let {\n    payload: {\n      currencyId,\n      field\n    }\n  } = _ref2;\n  const otherField = field === Field.TOKEN ? Field.PRICE : Field.TOKEN;\n  if (currencyId === state[otherField].currencyId) {\n    // the case where we have to Limit the order\n    return _objectSpread(_objectSpread({}, state), {}, {\n      [field]: {\n        currencyId: currencyId\n      },\n      [otherField]: {\n        currencyId: state[field].currencyId\n      }\n    });\n  } else {\n    // the normal case\n    return _objectSpread(_objectSpread({}, state), {}, {\n      [field]: {\n        currencyId: currencyId\n      }\n    });\n  }\n}).addCase(switchCurrencies, state => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    [Field.TOKEN]: {\n      currencyId: state[Field.PRICE].currencyId\n    },\n    [Field.PRICE]: {\n      currencyId: state[Field.TOKEN].currencyId\n    }\n  });\n}).addCase(typeInput, (state, _ref3) => {\n  let {\n    payload: {\n      field,\n      typedValue\n    }\n  } = _ref3;\n  if (field === Field.PRICE) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      priceTypedValue: typedValue\n    });\n  } else if (field === Field.TOKEN) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      tokenTypedValue: typedValue\n    });\n  }\n  return state;\n}).addCase(setRecipient, (state, _ref4) => {\n  let {\n    payload: {\n      recipient\n    }\n  } = _ref4;\n  state.recipient = recipient;\n}).addCase(setBuying, (state, _ref5) => {\n  let {\n    payload: {\n      buying\n    }\n  } = _ref5;\n  state.buying = buying;\n}));","map":{"version":3,"names":["createReducer","Field","replaceLimitState","selectCurrency","setBuying","setRecipient","switchCurrencies","typeInput","initialState","priceTypedValue","tokenTypedValue","TOKEN","currencyId","PRICE","recipient","buying","builder","addCase","state","_ref","payload","field","tokenCurrencyId","priceCurrencyId","independentField","_ref2","otherField","_objectSpread","_ref3","typedValue","_ref4","_ref5"],"sources":["/app/src/state/limit/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport {\n  Field,\n  replaceLimitState,\n  selectCurrency,\n  setBuying,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n} from './actions'\n\nexport interface LimitState {\n  readonly priceTypedValue: string\n  readonly tokenTypedValue: string\n  readonly [Field.TOKEN]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.PRICE]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if Limit should go to sender\n  readonly recipient: string | null\n  readonly buying: boolean\n}\n\nconst initialState: LimitState = {\n  priceTypedValue: '',\n  tokenTypedValue: '',\n  [Field.TOKEN]: {\n    currencyId: '',\n  },\n  [Field.PRICE]: {\n    currencyId: '',\n  },\n  recipient: null,\n  buying: true,\n}\n\nexport default createReducer<LimitState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceLimitState,\n      (\n        state,\n        { payload: { tokenTypedValue, priceTypedValue, recipient, field, tokenCurrencyId, priceCurrencyId, buying } }\n      ) => {\n        return {\n          [Field.TOKEN]: {\n            currencyId: tokenCurrencyId,\n          },\n          [Field.PRICE]: {\n            currencyId: priceCurrencyId,\n          },\n          independentField: field,\n          tokenTypedValue,\n          priceTypedValue,\n          recipient,\n          buying,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.TOKEN ? Field.PRICE : Field.TOKEN\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to Limit the order\n        return {\n          ...state,\n          [field]: { currencyId: currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      } else {\n        // the normal case\n        return {\n          ...state,\n          [field]: { currencyId: currencyId },\n        }\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        [Field.TOKEN]: { currencyId: state[Field.PRICE].currencyId },\n        [Field.PRICE]: { currencyId: state[Field.TOKEN].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      if (field === Field.PRICE) {\n        return {\n          ...state,\n          priceTypedValue: typedValue,\n        }\n      } else if (field === Field.TOKEN) {\n        return {\n          ...state,\n          tokenTypedValue: typedValue,\n        }\n      }\n      return state\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n    .addCase(setBuying, (state, { payload: { buying } }) => {\n      state.buying = buying\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}