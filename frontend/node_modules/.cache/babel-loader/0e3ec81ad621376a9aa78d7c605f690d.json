{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$(),\n  _s18 = $RefreshSig$();\nimport { useCelo } from '@celo/react-celo';\nimport { Pair, Token } from '@ubeswap/sdk';\nimport flatMap from 'lodash.flatmap';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { colors } from '../../theme';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, toggleURLWarning, updateUserAllowMoolaWithdrawal, updateUserDarkMode, updateUserDeadline, updateUserDisableSmartRouting, updateUserExpertMode, updateUserMinApprove, updateUserSingleHopOnly, updateUserSlippageTolerance } from './actions';\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useIsDarkMode() {\n  _s();\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useSelector(_ref => {\n    let {\n      user: {\n        matchesDarkMode,\n        userDarkMode\n      }\n    } = _ref;\n    return {\n      userDarkMode,\n      matchesDarkMode\n    };\n  }, shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n_s(useIsDarkMode, \"fn6etfcHXfMs02JV/usc15XJU0k=\", false, function () {\n  return [useSelector];\n});\nexport function useDarkModeManager() {\n  _s2();\n  const dispatch = useDispatch();\n  const darkMode = true; // should be useIsDarkMode() but in ctf only dark mode allowed\n  const {\n    updateTheme\n  } = useCelo();\n  useEffect(() => {\n    const _colors = colors(darkMode);\n    updateTheme({\n      background: _colors.bg2,\n      error: _colors.red1,\n      primary: _colors.primary1,\n      secondary: _colors.bg3,\n      text: _colors.text1,\n      textSecondary: _colors.text2,\n      textTertiary: _colors.text2,\n      muted: _colors.text4\n    });\n  }, [updateTheme, darkMode]);\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n_s2(useDarkModeManager, \"YRegYgorwevK44nqaYAifOdLdqY=\", false, function () {\n  return [useDispatch, useCelo];\n});\nexport function useIsExpertMode() {\n  _s3();\n  return useSelector(state => state.user.userExpertMode);\n}\n_s3(useIsExpertMode, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useExpertModeManager() {\n  _s4();\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n_s4(useExpertModeManager, \"ULLfsmjCcahFerd6rXziokiA+RI=\", false, function () {\n  return [useDispatch, useIsExpertMode];\n});\nexport function useUserMinApprove() {\n  _s5();\n  const dispatch = useDispatch();\n  const minApprove = useSelector(state => state.user.userMinApprove);\n  const setMinApprove = useCallback(newMinApprove => {\n    dispatch(updateUserMinApprove({\n      userMinApprove: newMinApprove\n    }));\n  }, [dispatch]);\n  return [minApprove, setMinApprove];\n}\n_s5(useUserMinApprove, \"1Xh7jWXqFKtuDuaI52q24+Ao4PQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserAllowMoolaWithdrawal() {\n  _s6();\n  const dispatch = useDispatch();\n  const allowMoolaWithdrawal = useSelector(state => state.user.userAllowMoolaWithdrawal);\n  const setAllowMoolaWithdrawal = useCallback(newallowMoolaWithdrawal => {\n    dispatch(updateUserAllowMoolaWithdrawal({\n      userAllowMoolaWithdrawal: newallowMoolaWithdrawal\n    }));\n  }, [dispatch]);\n  return [allowMoolaWithdrawal, setAllowMoolaWithdrawal];\n}\n_s6(useUserAllowMoolaWithdrawal, \"ztmt9AJfAdGYsTYs9tn1apSCfOY=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserDisableSmartRouting() {\n  _s7();\n  const dispatch = useDispatch();\n  const disableSmartRouting = useSelector(state => state.user.userDisableSmartRouting);\n  const setDisableSmartRouting = useCallback(newSmartRouting => {\n    dispatch(updateUserDisableSmartRouting({\n      userDisableSmartRouting: newSmartRouting\n    }));\n  }, [dispatch]);\n  return [disableSmartRouting, setDisableSmartRouting];\n}\n_s7(useUserDisableSmartRouting, \"b9kMReP+gMT4g1cetyHR79ehrj8=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserSingleHopOnly() {\n  _s8();\n  const dispatch = useDispatch();\n  const singleHopOnly = useSelector(state => state.user.userSingleHopOnly);\n  const setSingleHopOnly = useCallback(newSingleHopOnly => {\n    ReactGA.event({\n      category: 'Routing',\n      action: newSingleHopOnly ? 'enable single hop' : 'disable single hop'\n    });\n    dispatch(updateUserSingleHopOnly({\n      userSingleHopOnly: newSingleHopOnly\n    }));\n  }, [dispatch]);\n  return [singleHopOnly, setSingleHopOnly];\n}\n_s8(useUserSingleHopOnly, \"WikX7qzoMFkBpAxkb0uK96O/O0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserSlippageTolerance() {\n  _s9();\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(userSlippageTolerance => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\n_s9(useUserSlippageTolerance, \"lO9PfBe6MbiNxNv0Q3TS/IyxyIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserTransactionTTL() {\n  _s10();\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\n_s10(useUserTransactionTTL, \"nR4EOlfoy/fKrJpN3ITukwrTqzM=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useAddUserToken() {\n  _s11();\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n_s11(useAddUserToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useRemoveUserAddedToken() {\n  _s12();\n  const dispatch = useDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\n_s12(useRemoveUserAddedToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useUserAddedTokens() {\n  _s13();\n  const {\n    network\n  } = useCelo();\n  const chainId = network.chainId;\n  const serializedTokensMap = useSelector(_ref2 => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref2;\n    return tokens;\n  });\n  return useMemo(() => {\n    var _serializedTokensMap$;\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap$ = serializedTokensMap[chainId]) !== null && _serializedTokensMap$ !== void 0 ? _serializedTokensMap$ : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n_s13(useUserAddedTokens, \"UzQ+ypYPS3IRTeD+kv1Oja89jJA=\", false, function () {\n  return [useCelo, useSelector];\n});\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  _s14();\n  const dispatch = useDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n_s14(usePairAdder, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useURLWarningVisible() {\n  _s15();\n  return useSelector(state => state.user.URLWarningVisible);\n}\n_s15(useURLWarningVisible, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useURLWarningToggle() {\n  _s16();\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch]);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n_s16(useURLWarningToggle, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function toV2LiquidityToken(_ref3) {\n  let [tokenA, tokenB] = _ref3;\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'ULP', 'Ubeswap LP Token');\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs() {\n  _s17();\n  const {\n    network\n  } = useCelo();\n  const chainId = network.chainId;\n  const tokens = useAllTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(() => chainId ? flatMap(Object.keys(tokens), tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n    const token = tokens[tokenAddress];\n    // for each token on the current chain,\n    return (\n      // loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n      ).map(base => {\n        if (base.address === token.address) {\n          return null;\n        } else {\n          return [base, token];\n        }\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]);\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector(_ref4 => {\n    let {\n      user: {\n        pairs\n      }\n    } = _ref4;\n    return pairs;\n  });\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, _ref5) => {\n      let [tokenA, tokenB] = _ref5;\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? \"\".concat(tokenA.address, \":\").concat(tokenB.address) : \"\".concat(tokenB.address, \":\").concat(tokenA.address);\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n_s17(useTrackedTokenPairs, \"R8KOHidCTzlNM08f1aoryUHvyd4=\", false, function () {\n  return [useCelo, useAllTokens, useSelector];\n});\nexport function useIsAprMode() {\n  _s18();\n  return useSelector(state => state.user.userAprMode);\n}\n_s18(useIsAprMode, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useCelo","Pair","Token","flatMap","useCallback","useEffect","useMemo","ReactGA","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useAllTokens","colors","addSerializedPair","addSerializedToken","removeSerializedToken","toggleURLWarning","updateUserAllowMoolaWithdrawal","updateUserDarkMode","updateUserDeadline","updateUserDisableSmartRouting","updateUserExpertMode","updateUserMinApprove","updateUserSingleHopOnly","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","_s","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","_s2","dispatch","darkMode","updateTheme","_colors","background","bg2","error","red1","primary","primary1","secondary","bg3","text","text1","textSecondary","text2","textTertiary","muted","text4","toggleSetDarkMode","useIsExpertMode","_s3","state","userExpertMode","useExpertModeManager","_s4","expertMode","toggleSetExpertMode","useUserMinApprove","_s5","minApprove","userMinApprove","setMinApprove","newMinApprove","useUserAllowMoolaWithdrawal","_s6","allowMoolaWithdrawal","userAllowMoolaWithdrawal","setAllowMoolaWithdrawal","newallowMoolaWithdrawal","useUserDisableSmartRouting","_s7","disableSmartRouting","userDisableSmartRouting","setDisableSmartRouting","newSmartRouting","useUserSingleHopOnly","_s8","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","event","category","action","useUserSlippageTolerance","_s9","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","_s10","userDeadline","setUserDeadline","useAddUserToken","_s11","useRemoveUserAddedToken","_s12","useUserAddedTokens","_s13","network","serializedTokensMap","_ref2","tokens","_serializedTokensMap$","Object","values","map","serializePair","pair","token0","token1","usePairAdder","_s14","serializedPair","useURLWarningVisible","_s15","URLWarningVisible","useURLWarningToggle","_s16","toV2LiquidityToken","_ref3","tokenA","tokenB","getAddress","useTrackedTokenPairs","_s17","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","keys","tokenAddress","_BASES_TO_TRACK_LIQUI","base","filter","p","savedSerializedPairs","_ref4","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref5","sorted","sortsBefore","key","useIsAprMode","_s18","userAprMode"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/user/hooks.tsx"],"sourcesContent":["import { useCelo } from '@celo/react-celo'\nimport { Pair, Token } from '@ubeswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { colors } from '../../theme'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  toggleURLWarning,\n  updateUserAllowMoolaWithdrawal,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserDisableSmartRouting,\n  updateUserExpertMode,\n  updateUserMinApprove,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = true // should be useIsDarkMode() but in ctf only dark mode allowed\n  const { updateTheme } = useCelo()\n\n  useEffect(() => {\n    const _colors = colors(darkMode)\n    updateTheme({\n      background: _colors.bg2,\n      error: _colors.red1,\n      primary: _colors.primary1,\n      secondary: _colors.bg3,\n      text: _colors.text1,\n      textSecondary: _colors.text2,\n      textTertiary: _colors.text2,\n      muted: _colors.text4,\n    })\n  }, [updateTheme, darkMode])\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserMinApprove(): [boolean, (minApprove: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const minApprove = useSelector<AppState, AppState['user']['userMinApprove']>((state) => state.user.userMinApprove)\n  const setMinApprove = useCallback(\n    (newMinApprove: boolean) => {\n      dispatch(updateUserMinApprove({ userMinApprove: newMinApprove }))\n    },\n    [dispatch]\n  )\n  return [minApprove, setMinApprove]\n}\n\nexport function useUserAllowMoolaWithdrawal(): [boolean, (allowMoolaWithdrawal: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const allowMoolaWithdrawal = useSelector<AppState, AppState['user']['userAllowMoolaWithdrawal']>(\n    (state) => state.user.userAllowMoolaWithdrawal\n  )\n  const setAllowMoolaWithdrawal = useCallback(\n    (newallowMoolaWithdrawal: boolean) => {\n      dispatch(updateUserAllowMoolaWithdrawal({ userAllowMoolaWithdrawal: newallowMoolaWithdrawal }))\n    },\n    [dispatch]\n  )\n  return [allowMoolaWithdrawal, setAllowMoolaWithdrawal]\n}\n\nexport function useUserDisableSmartRouting(): [boolean, (disableSmartRouting: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const disableSmartRouting = useSelector<AppState, AppState['user']['userDisableSmartRouting']>(\n    (state) => state.user.userDisableSmartRouting\n  )\n  const setDisableSmartRouting = useCallback(\n    (newSmartRouting: boolean) => {\n      dispatch(updateUserDisableSmartRouting({ userDisableSmartRouting: newSmartRouting }))\n    },\n    [dispatch]\n  )\n  return [disableSmartRouting, setDisableSmartRouting]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      ReactGA.event({\n        category: 'Routing',\n        action: newSingleHopOnly ? 'enable single hop' : 'disable single hop',\n      })\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch]\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { network } = useCelo()\n  const chainId = network.chainId\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'ULP', 'Ubeswap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { network } = useCelo()\n  const chainId = network.chainId\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport function useIsAprMode(): boolean {\n  return useSelector<AppState, AppState['user']['userAprMode']>((state) => state.user.userAprMode)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}