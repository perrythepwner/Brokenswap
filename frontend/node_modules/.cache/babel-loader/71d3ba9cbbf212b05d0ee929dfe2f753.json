{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProvider = exports.fetchFromProvider = void 0;\nconst micro_ftch_1 = require(\"micro-ftch\");\nconst fetchFromProvider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (url, params) {\n    const res = yield (0, micro_ftch_1.default)(url, {\n      headers: {\n        'content-type': 'application/json'\n      },\n      type: 'json',\n      data: {\n        method: params.method,\n        params: params.params,\n        jsonrpc: '2.0',\n        id: 1\n      }\n    });\n    return res.result;\n  });\n  return function fetchFromProvider(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.fetchFromProvider = fetchFromProvider;\nconst getProvider = provider => {\n  var _provider$connection;\n  if (typeof provider === 'string') {\n    return provider;\n  } else if ((provider === null || provider === void 0 || (_provider$connection = provider.connection) === null || _provider$connection === void 0 ? void 0 : _provider$connection.url) !== undefined) {\n    return provider.connection.url;\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider');\n  }\n};\nexports.getProvider = getProvider;","map":{"version":3,"sources":["../src/provider.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAMO,MAAM,iBAAiB;EAAA,IAAA,IAAA,GAAA,iBAAA,CAAG,WAAO,GAAW,EAAE,MAAiB,EAAI;IACxE,MAAM,GAAG,SAAS,CAAA,CAAA,EAAA,YAAA,CAAA,OAAK,EAAC,GAAG,EAAE;MAC3B,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACD,IAAI,EAAE,MAAM;MACZ,IAAI,EAAE;QACJ,MAAM,EAAE,MAAM,CAAC,MAAM;QACrB,MAAM,EAAE,MAAM,CAAC,MAAM;QACrB,OAAO,EAAE,KAAK;QACd,EAAE,EAAE;MACL;KACF,CAAC;IAEF,OAAO,GAAG,CAAC,MAAM;EACnB,CAAC;EAAA,gBAfY,iBAAiB,CAAA,EAAA,EAAA,GAAA;IAAA,OAAA,IAAA,CAAA,KAAA,OAAA,SAAA;EAAA;AAAA,GAe7B;AAfY,OAAA,CAAA,iBAAiB,GAAA,iBAAA;AAiBvB,MAAM,WAAW,GAAI,QAAsB,IAAI;EAAA,IAAA,oBAAA;EACpD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAO,QAAQ;GAChB,MAAM,IAAI,CAAA,QAAQ,aAAR,QAAQ,gBAAA,oBAAA,GAAR,QAAQ,CAAE,UAAU,cAAA,oBAAA,uBAApB,oBAAA,CAAsB,GAAG,MAAK,SAAS,EAAE;IAClD,OAAO,QAAQ,CAAC,UAAU,CAAC,GAAG;GAC/B,MAAM;IACL,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC;EACnE;AACH,CAAC;AARY,OAAA,CAAA,WAAW,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProvider = exports.fetchFromProvider = void 0;\nconst micro_ftch_1 = require(\"micro-ftch\");\nconst fetchFromProvider = async (url, params) => {\n    const res = await (0, micro_ftch_1.default)(url, {\n        headers: {\n            'content-type': 'application/json',\n        },\n        type: 'json',\n        data: {\n            method: params.method,\n            params: params.params,\n            jsonrpc: '2.0',\n            id: 1,\n        },\n    });\n    return res.result;\n};\nexports.fetchFromProvider = fetchFromProvider;\nconst getProvider = (provider) => {\n    if (typeof provider === 'string') {\n        return provider;\n    }\n    else if (provider?.connection?.url !== undefined) {\n        return provider.connection.url;\n    }\n    else {\n        throw new Error('Must provide valid provider URL or Web3Provider');\n    }\n};\nexports.getProvider = getProvider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"script"}