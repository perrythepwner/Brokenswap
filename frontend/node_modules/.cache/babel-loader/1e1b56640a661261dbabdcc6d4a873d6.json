{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListBasicTreeViewDU = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nclass ListBasicTreeViewDU extends arrayBasic_1.ArrayBasicTreeViewDU {\n  constructor(type, _rootNode, cache) {\n    super(type, _rootNode, cache);\n    this.type = type;\n    this._rootNode = _rootNode;\n  }\n  /**\n   * Adds one value element at the end of the array and adds 1 to the un-commited ViewDU length\n   */\n  push(value) {\n    if (this._length >= this.type.limit) {\n      throw Error(\"Error pushing over limit\");\n    }\n    // Mutate length before .set()\n    this.dirtyLength = true;\n    const index = this._length++;\n    // If in new node..\n    if (index % this.type.itemsPerChunk === 0) {\n      // Set a zero node to the nodes array to avoid a navigation downwards in .set()\n      const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n      this.nodes[chunkIndex] = persistent_merkle_tree_1.zeroNode(0);\n    }\n    this.set(index, value);\n  }\n}\nexports.ListBasicTreeViewDU = ListBasicTreeViewDU;","map":null,"metadata":{},"sourceType":"script"}