{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LedgerWallet = exports.newLedgerWalletWithSetup = exports.AddressValidation = exports.CELO_BASE_DERIVATION_PATH = void 0;\nvar account_1 = require(\"@celo/base/lib/account\");\nvar collections_1 = require(\"@celo/base/lib/collections\");\nvar wallet_remote_1 = require(\"@celo/wallet-remote\");\nvar errors_1 = require(\"@ledgerhq/errors\");\nvar hw_app_eth_1 = __importDefault(require(\"@ledgerhq/hw-app-eth\"));\nvar debug_1 = __importDefault(require(\"debug\"));\nvar ledger_signer_1 = require(\"./ledger-signer\");\nvar ledger_utils_1 = require(\"./ledger-utils\");\nexports.CELO_BASE_DERIVATION_PATH = \"\".concat(account_1.CELO_DERIVATION_PATH_BASE.slice(2), \"/0\");\nvar ADDRESS_QTY = 5;\n// Validates an address using the Ledger\nvar AddressValidation;\n(function (AddressValidation) {\n  // Validates every address required only when the ledger is initialized\n  AddressValidation[AddressValidation[\"initializationOnly\"] = 0] = \"initializationOnly\";\n  // Validates the address every time a transaction is made\n  AddressValidation[AddressValidation[\"everyTransaction\"] = 1] = \"everyTransaction\";\n  // Validates the address the first time a transaction is made for that specific address\n  AddressValidation[AddressValidation[\"firstTransactionPerAddress\"] = 2] = \"firstTransactionPerAddress\";\n  // Never validates the addresses\n  AddressValidation[AddressValidation[\"never\"] = 3] = \"never\";\n})(AddressValidation = exports.AddressValidation || (exports.AddressValidation = {}));\nfunction newLedgerWalletWithSetup(transport, derivationPathIndexes, baseDerivationPath, ledgerAddressValidation) {\n  return __awaiter(this, void 0, void 0, function () {\n    var wallet;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          wallet = new LedgerWallet(derivationPathIndexes, baseDerivationPath, transport, ledgerAddressValidation);\n          return [4 /*yield*/, wallet.init()];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, wallet];\n      }\n    });\n  });\n}\nexports.newLedgerWalletWithSetup = newLedgerWalletWithSetup;\nvar debug = (0, debug_1.default)('kit:wallet:ledger');\nvar LedgerWallet = /** @class */function (_super) {\n  __extends(LedgerWallet, _super);\n  /**\n   * @param derivationPathIndexes number array of \"address_index\" for the base derivation path.\n   * Default: Array[0..9].\n   * Example: [3, 99, 53] will retrieve the derivation paths of\n   * [`${baseDerivationPath}/3`, `${baseDerivationPath}/99`, `${baseDerivationPath}/53`]\n   * @param baseDerivationPath base derivation path. Default: \"44'/52752'/0'/0\"\n   * @param transport Transport to connect the ledger device\n   */\n  function LedgerWallet(derivationPathIndexes, baseDerivationPath, transport, ledgerAddressValidation) {\n    if (derivationPathIndexes === void 0) {\n      derivationPathIndexes = (0, collections_1.zeroRange)(ADDRESS_QTY);\n    }\n    if (baseDerivationPath === void 0) {\n      baseDerivationPath = exports.CELO_BASE_DERIVATION_PATH;\n    }\n    if (transport === void 0) {\n      transport = {};\n    }\n    if (ledgerAddressValidation === void 0) {\n      ledgerAddressValidation = AddressValidation.firstTransactionPerAddress;\n    }\n    var _this = _super.call(this) || this;\n    _this.derivationPathIndexes = derivationPathIndexes;\n    _this.baseDerivationPath = baseDerivationPath;\n    _this.transport = transport;\n    _this.ledgerAddressValidation = ledgerAddressValidation;\n    var invalidDPs = derivationPathIndexes.some(function (value) {\n      return !(Number.isInteger(value) && value >= 0);\n    });\n    if (invalidDPs) {\n      throw new Error('ledger-wallet: Invalid address index');\n    }\n    return _this;\n  }\n  LedgerWallet.prototype.signTransaction = function (txParams) {\n    var _a;\n    // CeloLedger does not support maxFeePerGas and maxPriorityFeePerGas yet\n    txParams.gasPrice = (_a = txParams.gasPrice) !== null && _a !== void 0 ? _a : txParams.maxFeePerGas;\n    if (txParams.maxFeePerGas || txParams.maxPriorityFeePerGas) {\n      console.info('maxFeePerGas and maxPriorityFeePerGas are not supported on Ledger yet. Automatically using gasPrice instead.');\n      delete txParams.maxFeePerGas;\n      delete txParams.maxPriorityFeePerGas;\n    }\n    return _super.prototype.signTransaction.call(this, txParams);\n  };\n  LedgerWallet.prototype.loadAccountSigners = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var addressToSigner, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.ledger) {\n              this.ledger = this.generateNewLedger(this.transport);\n            }\n            debug('Fetching addresses from the ledger');\n            addressToSigner = new Map();\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.retrieveAccounts()];\n          case 2:\n            addressToSigner = _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_1 = _a.sent();\n            if (error_1 instanceof errors_1.TransportStatusError || error_1 instanceof errors_1.TransportError) {\n              (0, ledger_utils_1.transportErrorFriendlyMessage)(error_1);\n            }\n            throw error_1;\n          case 4:\n            return [2 /*return*/, addressToSigner];\n        }\n      });\n    });\n  };\n  // Extracted for testing purpose\n  LedgerWallet.prototype.generateNewLedger = function (transport) {\n    return new hw_app_eth_1.default(transport);\n  };\n  LedgerWallet.prototype.retrieveAccounts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var addressToSigner, appConfiguration, validationRequired, _i, _a, value, derivationPath, addressInfo;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            addressToSigner = new Map();\n            return [4 /*yield*/, this.retrieveAppConfiguration()];\n          case 1:\n            appConfiguration = _b.sent();\n            validationRequired = this.ledgerAddressValidation === AddressValidation.initializationOnly;\n            _i = 0, _a = this.derivationPathIndexes;\n            _b.label = 2;\n          case 2:\n            if (!(_i < _a.length)) return [3 /*break*/, 5];\n            value = _a[_i];\n            derivationPath = \"\".concat(this.baseDerivationPath, \"/\").concat(value);\n            return [4 /*yield*/, this.ledger.getAddress(derivationPath, validationRequired)];\n          case 3:\n            addressInfo = _b.sent();\n            addressToSigner.set(addressInfo.address, new ledger_signer_1.LedgerSigner(this.ledger, derivationPath, this.ledgerAddressValidation, appConfiguration));\n            _b.label = 4;\n          case 4:\n            _i++;\n            return [3 /*break*/, 2];\n          case 5:\n            return [2 /*return*/, addressToSigner];\n        }\n      });\n    });\n  };\n  LedgerWallet.prototype.retrieveAppConfiguration = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var appConfiguration;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.ledger.getAppConfiguration()];\n          case 1:\n            appConfiguration = _a.sent();\n            if (!appConfiguration.arbitraryDataEnabled) {\n              console.warn('Beware, your ledger does not allow the use of contract data. Some features may not work correctly, including token transfers. You can enable it from the ledger app settings.');\n            }\n            return [2 /*return*/, appConfiguration];\n        }\n      });\n    });\n  };\n  return LedgerWallet;\n}(wallet_remote_1.RemoteWallet);\nexports.LedgerWallet = LedgerWallet;","map":null,"metadata":{},"sourceType":"script"}