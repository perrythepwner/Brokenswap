{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCelo, useProvider } from '@celo/react-celo';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useDebounce from '../../hooks/useDebounce';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport { updateBlockNumber } from './actions';\nimport { useBlockNumber } from './hooks';\nconst BLOCK_NUMBER_MINIMUM_DIFF = 5;\nexport default function Updater() {\n  _s();\n  const library = useProvider();\n  const {\n    network\n  } = useCelo();\n  const chainId = network.chainId;\n  const dispatch = useDispatch();\n  const blockNumber = useBlockNumber();\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = useState({\n    chainId,\n    blockNumber: null\n  });\n  const blockNumberCallback = useCallback(blockNumber => {\n    setState(state => {\n      if (chainId === state.chainId) {\n        if (typeof state.blockNumber !== 'number') return {\n          chainId,\n          blockNumber\n        };\n        return {\n          chainId,\n          blockNumber: Math.max(blockNumber, state.blockNumber)\n        };\n      }\n      return state;\n    });\n  }, [chainId, setState]);\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined;\n    setState({\n      chainId,\n      blockNumber: null\n    });\n    library.getBlockNumber().then(blockNumberCallback).catch(error => console.error(\"Failed to get block number for chainId: \".concat(chainId), error));\n    library.on('block', blockNumberCallback);\n    return () => {\n      library.removeListener('block', blockNumberCallback);\n    };\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\n  const debouncedState = useDebounce(state, 100);\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    if (debouncedState.blockNumber - (blockNumber || 0) < BLOCK_NUMBER_MINIMUM_DIFF) return;\n    dispatch(updateBlockNumber({\n      chainId: debouncedState.chainId,\n      blockNumber: debouncedState.blockNumber\n    }));\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId, blockNumber]);\n  return null;\n}\n_s(Updater, \"BFGRvQQdoXJvRSJ/qG3gcoUFNtM=\", false, function () {\n  return [useProvider, useCelo, useDispatch, useBlockNumber, useIsWindowVisible, useDebounce];\n});\n_c = Updater;\nvar _c;\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"names":["useCelo","useProvider","useCallback","useEffect","useState","useDispatch","useDebounce","useIsWindowVisible","updateBlockNumber","useBlockNumber","BLOCK_NUMBER_MINIMUM_DIFF","Updater","_s","library","network","chainId","dispatch","blockNumber","windowVisible","state","setState","blockNumberCallback","Math","max","undefined","getBlockNumber","then","catch","error","console","concat","on","removeListener","debouncedState","_c","$RefreshReg$"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/application/updater.ts"],"sourcesContent":["import { useCelo, useProvider } from '@celo/react-celo'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\nimport { useBlockNumber } from './hooks'\n\nconst BLOCK_NUMBER_MINIMUM_DIFF = 5\n\nexport default function Updater(): null {\n  const library = useProvider()\n  const { network } = useCelo()\n  const chainId = network.chainId\n  const dispatch = useDispatch()\n  const blockNumber = useBlockNumber()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n        }\n        return state\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    if (debouncedState.blockNumber - (blockNumber || 0) < BLOCK_NUMBER_MINIMUM_DIFF) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId, blockNumber])\n\n  return null\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AACvD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,SAASC,iBAAiB,QAAQ,WAAW;AAC7C,SAASC,cAAc,QAAQ,SAAS;AAExC,MAAMC,yBAAyB,GAAG,CAAC;AAEnC,eAAe,SAASC,OAAOA,CAAA,EAAS;EAAAC,EAAA;EACtC,MAAMC,OAAO,GAAGZ,WAAW,CAAC,CAAC;EAC7B,MAAM;IAAEa;EAAQ,CAAC,GAAGd,OAAO,CAAC,CAAC;EAC7B,MAAMe,OAAO,GAAGD,OAAO,CAACC,OAAO;EAC/B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAGR,cAAc,CAAC,CAAC;EAEpC,MAAMS,aAAa,GAAGX,kBAAkB,CAAC,CAAC;EAE1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAA8D;IAC9FW,OAAO;IACPE,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMI,mBAAmB,GAAGnB,WAAW,CACpCe,WAAmB,IAAK;IACvBG,QAAQ,CAAED,KAAK,IAAK;MAClB,IAAIJ,OAAO,KAAKI,KAAK,CAACJ,OAAO,EAAE;QAC7B,IAAI,OAAOI,KAAK,CAACF,WAAW,KAAK,QAAQ,EAAE,OAAO;UAAEF,OAAO;UAAEE;QAAY,CAAC;QAC1E,OAAO;UAAEF,OAAO;UAAEE,WAAW,EAAEK,IAAI,CAACC,GAAG,CAACN,WAAW,EAAEE,KAAK,CAACF,WAAW;QAAE,CAAC;MAC3E;MACA,OAAOE,KAAK;IACd,CAAC,CAAC;EACJ,CAAC,EACD,CAACJ,OAAO,EAAEK,QAAQ,CACpB,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,OAAO,IAAI,CAACE,OAAO,IAAI,CAACG,aAAa,EAAE,OAAOM,SAAS;IAE5DJ,QAAQ,CAAC;MAAEL,OAAO;MAAEE,WAAW,EAAE;IAAK,CAAC,CAAC;IAExCJ,OAAO,CACJY,cAAc,CAAC,CAAC,CAChBC,IAAI,CAACL,mBAAmB,CAAC,CACzBM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,4CAAAE,MAAA,CAA4Cf,OAAO,GAAIa,KAAK,CAAC,CAAC;IAE/Ff,OAAO,CAACkB,EAAE,CAAC,OAAO,EAAEV,mBAAmB,CAAC;IACxC,OAAO,MAAM;MACXR,OAAO,CAACmB,cAAc,CAAC,OAAO,EAAEX,mBAAmB,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,EAAED,OAAO,EAAEF,OAAO,EAAEQ,mBAAmB,EAAEH,aAAa,CAAC,CAAC;EAEpE,MAAMe,cAAc,GAAG3B,WAAW,CAACa,KAAK,EAAE,GAAG,CAAC;EAE9ChB,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,cAAc,CAAClB,OAAO,IAAI,CAACkB,cAAc,CAAChB,WAAW,IAAI,CAACC,aAAa,EAAE;IAC9E,IAAIe,cAAc,CAAChB,WAAW,IAAIA,WAAW,IAAI,CAAC,CAAC,GAAGP,yBAAyB,EAAE;IACjFM,QAAQ,CAACR,iBAAiB,CAAC;MAAEO,OAAO,EAAEkB,cAAc,CAAClB,OAAO;MAAEE,WAAW,EAAEgB,cAAc,CAAChB;IAAY,CAAC,CAAC,CAAC;EAC3G,CAAC,EAAE,CAACC,aAAa,EAAEF,QAAQ,EAAEiB,cAAc,CAAChB,WAAW,EAAEgB,cAAc,CAAClB,OAAO,EAAEE,WAAW,CAAC,CAAC;EAE9F,OAAO,IAAI;AACb;AAACL,EAAA,CArDuBD,OAAO;EAAA,QACbV,WAAW,EACPD,OAAO,EAEVK,WAAW,EACRI,cAAc,EAEZF,kBAAkB,EAqCjBD,WAAW;AAAA;AAAA4B,EAAA,GA5CZvB,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}