{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.schnorr = exports.Signature = exports.Point = exports.CURVE = exports.utils = exports.getSharedSecret = exports.recoverPublicKey = exports.verify = exports.signSync = exports.sign = exports.getPublicKey = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp256k1_1 = require(\"@noble/secp256k1\");\nvar secp256k1_2 = require(\"@noble/secp256k1\");\nObject.defineProperty(exports, \"getPublicKey\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.getPublicKey;\n  }\n});\nObject.defineProperty(exports, \"sign\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.sign;\n  }\n});\nObject.defineProperty(exports, \"signSync\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.signSync;\n  }\n});\nObject.defineProperty(exports, \"verify\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.verify;\n  }\n});\nObject.defineProperty(exports, \"recoverPublicKey\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.recoverPublicKey;\n  }\n});\nObject.defineProperty(exports, \"getSharedSecret\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.getSharedSecret;\n  }\n});\nObject.defineProperty(exports, \"utils\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.utils;\n  }\n});\nObject.defineProperty(exports, \"CURVE\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.CURVE;\n  }\n});\nObject.defineProperty(exports, \"Point\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.Point;\n  }\n});\nObject.defineProperty(exports, \"Signature\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.Signature;\n  }\n});\nObject.defineProperty(exports, \"schnorr\", {\n  enumerable: true,\n  get: function get() {\n    return secp256k1_2.schnorr;\n  }\n});\n// Enable sync API for noble-secp256k1\nsecp256k1_1.utils.hmacSha256Sync = function (key) {\n  const h = hmac_1.hmac.create(sha256_1.sha256, key);\n  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    messages[_key - 1] = arguments[_key];\n  }\n  messages.forEach(msg => h.update(msg));\n  return h.digest();\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","schnorr","Signature","Point","CURVE","utils","getSharedSecret","recoverPublicKey","verify","signSync","sign","getPublicKey","hmac_1","require","sha256_1","secp256k1_1","secp256k1_2","enumerable","get","hmacSha256Sync","key","h","hmac","create","sha256","_len","arguments","length","messages","Array","_key","forEach","msg","update","digest"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/ethereum-cryptography/secp256k1.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.schnorr = exports.Signature = exports.Point = exports.CURVE = exports.utils = exports.getSharedSecret = exports.recoverPublicKey = exports.verify = exports.signSync = exports.sign = exports.getPublicKey = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp256k1_1 = require(\"@noble/secp256k1\");\nvar secp256k1_2 = require(\"@noble/secp256k1\");\nObject.defineProperty(exports, \"getPublicKey\", { enumerable: true, get: function () { return secp256k1_2.getPublicKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return secp256k1_2.sign; } });\nObject.defineProperty(exports, \"signSync\", { enumerable: true, get: function () { return secp256k1_2.signSync; } });\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return secp256k1_2.verify; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return secp256k1_2.recoverPublicKey; } });\nObject.defineProperty(exports, \"getSharedSecret\", { enumerable: true, get: function () { return secp256k1_2.getSharedSecret; } });\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return secp256k1_2.utils; } });\nObject.defineProperty(exports, \"CURVE\", { enumerable: true, get: function () { return secp256k1_2.CURVE; } });\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return secp256k1_2.Point; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return secp256k1_2.Signature; } });\nObject.defineProperty(exports, \"schnorr\", { enumerable: true, get: function () { return secp256k1_2.schnorr; } });\n// Enable sync API for noble-secp256k1\nsecp256k1_1.utils.hmacSha256Sync = (key, ...messages) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    messages.forEach(msg => h.update(msg));\n    return h.digest();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}