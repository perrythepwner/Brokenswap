{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst common_1 = require(\"../connectors/common\");\nconst constants_1 = require(\"../constants\");\nconst local_storage_1 = require(\"./local-storage\");\nconst persistor = connector => {\n  connector.on(common_1.ConnectorEvents.ADDRESS_CHANGED, address => {\n    (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedAddress, address);\n  });\n  // This might not be needed since we tend to just recreated connectors when network switches\n  connector.on(common_1.ConnectorEvents.NETWORK_CHANGED, networkName => {\n    (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedNetwork, networkName);\n  });\n  connector.on(common_1.ConnectorEvents.CONNECTED, params => {\n    (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedNetwork, params.networkName);\n    (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedWalletType, params.walletType);\n    (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedAddress, params.address);\n    if (params.index) {\n      (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedIndex, params.index);\n    }\n    if (params.walletId) {\n      (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedWalletId, params.walletId);\n    }\n    (0, local_storage_1.rememberWallet)(params.walletType, params.walletId);\n  });\n  connector.on(common_1.ConnectorEvents.DISCONNECTED, () => {\n    (0, local_storage_1.clearPreviousConfig)();\n  });\n};\nexports.default = persistor;","map":{"version":3,"names":["Object","defineProperty","exports","value","common_1","require","constants_1","local_storage_1","persistor","connector","on","ConnectorEvents","ADDRESS_CHANGED","address","setTypedStorageKey","localStorageKeys","lastUsedAddress","NETWORK_CHANGED","networkName","lastUsedNetwork","CONNECTED","params","lastUsedWalletType","walletType","index","lastUsedIndex","walletId","lastUsedWalletId","rememberWallet","DISCONNECTED","clearPreviousConfig","default"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/utils/persistor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = require(\"../connectors/common\");\nconst constants_1 = require(\"../constants\");\nconst local_storage_1 = require(\"./local-storage\");\nconst persistor = (connector) => {\n    connector.on(common_1.ConnectorEvents.ADDRESS_CHANGED, (address) => {\n        (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedAddress, address);\n    });\n    // This might not be needed since we tend to just recreated connectors when network switches\n    connector.on(common_1.ConnectorEvents.NETWORK_CHANGED, (networkName) => {\n        (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedNetwork, networkName);\n    });\n    connector.on(common_1.ConnectorEvents.CONNECTED, (params) => {\n        (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedNetwork, params.networkName);\n        (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedWalletType, params.walletType);\n        (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedAddress, params.address);\n        if (params.index) {\n            (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedIndex, params.index);\n        }\n        if (params.walletId) {\n            (0, local_storage_1.setTypedStorageKey)(constants_1.localStorageKeys.lastUsedWalletId, params.walletId);\n        }\n        (0, local_storage_1.rememberWallet)(params.walletType, params.walletId);\n    });\n    connector.on(common_1.ConnectorEvents.DISCONNECTED, () => {\n        (0, local_storage_1.clearPreviousConfig)();\n    });\n};\nexports.default = persistor;\n//# sourceMappingURL=persistor.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,QAAQ,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC3C,MAAME,eAAe,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMG,SAAS,GAAIC,SAAS,IAAK;EAC7BA,SAAS,CAACC,EAAE,CAACN,QAAQ,CAACO,eAAe,CAACC,eAAe,EAAGC,OAAO,IAAK;IAChE,CAAC,CAAC,EAAEN,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACC,eAAe,EAAEH,OAAO,CAAC;EAClG,CAAC,CAAC;EACF;EACAJ,SAAS,CAACC,EAAE,CAACN,QAAQ,CAACO,eAAe,CAACM,eAAe,EAAGC,WAAW,IAAK;IACpE,CAAC,CAAC,EAAEX,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACI,eAAe,EAAED,WAAW,CAAC;EACtG,CAAC,CAAC;EACFT,SAAS,CAACC,EAAE,CAACN,QAAQ,CAACO,eAAe,CAACS,SAAS,EAAGC,MAAM,IAAK;IACzD,CAAC,CAAC,EAAEd,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACI,eAAe,EAAEE,MAAM,CAACH,WAAW,CAAC;IACzG,CAAC,CAAC,EAAEX,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACO,kBAAkB,EAAED,MAAM,CAACE,UAAU,CAAC;IAC3G,CAAC,CAAC,EAAEhB,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACC,eAAe,EAAEK,MAAM,CAACR,OAAO,CAAC;IACrG,IAAIQ,MAAM,CAACG,KAAK,EAAE;MACd,CAAC,CAAC,EAAEjB,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACU,aAAa,EAAEJ,MAAM,CAACG,KAAK,CAAC;IACrG;IACA,IAAIH,MAAM,CAACK,QAAQ,EAAE;MACjB,CAAC,CAAC,EAAEnB,eAAe,CAACO,kBAAkB,EAAER,WAAW,CAACS,gBAAgB,CAACY,gBAAgB,EAAEN,MAAM,CAACK,QAAQ,CAAC;IAC3G;IACA,CAAC,CAAC,EAAEnB,eAAe,CAACqB,cAAc,EAAEP,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACK,QAAQ,CAAC;EAC3E,CAAC,CAAC;EACFjB,SAAS,CAACC,EAAE,CAACN,QAAQ,CAACO,eAAe,CAACkB,YAAY,EAAE,MAAM;IACtD,CAAC,CAAC,EAAEtB,eAAe,CAACuB,mBAAmB,EAAE,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AACD5B,OAAO,CAAC6B,OAAO,GAAGvB,SAAS"},"metadata":{},"sourceType":"script"}