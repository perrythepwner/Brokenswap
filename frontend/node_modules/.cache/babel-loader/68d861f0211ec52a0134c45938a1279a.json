{"ast":null,"code":"import{useProvider}from'@celo/react-celo';import{useAllInactiveTokens}from'hooks/Tokens';import{useCallback,useEffect}from'react';import{useDispatch}from'react-redux';import{useAllLists}from'state/lists/hooks';import{useFetchListCallback}from'../../hooks/useFetchListCallback';import useInterval from'../../hooks/useInterval';import useIsWindowVisible from'../../hooks/useIsWindowVisible';import{acceptListUpdate}from'./actions';// import { useActiveListUrls } from './hooks'\nexport default function Updater(){const library=useProvider();const dispatch=useDispatch();const isWindowVisible=useIsWindowVisible();// get all loaded lists, and the active urls\nconst lists=useAllLists();// const activeListUrls = useActiveListUrls()\n// initiate loading\nuseAllInactiveTokens();const fetchList=useFetchListCallback();const fetchAllListsCallback=useCallback(()=>{if(!isWindowVisible)return;Object.keys(lists).forEach(url=>fetchList(url).catch(error=>console.debug('interval list fetching error',error)));},[fetchList,isWindowVisible,lists]);// fetch all lists every 10 minutes, but only after we initialize library\nuseInterval(fetchAllListsCallback,library?1000*60*10:null);// whenever a list is not loaded and not loading, try again to load it\nuseEffect(()=>{Object.keys(lists).forEach(listUrl=>{const list=lists[listUrl];if(!list.current&&!list.loadingRequestId&&!list.error){fetchList(listUrl).catch(error=>console.debug('list added fetching error',error));}});},[dispatch,fetchList,library,lists]);// automatically update lists if versions are minor/patch\nuseEffect(()=>{Object.keys(lists).forEach(listUrl=>{const list=lists[listUrl];if(list.pendingUpdate){dispatch(acceptListUpdate(listUrl));}// TODO (bl): Figure out why this keeps breaking\n// if (list.current && list.pendingUpdate) {\n//   const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n//   switch (bump) {\n//     case VersionUpgrade.NONE:\n//       throw new Error('unexpected no version bump')\n//     case VersionUpgrade.PATCH:\n//     case VersionUpgrade.MINOR: {\n//       const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n//       // automatically update minor/patch as long as bump matches the min update\n//       if (bump >= min) {\n//         dispatch(acceptListUpdate(listUrl))\n//       } else {\n//         console.error(\n//           `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n//         )\n//       }\n//       break\n//     }\n//     // update any active or inactive lists\n//     case VersionUpgrade.MAJOR:\n//       dispatch(acceptListUpdate(listUrl))\n//   }\n// }\n});},[dispatch,lists]);return null;}","map":{"version":3,"names":["useProvider","useAllInactiveTokens","useCallback","useEffect","useDispatch","useAllLists","useFetchListCallback","useInterval","useIsWindowVisible","acceptListUpdate","Updater","library","dispatch","isWindowVisible","lists","fetchList","fetchAllListsCallback","Object","keys","forEach","url","catch","error","console","debug","listUrl","list","current","loadingRequestId","pendingUpdate"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/lists/updater.ts"],"sourcesContent":["import { useProvider } from '@celo/react-celo'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllLists } from 'state/lists/hooks'\n\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport useInterval from '../../hooks/useInterval'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\n// import { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const library = useProvider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  // const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error))\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.pendingUpdate) {\n        dispatch(acceptListUpdate(listUrl))\n      }\n      // TODO (bl): Figure out why this keeps breaking\n      // if (list.current && list.pendingUpdate) {\n      //   const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n      //   switch (bump) {\n      //     case VersionUpgrade.NONE:\n      //       throw new Error('unexpected no version bump')\n      //     case VersionUpgrade.PATCH:\n      //     case VersionUpgrade.MINOR: {\n      //       const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n      //       // automatically update minor/patch as long as bump matches the min update\n      //       if (bump >= min) {\n      //         dispatch(acceptListUpdate(listUrl))\n      //       } else {\n      //         console.error(\n      //           `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n      //         )\n      //       }\n      //       break\n      //     }\n      //     // update any active or inactive lists\n      //     case VersionUpgrade.MAJOR:\n      //       dispatch(acceptListUpdate(listUrl))\n      //   }\n      // }\n    })\n  }, [dispatch, lists])\n\n  return null\n}\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,oBAAoB,KAAQ,cAAc,CACnD,OAASC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC9C,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,WAAW,KAAQ,mBAAmB,CAE/C,OAASC,oBAAoB,KAAQ,kCAAkC,CACvE,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,MAAO,CAAAC,kBAAkB,KAAM,gCAAgC,CAE/D,OAASC,gBAAgB,KAAQ,WAAW,CAC5C;AAEA,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAS,CACtC,KAAM,CAAAC,OAAO,CAAGX,WAAW,CAAC,CAAC,CAC7B,KAAM,CAAAY,QAAQ,CAAGR,WAAW,CAAc,CAAC,CAC3C,KAAM,CAAAS,eAAe,CAAGL,kBAAkB,CAAC,CAAC,CAE5C;AACA,KAAM,CAAAM,KAAK,CAAGT,WAAW,CAAC,CAAC,CAC3B;AAEA;AACAJ,oBAAoB,CAAC,CAAC,CAEtB,KAAM,CAAAc,SAAS,CAAGT,oBAAoB,CAAC,CAAC,CACxC,KAAM,CAAAU,qBAAqB,CAAGd,WAAW,CAAC,IAAM,CAC9C,GAAI,CAACW,eAAe,CAAE,OACtBI,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAEC,GAAG,EAC7BL,SAAS,CAACK,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEF,KAAK,CAAC,CACtF,CAAC,CACH,CAAC,CAAE,CAACP,SAAS,CAAEF,eAAe,CAAEC,KAAK,CAAC,CAAC,CAEvC;AACAP,WAAW,CAACS,qBAAqB,CAAEL,OAAO,CAAG,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAEnE;AACAR,SAAS,CAAC,IAAM,CACdc,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAEM,OAAO,EAAK,CACtC,KAAM,CAAAC,IAAI,CAAGZ,KAAK,CAACW,OAAO,CAAC,CAC3B,GAAI,CAACC,IAAI,CAACC,OAAO,EAAI,CAACD,IAAI,CAACE,gBAAgB,EAAI,CAACF,IAAI,CAACJ,KAAK,CAAE,CAC1DP,SAAS,CAACU,OAAO,CAAC,CAACJ,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEF,KAAK,CAAC,CAAC,CACxF,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACV,QAAQ,CAAEG,SAAS,CAAEJ,OAAO,CAAEG,KAAK,CAAC,CAAC,CAEzC;AACAX,SAAS,CAAC,IAAM,CACdc,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAEM,OAAO,EAAK,CACtC,KAAM,CAAAC,IAAI,CAAGZ,KAAK,CAACW,OAAO,CAAC,CAC3B,GAAIC,IAAI,CAACG,aAAa,CAAE,CACtBjB,QAAQ,CAACH,gBAAgB,CAACgB,OAAO,CAAC,CAAC,CACrC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACb,QAAQ,CAAEE,KAAK,CAAC,CAAC,CAErB,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module"}