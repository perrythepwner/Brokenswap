{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\nconst constants_1 = require(\"./constants\");\nfunction getDefaultLoggerOptions(opts) {\n  return Object.assign(Object.assign({}, opts), {\n    level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level\n  });\n}\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\nfunction getBrowserLoggerContext(logger) {\n  let customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  return logger[customContextKey] || \"\";\n}\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\nfunction setBrowserLoggerContext(logger, context) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  logger[customContextKey] = context;\n  return logger;\n}\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\nfunction getLoggerContext(logger) {\n  let customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  let context = \"\";\n  if (typeof logger.bindings === \"undefined\") {\n    context = getBrowserLoggerContext(logger, customContextKey);\n  } else {\n    context = logger.bindings().context || \"\";\n  }\n  return context;\n}\nexports.getLoggerContext = getLoggerContext;\nfunction formatChildLoggerContext(logger, childContext) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  const parentContext = getLoggerContext(logger, customContextKey);\n  const context = parentContext.trim() ? \"\".concat(parentContext, \"/\").concat(childContext) : childContext;\n  return context;\n}\nexports.formatChildLoggerContext = formatChildLoggerContext;\nfunction generateChildLogger(logger, childContext) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  const context = formatChildLoggerContext(logger, childContext, customContextKey);\n  const child = logger.child({\n    context\n  });\n  return setBrowserLoggerContext(child, context, customContextKey);\n}\nexports.generateChildLogger = generateChildLogger;","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":";;;;;;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA,SAAgB,uBAAuB,CAAC,IAAoB,EAAA;EAC1D,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACK,IAAI,CAAA,EAAA;IACP,KAAK,EAAE,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,KAAI,WAAA,CAAA,oBAAoB,CAAC;EAAK,CAAA,CAAA;AAEpD;AALA,OAAA,CAAA,uBAAA,GAAA,uBAAA;AAOA,SAAgB,uBAAuB,CACrC,MAAc,EACoC;EAAA,IAAlD,gBAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,WAAA,CAAA,uBAAuB;EAElD,OAAQ,MAAc,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAChD;AALA,OAAA,CAAA,uBAAA,GAAA,uBAAA;AAOA,SAAgB,uBAAuB,CACrC,MAAc,EACd,OAAe,EACmC;EAAA,IAAlD,gBAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,WAAA,CAAA,uBAAuB;EAEjD,MAAc,CAAC,gBAAgB,CAAC,GAAG,OAAO;EAC3C,OAAO,MAAM;AACf;AAPA,OAAA,CAAA,uBAAA,GAAA,uBAAA;AASA,SAAgB,gBAAgB,CAC9B,MAAc,EACoC;EAAA,IAAlD,gBAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,WAAA,CAAA,uBAAuB;EAElD,IAAI,OAAO,GAAG,EAAE;EAEhB,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,EAAE;IAC1C,OAAO,GAAG,uBAAuB,CAAC,MAAM,EAAE,gBAAgB,CAAC;GAC5D,MAAM;IACL,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAA,CAAE,CAAC,OAAO,IAAI,EAAE;EAC1C;EACD,OAAO,OAAO;AAChB;AAZA,OAAA,CAAA,gBAAA,GAAA,gBAAA;AAcA,SAAgB,wBAAwB,CACtC,MAAc,EACd,YAAoB,EAC8B;EAAA,IAAlD,gBAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,WAAA,CAAA,uBAAuB;EAElD,MAAM,aAAa,GAAG,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC;EAChE,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAA,CAAE,MAAA,MAAA,CAC7B,aAAa,OAAA,MAAA,CAAI,YAAY,IAChC,YAAY;EAChB,OAAO,OAAO;AAChB;AAVA,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAYA,SAAgB,mBAAmB,CACjC,MAAc,EACd,YAAoB,EAC8B;EAAA,IAAlD,gBAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA2B,WAAA,CAAA,uBAAuB;EAElD,MAAM,OAAO,GAAG,wBAAwB,CACtC,MAAM,EACN,YAAY,EACZ,gBAAgB,CACjB;EACD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAAE;EAAO,CAAE,CAAC;EACvC,OAAO,uBAAuB,CAAC,KAAK,EAAE,OAAO,EAAE,gBAAgB,CAAC;AAClE;AAZA,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\nconst constants_1 = require(\"./constants\");\nfunction getDefaultLoggerOptions(opts) {\n    return Object.assign(Object.assign({}, opts), { level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level });\n}\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\nfunction getBrowserLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    return logger[customContextKey] || \"\";\n}\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\nfunction setBrowserLoggerContext(logger, context, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    logger[customContextKey] = context;\n    return logger;\n}\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\nfunction getLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    let context = \"\";\n    if (typeof logger.bindings === \"undefined\") {\n        context = getBrowserLoggerContext(logger, customContextKey);\n    }\n    else {\n        context = logger.bindings().context || \"\";\n    }\n    return context;\n}\nexports.getLoggerContext = getLoggerContext;\nfunction formatChildLoggerContext(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const parentContext = getLoggerContext(logger, customContextKey);\n    const context = parentContext.trim()\n        ? `${parentContext}/${childContext}`\n        : childContext;\n    return context;\n}\nexports.formatChildLoggerContext = formatChildLoggerContext;\nfunction generateChildLogger(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const context = formatChildLoggerContext(logger, childContext, customContextKey);\n    const child = logger.child({ context });\n    return setBrowserLoggerContext(child, context, customContextKey);\n}\nexports.generateChildLogger = generateChildLogger;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}