{"ast":null,"code":"\"use strict\";\n\n/**\n * @file Represents a value of one of two possible types (a disjoint union).\n *\n * An instance of `Either` is either an instance of `Left` or `Right`.\n *\n * A common use of `Either` is as an alternative to `Option` for dealing with possible missing values. In this usage,\n * `None` is replaced with a `Left` which can contain useful information. `Right` takes the place of `Some`. Convention\n * dictates that `Left` is used for failure and `Right` is used for success.\n *\n * For example, you could use `Either<string, number>` to detect whether a received input is a `string` or a `number`.\n *\n * ```ts\n * const parse = (errorMessage: string) => (input: string): Either<string, number> => {\n *   const n = parseInt(input, 10)\n *   return isNaN(n) ? left(errorMessage) : right(n)\n * }\n * ```\n *\n * `Either` is right-biased, which means that `Right` is assumed to be the default case to operate on. If it is `Left`,\n * operations like `map`, `chain`, ... return the `Left` value unchanged:\n *\n * ```ts\n * import { either } from 'fp-ts/lib/Either'\n *\n * either.map(right(12), double) // right(24)\n * either.map(left(23), double)  // left(23)\n * ```\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ChainRec_1 = require(\"./ChainRec\");\nvar pipeable_1 = require(\"./pipeable\");\n/**\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure\n *\n * @since 2.0.0\n */\nfunction left(e) {\n  return {\n    _tag: 'Left',\n    left: e\n  };\n}\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure\n *\n * @since 2.0.0\n */\nfunction right(a) {\n  return {\n    _tag: 'Right',\n    right: a\n  };\n}\nexports.right = right;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`\n *\n * @since 2.0.0\n */\nfunction fromNullable(e) {\n  return function (a) {\n    return a == null ? left(e) : right(a);\n  };\n}\nexports.fromNullable = fromNullable;\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n  return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\n/**\n * Constructs a new `Either` from a function that might throw\n *\n * @example\n * import { Either, left, right, tryCatch } from 'fp-ts/lib/Either'\n *\n * const unsafeHead = <A>(as: Array<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: Array<A>): Either<Error, A> => {\n *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n * }\n *\n * assert.deepStrictEqual(head([]), left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), right(1))\n *\n * @since 2.0.0\n */\nfunction tryCatch(f, onError) {\n  try {\n    return right(f());\n  } catch (e) {\n    return left(onError(e));\n  }\n}\nexports.tryCatch = tryCatch;\n/**\n * @since 2.0.0\n */\nfunction fold(onLeft, onRight) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n  };\n}\nexports.fold = fold;\n/**\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n  return {\n    show: function show(ma) {\n      return isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\";\n    }\n  };\n}\nexports.getShow = getShow;\n/**\n * @since 2.0.0\n */\nfunction getEq(EL, EA) {\n  return {\n    equals: function equals(x, y) {\n      return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n  };\n}\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * appended using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getSemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getSemigroup(S) {\n  return {\n    concat: function concat(x, y) {\n      return isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right));\n    }\n  };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * `Apply` semigroup\n *\n * @example\n * import { getApplySemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getApplySemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getApplySemigroup(S) {\n  return {\n    concat: function concat(x, y) {\n      return isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right));\n    }\n  };\n}\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @since 2.0.0\n */\nfunction getApplyMonoid(M) {\n  return __assign(__assign({}, getApplySemigroup(M)), {\n    empty: right(M.empty)\n  });\n}\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isLeft(ma) {\n  switch (ma._tag) {\n    case 'Left':\n      return true;\n    case 'Right':\n      return false;\n  }\n}\nexports.isLeft = isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isRight(ma) {\n  return isLeft(ma) ? false : true;\n}\nexports.isRight = isRight;\n/**\n * @since 2.0.0\n */\nfunction swap(ma) {\n  return isLeft(ma) ? right(ma.left) : left(ma.right);\n}\nexports.swap = swap;\n/**\n * @since 2.0.0\n */\nfunction orElse(onLeft) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma;\n  };\n}\nexports.orElse = orElse;\n/**\n * @since 2.0.0\n */\nfunction getOrElse(onLeft) {\n  return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma.right;\n  };\n}\nexports.getOrElse = getOrElse;\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n  return function (a, ma) {\n    return isLeft(ma) ? false : E.equals(a, ma.right);\n  };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/lib/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n  return function (ma) {\n    return isLeft(ma) ? false : predicate(ma.right);\n  };\n}\nexports.exists = exists;\n/**\n * Converts a JavaScript Object Notation (JSON) string into an object.\n *\n * @example\n * import { parseJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(parseJSON('{\"a\":1}', toError), right({ a: 1 }))\n * assert.deepStrictEqual(parseJSON('{\"a\":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @since 2.0.0\n */\nfunction parseJSON(s, onError) {\n  return tryCatch(function () {\n    return JSON.parse(s);\n  }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import { stringifyJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(stringifyJSON({ a: 1 }, toError), right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(stringifyJSON(circular, toError), left(new TypeError('Converting circular structure to JSON')))\n *\n * @since 2.0.0\n */\nfunction stringifyJSON(u, onError) {\n  return tryCatch(function () {\n    return JSON.stringify(u);\n  }, onError);\n}\nexports.stringifyJSON = stringifyJSON;\nvar phantom = undefined;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @since 2.0.0\n */\nfunction getWitherable(M) {\n  var empty = left(M.empty);\n  var compact = function compact(ma) {\n    return isLeft(ma) ? ma : ma.right._tag === 'None' ? left(M.empty) : right(ma.right.value);\n  };\n  var separate = function separate(ma) {\n    return isLeft(ma) ? {\n      left: ma,\n      right: ma\n    } : isLeft(ma.right) ? {\n      left: right(ma.right.left),\n      right: empty\n    } : {\n      left: empty,\n      right: right(ma.right.right)\n    };\n  };\n  var partitionMap = function partitionMap(ma, f) {\n    if (isLeft(ma)) {\n      return {\n        left: ma,\n        right: ma\n      };\n    }\n    var e = f(ma.right);\n    return isLeft(e) ? {\n      left: right(e.left),\n      right: empty\n    } : {\n      left: empty,\n      right: right(e.right)\n    };\n  };\n  var partition = function partition(ma, p) {\n    return isLeft(ma) ? {\n      left: ma,\n      right: ma\n    } : p(ma.right) ? {\n      left: empty,\n      right: right(ma.right)\n    } : {\n      left: right(ma.right),\n      right: empty\n    };\n  };\n  var filterMap = function filterMap(ma, f) {\n    if (isLeft(ma)) {\n      return ma;\n    }\n    var ob = f(ma.right);\n    return ob._tag === 'None' ? left(M.empty) : right(ob.value);\n  };\n  var filter = function filter(ma, predicate) {\n    return isLeft(ma) ? ma : predicate(ma.right) ? ma : left(M.empty);\n  };\n  var wither = function wither(F) {\n    var traverseF = exports.either.traverse(F);\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), compact);\n    };\n  };\n  var wilt = function wilt(F) {\n    var traverseF = exports.either.traverse(F);\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), separate);\n    };\n  };\n  return {\n    URI: exports.URI,\n    _E: phantom,\n    map: exports.either.map,\n    compact: compact,\n    separate: separate,\n    filter: filter,\n    filterMap: filterMap,\n    partition: partition,\n    partitionMap: partitionMap,\n    traverse: exports.either.traverse,\n    sequence: exports.either.sequence,\n    reduce: exports.either.reduce,\n    foldMap: exports.either.foldMap,\n    reduceRight: exports.either.reduceRight,\n    wither: wither,\n    wilt: wilt\n  };\n}\nexports.getWitherable = getWitherable;\n/**\n * @since 2.0.0\n */\nfunction getValidation(S) {\n  return {\n    URI: exports.URI,\n    _E: phantom,\n    map: exports.either.map,\n    of: exports.either.of,\n    ap: function ap(mab, ma) {\n      return isLeft(mab) ? isLeft(ma) ? left(S.concat(mab.left, ma.left)) : mab : isLeft(ma) ? ma : right(mab.right(ma.right));\n    },\n    chain: exports.either.chain,\n    alt: function alt(fx, f) {\n      if (isRight(fx)) {\n        return fx;\n      }\n      var fy = f();\n      return isLeft(fy) ? left(S.concat(fx.left, fy.left)) : fy;\n    }\n  };\n}\nexports.getValidation = getValidation;\n/**\n * @since 2.0.0\n */\nfunction getValidationSemigroup(SE, SA) {\n  return {\n    concat: function concat(fx, fy) {\n      return isLeft(fx) ? isLeft(fy) ? left(SE.concat(fx.left, fy.left)) : fx : isLeft(fy) ? fy : right(SA.concat(fx.right, fy.right));\n    }\n  };\n}\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * @since 2.0.0\n */\nfunction getValidationMonoid(SE, SA) {\n  return {\n    concat: getValidationSemigroup(SE, SA).concat,\n    empty: right(SA.empty)\n  };\n}\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * @since 2.0.0\n */\nexports.either = {\n  URI: exports.URI,\n  map: function map(ma, f) {\n    return isLeft(ma) ? ma : right(f(ma.right));\n  },\n  of: right,\n  ap: function ap(mab, ma) {\n    return isLeft(mab) ? mab : isLeft(ma) ? ma : right(mab.right(ma.right));\n  },\n  chain: function chain(ma, f) {\n    return isLeft(ma) ? ma : f(ma.right);\n  },\n  reduce: function reduce(fa, b, f) {\n    return isLeft(fa) ? b : f(b, fa.right);\n  },\n  foldMap: function foldMap(M) {\n    return function (fa, f) {\n      return isLeft(fa) ? M.empty : f(fa.right);\n    };\n  },\n  reduceRight: function reduceRight(fa, b, f) {\n    return isLeft(fa) ? b : f(fa.right, b);\n  },\n  traverse: function traverse(F) {\n    return function (ma, f) {\n      return isLeft(ma) ? F.of(left(ma.left)) : F.map(f(ma.right), right);\n    };\n  },\n  sequence: function sequence(F) {\n    return function (ma) {\n      return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    };\n  },\n  bimap: function bimap(fea, f, g) {\n    return isLeft(fea) ? left(f(fea.left)) : right(g(fea.right));\n  },\n  mapLeft: function mapLeft(fea, f) {\n    return isLeft(fea) ? left(f(fea.left)) : fea;\n  },\n  alt: function alt(fx, fy) {\n    return isLeft(fx) ? fy() : fx;\n  },\n  extend: function extend(wa, f) {\n    return isLeft(wa) ? wa : right(f(wa));\n  },\n  chainRec: function chainRec(a, f) {\n    return ChainRec_1.tailRec(f(a), function (e) {\n      return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n  },\n  throwError: left\n};\nvar _a = pipeable_1.pipeable(exports.either),\n  alt = _a.alt,\n  ap = _a.ap,\n  apFirst = _a.apFirst,\n  apSecond = _a.apSecond,\n  bimap = _a.bimap,\n  chain = _a.chain,\n  chainFirst = _a.chainFirst,\n  duplicate = _a.duplicate,\n  extend = _a.extend,\n  flatten = _a.flatten,\n  foldMap = _a.foldMap,\n  map = _a.map,\n  mapLeft = _a.mapLeft,\n  reduce = _a.reduce,\n  reduceRight = _a.reduceRight,\n  fromOption = _a.fromOption,\n  fromPredicate = _a.fromPredicate,\n  filterOrElse = _a.filterOrElse;\nexports.alt = alt;\nexports.ap = ap;\nexports.apFirst = apFirst;\nexports.apSecond = apSecond;\nexports.bimap = bimap;\nexports.chain = chain;\nexports.chainFirst = chainFirst;\nexports.duplicate = duplicate;\nexports.extend = extend;\nexports.flatten = flatten;\nexports.foldMap = foldMap;\nexports.map = map;\nexports.mapLeft = mapLeft;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.fromOption = fromOption;\nexports.fromPredicate = fromPredicate;\nexports.filterOrElse = filterOrElse;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","ChainRec_1","require","pipeable_1","URI","left","e","_tag","right","a","fromNullable","toError","Error","String","tryCatch","f","onError","fold","onLeft","onRight","ma","isLeft","getShow","SE","SA","show","getEq","EL","EA","equals","x","y","isRight","getSemigroup","S","concat","getApplySemigroup","getApplyMonoid","M","empty","swap","orElse","getOrElse","elem","E","exists","predicate","parseJSON","JSON","parse","stringifyJSON","u","stringify","phantom","undefined","getWitherable","compact","separate","partitionMap","partition","filterMap","ob","filter","wither","F","traverseF","either","traverse","map","wilt","_E","sequence","reduce","foldMap","reduceRight","getValidation","of","ap","mab","chain","alt","fx","fy","getValidationSemigroup","getValidationMonoid","fa","b","bimap","fea","g","mapLeft","extend","wa","chainRec","tailRec","throwError","_a","pipeable","apFirst","apSecond","chainFirst","duplicate","flatten","fromOption","fromPredicate","filterOrElse"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/fp-ts/lib/Either.js"],"sourcesContent":["\"use strict\";\n/**\n * @file Represents a value of one of two possible types (a disjoint union).\n *\n * An instance of `Either` is either an instance of `Left` or `Right`.\n *\n * A common use of `Either` is as an alternative to `Option` for dealing with possible missing values. In this usage,\n * `None` is replaced with a `Left` which can contain useful information. `Right` takes the place of `Some`. Convention\n * dictates that `Left` is used for failure and `Right` is used for success.\n *\n * For example, you could use `Either<string, number>` to detect whether a received input is a `string` or a `number`.\n *\n * ```ts\n * const parse = (errorMessage: string) => (input: string): Either<string, number> => {\n *   const n = parseInt(input, 10)\n *   return isNaN(n) ? left(errorMessage) : right(n)\n * }\n * ```\n *\n * `Either` is right-biased, which means that `Right` is assumed to be the default case to operate on. If it is `Left`,\n * operations like `map`, `chain`, ... return the `Left` value unchanged:\n *\n * ```ts\n * import { either } from 'fp-ts/lib/Either'\n *\n * either.map(right(12), double) // right(24)\n * either.map(left(23), double)  // left(23)\n * ```\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChainRec_1 = require(\"./ChainRec\");\nvar pipeable_1 = require(\"./pipeable\");\n/**\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure\n *\n * @since 2.0.0\n */\nfunction left(e) {\n    return { _tag: 'Left', left: e };\n}\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure\n *\n * @since 2.0.0\n */\nfunction right(a) {\n    return { _tag: 'Right', right: a };\n}\nexports.right = right;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`\n *\n * @since 2.0.0\n */\nfunction fromNullable(e) {\n    return function (a) { return (a == null ? left(e) : right(a)); };\n}\nexports.fromNullable = fromNullable;\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\n/**\n * Constructs a new `Either` from a function that might throw\n *\n * @example\n * import { Either, left, right, tryCatch } from 'fp-ts/lib/Either'\n *\n * const unsafeHead = <A>(as: Array<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: Array<A>): Either<Error, A> => {\n *   return tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n * }\n *\n * assert.deepStrictEqual(head([]), left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), right(1))\n *\n * @since 2.0.0\n */\nfunction tryCatch(f, onError) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onError(e));\n    }\n}\nexports.tryCatch = tryCatch;\n/**\n * @since 2.0.0\n */\nfunction fold(onLeft, onRight) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : onRight(ma.right)); };\n}\nexports.fold = fold;\n/**\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n    return {\n        show: function (ma) { return (isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @since 2.0.0\n */\nfunction getEq(EL, EA) {\n    return {\n        equals: function (x, y) {\n            return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n        }\n    };\n}\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * appended using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getSemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getSemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * `Apply` semigroup\n *\n * @example\n * import { getApplySemigroup, left, right } from 'fp-ts/lib/Either'\n * import { semigroupSum } from 'fp-ts/lib/Semigroup'\n *\n * const S = getApplySemigroup<string, number>(semigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), left('a'))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), left('b'))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n *\n * @since 2.0.0\n */\nfunction getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (isLeft(x) ? x : isLeft(y) ? y : right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @since 2.0.0\n */\nfunction getApplyMonoid(M) {\n    return __assign(__assign({}, getApplySemigroup(M)), { empty: right(M.empty) });\n}\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isLeft(ma) {\n    switch (ma._tag) {\n        case 'Left':\n            return true;\n        case 'Right':\n            return false;\n    }\n}\nexports.isLeft = isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise\n *\n * @since 2.0.0\n */\nfunction isRight(ma) {\n    return isLeft(ma) ? false : true;\n}\nexports.isRight = isRight;\n/**\n * @since 2.0.0\n */\nfunction swap(ma) {\n    return isLeft(ma) ? right(ma.left) : left(ma.right);\n}\nexports.swap = swap;\n/**\n * @since 2.0.0\n */\nfunction orElse(onLeft) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma); };\n}\nexports.orElse = orElse;\n/**\n * @since 2.0.0\n */\nfunction getOrElse(onLeft) {\n    return function (ma) { return (isLeft(ma) ? onLeft(ma.left) : ma.right); };\n}\nexports.getOrElse = getOrElse;\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (isLeft(ma) ? false : E.equals(a, ma.right)); };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/lib/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (isLeft(ma) ? false : predicate(ma.right)); };\n}\nexports.exists = exists;\n/**\n * Converts a JavaScript Object Notation (JSON) string into an object.\n *\n * @example\n * import { parseJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(parseJSON('{\"a\":1}', toError), right({ a: 1 }))\n * assert.deepStrictEqual(parseJSON('{\"a\":}', toError), left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @since 2.0.0\n */\nfunction parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import { stringifyJSON, toError, right, left } from 'fp-ts/lib/Either'\n *\n * assert.deepStrictEqual(stringifyJSON({ a: 1 }, toError), right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(stringifyJSON(circular, toError), left(new TypeError('Converting circular structure to JSON')))\n *\n * @since 2.0.0\n */\nfunction stringifyJSON(u, onError) {\n    return tryCatch(function () { return JSON.stringify(u); }, onError);\n}\nexports.stringifyJSON = stringifyJSON;\nvar phantom = undefined;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @since 2.0.0\n */\nfunction getWitherable(M) {\n    var empty = left(M.empty);\n    var compact = function (ma) {\n        return isLeft(ma) ? ma : ma.right._tag === 'None' ? left(M.empty) : right(ma.right.value);\n    };\n    var separate = function (ma) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : isLeft(ma.right)\n                ? { left: right(ma.right.left), right: empty }\n                : { left: empty, right: right(ma.right.right) };\n    };\n    var partitionMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return { left: ma, right: ma };\n        }\n        var e = f(ma.right);\n        return isLeft(e) ? { left: right(e.left), right: empty } : { left: empty, right: right(e.right) };\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? { left: ma, right: ma }\n            : p(ma.right)\n                ? { left: empty, right: right(ma.right) }\n                : { left: right(ma.right), right: empty };\n    };\n    var filterMap = function (ma, f) {\n        if (isLeft(ma)) {\n            return ma;\n        }\n        var ob = f(ma.right);\n        return ob._tag === 'None' ? left(M.empty) : right(ob.value);\n    };\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : left(M.empty);\n    };\n    var wither = function (F) {\n        var traverseF = exports.either.traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), compact); };\n    };\n    var wilt = function (F) {\n        var traverseF = exports.either.traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), separate); };\n    };\n    return {\n        URI: exports.URI,\n        _E: phantom,\n        map: exports.either.map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: filterMap,\n        partition: partition,\n        partitionMap: partitionMap,\n        traverse: exports.either.traverse,\n        sequence: exports.either.sequence,\n        reduce: exports.either.reduce,\n        foldMap: exports.either.foldMap,\n        reduceRight: exports.either.reduceRight,\n        wither: wither,\n        wilt: wilt\n    };\n}\nexports.getWitherable = getWitherable;\n/**\n * @since 2.0.0\n */\nfunction getValidation(S) {\n    return {\n        URI: exports.URI,\n        _E: phantom,\n        map: exports.either.map,\n        of: exports.either.of,\n        ap: function (mab, ma) {\n            return isLeft(mab)\n                ? isLeft(ma)\n                    ? left(S.concat(mab.left, ma.left))\n                    : mab\n                : isLeft(ma)\n                    ? ma\n                    : right(mab.right(ma.right));\n        },\n        chain: exports.either.chain,\n        alt: function (fx, f) {\n            if (isRight(fx)) {\n                return fx;\n            }\n            var fy = f();\n            return isLeft(fy) ? left(S.concat(fx.left, fy.left)) : fy;\n        }\n    };\n}\nexports.getValidation = getValidation;\n/**\n * @since 2.0.0\n */\nfunction getValidationSemigroup(SE, SA) {\n    return {\n        concat: function (fx, fy) {\n            return isLeft(fx)\n                ? isLeft(fy)\n                    ? left(SE.concat(fx.left, fy.left))\n                    : fx\n                : isLeft(fy)\n                    ? fy\n                    : right(SA.concat(fx.right, fy.right));\n        }\n    };\n}\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * @since 2.0.0\n */\nfunction getValidationMonoid(SE, SA) {\n    return {\n        concat: getValidationSemigroup(SE, SA).concat,\n        empty: right(SA.empty)\n    };\n}\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * @since 2.0.0\n */\nexports.either = {\n    URI: exports.URI,\n    map: function (ma, f) { return (isLeft(ma) ? ma : right(f(ma.right))); },\n    of: right,\n    ap: function (mab, ma) { return (isLeft(mab) ? mab : isLeft(ma) ? ma : right(mab.right(ma.right))); },\n    chain: function (ma, f) { return (isLeft(ma) ? ma : f(ma.right)); },\n    reduce: function (fa, b, f) { return (isLeft(fa) ? b : f(b, fa.right)); },\n    foldMap: function (M) { return function (fa, f) { return (isLeft(fa) ? M.empty : f(fa.right)); }; },\n    reduceRight: function (fa, b, f) { return (isLeft(fa) ? b : f(fa.right, b)); },\n    traverse: function (F) { return function (ma, f) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(f(ma.right), right);\n    }; },\n    sequence: function (F) { return function (ma) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    }; },\n    bimap: function (fea, f, g) { return (isLeft(fea) ? left(f(fea.left)) : right(g(fea.right))); },\n    mapLeft: function (fea, f) { return (isLeft(fea) ? left(f(fea.left)) : fea); },\n    alt: function (fx, fy) { return (isLeft(fx) ? fy() : fx); },\n    extend: function (wa, f) { return (isLeft(wa) ? wa : right(f(wa))); },\n    chainRec: function (a, f) {\n        return ChainRec_1.tailRec(f(a), function (e) {\n            return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n        });\n    },\n    throwError: left\n};\nvar _a = pipeable_1.pipeable(exports.either), alt = _a.alt, ap = _a.ap, apFirst = _a.apFirst, apSecond = _a.apSecond, bimap = _a.bimap, chain = _a.chain, chainFirst = _a.chainFirst, duplicate = _a.duplicate, extend = _a.extend, flatten = _a.flatten, foldMap = _a.foldMap, map = _a.map, mapLeft = _a.mapLeft, reduce = _a.reduce, reduceRight = _a.reduceRight, fromOption = _a.fromOption, fromPredicate = _a.fromPredicate, filterOrElse = _a.filterOrElse;\nexports.alt = alt;\nexports.ap = ap;\nexports.apFirst = apFirst;\nexports.apSecond = apSecond;\nexports.bimap = bimap;\nexports.chain = chain;\nexports.chainFirst = chainFirst;\nexports.duplicate = duplicate;\nexports.extend = extend;\nexports.flatten = flatten;\nexports.foldMap = foldMap;\nexports.map = map;\nexports.mapLeft = mapLeft;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.fromOption = fromOption;\nexports.fromPredicate = fromPredicate;\nexports.filterOrElse = filterOrElse;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACDN,MAAM,CAACa,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC;AACA;AACA;AACAH,OAAO,CAACK,GAAG,GAAG,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,CAAC,EAAE;EACb,OAAO;IAAEC,IAAI,EAAE,MAAM;IAAEF,IAAI,EAAEC;EAAE,CAAC;AACpC;AACAP,OAAO,CAACM,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,KAAKA,CAACC,CAAC,EAAE;EACd,OAAO;IAAEF,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAEC;EAAE,CAAC;AACtC;AACAV,OAAO,CAACS,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,YAAYA,CAACJ,CAAC,EAAE;EACrB,OAAO,UAAUG,CAAC,EAAE;IAAE,OAAQA,CAAC,IAAI,IAAI,GAAGJ,IAAI,CAACC,CAAC,CAAC,GAAGE,KAAK,CAACC,CAAC,CAAC;EAAG,CAAC;AACpE;AACAV,OAAO,CAACW,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACL,CAAC,EAAE;EAChB,OAAOA,CAAC,YAAYM,KAAK,GAAGN,CAAC,GAAG,IAAIM,KAAK,CAACC,MAAM,CAACP,CAAC,CAAC,CAAC;AACxD;AACAP,OAAO,CAACY,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQA,CAACC,CAAC,EAAEC,OAAO,EAAE;EAC1B,IAAI;IACA,OAAOR,KAAK,CAACO,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CACD,OAAOT,CAAC,EAAE;IACN,OAAOD,IAAI,CAACW,OAAO,CAACV,CAAC,CAAC,CAAC;EAC3B;AACJ;AACAP,OAAO,CAACe,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA,SAASG,IAAIA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC3B,OAAO,UAAUC,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAGF,MAAM,CAACE,EAAE,CAACf,IAAI,CAAC,GAAGc,OAAO,CAACC,EAAE,CAACZ,KAAK,CAAC;EAAG,CAAC;AACvF;AACAT,OAAO,CAACkB,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA,SAASK,OAAOA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACrB,OAAO;IACHC,IAAI,EAAE,SAAAA,KAAUL,EAAE,EAAE;MAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAG,OAAO,GAAGG,EAAE,CAACE,IAAI,CAACL,EAAE,CAACf,IAAI,CAAC,GAAG,GAAG,GAAG,QAAQ,GAAGmB,EAAE,CAACC,IAAI,CAACL,EAAE,CAACZ,KAAK,CAAC,GAAG,GAAG;IAAG;EACvH,CAAC;AACL;AACAT,OAAO,CAACuB,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA,SAASI,KAAKA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACnB,OAAO;IACHC,MAAM,EAAE,SAAAA,OAAUC,CAAC,EAAEC,CAAC,EAAE;MACpB,OAAOD,CAAC,KAAKC,CAAC,KAAKV,MAAM,CAACS,CAAC,CAAC,GAAGT,MAAM,CAACU,CAAC,CAAC,IAAIJ,EAAE,CAACE,MAAM,CAACC,CAAC,CAACzB,IAAI,EAAE0B,CAAC,CAAC1B,IAAI,CAAC,GAAG2B,OAAO,CAACD,CAAC,CAAC,IAAIH,EAAE,CAACC,MAAM,CAACC,CAAC,CAACtB,KAAK,EAAEuB,CAAC,CAACvB,KAAK,CAAC,CAAC;IACtH;EACJ,CAAC;AACL;AACAT,OAAO,CAAC2B,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,YAAYA,CAACC,CAAC,EAAE;EACrB,OAAO;IACHC,MAAM,EAAE,SAAAA,OAAUL,CAAC,EAAEC,CAAC,EAAE;MAAE,OAAQV,MAAM,CAACU,CAAC,CAAC,GAAGD,CAAC,GAAGT,MAAM,CAACS,CAAC,CAAC,GAAGC,CAAC,GAAGvB,KAAK,CAAC0B,CAAC,CAACC,MAAM,CAACL,CAAC,CAACtB,KAAK,EAAEuB,CAAC,CAACvB,KAAK,CAAC,CAAC;IAAG;EAC1G,CAAC;AACL;AACAT,OAAO,CAACkC,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,iBAAiBA,CAACF,CAAC,EAAE;EAC1B,OAAO;IACHC,MAAM,EAAE,SAAAA,OAAUL,CAAC,EAAEC,CAAC,EAAE;MAAE,OAAQV,MAAM,CAACS,CAAC,CAAC,GAAGA,CAAC,GAAGT,MAAM,CAACU,CAAC,CAAC,GAAGA,CAAC,GAAGvB,KAAK,CAAC0B,CAAC,CAACC,MAAM,CAACL,CAAC,CAACtB,KAAK,EAAEuB,CAAC,CAACvB,KAAK,CAAC,CAAC;IAAG;EAC1G,CAAC;AACL;AACAT,OAAO,CAACqC,iBAAiB,GAAGA,iBAAiB;AAC7C;AACA;AACA;AACA,SAASC,cAAcA,CAACC,CAAC,EAAE;EACvB,OAAOtD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEoD,iBAAiB,CAACE,CAAC,CAAC,CAAC,EAAE;IAAEC,KAAK,EAAE/B,KAAK,CAAC8B,CAAC,CAACC,KAAK;EAAE,CAAC,CAAC;AAClF;AACAxC,OAAO,CAACsC,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA,SAAShB,MAAMA,CAACD,EAAE,EAAE;EAChB,QAAQA,EAAE,CAACb,IAAI;IACX,KAAK,MAAM;MACP,OAAO,IAAI;IACf,KAAK,OAAO;MACR,OAAO,KAAK;EACpB;AACJ;AACAR,OAAO,CAACsB,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,SAASW,OAAOA,CAACZ,EAAE,EAAE;EACjB,OAAOC,MAAM,CAACD,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI;AACpC;AACArB,OAAO,CAACiC,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA,SAASQ,IAAIA,CAACpB,EAAE,EAAE;EACd,OAAOC,MAAM,CAACD,EAAE,CAAC,GAAGZ,KAAK,CAACY,EAAE,CAACf,IAAI,CAAC,GAAGA,IAAI,CAACe,EAAE,CAACZ,KAAK,CAAC;AACvD;AACAT,OAAO,CAACyC,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA,SAASC,MAAMA,CAACvB,MAAM,EAAE;EACpB,OAAO,UAAUE,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAGF,MAAM,CAACE,EAAE,CAACf,IAAI,CAAC,GAAGe,EAAE;EAAG,CAAC;AACxE;AACArB,OAAO,CAAC0C,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA,SAASC,SAASA,CAACxB,MAAM,EAAE;EACvB,OAAO,UAAUE,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAGF,MAAM,CAACE,EAAE,CAACf,IAAI,CAAC,GAAGe,EAAE,CAACZ,KAAK;EAAG,CAAC;AAC9E;AACAT,OAAO,CAAC2C,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA,SAASC,IAAIA,CAACC,CAAC,EAAE;EACb,OAAO,UAAUnC,CAAC,EAAEW,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAG,KAAK,GAAGwB,CAAC,CAACf,MAAM,CAACpB,CAAC,EAAEW,EAAE,CAACZ,KAAK,CAAC;EAAG,CAAC;AACpF;AACAT,OAAO,CAAC4C,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAACC,SAAS,EAAE;EACvB,OAAO,UAAU1B,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACD,EAAE,CAAC,GAAG,KAAK,GAAG0B,SAAS,CAAC1B,EAAE,CAACZ,KAAK,CAAC;EAAG,CAAC;AAC/E;AACAT,OAAO,CAAC8C,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAAC3D,CAAC,EAAE4B,OAAO,EAAE;EAC3B,OAAOF,QAAQ,CAAC,YAAY;IAAE,OAAOkC,IAAI,CAACC,KAAK,CAAC7D,CAAC,CAAC;EAAE,CAAC,EAAE4B,OAAO,CAAC;AACnE;AACAjB,OAAO,CAACgD,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,aAAaA,CAACC,CAAC,EAAEnC,OAAO,EAAE;EAC/B,OAAOF,QAAQ,CAAC,YAAY;IAAE,OAAOkC,IAAI,CAACI,SAAS,CAACD,CAAC,CAAC;EAAE,CAAC,EAAEnC,OAAO,CAAC;AACvE;AACAjB,OAAO,CAACmD,aAAa,GAAGA,aAAa;AACrC,IAAIG,OAAO,GAAGC,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACjB,CAAC,EAAE;EACtB,IAAIC,KAAK,GAAGlC,IAAI,CAACiC,CAAC,CAACC,KAAK,CAAC;EACzB,IAAIiB,OAAO,GAAG,SAAVA,OAAOA,CAAapC,EAAE,EAAE;IACxB,OAAOC,MAAM,CAACD,EAAE,CAAC,GAAGA,EAAE,GAAGA,EAAE,CAACZ,KAAK,CAACD,IAAI,KAAK,MAAM,GAAGF,IAAI,CAACiC,CAAC,CAACC,KAAK,CAAC,GAAG/B,KAAK,CAACY,EAAE,CAACZ,KAAK,CAACR,KAAK,CAAC;EAC7F,CAAC;EACD,IAAIyD,QAAQ,GAAG,SAAXA,QAAQA,CAAarC,EAAE,EAAE;IACzB,OAAOC,MAAM,CAACD,EAAE,CAAC,GACX;MAAEf,IAAI,EAAEe,EAAE;MAAEZ,KAAK,EAAEY;IAAG,CAAC,GACvBC,MAAM,CAACD,EAAE,CAACZ,KAAK,CAAC,GACZ;MAAEH,IAAI,EAAEG,KAAK,CAACY,EAAE,CAACZ,KAAK,CAACH,IAAI,CAAC;MAAEG,KAAK,EAAE+B;IAAM,CAAC,GAC5C;MAAElC,IAAI,EAAEkC,KAAK;MAAE/B,KAAK,EAAEA,KAAK,CAACY,EAAE,CAACZ,KAAK,CAACA,KAAK;IAAE,CAAC;EAC3D,CAAC;EACD,IAAIkD,YAAY,GAAG,SAAfA,YAAYA,CAAatC,EAAE,EAAEL,CAAC,EAAE;IAChC,IAAIM,MAAM,CAACD,EAAE,CAAC,EAAE;MACZ,OAAO;QAAEf,IAAI,EAAEe,EAAE;QAAEZ,KAAK,EAAEY;MAAG,CAAC;IAClC;IACA,IAAId,CAAC,GAAGS,CAAC,CAACK,EAAE,CAACZ,KAAK,CAAC;IACnB,OAAOa,MAAM,CAACf,CAAC,CAAC,GAAG;MAAED,IAAI,EAAEG,KAAK,CAACF,CAAC,CAACD,IAAI,CAAC;MAAEG,KAAK,EAAE+B;IAAM,CAAC,GAAG;MAAElC,IAAI,EAAEkC,KAAK;MAAE/B,KAAK,EAAEA,KAAK,CAACF,CAAC,CAACE,KAAK;IAAE,CAAC;EACrG,CAAC;EACD,IAAImD,SAAS,GAAG,SAAZA,SAASA,CAAavC,EAAE,EAAE3B,CAAC,EAAE;IAC7B,OAAO4B,MAAM,CAACD,EAAE,CAAC,GACX;MAAEf,IAAI,EAAEe,EAAE;MAAEZ,KAAK,EAAEY;IAAG,CAAC,GACvB3B,CAAC,CAAC2B,EAAE,CAACZ,KAAK,CAAC,GACP;MAAEH,IAAI,EAAEkC,KAAK;MAAE/B,KAAK,EAAEA,KAAK,CAACY,EAAE,CAACZ,KAAK;IAAE,CAAC,GACvC;MAAEH,IAAI,EAAEG,KAAK,CAACY,EAAE,CAACZ,KAAK,CAAC;MAAEA,KAAK,EAAE+B;IAAM,CAAC;EACrD,CAAC;EACD,IAAIqB,SAAS,GAAG,SAAZA,SAASA,CAAaxC,EAAE,EAAEL,CAAC,EAAE;IAC7B,IAAIM,MAAM,CAACD,EAAE,CAAC,EAAE;MACZ,OAAOA,EAAE;IACb;IACA,IAAIyC,EAAE,GAAG9C,CAAC,CAACK,EAAE,CAACZ,KAAK,CAAC;IACpB,OAAOqD,EAAE,CAACtD,IAAI,KAAK,MAAM,GAAGF,IAAI,CAACiC,CAAC,CAACC,KAAK,CAAC,GAAG/B,KAAK,CAACqD,EAAE,CAAC7D,KAAK,CAAC;EAC/D,CAAC;EACD,IAAI8D,MAAM,GAAG,SAATA,MAAMA,CAAa1C,EAAE,EAAE0B,SAAS,EAAE;IAClC,OAAOzB,MAAM,CAACD,EAAE,CAAC,GAAGA,EAAE,GAAG0B,SAAS,CAAC1B,EAAE,CAACZ,KAAK,CAAC,GAAGY,EAAE,GAAGf,IAAI,CAACiC,CAAC,CAACC,KAAK,CAAC;EACrE,CAAC;EACD,IAAIwB,MAAM,GAAG,SAATA,MAAMA,CAAaC,CAAC,EAAE;IACtB,IAAIC,SAAS,GAAGlE,OAAO,CAACmE,MAAM,CAACC,QAAQ,CAACH,CAAC,CAAC;IAC1C,OAAO,UAAU5C,EAAE,EAAEL,CAAC,EAAE;MAAE,OAAOiD,CAAC,CAACI,GAAG,CAACH,SAAS,CAAC7C,EAAE,EAAEL,CAAC,CAAC,EAAEyC,OAAO,CAAC;IAAE,CAAC;EACxE,CAAC;EACD,IAAIa,IAAI,GAAG,SAAPA,IAAIA,CAAaL,CAAC,EAAE;IACpB,IAAIC,SAAS,GAAGlE,OAAO,CAACmE,MAAM,CAACC,QAAQ,CAACH,CAAC,CAAC;IAC1C,OAAO,UAAU5C,EAAE,EAAEL,CAAC,EAAE;MAAE,OAAOiD,CAAC,CAACI,GAAG,CAACH,SAAS,CAAC7C,EAAE,EAAEL,CAAC,CAAC,EAAE0C,QAAQ,CAAC;IAAE,CAAC;EACzE,CAAC;EACD,OAAO;IACHrD,GAAG,EAAEL,OAAO,CAACK,GAAG;IAChBkE,EAAE,EAAEjB,OAAO;IACXe,GAAG,EAAErE,OAAO,CAACmE,MAAM,CAACE,GAAG;IACvBZ,OAAO,EAAEA,OAAO;IAChBC,QAAQ,EAAEA,QAAQ;IAClBK,MAAM,EAAEA,MAAM;IACdF,SAAS,EAAEA,SAAS;IACpBD,SAAS,EAAEA,SAAS;IACpBD,YAAY,EAAEA,YAAY;IAC1BS,QAAQ,EAAEpE,OAAO,CAACmE,MAAM,CAACC,QAAQ;IACjCI,QAAQ,EAAExE,OAAO,CAACmE,MAAM,CAACK,QAAQ;IACjCC,MAAM,EAAEzE,OAAO,CAACmE,MAAM,CAACM,MAAM;IAC7BC,OAAO,EAAE1E,OAAO,CAACmE,MAAM,CAACO,OAAO;IAC/BC,WAAW,EAAE3E,OAAO,CAACmE,MAAM,CAACQ,WAAW;IACvCX,MAAM,EAAEA,MAAM;IACdM,IAAI,EAAEA;EACV,CAAC;AACL;AACAtE,OAAO,CAACwD,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA,SAASoB,aAAaA,CAACzC,CAAC,EAAE;EACtB,OAAO;IACH9B,GAAG,EAAEL,OAAO,CAACK,GAAG;IAChBkE,EAAE,EAAEjB,OAAO;IACXe,GAAG,EAAErE,OAAO,CAACmE,MAAM,CAACE,GAAG;IACvBQ,EAAE,EAAE7E,OAAO,CAACmE,MAAM,CAACU,EAAE;IACrBC,EAAE,EAAE,SAAAA,GAAUC,GAAG,EAAE1D,EAAE,EAAE;MACnB,OAAOC,MAAM,CAACyD,GAAG,CAAC,GACZzD,MAAM,CAACD,EAAE,CAAC,GACNf,IAAI,CAAC6B,CAAC,CAACC,MAAM,CAAC2C,GAAG,CAACzE,IAAI,EAAEe,EAAE,CAACf,IAAI,CAAC,CAAC,GACjCyE,GAAG,GACPzD,MAAM,CAACD,EAAE,CAAC,GACNA,EAAE,GACFZ,KAAK,CAACsE,GAAG,CAACtE,KAAK,CAACY,EAAE,CAACZ,KAAK,CAAC,CAAC;IACxC,CAAC;IACDuE,KAAK,EAAEhF,OAAO,CAACmE,MAAM,CAACa,KAAK;IAC3BC,GAAG,EAAE,SAAAA,IAAUC,EAAE,EAAElE,CAAC,EAAE;MAClB,IAAIiB,OAAO,CAACiD,EAAE,CAAC,EAAE;QACb,OAAOA,EAAE;MACb;MACA,IAAIC,EAAE,GAAGnE,CAAC,CAAC,CAAC;MACZ,OAAOM,MAAM,CAAC6D,EAAE,CAAC,GAAG7E,IAAI,CAAC6B,CAAC,CAACC,MAAM,CAAC8C,EAAE,CAAC5E,IAAI,EAAE6E,EAAE,CAAC7E,IAAI,CAAC,CAAC,GAAG6E,EAAE;IAC7D;EACJ,CAAC;AACL;AACAnF,OAAO,CAAC4E,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA,SAASQ,sBAAsBA,CAAC5D,EAAE,EAAEC,EAAE,EAAE;EACpC,OAAO;IACHW,MAAM,EAAE,SAAAA,OAAU8C,EAAE,EAAEC,EAAE,EAAE;MACtB,OAAO7D,MAAM,CAAC4D,EAAE,CAAC,GACX5D,MAAM,CAAC6D,EAAE,CAAC,GACN7E,IAAI,CAACkB,EAAE,CAACY,MAAM,CAAC8C,EAAE,CAAC5E,IAAI,EAAE6E,EAAE,CAAC7E,IAAI,CAAC,CAAC,GACjC4E,EAAE,GACN5D,MAAM,CAAC6D,EAAE,CAAC,GACNA,EAAE,GACF1E,KAAK,CAACgB,EAAE,CAACW,MAAM,CAAC8C,EAAE,CAACzE,KAAK,EAAE0E,EAAE,CAAC1E,KAAK,CAAC,CAAC;IAClD;EACJ,CAAC;AACL;AACAT,OAAO,CAACoF,sBAAsB,GAAGA,sBAAsB;AACvD;AACA;AACA;AACA,SAASC,mBAAmBA,CAAC7D,EAAE,EAAEC,EAAE,EAAE;EACjC,OAAO;IACHW,MAAM,EAAEgD,sBAAsB,CAAC5D,EAAE,EAAEC,EAAE,CAAC,CAACW,MAAM;IAC7CI,KAAK,EAAE/B,KAAK,CAACgB,EAAE,CAACe,KAAK;EACzB,CAAC;AACL;AACAxC,OAAO,CAACqF,mBAAmB,GAAGA,mBAAmB;AACjD;AACA;AACA;AACArF,OAAO,CAACmE,MAAM,GAAG;EACb9D,GAAG,EAAEL,OAAO,CAACK,GAAG;EAChBgE,GAAG,EAAE,SAAAA,IAAUhD,EAAE,EAAEL,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACD,EAAE,CAAC,GAAGA,EAAE,GAAGZ,KAAK,CAACO,CAAC,CAACK,EAAE,CAACZ,KAAK,CAAC,CAAC;EAAG,CAAC;EACxEoE,EAAE,EAAEpE,KAAK;EACTqE,EAAE,EAAE,SAAAA,GAAUC,GAAG,EAAE1D,EAAE,EAAE;IAAE,OAAQC,MAAM,CAACyD,GAAG,CAAC,GAAGA,GAAG,GAAGzD,MAAM,CAACD,EAAE,CAAC,GAAGA,EAAE,GAAGZ,KAAK,CAACsE,GAAG,CAACtE,KAAK,CAACY,EAAE,CAACZ,KAAK,CAAC,CAAC;EAAG,CAAC;EACrGuE,KAAK,EAAE,SAAAA,MAAU3D,EAAE,EAAEL,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACD,EAAE,CAAC,GAAGA,EAAE,GAAGL,CAAC,CAACK,EAAE,CAACZ,KAAK,CAAC;EAAG,CAAC;EACnEgE,MAAM,EAAE,SAAAA,OAAUa,EAAE,EAAEC,CAAC,EAAEvE,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACgE,EAAE,CAAC,GAAGC,CAAC,GAAGvE,CAAC,CAACuE,CAAC,EAAED,EAAE,CAAC7E,KAAK,CAAC;EAAG,CAAC;EACzEiE,OAAO,EAAE,SAAAA,QAAUnC,CAAC,EAAE;IAAE,OAAO,UAAU+C,EAAE,EAAEtE,CAAC,EAAE;MAAE,OAAQM,MAAM,CAACgE,EAAE,CAAC,GAAG/C,CAAC,CAACC,KAAK,GAAGxB,CAAC,CAACsE,EAAE,CAAC7E,KAAK,CAAC;IAAG,CAAC;EAAE,CAAC;EACnGkE,WAAW,EAAE,SAAAA,YAAUW,EAAE,EAAEC,CAAC,EAAEvE,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACgE,EAAE,CAAC,GAAGC,CAAC,GAAGvE,CAAC,CAACsE,EAAE,CAAC7E,KAAK,EAAE8E,CAAC,CAAC;EAAG,CAAC;EAC9EnB,QAAQ,EAAE,SAAAA,SAAUH,CAAC,EAAE;IAAE,OAAO,UAAU5C,EAAE,EAAEL,CAAC,EAAE;MAC7C,OAAOM,MAAM,CAACD,EAAE,CAAC,GAAG4C,CAAC,CAACY,EAAE,CAACvE,IAAI,CAACe,EAAE,CAACf,IAAI,CAAC,CAAC,GAAG2D,CAAC,CAACI,GAAG,CAACrD,CAAC,CAACK,EAAE,CAACZ,KAAK,CAAC,EAAEA,KAAK,CAAC;IACvE,CAAC;EAAE,CAAC;EACJ+D,QAAQ,EAAE,SAAAA,SAAUP,CAAC,EAAE;IAAE,OAAO,UAAU5C,EAAE,EAAE;MAC1C,OAAOC,MAAM,CAACD,EAAE,CAAC,GAAG4C,CAAC,CAACY,EAAE,CAACvE,IAAI,CAACe,EAAE,CAACf,IAAI,CAAC,CAAC,GAAG2D,CAAC,CAACI,GAAG,CAAChD,EAAE,CAACZ,KAAK,EAAEA,KAAK,CAAC;IACpE,CAAC;EAAE,CAAC;EACJ+E,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAEzE,CAAC,EAAE0E,CAAC,EAAE;IAAE,OAAQpE,MAAM,CAACmE,GAAG,CAAC,GAAGnF,IAAI,CAACU,CAAC,CAACyE,GAAG,CAACnF,IAAI,CAAC,CAAC,GAAGG,KAAK,CAACiF,CAAC,CAACD,GAAG,CAAChF,KAAK,CAAC,CAAC;EAAG,CAAC;EAC/FkF,OAAO,EAAE,SAAAA,QAAUF,GAAG,EAAEzE,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACmE,GAAG,CAAC,GAAGnF,IAAI,CAACU,CAAC,CAACyE,GAAG,CAACnF,IAAI,CAAC,CAAC,GAAGmF,GAAG;EAAG,CAAC;EAC9ER,GAAG,EAAE,SAAAA,IAAUC,EAAE,EAAEC,EAAE,EAAE;IAAE,OAAQ7D,MAAM,CAAC4D,EAAE,CAAC,GAAGC,EAAE,CAAC,CAAC,GAAGD,EAAE;EAAG,CAAC;EAC3DU,MAAM,EAAE,SAAAA,OAAUC,EAAE,EAAE7E,CAAC,EAAE;IAAE,OAAQM,MAAM,CAACuE,EAAE,CAAC,GAAGA,EAAE,GAAGpF,KAAK,CAACO,CAAC,CAAC6E,EAAE,CAAC,CAAC;EAAG,CAAC;EACrEC,QAAQ,EAAE,SAAAA,SAAUpF,CAAC,EAAEM,CAAC,EAAE;IACtB,OAAOd,UAAU,CAAC6F,OAAO,CAAC/E,CAAC,CAACN,CAAC,CAAC,EAAE,UAAUH,CAAC,EAAE;MACzC,OAAOe,MAAM,CAACf,CAAC,CAAC,GAAGE,KAAK,CAACH,IAAI,CAACC,CAAC,CAACD,IAAI,CAAC,CAAC,GAAGgB,MAAM,CAACf,CAAC,CAACE,KAAK,CAAC,GAAGH,IAAI,CAACU,CAAC,CAACT,CAAC,CAACE,KAAK,CAACH,IAAI,CAAC,CAAC,GAAGG,KAAK,CAACA,KAAK,CAACF,CAAC,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC;IAClH,CAAC,CAAC;EACN,CAAC;EACDuF,UAAU,EAAE1F;AAChB,CAAC;AACD,IAAI2F,EAAE,GAAG7F,UAAU,CAAC8F,QAAQ,CAAClG,OAAO,CAACmE,MAAM,CAAC;EAAEc,GAAG,GAAGgB,EAAE,CAAChB,GAAG;EAAEH,EAAE,GAAGmB,EAAE,CAACnB,EAAE;EAAEqB,OAAO,GAAGF,EAAE,CAACE,OAAO;EAAEC,QAAQ,GAAGH,EAAE,CAACG,QAAQ;EAAEZ,KAAK,GAAGS,EAAE,CAACT,KAAK;EAAER,KAAK,GAAGiB,EAAE,CAACjB,KAAK;EAAEqB,UAAU,GAAGJ,EAAE,CAACI,UAAU;EAAEC,SAAS,GAAGL,EAAE,CAACK,SAAS;EAAEV,MAAM,GAAGK,EAAE,CAACL,MAAM;EAAEW,OAAO,GAAGN,EAAE,CAACM,OAAO;EAAE7B,OAAO,GAAGuB,EAAE,CAACvB,OAAO;EAAEL,GAAG,GAAG4B,EAAE,CAAC5B,GAAG;EAAEsB,OAAO,GAAGM,EAAE,CAACN,OAAO;EAAElB,MAAM,GAAGwB,EAAE,CAACxB,MAAM;EAAEE,WAAW,GAAGsB,EAAE,CAACtB,WAAW;EAAE6B,UAAU,GAAGP,EAAE,CAACO,UAAU;EAAEC,aAAa,GAAGR,EAAE,CAACQ,aAAa;EAAEC,YAAY,GAAGT,EAAE,CAACS,YAAY;AAClc1G,OAAO,CAACiF,GAAG,GAAGA,GAAG;AACjBjF,OAAO,CAAC8E,EAAE,GAAGA,EAAE;AACf9E,OAAO,CAACmG,OAAO,GAAGA,OAAO;AACzBnG,OAAO,CAACoG,QAAQ,GAAGA,QAAQ;AAC3BpG,OAAO,CAACwF,KAAK,GAAGA,KAAK;AACrBxF,OAAO,CAACgF,KAAK,GAAGA,KAAK;AACrBhF,OAAO,CAACqG,UAAU,GAAGA,UAAU;AAC/BrG,OAAO,CAACsG,SAAS,GAAGA,SAAS;AAC7BtG,OAAO,CAAC4F,MAAM,GAAGA,MAAM;AACvB5F,OAAO,CAACuG,OAAO,GAAGA,OAAO;AACzBvG,OAAO,CAAC0E,OAAO,GAAGA,OAAO;AACzB1E,OAAO,CAACqE,GAAG,GAAGA,GAAG;AACjBrE,OAAO,CAAC2F,OAAO,GAAGA,OAAO;AACzB3F,OAAO,CAACyE,MAAM,GAAGA,MAAM;AACvBzE,OAAO,CAAC2E,WAAW,GAAGA,WAAW;AACjC3E,OAAO,CAACwG,UAAU,GAAGA,UAAU;AAC/BxG,OAAO,CAACyG,aAAa,GAAGA,aAAa;AACrCzG,OAAO,CAAC0G,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}