{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\nconst ledgerDevices = [{\n  vendorId: ledgerUSBVendorId\n}];\nexport function requestLedgerDevice() {\n  return _requestLedgerDevice.apply(this, arguments);\n}\nfunction _requestLedgerDevice() {\n  _requestLedgerDevice = _asyncToGenerator(function* () {\n    // $FlowFixMe\n    const device = yield navigator.usb.requestDevice({\n      filters: ledgerDevices\n    });\n    return device;\n  });\n  return _requestLedgerDevice.apply(this, arguments);\n}\nexport function getLedgerDevices() {\n  return _getLedgerDevices.apply(this, arguments);\n}\nfunction _getLedgerDevices() {\n  _getLedgerDevices = _asyncToGenerator(function* () {\n    // $FlowFixMe\n    const devices = yield navigator.usb.getDevices();\n    return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n  });\n  return _getLedgerDevices.apply(this, arguments);\n}\nexport function getFirstLedgerDevice() {\n  return _getFirstLedgerDevice.apply(this, arguments);\n}\nfunction _getFirstLedgerDevice() {\n  _getFirstLedgerDevice = _asyncToGenerator(function* () {\n    const existingDevices = yield getLedgerDevices();\n    if (existingDevices.length > 0) return existingDevices[0];\n    return requestLedgerDevice();\n  });\n  return _getFirstLedgerDevice.apply(this, arguments);\n}\nexport const isSupported = () => Promise.resolve(!!navigator &&\n// $FlowFixMe\n!!navigator.usb && typeof navigator.usb.getDevices === \"function\");","map":null,"metadata":{},"sourceType":"module"}