{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */ /* tslint:disable */ /* eslint-disable */import{Contract,utils}from\"ethers\";const _abi=[{inputs:[{components:[{internalType:\"address\",name:\"target\",type:\"address\"},{internalType:\"bytes\",name:\"callData\",type:\"bytes\"}],internalType:\"struct Multicall2.Call[]\",name:\"calls\",type:\"tuple[]\"}],name:\"aggregate\",outputs:[{internalType:\"uint256\",name:\"blockNumber\",type:\"uint256\"},{internalType:\"bytes[]\",name:\"returnData\",type:\"bytes[]\"}],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{components:[{internalType:\"address\",name:\"target\",type:\"address\"},{internalType:\"bytes\",name:\"callData\",type:\"bytes\"}],internalType:\"struct Multicall2.Call[]\",name:\"calls\",type:\"tuple[]\"}],name:\"blockAndAggregate\",outputs:[{internalType:\"uint256\",name:\"blockNumber\",type:\"uint256\"},{internalType:\"bytes32\",name:\"blockHash\",type:\"bytes32\"},{components:[{internalType:\"bool\",name:\"success\",type:\"bool\"},{internalType:\"bytes\",name:\"returnData\",type:\"bytes\"}],internalType:\"struct Multicall2.Result[]\",name:\"returnData\",type:\"tuple[]\"}],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"blockNumber\",type:\"uint256\"}],name:\"getBlockHash\",outputs:[{internalType:\"bytes32\",name:\"blockHash\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getBlockNumber\",outputs:[{internalType:\"uint256\",name:\"blockNumber\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getCurrentBlockCoinbase\",outputs:[{internalType:\"address\",name:\"coinbase\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getCurrentBlockDifficulty\",outputs:[{internalType:\"uint256\",name:\"difficulty\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getCurrentBlockGasLimit\",outputs:[{internalType:\"uint256\",name:\"gaslimit\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getCurrentBlockTimestamp\",outputs:[{internalType:\"uint256\",name:\"timestamp\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"addr\",type:\"address\"}],name:\"getEthBalance\",outputs:[{internalType:\"uint256\",name:\"balance\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getLastBlockHash\",outputs:[{internalType:\"bytes32\",name:\"blockHash\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"bool\",name:\"requireSuccess\",type:\"bool\"},{components:[{internalType:\"address\",name:\"target\",type:\"address\"},{internalType:\"bytes\",name:\"callData\",type:\"bytes\"}],internalType:\"struct Multicall2.Call[]\",name:\"calls\",type:\"tuple[]\"}],name:\"tryAggregate\",outputs:[{components:[{internalType:\"bool\",name:\"success\",type:\"bool\"},{internalType:\"bytes\",name:\"returnData\",type:\"bytes\"}],internalType:\"struct Multicall2.Result[]\",name:\"returnData\",type:\"tuple[]\"}],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bool\",name:\"requireSuccess\",type:\"bool\"},{components:[{internalType:\"address\",name:\"target\",type:\"address\"},{internalType:\"bytes\",name:\"callData\",type:\"bytes\"}],internalType:\"struct Multicall2.Call[]\",name:\"calls\",type:\"tuple[]\"}],name:\"tryBlockAndAggregate\",outputs:[{internalType:\"uint256\",name:\"blockNumber\",type:\"uint256\"},{internalType:\"bytes32\",name:\"blockHash\",type:\"bytes32\"},{components:[{internalType:\"bool\",name:\"success\",type:\"bool\"},{internalType:\"bytes\",name:\"returnData\",type:\"bytes\"}],internalType:\"struct Multicall2.Result[]\",name:\"returnData\",type:\"tuple[]\"}],stateMutability:\"nonpayable\",type:\"function\"}];export class Multicall__factory{static createInterface(){return new utils.Interface(_abi);}static connect(address,signerOrProvider){return new Contract(address,_abi,signerOrProvider);}}Multicall__factory.abi=_abi;","map":{"version":3,"names":["Contract","utils","_abi","inputs","components","internalType","name","type","outputs","stateMutability","Multicall__factory","createInterface","Interface","connect","address","signerOrProvider","abi"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/generated/factories/Multicall__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { Multicall, MulticallInterface } from \"../Multicall\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"aggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"returnData\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"blockAndAggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getBlockHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBlockNumber\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockCoinbase\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"coinbase\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockDifficulty\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"difficulty\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockGasLimit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"gaslimit\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"getEthBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getLastBlockHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"requireSuccess\",\n        type: \"bool\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryAggregate\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"requireSuccess\",\n        type: \"bool\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"target\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"callData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryBlockAndAggregate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"blockHash\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"success\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"returnData\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class Multicall__factory {\n  static readonly abi = _abi;\n  static createInterface(): MulticallInterface {\n    return new utils.Interface(_abi) as MulticallInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Multicall {\n    return new Contract(address, _abi, signerOrProvider) as Multicall;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}