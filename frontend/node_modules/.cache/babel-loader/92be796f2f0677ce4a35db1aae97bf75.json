{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({\n      missingProperty: (0, codegen_1._)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \"\"])), prop)\n    }, true);\n    cxt.error();\n  });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp(_ref, properties, missing) {\n  let {\n    gen,\n    data,\n    it: {\n      opts\n    }\n  } = _ref;\n  return (0, codegen_1.or)(...properties.map(prop => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" = \", \"\"])), missing, prop))));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n  cxt.setParams({\n    missingProperty: missing\n  }, true);\n  cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: (0, codegen_1._)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"Object.prototype.hasOwnProperty\"])))\n  });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n  return (0, codegen_1._)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".call(\", \", \", \")\"])), hasPropFunc(gen), data, property);\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n  const cond = (0, codegen_1._)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\", \"\", \" !== undefined\"])), data, (0, codegen_1.getProperty)(property));\n  return ownProperties ? (0, codegen_1._)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \" && \", \"\"])), cond, isOwnProperty(gen, data, property)) : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n  const cond = (0, codegen_1._)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"\", \" === undefined\"])), data, (0, codegen_1.getProperty)(property));\n  return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n  return schemaMap ? Object.keys(schemaMap).filter(p => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n  return allSchemaProperties(schemaMap).filter(p => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode(_ref2, func, context, passSchema) {\n  let {\n    schemaCode,\n    data,\n    it: {\n      gen,\n      topSchemaRef,\n      schemaPath,\n      errorPath\n    },\n    it\n  } = _ref2;\n  const dataAndSchema = passSchema ? (0, codegen_1._)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\", \", \", \", \", \"\", \"\"])), schemaCode, data, topSchemaRef, schemaPath) : data;\n  const valCxt = [[names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)], [names_1.default.parentData, it.parentData], [names_1.default.parentDataProperty, it.parentDataProperty], [names_1.default.rootData, names_1.default.rootData]];\n  if (it.opts.dynamicRef) valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n  const args = (0, codegen_1._)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\", \", \", \"\"])), dataAndSchema, gen.object(...valCxt));\n  return context !== codegen_1.nil ? (0, codegen_1._)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\", \".call(\", \", \", \")\"])), func, context, args) : (0, codegen_1._)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\", \"(\", \")\"])), func, args);\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"new RegExp\"])));\nfunction usePattern(_ref3, pattern) {\n  let {\n    gen,\n    it: {\n      opts\n    }\n  } = _ref3;\n  const u = opts.unicodeRegExp ? \"u\" : \"\";\n  const {\n    regExp\n  } = opts.code;\n  const rx = regExp(pattern, u);\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: (0, codegen_1._)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\", \"(\", \", \", \")\"])), regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp), pattern, u)\n  });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n  const {\n    gen,\n    data,\n    keyword,\n    it\n  } = cxt;\n  const valid = gen.name(\"valid\");\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true);\n    validateItems(() => gen.assign(validArr, false));\n    return validArr;\n  }\n  gen.var(valid, true);\n  validateItems(() => gen.break());\n  return valid;\n  function validateItems(notValid) {\n    const len = gen.const(\"len\", (0, codegen_1._)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\", \".length\"])), data));\n    gen.forRange(\"i\", 0, len, i => {\n      cxt.subschema({\n        keyword,\n        dataProp: i,\n        dataPropType: util_1.Type.Num\n      }, valid);\n      gen.if((0, codegen_1.not)(valid), notValid);\n    });\n  }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n  const {\n    gen,\n    schema,\n    keyword,\n    it\n  } = cxt;\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\");\n  const alwaysValid = schema.some(sch => (0, util_1.alwaysValidSchema)(it, sch));\n  if (alwaysValid && !it.opts.unevaluated) return;\n  const valid = gen.let(\"valid\", false);\n  const schValid = gen.name(\"_valid\");\n  gen.block(() => schema.forEach((_sch, i) => {\n    const schCxt = cxt.subschema({\n      keyword,\n      schemaProp: i,\n      compositeRule: true\n    }, schValid);\n    gen.assign(valid, (0, codegen_1._)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\", \" || \", \"\"])), valid, schValid));\n    const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n    // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n    // or if all properties and items were evaluated (it.props === true && it.items === true)\n    if (!merged) gen.if((0, codegen_1.not)(valid));\n  }));\n  cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;","map":{"version":3,"sources":["../../lib/vocabularies/code.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map"]},"metadata":{},"sourceType":"script"}