{"ast":null,"code":"import { JSBI, Percent, TokenAmount } from '@ubeswap/sdk';\nimport { MinimaRouterTrade } from 'components/swap/routing/trade';\nimport { ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM, BLOCKED_PRICE_IMPACT_NON_EXPERT, ZERO_PERCENT } from '../constants';\nimport { Field } from '../state/swap/actions';\nimport { basisPointsToPercent } from './index';\nconst BASE_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000));\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000));\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE);\n\n// computes price breakdown for the trade\n_c = INPUT_FRACTION_AFTER_FEE;\nexport function computeTradePriceBreakdown(trade) {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade ? undefined : trade instanceof MinimaRouterTrade ? ZERO_PERCENT : ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce(currentFee => currentFee.multiply(INPUT_FRACTION_AFTER_FEE), ONE_HUNDRED_PERCENT));\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction ? new Percent(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator) : undefined;\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount = realizedLPFee && trade && new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient);\n  return {\n    priceImpactWithoutFee: priceImpactWithoutFeePercent,\n    realizedLPFee: realizedLPFeeAmount\n  };\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(trade, allowedSlippage) {\n  const pct = basisPointsToPercent(allowedSlippage);\n  return {\n    [Field.INPUT]: trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct)\n  };\n}\nexport function warningSeverity(priceImpact) {\n  if (!(priceImpact !== null && priceImpact !== void 0 && priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT))) return 4;\n  if (!(priceImpact !== null && priceImpact !== void 0 && priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH))) return 3;\n  if (!(priceImpact !== null && priceImpact !== void 0 && priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM))) return 2;\n  if (!(priceImpact !== null && priceImpact !== void 0 && priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW))) return 1;\n  return 0;\n}\nexport function formatExecutionPrice(trade, inverted) {\n  if (!trade) {\n    return '';\n  }\n  return inverted ? \"\".concat(trade.executionPrice.invert().toSignificant(6), \" \").concat(trade.inputAmount.currency.symbol, \" / \").concat(trade.outputAmount.currency.symbol) : \"\".concat(trade.executionPrice.toSignificant(6), \" \").concat(trade.outputAmount.currency.symbol, \" / \").concat(trade.inputAmount.currency.symbol);\n}\nvar _c;\n$RefreshReg$(_c, \"INPUT_FRACTION_AFTER_FEE\");","map":{"version":3,"names":["JSBI","Percent","TokenAmount","MinimaRouterTrade","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","BLOCKED_PRICE_IMPACT_NON_EXPERT","ZERO_PERCENT","Field","basisPointsToPercent","BASE_FEE","BigInt","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","_c","computeTradePriceBreakdown","trade","realizedLPFee","undefined","route","pairs","reduce","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","realizedLPFeeAmount","inputAmount","token","raw","quotient","priceImpactWithoutFee","computeSlippageAdjustedAmounts","allowedSlippage","pct","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","formatExecutionPrice","inverted","concat","executionPrice","invert","toSignificant","currency","symbol","outputAmount","$RefreshReg$"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/prices.ts"],"sourcesContent":["import { Fraction, JSBI, Percent, TokenAmount, Trade } from '@ubeswap/sdk'\nimport { MinimaRouterTrade } from 'components/swap/routing/trade'\n\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ZERO_PERCENT,\n} from '../constants'\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: TokenAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : trade instanceof MinimaRouterTrade\n    ? ZERO_PERCENT\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT\n        )\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number\n): { [field in Field]?: TokenAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}