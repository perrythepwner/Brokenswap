{"ast":null,"code":"var _document$querySelect;\nimport { createReducer } from '@reduxjs/toolkit';\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, clearValoraAccount, removeSerializedPair, removeSerializedToken, setValoraAccount, toggleURLWarning, updateMatchesDarkMode, updateUserAllowMoolaWithdrawal, updateUserAprMode, updateUserDarkMode, updateUserDeadline, updateUserDisableSmartRouting, updateUserExpertMode, updateUserMinApprove, updateUserSingleHopOnly, updateUserSlippageTolerance } from './actions';\nconst currentTimestamp = () => new Date().getTime();\nfunction pairKey(token0Address, token1Address) {\n  return \"\".concat(token0Address, \";\").concat(token1Address);\n}\n(_document$querySelect = document.querySelector('html')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.classList.add('tw-dark');\nexport const initialState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userMinApprove: false,\n  userAllowMoolaWithdrawal: false,\n  userDisableSmartRouting: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n  valoraAccount: null,\n  userAprMode: false\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  // slippage isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userSlippageTolerance !== 'number') {\n    state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\n  }\n\n  // deadline isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userDeadline !== 'number') {\n    state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n  }\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserDarkMode, (state, action) => {\n  state.userDarkMode = action.payload.userDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateMatchesDarkMode, (state, action) => {\n  state.matchesDarkMode = action.payload.matchesDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserExpertMode, (state, action) => {\n  state.userExpertMode = action.payload.userExpertMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSlippageTolerance, (state, action) => {\n  state.userSlippageTolerance = action.payload.userSlippageTolerance;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserDeadline, (state, action) => {\n  state.userDeadline = action.payload.userDeadline;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSingleHopOnly, (state, action) => {\n  state.userSingleHopOnly = action.payload.userSingleHopOnly;\n}).addCase(updateUserMinApprove, (state, action) => {\n  state.userMinApprove = action.payload.userMinApprove;\n}).addCase(updateUserAllowMoolaWithdrawal, (state, action) => {\n  state.userAllowMoolaWithdrawal = action.payload.userAllowMoolaWithdrawal;\n}).addCase(updateUserDisableSmartRouting, (state, action) => {\n  state.userDisableSmartRouting = action.payload.userDisableSmartRouting;\n}).addCase(addSerializedToken, (state, _ref) => {\n  let {\n    payload: {\n      serializedToken\n    }\n  } = _ref;\n  state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n  state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedToken, (state, _ref2) => {\n  let {\n    payload: {\n      address,\n      chainId\n    }\n  } = _ref2;\n  state.tokens[chainId] = state.tokens[chainId] || {};\n  delete state.tokens[chainId][address];\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedPair, (state, _ref3) => {\n  let {\n    payload: {\n      serializedPair\n    }\n  } = _ref3;\n  if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n    const chainId = serializedPair.token0.chainId;\n    state.pairs[chainId] = state.pairs[chainId] || {};\n    state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedPair, (state, _ref4) => {\n  let {\n    payload: {\n      chainId,\n      tokenAAddress,\n      tokenBAddress\n    }\n  } = _ref4;\n  if (state.pairs[chainId]) {\n    // just delete both keys if either exists\n    delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n    delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(toggleURLWarning, state => {\n  state.URLWarningVisible = !state.URLWarningVisible;\n}).addCase(setValoraAccount, (state, _ref5) => {\n  let {\n    payload\n  } = _ref5;\n  state.valoraAccount = payload;\n}).addCase(clearValoraAccount, state => {\n  state.valoraAccount = null;\n}).addCase(updateUserAprMode, (state, action) => {\n  state.userAprMode = action.payload.userAprMode;\n}));","map":{"version":3,"names":["createReducer","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","updateVersion","addSerializedPair","addSerializedToken","clearValoraAccount","removeSerializedPair","removeSerializedToken","setValoraAccount","toggleURLWarning","updateMatchesDarkMode","updateUserAllowMoolaWithdrawal","updateUserAprMode","updateUserDarkMode","updateUserDeadline","updateUserDisableSmartRouting","updateUserExpertMode","updateUserMinApprove","updateUserSingleHopOnly","updateUserSlippageTolerance","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","concat","_document$querySelect","document","querySelector","classList","add","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSingleHopOnly","userMinApprove","userAllowMoolaWithdrawal","userDisableSmartRouting","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","valoraAccount","userAprMode","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","_ref","serializedToken","chainId","address","_ref2","_ref3","serializedPair","token0","token1","_ref4","tokenAAddress","tokenBAddress","_ref5"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/user/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  clearValoraAccount,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  setValoraAccount,\n  toggleURLWarning,\n  updateMatchesDarkMode,\n  updateUserAllowMoolaWithdrawal,\n  updateUserAprMode,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserDisableSmartRouting,\n  updateUserExpertMode,\n  updateUserMinApprove,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  userSingleHopOnly: boolean // only allow swaps on direct pairs\n  userMinApprove: boolean // require approving each transaction\n  userAllowMoolaWithdrawal: boolean // allows the user to withdraw from Moola\n  userDisableSmartRouting: boolean // enables smart order routing\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  URLWarningVisible: boolean\n\n  // persist valora connection\n  valoraAccount: {\n    address: string\n    phoneNumber: string\n  } | null\n\n  userAprMode: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\ndocument.querySelector('html')?.classList.add('tw-dark')\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userMinApprove: false,\n  userAllowMoolaWithdrawal: false,\n  userDisableSmartRouting: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n  valoraAccount: null,\n  userAprMode: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(updateUserMinApprove, (state, action) => {\n      state.userMinApprove = action.payload.userMinApprove\n    })\n    .addCase(updateUserAllowMoolaWithdrawal, (state, action) => {\n      state.userAllowMoolaWithdrawal = action.payload.userAllowMoolaWithdrawal\n    })\n    .addCase(updateUserDisableSmartRouting, (state, action) => {\n      state.userDisableSmartRouting = action.payload.userDisableSmartRouting\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(toggleURLWarning, (state) => {\n      state.URLWarningVisible = !state.URLWarningVisible\n    })\n    .addCase(setValoraAccount, (state, { payload }) => {\n      state.valoraAccount = payload\n    })\n    .addCase(clearValoraAccount, (state) => {\n      state.valoraAccount = null\n    })\n    .addCase(updateUserAprMode, (state, action) => {\n      state.userAprMode = action.payload.userAprMode\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}