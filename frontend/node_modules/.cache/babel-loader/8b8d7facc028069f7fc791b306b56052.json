{"ast":null,"code":"const Hash = require(\"./hash\");\nconst Bytes = require(\"./bytes\");\nconst Desubits = require(\"./desubits\");\n\n// Bytes -> Bytes\nconst bytesAddChecksum = bytes => {\n  const hash = Hash.keccak256(bytes);\n  const sum = Bytes.slice(0, 1, hash);\n  return Bytes.concat(bytes, sum);\n};\n\n// Bytes -> Bool\nconst bytesChecksum = bytes => {\n  const length = Bytes.length(bytes);\n  const prefix = Bytes.slice(0, length - 1, bytes);\n  return bytesAddChecksum(prefix) === bytes;\n};\n\n// () ~> Passphrase\nconst create = () => {\n  const bytes = bytesAddChecksum(Bytes.random(11));\n  const seed = Desubits.fromBytes(bytes);\n  const passphrase = seed.replace(/([a-z]{8})/g, \"$1 \");\n  return passphrase;\n};\n\n// Passphrase -> Bytes\nconst toBytes = passphrase => {\n  const seed = passphrase.replace(/ /g, \"\");\n  const bytes = Desubits.toBytes(passphrase);\n  return bytes;\n};\n\n// Passphrase -> Bool\nconst checksum = passphrase => bytesChecksum(toBytes(passphrase));\n\n// Passphrase -> Bytes\nconst toMasterKey = passphrase => {\n  let hash = Hash.keccak256;\n  let bytes = toBytes(passphrase);\n  for (let i = 0, l = Math.pow(2, 12); i < l; ++i) bytes = hash(bytes);\n  return bytes;\n};\nmodule.exports = {\n  create,\n  checksum,\n  toMasterKey\n};","map":null,"metadata":{},"sourceType":"script"}