{"ast":null,"code":"const Hash = require(\"./hash\");\nconst Bytes = require(\"./bytes\");\nconst Desubits = require(\"./desubits\");\n\n// Bytes -> Bytes\nconst bytesAddChecksum = bytes => {\n  const hash = Hash.keccak256(bytes);\n  const sum = Bytes.slice(0, 1, hash);\n  return Bytes.concat(bytes, sum);\n};\n\n// Bytes -> Bool\nconst bytesChecksum = bytes => {\n  const length = Bytes.length(bytes);\n  const prefix = Bytes.slice(0, length - 1, bytes);\n  return bytesAddChecksum(prefix) === bytes;\n};\n\n// () ~> Passphrase\nconst create = () => {\n  const bytes = bytesAddChecksum(Bytes.random(11));\n  const seed = Desubits.fromBytes(bytes);\n  const passphrase = seed.replace(/([a-z]{8})/g, \"$1 \");\n  return passphrase;\n};\n\n// Passphrase -> Bytes\nconst toBytes = passphrase => {\n  const seed = passphrase.replace(/ /g, \"\");\n  const bytes = Desubits.toBytes(passphrase);\n  return bytes;\n};\n\n// Passphrase -> Bool\nconst checksum = passphrase => bytesChecksum(toBytes(passphrase));\n\n// Passphrase -> Bytes\nconst toMasterKey = passphrase => {\n  let hash = Hash.keccak256;\n  let bytes = toBytes(passphrase);\n  for (let i = 0, l = Math.pow(2, 12); i < l; ++i) bytes = hash(bytes);\n  return bytes;\n};\nmodule.exports = {\n  create,\n  checksum,\n  toMasterKey\n};","map":{"version":3,"names":["Hash","require","Bytes","Desubits","bytesAddChecksum","bytes","hash","keccak256","sum","slice","concat","bytesChecksum","length","prefix","create","random","seed","fromBytes","passphrase","replace","toBytes","checksum","toMasterKey","i","l","Math","pow","module","exports"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/eth-lib/lib/passphrase.js"],"sourcesContent":["const Hash = require(\"./hash\");\nconst Bytes = require(\"./bytes\");\nconst Desubits = require(\"./desubits\");\n\n// Bytes -> Bytes\nconst bytesAddChecksum = bytes => {\n  const hash = Hash.keccak256(bytes);\n  const sum = Bytes.slice(0, 1, hash);\n  return Bytes.concat(bytes, sum);\n};\n\n// Bytes -> Bool\nconst bytesChecksum = bytes => {\n  const length = Bytes.length(bytes);\n  const prefix = Bytes.slice(0, length - 1, bytes);\n  return bytesAddChecksum(prefix) === bytes;\n};\n\n// () ~> Passphrase\nconst create = () => {\n  const bytes = bytesAddChecksum(Bytes.random(11));\n  const seed = Desubits.fromBytes(bytes);\n  const passphrase = seed.replace(/([a-z]{8})/g, \"$1 \");\n  return passphrase;\n};\n\n// Passphrase -> Bytes\nconst toBytes = passphrase => {\n  const seed = passphrase.replace(/ /g, \"\");\n  const bytes = Desubits.toBytes(passphrase);\n  return bytes;\n};\n\n// Passphrase -> Bool\nconst checksum = passphrase => bytesChecksum(toBytes(passphrase));\n\n// Passphrase -> Bytes\nconst toMasterKey = passphrase => {\n  let hash = Hash.keccak256;\n  let bytes = toBytes(passphrase);\n  for (let i = 0, l = Math.pow(2, 12); i < l; ++i) bytes = hash(bytes);\n  return bytes;\n};\n\nmodule.exports = {\n  create,\n  checksum,\n  toMasterKey\n};"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,MAAME,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;;AAEtC;AACA,MAAMG,gBAAgB,GAAGC,KAAK,IAAI;EAChC,MAAMC,IAAI,GAAGN,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC;EAClC,MAAMG,GAAG,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,EAAEH,IAAI,CAAC;EACnC,OAAOJ,KAAK,CAACQ,MAAM,CAACL,KAAK,EAAEG,GAAG,CAAC;AACjC,CAAC;;AAED;AACA,MAAMG,aAAa,GAAGN,KAAK,IAAI;EAC7B,MAAMO,MAAM,GAAGV,KAAK,CAACU,MAAM,CAACP,KAAK,CAAC;EAClC,MAAMQ,MAAM,GAAGX,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEG,MAAM,GAAG,CAAC,EAAEP,KAAK,CAAC;EAChD,OAAOD,gBAAgB,CAACS,MAAM,CAAC,KAAKR,KAAK;AAC3C,CAAC;;AAED;AACA,MAAMS,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMT,KAAK,GAAGD,gBAAgB,CAACF,KAAK,CAACa,MAAM,CAAC,EAAE,CAAC,CAAC;EAChD,MAAMC,IAAI,GAAGb,QAAQ,CAACc,SAAS,CAACZ,KAAK,CAAC;EACtC,MAAMa,UAAU,GAAGF,IAAI,CAACG,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC;EACrD,OAAOD,UAAU;AACnB,CAAC;;AAED;AACA,MAAME,OAAO,GAAGF,UAAU,IAAI;EAC5B,MAAMF,IAAI,GAAGE,UAAU,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACzC,MAAMd,KAAK,GAAGF,QAAQ,CAACiB,OAAO,CAACF,UAAU,CAAC;EAC1C,OAAOb,KAAK;AACd,CAAC;;AAED;AACA,MAAMgB,QAAQ,GAAGH,UAAU,IAAIP,aAAa,CAACS,OAAO,CAACF,UAAU,CAAC,CAAC;;AAEjE;AACA,MAAMI,WAAW,GAAGJ,UAAU,IAAI;EAChC,IAAIZ,IAAI,GAAGN,IAAI,CAACO,SAAS;EACzB,IAAIF,KAAK,GAAGe,OAAO,CAACF,UAAU,CAAC;EAC/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEH,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAElB,KAAK,GAAGC,IAAI,CAACD,KAAK,CAAC;EACpE,OAAOA,KAAK;AACd,CAAC;AAEDsB,MAAM,CAACC,OAAO,GAAG;EACfd,MAAM;EACNO,QAAQ;EACRC;AACF,CAAC"},"metadata":{},"sourceType":"script"}