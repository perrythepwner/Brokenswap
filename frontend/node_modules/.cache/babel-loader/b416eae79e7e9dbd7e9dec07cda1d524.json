{"ast":null,"code":"import { getAddress } from '@ethersproject/address';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { JSBI, Percent, Token } from '@ubeswap/sdk';\nimport IUniswapV2Router02ABI from '../constants/abis/IUniswapV2Router02.json';\nimport UbeswapMoolaRouterABI from '../constants/abis/UbeswapMoolaRouter.json';\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value) {\n  try {\n    return getAddress(value);\n  } catch (_unused) {\n    return false;\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address) {\n  let chars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  const parsed = isAddress(address);\n  if (!parsed) {\n    throw Error(\"Invalid 'address' parameter '\".concat(address, \"'.\"));\n  }\n  return \"\".concat(parsed.substring(0, chars + 2), \"...\").concat(parsed.substring(42 - chars));\n}\n\n// add 100%\nexport function calculateGasMargin(value) {\n  return value.mul(BigNumber.from(2));\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num) {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000));\n}\nexport function calculateSlippageAmount(value, slippage) {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(\"Unexpected slippage value: \".concat(slippage));\n  }\n  return [JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)), JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))];\n}\n\n// account is not optional\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\n// account is optional\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\n// account is optional\nexport function getContract(address, ABI, library, account) {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(\"Invalid 'address' parameter '\".concat(address, \"'.\"));\n  }\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n\n// account is optional\nexport function getRouterContract(_, library, account) {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account);\n}\nexport function getMoolaRouterContract(_, library, account) {\n  return getContract(UBESWAP_MOOLA_ROUTER_ADDRESS, UbeswapMoolaRouterABI, library, account);\n}\nexport function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens, currency) {\n  var _defaultTokens$curren;\n  return Boolean(currency instanceof Token && ((_defaultTokens$curren = defaultTokens[currency.chainId]) === null || _defaultTokens$curren === void 0 ? void 0 : _defaultTokens$curren[currency.address]));\n}\nexport function isBTest(address) {\n  const TARGET_HASH = process.env.REACT_APP_AB_HASH;\n  return keccak256(address.toLowerCase()) === TARGET_HASH;\n}","map":{"version":3,"names":["getAddress","BigNumber","AddressZero","Contract","keccak256","JSBI","Percent","Token","IUniswapV2Router02ABI","UbeswapMoolaRouterABI","isAddress","value","_unused","shortenAddress","address","chars","arguments","length","undefined","parsed","Error","concat","substring","calculateGasMargin","mul","from","basisPointsToPercent","num","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","ABI","getRouterContract","_","ROUTER_ADDRESS","getMoolaRouterContract","UBESWAP_MOOLA_ROUTER_ADDRESS","escapeRegExp","string","replace","isTokenOnList","defaultTokens","currency","_defaultTokens$curren","Boolean","chainId","isBTest","TARGET_HASH","process","env","REACT_APP_AB_HASH","toLowerCase"],"sources":["/app/src/utils/index.ts"],"sourcesContent":["import { getAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport { JsonRpcSigner } from '@ethersproject/providers'\nimport { JSBI, Percent, Token, TokenAmount } from '@ubeswap/sdk'\nimport { IUniswapV2Router02, UbeswapMoolaRouter } from 'generated/index'\nimport { JsonRpcProvider } from '@ethersproject/providers'\nimport IUniswapV2Router02ABI from '../constants/abis/IUniswapV2Router02.json'\nimport UbeswapMoolaRouterABI from '../constants/abis/UbeswapMoolaRouter.json'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 100%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(2))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: TokenAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: JsonRpcProvider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: JsonRpcProvider, account?: string): JsonRpcProvider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: JsonRpcProvider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: JsonRpcProvider, account?: string): IUniswapV2Router02 {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account) as IUniswapV2Router02\n}\n\nexport function getMoolaRouterContract(_: number, library: JsonRpcProvider, account?: string): UbeswapMoolaRouter {\n  return getContract(UBESWAP_MOOLA_ROUTER_ADDRESS, UbeswapMoolaRouterABI, library, account) as UbeswapMoolaRouter\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Token): boolean {\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n\nexport function isBTest(address: string): boolean {\n  const TARGET_HASH = process.env.REACT_APP_AB_HASH\n  return keccak256(address.toLowerCase()) === TARGET_HASH\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}