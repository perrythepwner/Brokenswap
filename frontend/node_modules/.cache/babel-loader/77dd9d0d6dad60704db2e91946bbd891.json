{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;\n/**\n * Package x25519 implements X25519 key agreement.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n  const r = new Float64Array(16);\n  if (init) {\n    for (let i = 0; i < init.length; i++) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n  let c = 1;\n  for (let i = 0; i < 16; i++) {\n    let v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n  const c = ~(b - 1);\n  for (let i = 0; i < 16; i++) {\n    const t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\nfunction pack25519(o, n) {\n  const m = gf();\n  const t = gf();\n  for (let i = 0; i < 16; i++) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (let j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (let i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n      m[i - 1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n    const b = m[15] >> 16 & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (let i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\nfunction unpack25519(o, n) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = a[i] + b[i];\n  }\n}\nfunction sub(o, a, b) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = a[i] - b[i];\n  }\n}\nfunction mul(o, a, b) {\n  let v,\n    c,\n    t0 = 0,\n    t1 = 0,\n    t2 = 0,\n    t3 = 0,\n    t4 = 0,\n    t5 = 0,\n    t6 = 0,\n    t7 = 0,\n    t8 = 0,\n    t9 = 0,\n    t10 = 0,\n    t11 = 0,\n    t12 = 0,\n    t13 = 0,\n    t14 = 0,\n    t15 = 0,\n    t16 = 0,\n    t17 = 0,\n    t18 = 0,\n    t19 = 0,\n    t20 = 0,\n    t21 = 0,\n    t22 = 0,\n    t23 = 0,\n    t24 = 0,\n    t25 = 0,\n    t26 = 0,\n    t27 = 0,\n    t28 = 0,\n    t29 = 0,\n    t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n  t0 += 38 * t16;\n  t1 += 38 * t17;\n  t2 += 38 * t18;\n  t3 += 38 * t19;\n  t4 += 38 * t20;\n  t5 += 38 * t21;\n  t6 += 38 * t22;\n  t7 += 38 * t23;\n  t8 += 38 * t24;\n  t9 += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n  // first car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n  // second car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n  o[0] = t0;\n  o[1] = t1;\n  o[2] = t2;\n  o[3] = t3;\n  o[4] = t4;\n  o[5] = t5;\n  o[6] = t6;\n  o[7] = t7;\n  o[8] = t8;\n  o[9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\nfunction square(o, a) {\n  mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n  const c = gf();\n  for (let i = 0; i < 16; i++) {\n    c[i] = inp[i];\n  }\n  for (let i = 253; i >= 0; i--) {\n    square(c, c);\n    if (i !== 2 && i !== 4) {\n      mul(c, c, inp);\n    }\n  }\n  for (let i = 0; i < 16; i++) {\n    o[i] = c[i];\n  }\n}\nfunction scalarMult(n, p) {\n  const z = new Uint8Array(32);\n  const x = new Float64Array(80);\n  const a = gf(),\n    b = gf(),\n    c = gf(),\n    d = gf(),\n    e = gf(),\n    f = gf();\n  for (let i = 0; i < 31; i++) {\n    z[i] = n[i];\n  }\n  z[31] = n[31] & 127 | 64;\n  z[0] &= 248;\n  unpack25519(x, p);\n  for (let i = 0; i < 16; i++) {\n    b[i] = x[i];\n  }\n  a[0] = d[0] = 1;\n  for (let i = 254; i >= 0; --i) {\n    const r = z[i >>> 3] >>> (i & 7) & 1;\n    sel25519(a, b, r);\n    sel25519(c, d, r);\n    add(e, a, c);\n    sub(a, a, c);\n    add(c, b, d);\n    sub(b, b, d);\n    square(d, e);\n    square(f, a);\n    mul(a, c, a);\n    mul(c, b, e);\n    add(e, a, c);\n    sub(a, a, c);\n    square(b, a);\n    sub(c, d, f);\n    mul(a, c, _121665);\n    add(a, a, d);\n    mul(c, c, a);\n    mul(a, d, f);\n    mul(d, b, x);\n    square(b, e);\n    sel25519(a, b, r);\n    sel25519(c, d, r);\n  }\n  for (let i = 0; i < 16; i++) {\n    x[i + 16] = a[i];\n    x[i + 32] = c[i];\n    x[i + 48] = b[i];\n    x[i + 64] = d[i];\n  }\n  const x32 = x.subarray(32);\n  const x16 = x.subarray(16);\n  inv25519(x32, x32);\n  mul(x16, x16, x32);\n  const q = new Uint8Array(32);\n  pack25519(q, x16);\n  return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n  return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n  if (seed.length !== exports.SECRET_KEY_LENGTH) {\n    throw new Error(\"x25519: seed must be \".concat(exports.SECRET_KEY_LENGTH, \" bytes\"));\n  }\n  const secretKey = new Uint8Array(seed);\n  const publicKey = scalarMultBase(secretKey);\n  return {\n    publicKey,\n    secretKey\n  };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n  const seed = (0, random_1.randomBytes)(32, prng);\n  const result = generateKeyPairFromSeed(seed);\n  (0, wipe_1.wipe)(seed);\n  return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey) {\n  let rejectZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n    throw new Error(\"X25519: incorrect secret key length\");\n  }\n  if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n    throw new Error(\"X25519: incorrect public key length\");\n  }\n  const result = scalarMult(mySecretKey, theirPublicKey);\n  if (rejectZero) {\n    let zeros = 0;\n    for (let i = 0; i < result.length; i++) {\n      zeros |= result[i];\n    }\n    if (zeros === 0) {\n      throw new Error(\"X25519: invalid shared key\");\n    }\n  }\n  return result;\n}\nexports.sharedKey = sharedKey;","map":{"version":3,"sources":["../x25519.ts"],"names":[],"mappings":"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AG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;EACT,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,EAAE;EACb,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EACd,GAAG,IAAI,CAAC,GAAG,GAAG;EAEd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,EAAE,IAAI,EAAE,GAAG,GAAG;EACd,GAAG,IAAI,EAAE,GAAG,GAAG;EACf,GAAG,IAAI,EAAE,GAAG,GAAG;EACf,GAAG,IAAI,EAAE,GAAG,GAAG;EACf,GAAG,IAAI,EAAE,GAAG,GAAG;EACf,GAAG,IAAI,EAAE,GAAG,GAAG;EACf;EAEA;EACA,CAAC,GAAG,CAAC;EACL,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EAE1B;EACA,CAAC,GAAG,CAAC;EACL,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACjE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;EACnE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK;EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE,G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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;\n/**\n * Package x25519 implements X25519 key agreement.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\nfunction scalarMult(n, p) {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n    a[0] = d[0] = 1;\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n    return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey, rejectZero = false) {\n    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n    const result = scalarMult(mySecretKey, theirPublicKey);\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n    return result;\n}\nexports.sharedKey = sharedKey;\n//# sourceMappingURL=x25519.js.map"]},"metadata":{},"sourceType":"script"}