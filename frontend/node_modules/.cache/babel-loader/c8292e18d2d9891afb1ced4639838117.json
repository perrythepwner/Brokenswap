{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCurve = exports.getHash = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst weierstrass_js_1 = require(\"./abstract/weierstrass.js\");\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n  return {\n    hash,\n    hmac: function hmac(key) {\n      for (var _len = arguments.length, msgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        msgs[_key - 1] = arguments[_key];\n      }\n      return (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs));\n    },\n    randomBytes: utils_1.randomBytes\n  };\n}\nexports.getHash = getHash;\nfunction createCurve(curveDef, defHash) {\n  const create = hash => (0, weierstrass_js_1.weierstrass)(_objectSpread(_objectSpread({}, curveDef), getHash(hash)));\n  return Object.freeze(_objectSpread(_objectSpread({}, create(defHash)), {}, {\n    create\n  }));\n}\nexports.createCurve = createCurve;","map":null,"metadata":{},"sourceType":"script"}