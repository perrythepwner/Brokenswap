{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressRegistry = exports.UnregisteredError = exports.REGISTRY_CONTRACT_ADDRESS = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar debug_1 = __importDefault(require(\"debug\"));\nvar base_1 = require(\"./base\");\nvar Registry_1 = require(\"./generated/Registry\");\nvar debug = (0, debug_1.default)('kit:registry');\n// Registry contract is always predeployed to this address\nexports.REGISTRY_CONTRACT_ADDRESS = '0x000000000000000000000000000000000000ce10';\nvar UnregisteredError = /** @class */function (_super) {\n  __extends(UnregisteredError, _super);\n  function UnregisteredError(contract) {\n    return _super.call(this, \"\".concat(contract, \" not (yet) registered\")) || this;\n  }\n  return UnregisteredError;\n}(Error);\nexports.UnregisteredError = UnregisteredError;\n/**\n * Celo Core Contract's Address Registry\n *\n * @param connection â€“ an instance of @celo/connect {@link Connection}\n */\nvar AddressRegistry = /** @class */function () {\n  function AddressRegistry(connection) {\n    this.connection = connection;\n    this.cache = new Map();\n    this.cache.set(base_1.CeloContract.Registry, exports.REGISTRY_CONTRACT_ADDRESS);\n    this.registry = (0, Registry_1.newRegistry)(connection.web3, exports.REGISTRY_CONTRACT_ADDRESS);\n  }\n  /**\n   * Get the address for a `CeloContract`\n   */\n  AddressRegistry.prototype.addressFor = function (contract) {\n    return __awaiter(this, void 0, void 0, function () {\n      var address, cachedAddress;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.cache.has(contract)) return [3 /*break*/, 2];\n            debug('Fetching address from Registry for %s', contract);\n            return [4 /*yield*/, this.registry.methods.getAddressForString((0, base_1.stripProxy)(contract)).call()];\n          case 1:\n            address = _a.sent();\n            debug('Fetched address %s', address);\n            if (!address || address === address_1.NULL_ADDRESS) {\n              throw new UnregisteredError(contract);\n            }\n            this.cache.set(contract, address);\n            _a.label = 2;\n          case 2:\n            cachedAddress = this.cache.get(contract);\n            return [2 /*return*/, cachedAddress];\n        }\n      });\n    });\n  };\n  /**\n   * Get the address mapping for known registered contracts\n   */\n  AddressRegistry.prototype.addressMapping = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all(base_1.RegisteredContracts.map(function (contract) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var e_1;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      _a.trys.push([0, 2,, 3]);\n                      return [4 /*yield*/, this.addressFor(contract)];\n                    case 1:\n                      _a.sent();\n                      return [3 /*break*/, 3];\n                    case 2:\n                      e_1 = _a.sent();\n                      debug(e_1);\n                      return [3 /*break*/, 3];\n                    case 3:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            _a.sent();\n            return [2 /*return*/, this.cache];\n        }\n      });\n    });\n  };\n  return AddressRegistry;\n}();\nexports.AddressRegistry = AddressRegistry;","map":null,"metadata":{},"sourceType":"script"}