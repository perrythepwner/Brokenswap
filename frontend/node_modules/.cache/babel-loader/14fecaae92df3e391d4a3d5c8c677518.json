{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _objectSpread = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar cryp = require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar {\n  TransactionFactory\n} = require('@ethereumjs/tx');\nvar Common = require('@ethereumjs/common').default;\nvar HardForks = require('@ethereumjs/common').Hardfork;\nvar ethereumjsUtil = require('ethereumjs-util');\nvar isNot = function isNot(value) {\n  return typeof value === 'undefined' || value === null;\n};\nvar isExist = function isExist(value) {\n  return typeof value !== 'undefined' && value !== null;\n};\nvar Accounts = function Accounts() {\n  var _this = this;\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n  // remove unecessary core functions\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  }), new Method({\n    name: 'getBlockByNumber',\n    call: 'eth_getBlockByNumber',\n    params: 2,\n    inputFormatter: [function (blockNumber) {\n      return blockNumber ? utils.toHex(blockNumber) : 'latest';\n    }, function () {\n      return false;\n    }]\n  })];\n  // attach methods to this._ethereumCall\n  this._ethereumCall = {};\n  _ethereumCall.forEach(method => {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n  this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this;\n  // add sign functions\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n  return account;\n};\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n  // 64 hex characters + hex-prefix\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n    error = false,\n    transactionOptions = {},\n    hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n  callback = callback || function () {};\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n  if (isExist(tx.common) && isNot(tx.common.customChain)) {\n    error = new Error('If tx.common is provided it must have tx.common.customChain');\n    callback(error);\n    return Promise.reject(error);\n  }\n  if (isExist(tx.common) && isNot(tx.common.customChain.chainId)) {\n    error = new Error('If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n    callback(error);\n    return Promise.reject(error);\n  }\n  if (isExist(tx.common) && isExist(tx.common.customChain.chainId) && isExist(tx.chainId) && tx.chainId !== tx.common.customChain.chainId) {\n    error = new Error('Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n    callback(error);\n    return Promise.reject(error);\n  }\n  function signed(tx) {\n    const error = _validateTransactionForSigning(tx);\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.gasLimit = transaction.gasLimit || transaction.gas;\n      if (transaction.type === '0x1' && transaction.accessList === undefined) transaction.accessList = [];\n      // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, transaction.hardfork || HardForks.London);\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || HardForks.London);\n          delete transaction.common;\n        }\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n      var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n      var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationErrors = signedTx.validate(true);\n      if (validationErrors.length > 0) {\n        let errorString = 'Signer Error: ';\n        for (const validationError of validationErrors) {\n          errorString += \"\".concat(errorString, \" \").concat(validationError, \".\");\n        }\n        throw new Error(errorString);\n      }\n      var rlpEncoded = signedTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n        v: '0x' + signedTx.v.toString('hex'),\n        r: '0x' + signedTx.r.toString('hex'),\n        s: '0x' + signedTx.s.toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  }\n  tx.type = _handleTxType(tx);\n  // Resolve immediately if nonce, chainId, price and signing options are provided\n  if (tx.nonce !== undefined && tx.chainId !== undefined && (tx.gasPrice !== undefined || tx.maxFeePerGas !== undefined && tx.maxPriorityFeePerGas !== undefined) && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  }\n  // Otherwise, get the missing info from the Ethereum Node\n  return Promise.all([isNot(tx.common) || isNot(tx.common.customChain.chainId) ?\n  //tx.common.customChain.chainId is not optional inside tx.common if tx.common is provided\n  isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId : undefined, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1, _handleTxPricing(_this, tx)]).then(function (args) {\n    const [txchainId, txnonce, txnetworkId, txgasInfo] = args;\n    if (isNot(txchainId) && isNot(tx.common) && isNot(tx.common.customChain.chainId) || isNot(txnonce) || isNot(txnetworkId) || isNot(txgasInfo)) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n    return signed(_objectSpread(_objectSpread(_objectSpread({}, tx), isNot(tx.common) || isNot(tx.common.customChain.chainId) ? {\n      chainId: txchainId\n    } : {}), {}, {\n      nonce: txnonce,\n      networkId: txnetworkId\n    }, txgasInfo));\n  });\n};\nfunction _validateTransactionForSigning(tx) {\n  if (tx.common && tx.chain && tx.hardfork) {\n    return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n  }\n  if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n    return new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n  }\n  if (!tx.gas && !tx.gasLimit && !tx.maxPriorityFeePerGas && !tx.maxFeePerGas) {\n    return new Error('\"gas\" is missing');\n  }\n  if (tx.gas && tx.gasPrice) {\n    if (tx.gas < 0 || tx.gasPrice < 0) {\n      return new Error('Gas or gasPrice is lower than 0');\n    }\n  } else {\n    if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n      return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n    }\n  }\n  if (tx.nonce < 0 || tx.chainId < 0) {\n    return new Error('Nonce or chainId is lower than 0');\n  }\n  return;\n}\nfunction _handleTxType(tx) {\n  // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n  const hasEip1559 = tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined;\n  let txType;\n  if (tx.type !== undefined) {\n    txType = utils.toHex(tx.type);\n  } else if (tx.type === undefined && hasEip1559) {\n    txType = '0x2';\n  }\n  if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559)) throw Error(\"eip-1559 transactions don't support gasPrice\");\n  if ((txType === '0x1' || txType === '0x0') && hasEip1559) throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n  if (hasEip1559 || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London) {\n    txType = '0x2';\n  } else if (tx.accessList || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin) {\n    txType = '0x1';\n  }\n  return txType;\n}\nfunction _handleTxPricing(_this, tx) {\n  return new Promise((resolve, reject) => {\n    try {\n      if ((tx.type === undefined || tx.type < '0x2') && tx.gasPrice !== undefined) {\n        // Legacy transaction, return provided gasPrice\n        resolve({\n          gasPrice: tx.gasPrice\n        });\n      } else if (tx.type === '0x2' && tx.maxFeePerGas && tx.maxPriorityFeePerGas) {\n        // EIP-1559 transaction, return provided maxFeePerGas and maxPriorityFeePerGas\n        resolve({\n          maxFeePerGas: tx.maxFeePerGas,\n          maxPriorityFeePerGas: tx.maxPriorityFeePerGas\n        });\n      } else {\n        Promise.all([_this._ethereumCall.getBlockByNumber(), _this._ethereumCall.getGasPrice()]).then(responses => {\n          const [block, gasPrice] = responses;\n          if (tx.type === '0x2' && block && block.baseFeePerGas) {\n            // The network supports EIP-1559\n            // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n            let maxPriorityFeePerGas, maxFeePerGas;\n            if (tx.gasPrice) {\n              // Using legacy gasPrice property on an eip-1559 network,\n              // so use gasPrice as both fee properties\n              maxPriorityFeePerGas = tx.gasPrice;\n              maxFeePerGas = tx.gasPrice;\n              delete tx.gasPrice;\n            } else {\n              maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n              maxFeePerGas = tx.maxFeePerGas || utils.toHex(utils.toBN(block.baseFeePerGas).mul(utils.toBN(2)).add(utils.toBN(maxPriorityFeePerGas)));\n            }\n            resolve({\n              maxFeePerGas,\n              maxPriorityFeePerGas\n            });\n          } else {\n            if (tx.maxPriorityFeePerGas || tx.maxFeePerGas) throw Error(\"Network doesn't support eip-1559\");\n            resolve({\n              gasPrice\n            });\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  let txOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Rely on EthereumJs/tx to determine the type of transaction\n  const data = Buffer.from(rawTx.slice(2), \"hex\");\n  const tx = TransactionFactory.fromSerializedData(data);\n  //update checksum\n  return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n  // 64 hex characters + hex-prefix\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n  if (!!message && typeof message === 'object') {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n\n  return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!(typeof password === 'string')) {\n    throw new Error('No password given.');\n  }\n  var json = !!v3Keystore && typeof v3Keystore === 'object' ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n    // FIXME: support progress reporting callback\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n  var ciphertext = Buffer.from([...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')), ...cipher.final()]);\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n  if (this.hasOwnProperty(pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n  return this;\n};\nWallet.prototype.add = function (account) {\n  if (typeof account === 'string') {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address];\n    // address lowercase\n    if (this[account.address.toLowerCase()]) {\n      this[account.address.toLowerCase()].privateKey = null;\n      delete this[account.address.toLowerCase()];\n    }\n    // index\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\nWallet.prototype.clear = function () {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n  return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n  var storage;\n  try {\n    storage = self[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' ||\n    // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nmodule.exports = Accounts;","map":{"version":3,"names":["_objectSpread","require","default","core","Method","Account","cryp","scrypt","uuid","utils","helpers","TransactionFactory","Common","HardForks","Hardfork","ethereumjsUtil","isNot","value","isExist","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","blockNumber","toHex","forEach","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","customChain","chainId","signed","_validateTransactionForSigning","transaction","formatters","inputCallFormatter","Object","assign","gasLimit","gas","type","accessList","undefined","forCustomChain","networkId","London","baseChain","substring","ethTx","fromTxData","signedTx","Buffer","from","validationErrors","validate","errorString","validationError","concat","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","getMessageToSign","v","r","s","e","_handleTxType","nonce","gasPrice","maxFeePerGas","maxPriorityFeePerGas","resolve","all","getChainId","getTransactionCount","getNetworkId","_handleTxPricing","then","args","txchainId","txnonce","txnetworkId","txgasInfo","JSON","stringify","hasEip1559","txType","toLowerCase","Berlin","getBlockByNumber","getGasPrice","responses","block","baseFeePerGas","toBN","mul","add","catch","recoverTransaction","rawTx","txOptions","slice","fromSerializedData","toChecksumAddress","getSenderAddress","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","bufferToHex","hash","signature","vrs","decodeSignature","message","recover","preFixed","apply","encodeSignature","decrypt","v3Keystore","nonStrict","json","parse","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","hasOwnProperty","_currentIndexes","keys","indexes","map","key","filter","numberOfAccounts","i","index","remove","addressOrIndex","clear","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","storage","self","x","removeItem","code","module","exports"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/web3-eth-accounts/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar cryp = require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar { TransactionFactory } = require('@ethereumjs/tx');\nvar Common = require('@ethereumjs/common').default;\nvar HardForks = require('@ethereumjs/common').Hardfork;\nvar ethereumjsUtil = require('ethereumjs-util');\nvar isNot = function (value) {\n    return (typeof value === 'undefined') || value === null;\n};\nvar isExist = function (value) {\n    return (typeof value !== 'undefined') && value !== null;\n};\nvar Accounts = function Accounts() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function (address) {\n                    if (utils.isAddress(address)) {\n                        return address;\n                    }\n                    else {\n                        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                    }\n                }, function () {\n                    return 'latest';\n                }]\n        }),\n        new Method({\n            name: 'getBlockByNumber',\n            call: 'eth_getBlockByNumber',\n            params: 2,\n            inputFormatter: [function (blockNumber) {\n                    return blockNumber ? utils.toHex(blockNumber) : 'latest';\n                }, function () {\n                    return false;\n                }]\n        }),\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _ethereumCall.forEach((method) => {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n    this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n    var _this = this;\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n    return account;\n};\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this, error = false, transactionOptions = {}, hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n    callback = callback || function () { };\n    if (!tx) {\n        error = new Error('No transaction object given!');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isNot(tx.common.customChain)) {\n        error = new Error('If tx.common is provided it must have tx.common.customChain');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isNot(tx.common.customChain.chainId)) {\n        error = new Error('If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n        callback(error);\n        return Promise.reject(error);\n    }\n    if (isExist(tx.common) && isExist(tx.common.customChain.chainId) && isExist(tx.chainId) && tx.chainId !== tx.common.customChain.chainId) {\n        error = new Error('Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n        callback(error);\n        return Promise.reject(error);\n    }\n    function signed(tx) {\n        const error = _validateTransactionForSigning(tx);\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.gasLimit = transaction.gasLimit || transaction.gas;\n            if (transaction.type === '0x1' && transaction.accessList === undefined)\n                transaction.accessList = [];\n            // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain('mainnet', {\n                    name: 'custom-network',\n                    networkId: transaction.networkId,\n                    chainId: transaction.chainId\n                }, transaction.hardfork || HardForks.London);\n                delete transaction.networkId;\n            }\n            else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n                        name: transaction.common.customChain.name || 'custom-network',\n                        networkId: transaction.common.customChain.networkId,\n                        chainId: transaction.common.customChain.chainId\n                    }, transaction.common.hardfork || HardForks.London);\n                    delete transaction.common;\n                }\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n            var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n            var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n            var validationErrors = signedTx.validate(true);\n            if (validationErrors.length > 0) {\n                let errorString = 'Signer Error: ';\n                for (const validationError of validationErrors) {\n                    errorString += `${errorString} ${validationError}.`;\n                }\n                throw new Error(errorString);\n            }\n            var rlpEncoded = signedTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n            var result = {\n                messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n                v: '0x' + signedTx.v.toString('hex'),\n                r: '0x' + signedTx.r.toString('hex'),\n                s: '0x' + signedTx.s.toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n            callback(null, result);\n            return result;\n        }\n        catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n    tx.type = _handleTxType(tx);\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined &&\n        tx.chainId !== undefined &&\n        (tx.gasPrice !== undefined ||\n            (tx.maxFeePerGas !== undefined &&\n                tx.maxPriorityFeePerGas !== undefined)) &&\n        hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        ((isNot(tx.common) || isNot(tx.common.customChain.chainId)) ? //tx.common.customChain.chainId is not optional inside tx.common if tx.common is provided\n            (isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId)\n            : undefined),\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1,\n        _handleTxPricing(_this, tx)\n    ]).then(function (args) {\n        const [txchainId, txnonce, txnetworkId, txgasInfo] = args;\n        if ((isNot(txchainId) && isNot(tx.common) && isNot(tx.common.customChain.chainId)) || isNot(txnonce) || isNot(txnetworkId) || isNot(txgasInfo)) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed({\n            ...tx,\n            ...((isNot(tx.common) || isNot(tx.common.customChain.chainId)) ? { chainId: txchainId } : {}),\n            nonce: txnonce,\n            networkId: txnetworkId,\n            ...txgasInfo // Will either be gasPrice or maxFeePerGas and maxPriorityFeePerGas\n        });\n    });\n};\nfunction _validateTransactionForSigning(tx) {\n    if (tx.common && (tx.chain && tx.hardfork)) {\n        return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n    }\n    if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n        return new Error('When specifying chain and hardfork, both values must be defined. ' +\n            'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if ((!tx.gas && !tx.gasLimit) &&\n        (!tx.maxPriorityFeePerGas && !tx.maxFeePerGas)) {\n        return new Error('\"gas\" is missing');\n    }\n    if (tx.gas && tx.gasPrice) {\n        if (tx.gas < 0 || tx.gasPrice < 0) {\n            return new Error('Gas or gasPrice is lower than 0');\n        }\n    }\n    else {\n        if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n            return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n        }\n    }\n    if (tx.nonce < 0 || tx.chainId < 0) {\n        return new Error('Nonce or chainId is lower than 0');\n    }\n    return;\n}\nfunction _handleTxType(tx) {\n    // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n    const hasEip1559 = (tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined);\n    let txType;\n    if (tx.type !== undefined) {\n        txType = utils.toHex(tx.type);\n    }\n    else if (tx.type === undefined && hasEip1559) {\n        txType = '0x2';\n    }\n    if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559))\n        throw Error(\"eip-1559 transactions don't support gasPrice\");\n    if ((txType === '0x1' || txType === '0x0') && hasEip1559)\n        throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n    if (hasEip1559 ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London))) {\n        txType = '0x2';\n    }\n    else if (tx.accessList ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin))) {\n        txType = '0x1';\n    }\n    return txType;\n}\nfunction _handleTxPricing(_this, tx) {\n    return new Promise((resolve, reject) => {\n        try {\n            if ((tx.type === undefined || tx.type < '0x2')\n                && tx.gasPrice !== undefined) {\n                // Legacy transaction, return provided gasPrice\n                resolve({ gasPrice: tx.gasPrice });\n            }\n            else if (tx.type === '0x2' && tx.maxFeePerGas && tx.maxPriorityFeePerGas) {\n                // EIP-1559 transaction, return provided maxFeePerGas and maxPriorityFeePerGas\n                resolve({ maxFeePerGas: tx.maxFeePerGas, maxPriorityFeePerGas: tx.maxPriorityFeePerGas });\n            }\n            else {\n                Promise.all([\n                    _this._ethereumCall.getBlockByNumber(),\n                    _this._ethereumCall.getGasPrice()\n                ]).then(responses => {\n                    const [block, gasPrice] = responses;\n                    if ((tx.type === '0x2') &&\n                        block && block.baseFeePerGas) {\n                        // The network supports EIP-1559\n                        // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n                        let maxPriorityFeePerGas, maxFeePerGas;\n                        if (tx.gasPrice) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            maxPriorityFeePerGas = tx.gasPrice;\n                            maxFeePerGas = tx.gasPrice;\n                            delete tx.gasPrice;\n                        }\n                        else {\n                            maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n                            maxFeePerGas = tx.maxFeePerGas ||\n                                utils.toHex(utils.toBN(block.baseFeePerGas)\n                                    .mul(utils.toBN(2))\n                                    .add(utils.toBN(maxPriorityFeePerGas)));\n                        }\n                        resolve({ maxFeePerGas, maxPriorityFeePerGas });\n                    }\n                    else {\n                        if (tx.maxPriorityFeePerGas || tx.maxFeePerGas)\n                            throw Error(\"Network doesn't support eip-1559\");\n                        resolve({ gasPrice });\n                    }\n                }).catch((error) => {\n                    reject(error);\n                });\n            }\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx, txOptions = {}) {\n    // Rely on EthereumJs/tx to determine the type of transaction\n    const data = Buffer.from(rawTx.slice(2), \"hex\");\n    const tx = TransactionFactory.fromSerializedData(data);\n    //update checksum\n    return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex);\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n    if (!!message && typeof message === 'object') {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n    if (!(typeof password === 'string')) {\n        throw new Error('No password given.');\n    }\n    var json = (!!v3Keystore && typeof v3Keystore === 'object') ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n    return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else {\n        throw new Error('Unsupported kdf');\n    }\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()\n    ]);\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    return {\n        version: 3,\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n    pointer = pointer || 0;\n    if (this.hasOwnProperty(pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    }\n    else {\n        return pointer;\n    }\n};\nWallet.prototype._currentIndexes = function () {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function (key) {\n        return parseInt(key);\n    })\n        .filter(function (n) {\n        return (n < 9e20);\n    });\n    return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\nWallet.prototype.add = function (account) {\n    if (typeof account === 'string') {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n        this.length++;\n        return account;\n    }\n    else {\n        return this[account.address];\n    }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n    var account = this[addressOrIndex];\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        if (this[account.address.toLowerCase()]) {\n            this[account.address.toLowerCase()].privateKey = null;\n            delete this[account.address.toLowerCase()];\n        }\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n        this.length--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nWallet.prototype.clear = function () {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    indexes.forEach(function (index) {\n        _this.remove(index);\n    });\n    return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    var accounts = indexes.map(function (index) {\n        return _this[index].encrypt(password, options);\n    });\n    return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n    var _this = this;\n    encryptedWallet.forEach(function (keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n        if (account) {\n            _this.add(account);\n        }\n        else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n    return this;\n};\nWallet.prototype.save = function (password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n    return true;\n};\nWallet.prototype.load = function (password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        }\n        catch (e) {\n        }\n    }\n    return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = self[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e && (\n        // everything except Firefox\n        e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\nmodule.exports = Accounts;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAAC,IAAAA,aAAA,GAAAC,OAAA,gJAAAC,OAAA;AACb,IAAIC,IAAI,GAAGF,OAAO,CAAC,WAAW,CAAC;AAC/B,IAAIG,MAAM,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAII,OAAO,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AAC5C,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIM,MAAM,GAAGN,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIO,IAAI,GAAGP,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIQ,KAAK,GAAGR,OAAO,CAAC,YAAY,CAAC;AACjC,IAAIS,OAAO,GAAGT,OAAO,CAAC,mBAAmB,CAAC;AAC1C,IAAI;EAAEU;AAAmB,CAAC,GAAGV,OAAO,CAAC,gBAAgB,CAAC;AACtD,IAAIW,MAAM,GAAGX,OAAO,CAAC,oBAAoB,CAAC,CAACC,OAAO;AAClD,IAAIW,SAAS,GAAGZ,OAAO,CAAC,oBAAoB,CAAC,CAACa,QAAQ;AACtD,IAAIC,cAAc,GAAGd,OAAO,CAAC,iBAAiB,CAAC;AAC/C,IAAIe,KAAK,GAAG,SAARA,KAAKA,CAAaC,KAAK,EAAE;EACzB,OAAQ,OAAOA,KAAK,KAAK,WAAW,IAAKA,KAAK,KAAK,IAAI;AAC3D,CAAC;AACD,IAAIC,OAAO,GAAG,SAAVA,OAAOA,CAAaD,KAAK,EAAE;EAC3B,OAAQ,OAAOA,KAAK,KAAK,WAAW,IAAKA,KAAK,KAAK,IAAI;AAC3D,CAAC;AACD,IAAIE,QAAQ,GAAG,SAASA,QAAQA,CAAA,EAAG;EAC/B,IAAIC,KAAK,GAAG,IAAI;EAChB;EACAjB,IAAI,CAACkB,WAAW,CAAC,IAAI,EAAEC,SAAS,CAAC;EACjC;EACA,OAAO,IAAI,CAACC,YAAY;EACxB,OAAO,IAAI,CAACC,MAAM;EAClB,IAAIC,aAAa,GAAG,CAChB,IAAIrB,MAAM,CAAC;IACPsB,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAEC;EACrB,CAAC,CAAC,EACF,IAAI1B,MAAM,CAAC;IACPsB,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAEpB,KAAK,CAACsB;EAC3B,CAAC,CAAC,EACF,IAAI3B,MAAM,CAAC;IACPsB,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,cAAc;IACpBC,MAAM,EAAE;EACZ,CAAC,CAAC,EACF,IAAIxB,MAAM,CAAC;IACPsB,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE,yBAAyB;IAC/BC,MAAM,EAAE,CAAC;IACTI,cAAc,EAAE,CAAC,UAAUC,OAAO,EAAE;MAC5B,IAAIxB,KAAK,CAACyB,SAAS,CAACD,OAAO,CAAC,EAAE;QAC1B,OAAOA,OAAO;MAClB,CAAC,MACI;QACD,MAAM,IAAIE,KAAK,CAAC,UAAU,GAAGF,OAAO,GAAG,wDAAwD,CAAC;MACpG;IACJ,CAAC,EAAE,YAAY;MACX,OAAO,QAAQ;IACnB,CAAC;EACT,CAAC,CAAC,EACF,IAAI7B,MAAM,CAAC;IACPsB,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE,sBAAsB;IAC5BC,MAAM,EAAE,CAAC;IACTI,cAAc,EAAE,CAAC,UAAUI,WAAW,EAAE;MAChC,OAAOA,WAAW,GAAG3B,KAAK,CAAC4B,KAAK,CAACD,WAAW,CAAC,GAAG,QAAQ;IAC5D,CAAC,EAAE,YAAY;MACX,OAAO,KAAK;IAChB,CAAC;EACT,CAAC,CAAC,CACL;EACD;EACA,IAAI,CAACX,aAAa,GAAG,CAAC,CAAC;EACvBA,aAAa,CAACa,OAAO,CAAEC,MAAM,IAAK;IAC9BA,MAAM,CAACC,cAAc,CAACpB,KAAK,CAACK,aAAa,CAAC;IAC1Cc,MAAM,CAACE,iBAAiB,CAACrB,KAAK,CAACsB,eAAe,CAAC;EACnD,CAAC,CAAC;EACF,IAAI,CAACC,MAAM,GAAG,IAAIC,MAAM,CAAC,IAAI,CAAC;AAClC,CAAC;AACDzB,QAAQ,CAAC0B,SAAS,CAACC,oBAAoB,GAAG,UAAUC,OAAO,EAAE;EACzD,IAAI3B,KAAK,GAAG,IAAI;EAChB;EACA2B,OAAO,CAACC,eAAe,GAAG,SAASA,eAAeA,CAACC,EAAE,EAAEC,QAAQ,EAAE;IAC7D,OAAO9B,KAAK,CAAC4B,eAAe,CAACC,EAAE,EAAEF,OAAO,CAACI,UAAU,EAAED,QAAQ,CAAC;EAClE,CAAC;EACDH,OAAO,CAACK,IAAI,GAAG,SAASA,IAAIA,CAACC,IAAI,EAAE;IAC/B,OAAOjC,KAAK,CAACgC,IAAI,CAACC,IAAI,EAAEN,OAAO,CAACI,UAAU,CAAC;EAC/C,CAAC;EACDJ,OAAO,CAACO,OAAO,GAAG,SAASA,OAAOA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAClD,OAAOpC,KAAK,CAACkC,OAAO,CAACP,OAAO,CAACI,UAAU,EAAEI,QAAQ,EAAEC,OAAO,CAAC;EAC/D,CAAC;EACD,OAAOT,OAAO;AAClB,CAAC;AACD5B,QAAQ,CAAC0B,SAAS,CAACY,MAAM,GAAG,SAASA,MAAMA,CAACC,OAAO,EAAE;EACjD,OAAO,IAAI,CAACZ,oBAAoB,CAACzC,OAAO,CAACoD,MAAM,CAACC,OAAO,IAAIjD,KAAK,CAACkD,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;AACpF,CAAC;AACDxC,QAAQ,CAAC0B,SAAS,CAACe,mBAAmB,GAAG,SAASA,mBAAmBA,CAACT,UAAU,EAAEU,YAAY,EAAE;EAC5F,IAAI,CAACV,UAAU,CAACW,UAAU,CAAC,IAAI,CAAC,EAAE;IAC9BX,UAAU,GAAG,IAAI,GAAGA,UAAU;EAClC;EACA;EACA,IAAI,CAACU,YAAY,IAAIV,UAAU,CAACY,MAAM,KAAK,EAAE,EAAE;IAC3C,MAAM,IAAI5B,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,OAAO,IAAI,CAACW,oBAAoB,CAACzC,OAAO,CAAC2D,WAAW,CAACb,UAAU,CAAC,CAAC;AACrE,CAAC;AACDhC,QAAQ,CAAC0B,SAAS,CAACG,eAAe,GAAG,SAASA,eAAeA,CAACC,EAAE,EAAEE,UAAU,EAAED,QAAQ,EAAE;EACpF,IAAI9B,KAAK,GAAG,IAAI;IAAE6C,KAAK,GAAG,KAAK;IAAEC,kBAAkB,GAAG,CAAC,CAAC;IAAEC,mBAAmB,GAAG,CAAC,EAAElB,EAAE,KAAMA,EAAE,CAACmB,KAAK,IAAInB,EAAE,CAACoB,QAAQ,IAAKpB,EAAE,CAACqB,MAAM,CAAC,CAAC;EAClIpB,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAAC;EACtC,IAAI,CAACD,EAAE,EAAE;IACLgB,KAAK,GAAG,IAAI9B,KAAK,CAAC,8BAA8B,CAAC;IACjDe,QAAQ,CAACe,KAAK,CAAC;IACf,OAAOM,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;EAChC;EACA,IAAI/C,OAAO,CAAC+B,EAAE,CAACqB,MAAM,CAAC,IAAItD,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAACG,WAAW,CAAC,EAAE;IACpDR,KAAK,GAAG,IAAI9B,KAAK,CAAC,6DAA6D,CAAC;IAChFe,QAAQ,CAACe,KAAK,CAAC;IACf,OAAOM,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;EAChC;EACA,IAAI/C,OAAO,CAAC+B,EAAE,CAACqB,MAAM,CAAC,IAAItD,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,CAAC,EAAE;IAC5DT,KAAK,GAAG,IAAI9B,KAAK,CAAC,+FAA+F,CAAC;IAClHe,QAAQ,CAACe,KAAK,CAAC;IACf,OAAOM,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;EAChC;EACA,IAAI/C,OAAO,CAAC+B,EAAE,CAACqB,MAAM,CAAC,IAAIpD,OAAO,CAAC+B,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,CAAC,IAAIxD,OAAO,CAAC+B,EAAE,CAACyB,OAAO,CAAC,IAAIzB,EAAE,CAACyB,OAAO,KAAKzB,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,EAAE;IACrIT,KAAK,GAAG,IAAI9B,KAAK,CAAC,mEAAmE,CAAC;IACtFe,QAAQ,CAACe,KAAK,CAAC;IACf,OAAOM,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;EAChC;EACA,SAASU,MAAMA,CAAC1B,EAAE,EAAE;IAChB,MAAMgB,KAAK,GAAGW,8BAA8B,CAAC3B,EAAE,CAAC;IAChD,IAAIgB,KAAK,EAAE;MACPf,QAAQ,CAACe,KAAK,CAAC;MACf,OAAOM,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;IAChC;IACA,IAAI;MACA,IAAIY,WAAW,GAAGnE,OAAO,CAACoE,UAAU,CAACC,kBAAkB,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhC,EAAE,CAAC,CAAC;MAC9E4B,WAAW,CAACxB,IAAI,GAAGwB,WAAW,CAACxB,IAAI,IAAI,IAAI;MAC3CwB,WAAW,CAAC5D,KAAK,GAAG4D,WAAW,CAAC5D,KAAK,IAAI,IAAI;MAC7C4D,WAAW,CAACK,QAAQ,GAAGL,WAAW,CAACK,QAAQ,IAAIL,WAAW,CAACM,GAAG;MAC9D,IAAIN,WAAW,CAACO,IAAI,KAAK,KAAK,IAAIP,WAAW,CAACQ,UAAU,KAAKC,SAAS,EAClET,WAAW,CAACQ,UAAU,GAAG,EAAE;MAC/B;MACA,IAAI,CAAClB,mBAAmB,EAAE;QACtBD,kBAAkB,CAACI,MAAM,GAAG1D,MAAM,CAAC2E,cAAc,CAAC,SAAS,EAAE;UACzD7D,IAAI,EAAE,gBAAgB;UACtB8D,SAAS,EAAEX,WAAW,CAACW,SAAS;UAChCd,OAAO,EAAEG,WAAW,CAACH;QACzB,CAAC,EAAEG,WAAW,CAACR,QAAQ,IAAIxD,SAAS,CAAC4E,MAAM,CAAC;QAC5C,OAAOZ,WAAW,CAACW,SAAS;MAChC,CAAC,MACI;QACD,IAAIX,WAAW,CAACP,MAAM,EAAE;UACpBJ,kBAAkB,CAACI,MAAM,GAAG1D,MAAM,CAAC2E,cAAc,CAACV,WAAW,CAACP,MAAM,CAACoB,SAAS,IAAI,SAAS,EAAE;YACzFhE,IAAI,EAAEmD,WAAW,CAACP,MAAM,CAACG,WAAW,CAAC/C,IAAI,IAAI,gBAAgB;YAC7D8D,SAAS,EAAEX,WAAW,CAACP,MAAM,CAACG,WAAW,CAACe,SAAS;YACnDd,OAAO,EAAEG,WAAW,CAACP,MAAM,CAACG,WAAW,CAACC;UAC5C,CAAC,EAAEG,WAAW,CAACP,MAAM,CAACD,QAAQ,IAAIxD,SAAS,CAAC4E,MAAM,CAAC;UACnD,OAAOZ,WAAW,CAACP,MAAM;QAC7B;QACA,IAAIO,WAAW,CAACT,KAAK,EAAE;UACnBF,kBAAkB,CAACE,KAAK,GAAGS,WAAW,CAACT,KAAK;UAC5C,OAAOS,WAAW,CAACT,KAAK;QAC5B;QACA,IAAIS,WAAW,CAACR,QAAQ,EAAE;UACtBH,kBAAkB,CAACG,QAAQ,GAAGQ,WAAW,CAACR,QAAQ;UAClD,OAAOQ,WAAW,CAACR,QAAQ;QAC/B;MACJ;MACA,IAAIlB,UAAU,CAACW,UAAU,CAAC,IAAI,CAAC,EAAE;QAC7BX,UAAU,GAAGA,UAAU,CAACwC,SAAS,CAAC,CAAC,CAAC;MACxC;MACA,IAAIC,KAAK,GAAGjF,kBAAkB,CAACkF,UAAU,CAAChB,WAAW,EAAEX,kBAAkB,CAAC;MAC1E,IAAI4B,QAAQ,GAAGF,KAAK,CAACxC,IAAI,CAAC2C,MAAM,CAACC,IAAI,CAAC7C,UAAU,EAAE,KAAK,CAAC,CAAC;MACzD,IAAI8C,gBAAgB,GAAGH,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAAC;MAC9C,IAAID,gBAAgB,CAAClC,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAIoC,WAAW,GAAG,gBAAgB;QAClC,KAAK,MAAMC,eAAe,IAAIH,gBAAgB,EAAE;UAC5CE,WAAW,OAAAE,MAAA,CAAOF,WAAW,OAAAE,MAAA,CAAID,eAAe,MAAG;QACvD;QACA,MAAM,IAAIjE,KAAK,CAACgE,WAAW,CAAC;MAChC;MACA,IAAIG,UAAU,GAAGR,QAAQ,CAACS,SAAS,CAAC,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC;MACrD,IAAIC,cAAc,GAAG,IAAI,GAAGH,UAAU;MACtC,IAAII,eAAe,GAAGjG,KAAK,CAACkG,SAAS,CAACF,cAAc,CAAC;MACrD,IAAIG,MAAM,GAAG;QACTC,WAAW,EAAE,IAAI,GAAGd,MAAM,CAACC,IAAI,CAACF,QAAQ,CAACgB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAACN,QAAQ,CAAC,KAAK,CAAC;QAChFO,CAAC,EAAE,IAAI,GAAGjB,QAAQ,CAACiB,CAAC,CAACP,QAAQ,CAAC,KAAK,CAAC;QACpCQ,CAAC,EAAE,IAAI,GAAGlB,QAAQ,CAACkB,CAAC,CAACR,QAAQ,CAAC,KAAK,CAAC;QACpCS,CAAC,EAAE,IAAI,GAAGnB,QAAQ,CAACmB,CAAC,CAACT,QAAQ,CAAC,KAAK,CAAC;QACpCC,cAAc,EAAEA,cAAc;QAC9BC,eAAe,EAAEA;MACrB,CAAC;MACDxD,QAAQ,CAAC,IAAI,EAAE0D,MAAM,CAAC;MACtB,OAAOA,MAAM;IACjB,CAAC,CACD,OAAOM,CAAC,EAAE;MACNhE,QAAQ,CAACgE,CAAC,CAAC;MACX,OAAO3C,OAAO,CAACC,MAAM,CAAC0C,CAAC,CAAC;IAC5B;EACJ;EACAjE,EAAE,CAACmC,IAAI,GAAG+B,aAAa,CAAClE,EAAE,CAAC;EAC3B;EACA,IAAIA,EAAE,CAACmE,KAAK,KAAK9B,SAAS,IACtBrC,EAAE,CAACyB,OAAO,KAAKY,SAAS,KACvBrC,EAAE,CAACoE,QAAQ,KAAK/B,SAAS,IACrBrC,EAAE,CAACqE,YAAY,KAAKhC,SAAS,IAC1BrC,EAAE,CAACsE,oBAAoB,KAAKjC,SAAU,CAAC,IAC/CnB,mBAAmB,EAAE;IACrB,OAAOI,OAAO,CAACiD,OAAO,CAAC7C,MAAM,CAAC1B,EAAE,CAAC,CAAC;EACtC;EACA;EACA,OAAOsB,OAAO,CAACkD,GAAG,CAAC,CACbzG,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAAC,IAAItD,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,CAAC;EAAI;EACzD1D,KAAK,CAACiC,EAAE,CAACyB,OAAO,CAAC,GAAGtD,KAAK,CAACK,aAAa,CAACiG,UAAU,CAAC,CAAC,GAAGzE,EAAE,CAACyB,OAAO,GAChEY,SAAS,EACftE,KAAK,CAACiC,EAAE,CAACmE,KAAK,CAAC,GAAGhG,KAAK,CAACK,aAAa,CAACkG,mBAAmB,CAACvG,KAAK,CAACwC,mBAAmB,CAACT,UAAU,CAAC,CAAClB,OAAO,CAAC,GAAGgB,EAAE,CAACmE,KAAK,EACnHpG,KAAK,CAACmD,mBAAmB,CAAC,GAAG/C,KAAK,CAACK,aAAa,CAACmG,YAAY,CAAC,CAAC,GAAG,CAAC,EACnEC,gBAAgB,CAACzG,KAAK,EAAE6B,EAAE,CAAC,CAC9B,CAAC,CAAC6E,IAAI,CAAC,UAAUC,IAAI,EAAE;IACpB,MAAM,CAACC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,CAAC,GAAGJ,IAAI;IACzD,IAAK/G,KAAK,CAACgH,SAAS,CAAC,IAAIhH,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAAC,IAAItD,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,CAAC,IAAK1D,KAAK,CAACiH,OAAO,CAAC,IAAIjH,KAAK,CAACkH,WAAW,CAAC,IAAIlH,KAAK,CAACmH,SAAS,CAAC,EAAE;MAC5I,MAAM,IAAIhG,KAAK,CAAC,yFAAyF,GAAGiG,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;IACrI;IACA,OAAOpD,MAAM,CAAA3E,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACNiD,EAAE,GACAjC,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAAC,IAAItD,KAAK,CAACiC,EAAE,CAACqB,MAAM,CAACG,WAAW,CAACC,OAAO,CAAC,GAAI;MAAEA,OAAO,EAAEsD;IAAU,CAAC,GAAG,CAAC,CAAC;MAC5FZ,KAAK,EAAEa,OAAO;MACdzC,SAAS,EAAE0C;IAAW,GACnBC,SAAS,CACf,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AACD,SAASvD,8BAA8BA,CAAC3B,EAAE,EAAE;EACxC,IAAIA,EAAE,CAACqB,MAAM,IAAKrB,EAAE,CAACmB,KAAK,IAAInB,EAAE,CAACoB,QAAS,EAAE;IACxC,OAAO,IAAIlC,KAAK,CAAC,uGAAuG,CAAC;EAC7H;EACA,IAAKc,EAAE,CAACmB,KAAK,IAAI,CAACnB,EAAE,CAACoB,QAAQ,IAAMpB,EAAE,CAACoB,QAAQ,IAAI,CAACpB,EAAE,CAACmB,KAAM,EAAE;IAC1D,OAAO,IAAIjC,KAAK,CAAC,mEAAmE,GAChF,oBAAoB,GAAGc,EAAE,CAACmB,KAAK,GAAG,gBAAgB,GAAGnB,EAAE,CAACoB,QAAQ,CAAC;EACzE;EACA,IAAK,CAACpB,EAAE,CAACkC,GAAG,IAAI,CAAClC,EAAE,CAACiC,QAAQ,IACvB,CAACjC,EAAE,CAACsE,oBAAoB,IAAI,CAACtE,EAAE,CAACqE,YAAa,EAAE;IAChD,OAAO,IAAInF,KAAK,CAAC,kBAAkB,CAAC;EACxC;EACA,IAAIc,EAAE,CAACkC,GAAG,IAAIlC,EAAE,CAACoE,QAAQ,EAAE;IACvB,IAAIpE,EAAE,CAACkC,GAAG,GAAG,CAAC,IAAIlC,EAAE,CAACoE,QAAQ,GAAG,CAAC,EAAE;MAC/B,OAAO,IAAIlF,KAAK,CAAC,iCAAiC,CAAC;IACvD;EACJ,CAAC,MACI;IACD,IAAIc,EAAE,CAACsE,oBAAoB,GAAG,CAAC,IAAItE,EAAE,CAACqE,YAAY,GAAG,CAAC,EAAE;MACpD,OAAO,IAAInF,KAAK,CAAC,sDAAsD,CAAC;IAC5E;EACJ;EACA,IAAIc,EAAE,CAACmE,KAAK,GAAG,CAAC,IAAInE,EAAE,CAACyB,OAAO,GAAG,CAAC,EAAE;IAChC,OAAO,IAAIvC,KAAK,CAAC,kCAAkC,CAAC;EACxD;EACA;AACJ;AACA,SAASgF,aAAaA,CAAClE,EAAE,EAAE;EACvB;EACA,MAAMqF,UAAU,GAAIrF,EAAE,CAACqE,YAAY,KAAKhC,SAAS,IAAIrC,EAAE,CAACsE,oBAAoB,KAAKjC,SAAU;EAC3F,IAAIiD,MAAM;EACV,IAAItF,EAAE,CAACmC,IAAI,KAAKE,SAAS,EAAE;IACvBiD,MAAM,GAAG9H,KAAK,CAAC4B,KAAK,CAACY,EAAE,CAACmC,IAAI,CAAC;EACjC,CAAC,MACI,IAAInC,EAAE,CAACmC,IAAI,KAAKE,SAAS,IAAIgD,UAAU,EAAE;IAC1CC,MAAM,GAAG,KAAK;EAClB;EACA,IAAItF,EAAE,CAACoE,QAAQ,KAAK/B,SAAS,KAAKiD,MAAM,KAAK,KAAK,IAAID,UAAU,CAAC,EAC7D,MAAMnG,KAAK,CAAC,8CAA8C,CAAC;EAC/D,IAAI,CAACoG,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,KAAK,KAAKD,UAAU,EACpD,MAAMnG,KAAK,CAAC,0EAA0E,CAAC;EAC3F,IAAImG,UAAU,IACRrF,EAAE,CAACqB,MAAM,IAAIrB,EAAE,CAACqB,MAAM,CAACD,QAAQ,IAAIpB,EAAE,CAACqB,MAAM,CAACD,QAAQ,CAACmE,WAAW,CAAC,CAAC,KAAK3H,SAAS,CAAC4E,MAAM,IACrFxC,EAAE,CAACoB,QAAQ,IAAIpB,EAAE,CAACoB,QAAQ,CAACmE,WAAW,CAAC,CAAC,KAAK3H,SAAS,CAAC4E,MAAQ,EAAE;IACtE8C,MAAM,GAAG,KAAK;EAClB,CAAC,MACI,IAAItF,EAAE,CAACoC,UAAU,IAChBpC,EAAE,CAACqB,MAAM,IAAIrB,EAAE,CAACqB,MAAM,CAACD,QAAQ,IAAIpB,EAAE,CAACqB,MAAM,CAACD,QAAQ,CAACmE,WAAW,CAAC,CAAC,KAAK3H,SAAS,CAAC4H,MAAM,IACrFxF,EAAE,CAACoB,QAAQ,IAAIpB,EAAE,CAACoB,QAAQ,CAACmE,WAAW,CAAC,CAAC,KAAK3H,SAAS,CAAC4H,MAAQ,EAAE;IACtEF,MAAM,GAAG,KAAK;EAClB;EACA,OAAOA,MAAM;AACjB;AACA,SAASV,gBAAgBA,CAACzG,KAAK,EAAE6B,EAAE,EAAE;EACjC,OAAO,IAAIsB,OAAO,CAAC,CAACiD,OAAO,EAAEhD,MAAM,KAAK;IACpC,IAAI;MACA,IAAI,CAACvB,EAAE,CAACmC,IAAI,KAAKE,SAAS,IAAIrC,EAAE,CAACmC,IAAI,GAAG,KAAK,KACtCnC,EAAE,CAACoE,QAAQ,KAAK/B,SAAS,EAAE;QAC9B;QACAkC,OAAO,CAAC;UAAEH,QAAQ,EAAEpE,EAAE,CAACoE;QAAS,CAAC,CAAC;MACtC,CAAC,MACI,IAAIpE,EAAE,CAACmC,IAAI,KAAK,KAAK,IAAInC,EAAE,CAACqE,YAAY,IAAIrE,EAAE,CAACsE,oBAAoB,EAAE;QACtE;QACAC,OAAO,CAAC;UAAEF,YAAY,EAAErE,EAAE,CAACqE,YAAY;UAAEC,oBAAoB,EAAEtE,EAAE,CAACsE;QAAqB,CAAC,CAAC;MAC7F,CAAC,MACI;QACDhD,OAAO,CAACkD,GAAG,CAAC,CACRrG,KAAK,CAACK,aAAa,CAACiH,gBAAgB,CAAC,CAAC,EACtCtH,KAAK,CAACK,aAAa,CAACkH,WAAW,CAAC,CAAC,CACpC,CAAC,CAACb,IAAI,CAACc,SAAS,IAAI;UACjB,MAAM,CAACC,KAAK,EAAExB,QAAQ,CAAC,GAAGuB,SAAS;UACnC,IAAK3F,EAAE,CAACmC,IAAI,KAAK,KAAK,IAClByD,KAAK,IAAIA,KAAK,CAACC,aAAa,EAAE;YAC9B;YACA;YACA,IAAIvB,oBAAoB,EAAED,YAAY;YACtC,IAAIrE,EAAE,CAACoE,QAAQ,EAAE;cACb;cACA;cACAE,oBAAoB,GAAGtE,EAAE,CAACoE,QAAQ;cAClCC,YAAY,GAAGrE,EAAE,CAACoE,QAAQ;cAC1B,OAAOpE,EAAE,CAACoE,QAAQ;YACtB,CAAC,MACI;cACDE,oBAAoB,GAAGtE,EAAE,CAACsE,oBAAoB,IAAI,YAAY,CAAC,CAAC;cAChED,YAAY,GAAGrE,EAAE,CAACqE,YAAY,IAC1B7G,KAAK,CAAC4B,KAAK,CAAC5B,KAAK,CAACsI,IAAI,CAACF,KAAK,CAACC,aAAa,CAAC,CACtCE,GAAG,CAACvI,KAAK,CAACsI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClBE,GAAG,CAACxI,KAAK,CAACsI,IAAI,CAACxB,oBAAoB,CAAC,CAAC,CAAC;YACnD;YACAC,OAAO,CAAC;cAAEF,YAAY;cAAEC;YAAqB,CAAC,CAAC;UACnD,CAAC,MACI;YACD,IAAItE,EAAE,CAACsE,oBAAoB,IAAItE,EAAE,CAACqE,YAAY,EAC1C,MAAMnF,KAAK,CAAC,kCAAkC,CAAC;YACnDqF,OAAO,CAAC;cAAEH;YAAS,CAAC,CAAC;UACzB;QACJ,CAAC,CAAC,CAAC6B,KAAK,CAAEjF,KAAK,IAAK;UAChBO,MAAM,CAACP,KAAK,CAAC;QACjB,CAAC,CAAC;MACN;IACJ,CAAC,CACD,OAAOA,KAAK,EAAE;MACVO,MAAM,CAACP,KAAK,CAAC;IACjB;EACJ,CAAC,CAAC;AACN;AACA;AACA9C,QAAQ,CAAC0B,SAAS,CAACsG,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,KAAK,EAAkB;EAAA,IAAhBC,SAAS,GAAA/H,SAAA,CAAAyC,MAAA,QAAAzC,SAAA,QAAAgE,SAAA,GAAAhE,SAAA,MAAG,CAAC,CAAC;EACrF;EACA,MAAM+B,IAAI,GAAG0C,MAAM,CAACC,IAAI,CAACoD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;EAC/C,MAAMrG,EAAE,GAAGtC,kBAAkB,CAAC4I,kBAAkB,CAAClG,IAAI,CAAC;EACtD;EACA,OAAO5C,KAAK,CAAC+I,iBAAiB,CAACvG,EAAE,CAACwG,gBAAgB,CAAC,CAAC,CAACjD,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AACD;AACArF,QAAQ,CAAC0B,SAAS,CAAC6G,WAAW,GAAG,SAASA,WAAWA,CAACrG,IAAI,EAAE;EACxD,IAAIsG,UAAU,GAAGlJ,KAAK,CAACmJ,WAAW,CAACvG,IAAI,CAAC,GAAGA,IAAI,GAAG5C,KAAK,CAACoJ,SAAS,CAACxG,IAAI,CAAC;EACvE,IAAIyG,YAAY,GAAGrJ,KAAK,CAACsJ,UAAU,CAACJ,UAAU,CAAC;EAC/C,IAAIK,aAAa,GAAGjE,MAAM,CAACC,IAAI,CAAC8D,YAAY,CAAC;EAC7C,IAAIG,QAAQ,GAAG,gCAAgC,GAAGH,YAAY,CAAC/F,MAAM;EACrE,IAAImG,cAAc,GAAGnE,MAAM,CAACC,IAAI,CAACiE,QAAQ,CAAC;EAC1C,IAAIE,UAAU,GAAGpE,MAAM,CAACM,MAAM,CAAC,CAAC6D,cAAc,EAAEF,aAAa,CAAC,CAAC;EAC/D,OAAOjJ,cAAc,CAACqJ,WAAW,CAACrJ,cAAc,CAAC4F,SAAS,CAACwD,UAAU,CAAC,CAAC;AAC3E,CAAC;AACDhJ,QAAQ,CAAC0B,SAAS,CAACO,IAAI,GAAG,SAASA,IAAIA,CAACC,IAAI,EAAEF,UAAU,EAAE;EACtD,IAAI,CAACA,UAAU,CAACW,UAAU,CAAC,IAAI,CAAC,EAAE;IAC9BX,UAAU,GAAG,IAAI,GAAGA,UAAU;EAClC;EACA;EACA,IAAIA,UAAU,CAACY,MAAM,KAAK,EAAE,EAAE;IAC1B,MAAM,IAAI5B,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,IAAIkI,IAAI,GAAG,IAAI,CAACX,WAAW,CAACrG,IAAI,CAAC;EACjC,IAAIiH,SAAS,GAAGjK,OAAO,CAAC+C,IAAI,CAACiH,IAAI,EAAElH,UAAU,CAAC;EAC9C,IAAIoH,GAAG,GAAGlK,OAAO,CAACmK,eAAe,CAACF,SAAS,CAAC;EAC5C,OAAO;IACHG,OAAO,EAAEpH,IAAI;IACbwD,WAAW,EAAEwD,IAAI;IACjBtD,CAAC,EAAEwD,GAAG,CAAC,CAAC,CAAC;IACTvD,CAAC,EAAEuD,GAAG,CAAC,CAAC,CAAC;IACTtD,CAAC,EAAEsD,GAAG,CAAC,CAAC,CAAC;IACTD,SAAS,EAAEA;EACf,CAAC;AACL,CAAC;AACDnJ,QAAQ,CAAC0B,SAAS,CAAC6H,OAAO,GAAG,SAASA,OAAOA,CAACD,OAAO,EAAEH,SAAS,EAAEK,QAAQ,EAAE;EACxE,IAAI5C,IAAI,GAAG,EAAE,CAACuB,KAAK,CAACsB,KAAK,CAACtJ,SAAS,CAAC;EACpC,IAAI,CAAC,CAACmJ,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC1C,OAAO,IAAI,CAACC,OAAO,CAACD,OAAO,CAAC5D,WAAW,EAAExG,OAAO,CAACwK,eAAe,CAAC,CAACJ,OAAO,CAAC1D,CAAC,EAAE0D,OAAO,CAACzD,CAAC,EAAEyD,OAAO,CAACxD,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EAC9G;EACA,IAAI,CAAC0D,QAAQ,EAAE;IACXF,OAAO,GAAG,IAAI,CAACf,WAAW,CAACe,OAAO,CAAC;EACvC;EACA,IAAI1C,IAAI,CAAChE,MAAM,IAAI,CAAC,EAAE;IAClB4G,QAAQ,GAAG5C,IAAI,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5BqB,QAAQ,GAAG,OAAOA,QAAQ,KAAK,SAAS,GAAG,CAAC,CAACA,QAAQ,GAAG,KAAK;IAC7D,OAAO,IAAI,CAACD,OAAO,CAACD,OAAO,EAAEpK,OAAO,CAACwK,eAAe,CAAC9C,IAAI,CAACuB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEqB,QAAQ,CAAC,CAAC,CAAC;EACvF;;EACA,OAAOtK,OAAO,CAACqK,OAAO,CAACD,OAAO,EAAEH,SAAS,CAAC;AAC9C,CAAC;AACD;AACAnJ,QAAQ,CAAC0B,SAAS,CAACiI,OAAO,GAAG,UAAUC,UAAU,EAAExH,QAAQ,EAAEyH,SAAS,EAAE;EACpE;EACA,IAAI,EAAE,OAAOzH,QAAQ,KAAK,QAAQ,CAAC,EAAE;IACjC,MAAM,IAAIpB,KAAK,CAAC,oBAAoB,CAAC;EACzC;EACA,IAAI8I,IAAI,GAAI,CAAC,CAACF,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,GAAIA,UAAU,GAAG3C,IAAI,CAAC8C,KAAK,CAACF,SAAS,GAAGD,UAAU,CAACvC,WAAW,CAAC,CAAC,GAAGuC,UAAU,CAAC;EACxI,IAAIE,IAAI,CAACE,OAAO,KAAK,CAAC,EAAE;IACpB,MAAM,IAAIhJ,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,IAAIiJ,UAAU;EACd,IAAIC,SAAS;EACb,IAAIJ,IAAI,CAACK,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;IAC9BF,SAAS,GAAGJ,IAAI,CAACK,MAAM,CAACD,SAAS;IACjC;IACAD,UAAU,GAAG7K,MAAM,CAACiL,UAAU,CAACzF,MAAM,CAACC,IAAI,CAACzC,QAAQ,CAAC,EAAEwC,MAAM,CAACC,IAAI,CAACqF,SAAS,CAACI,IAAI,EAAE,KAAK,CAAC,EAAEJ,SAAS,CAACK,CAAC,EAAEL,SAAS,CAACrE,CAAC,EAAEqE,SAAS,CAACM,CAAC,EAAEN,SAAS,CAACO,KAAK,CAAC;EACrJ,CAAC,MACI,IAAIX,IAAI,CAACK,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;IACnCF,SAAS,GAAGJ,IAAI,CAACK,MAAM,CAACD,SAAS;IACjC,IAAIA,SAAS,CAACQ,GAAG,KAAK,aAAa,EAAE;MACjC,MAAM,IAAI1J,KAAK,CAAC,kCAAkC,CAAC;IACvD;IACAiJ,UAAU,GAAG9K,IAAI,CAACwL,UAAU,CAAC/F,MAAM,CAACC,IAAI,CAACzC,QAAQ,CAAC,EAAEwC,MAAM,CAACC,IAAI,CAACqF,SAAS,CAACI,IAAI,EAAE,KAAK,CAAC,EAAEJ,SAAS,CAACU,CAAC,EAAEV,SAAS,CAACO,KAAK,EAAE,QAAQ,CAAC;EACnI,CAAC,MACI;IACD,MAAM,IAAIzJ,KAAK,CAAC,mCAAmC,CAAC;EACxD;EACA,IAAI6J,UAAU,GAAGjG,MAAM,CAACC,IAAI,CAACiF,IAAI,CAACK,MAAM,CAACU,UAAU,EAAE,KAAK,CAAC;EAC3D,IAAIC,GAAG,GAAGxL,KAAK,CAACyL,IAAI,CAACnG,MAAM,CAACC,IAAI,CAAC,CAAC,GAAGoF,UAAU,CAAC9B,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG0C,UAAU,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACjG,IAAIF,GAAG,KAAKhB,IAAI,CAACK,MAAM,CAACW,GAAG,EAAE;IACzB,MAAM,IAAI9J,KAAK,CAAC,iDAAiD,CAAC;EACtE;EACA,IAAIiK,QAAQ,GAAG9L,IAAI,CAAC+L,gBAAgB,CAACpB,IAAI,CAACK,MAAM,CAACgB,MAAM,EAAElB,UAAU,CAAC9B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEvD,MAAM,CAACC,IAAI,CAACiF,IAAI,CAACK,MAAM,CAACiB,YAAY,CAACC,EAAE,EAAE,KAAK,CAAC,CAAC;EAClI,IAAIC,IAAI,GAAG,IAAI,GAAG1G,MAAM,CAACC,IAAI,CAAC,CAAC,GAAGoG,QAAQ,CAACM,MAAM,CAACV,UAAU,CAAC,EAAE,GAAGI,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAACnG,QAAQ,CAAC,KAAK,CAAC;EACpG,OAAO,IAAI,CAAC5C,mBAAmB,CAAC6I,IAAI,EAAE,IAAI,CAAC;AAC/C,CAAC;AACDtL,QAAQ,CAAC0B,SAAS,CAACS,OAAO,GAAG,UAAUH,UAAU,EAAEI,QAAQ,EAAEC,OAAO,EAAE;EAClE;EACA,IAAIT,OAAO,GAAG,IAAI,CAACa,mBAAmB,CAACT,UAAU,EAAE,IAAI,CAAC;EACxDK,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAIiI,IAAI,GAAGjI,OAAO,CAACiI,IAAI,IAAInL,IAAI,CAACsM,WAAW,CAAC,EAAE,CAAC;EAC/C,IAAIJ,EAAE,GAAGhJ,OAAO,CAACgJ,EAAE,IAAIlM,IAAI,CAACsM,WAAW,CAAC,EAAE,CAAC;EAC3C,IAAIxB,UAAU;EACd,IAAIG,GAAG,GAAG/H,OAAO,CAAC+H,GAAG,IAAI,QAAQ;EACjC,IAAIF,SAAS,GAAG;IACZO,KAAK,EAAEpI,OAAO,CAACoI,KAAK,IAAI,EAAE;IAC1BH,IAAI,EAAEA,IAAI,CAACjF,QAAQ,CAAC,KAAK;EAC7B,CAAC;EACD,IAAI+E,GAAG,KAAK,QAAQ,EAAE;IAClBF,SAAS,CAACU,CAAC,GAAGvI,OAAO,CAACuI,CAAC,IAAI,MAAM;IACjCV,SAAS,CAACQ,GAAG,GAAG,aAAa;IAC7BT,UAAU,GAAG9K,IAAI,CAACwL,UAAU,CAAC/F,MAAM,CAACC,IAAI,CAACzC,QAAQ,CAAC,EAAEwC,MAAM,CAACC,IAAI,CAACqF,SAAS,CAACI,IAAI,EAAE,KAAK,CAAC,EAAEJ,SAAS,CAACU,CAAC,EAAEV,SAAS,CAACO,KAAK,EAAE,QAAQ,CAAC;EACnI,CAAC,MACI,IAAIL,GAAG,KAAK,QAAQ,EAAE;IACvB;IACAF,SAAS,CAACK,CAAC,GAAGlI,OAAO,CAACkI,CAAC,IAAI,IAAI,CAAC,CAAC;IACjCL,SAAS,CAACrE,CAAC,GAAGxD,OAAO,CAACwD,CAAC,IAAI,CAAC;IAC5BqE,SAAS,CAACM,CAAC,GAAGnI,OAAO,CAACmI,CAAC,IAAI,CAAC;IAC5BP,UAAU,GAAG7K,MAAM,CAACiL,UAAU,CAACzF,MAAM,CAACC,IAAI,CAACzC,QAAQ,CAAC,EAAEwC,MAAM,CAACC,IAAI,CAACqF,SAAS,CAACI,IAAI,EAAE,KAAK,CAAC,EAAEJ,SAAS,CAACK,CAAC,EAAEL,SAAS,CAACrE,CAAC,EAAEqE,SAAS,CAACM,CAAC,EAAEN,SAAS,CAACO,KAAK,CAAC;EACrJ,CAAC,MACI;IACD,MAAM,IAAIzJ,KAAK,CAAC,iBAAiB,CAAC;EACtC;EACA,IAAImK,MAAM,GAAGhM,IAAI,CAACuM,cAAc,CAACrJ,OAAO,CAAC8I,MAAM,IAAI,aAAa,EAAElB,UAAU,CAAC9B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEkD,EAAE,CAAC;EAC9F,IAAI,CAACF,MAAM,EAAE;IACT,MAAM,IAAInK,KAAK,CAAC,oBAAoB,CAAC;EACzC;EACA,IAAI6J,UAAU,GAAGjG,MAAM,CAACC,IAAI,CAAC,CACzB,GAAGsG,MAAM,CAACI,MAAM,CAAC3G,MAAM,CAACC,IAAI,CAACjD,OAAO,CAACI,UAAU,CAACgJ,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAC1E,GAAGG,MAAM,CAACK,KAAK,CAAC,CAAC,CACpB,CAAC;EACF,IAAIV,GAAG,GAAGxL,KAAK,CAACyL,IAAI,CAACnG,MAAM,CAACC,IAAI,CAAC,CAAC,GAAGoF,UAAU,CAAC9B,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG0C,UAAU,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACjG,OAAO;IACHhB,OAAO,EAAE,CAAC;IACV2B,EAAE,EAAEtM,IAAI,CAACuM,EAAE,CAAC;MAAEC,MAAM,EAAExJ,OAAO,CAAChD,IAAI,IAAIF,IAAI,CAACsM,WAAW,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7D3K,OAAO,EAAEc,OAAO,CAACd,OAAO,CAACuG,WAAW,CAAC,CAAC,CAAC2D,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACxDb,MAAM,EAAE;MACJU,UAAU,EAAEA,UAAU,CAACxF,QAAQ,CAAC,KAAK,CAAC;MACtC+F,YAAY,EAAE;QACVC,EAAE,EAAEA,EAAE,CAAChG,QAAQ,CAAC,KAAK;MACzB,CAAC;MACD8F,MAAM,EAAE9I,OAAO,CAAC8I,MAAM,IAAI,aAAa;MACvCf,GAAG,EAAEA,GAAG;MACRF,SAAS,EAAEA,SAAS;MACpBY,GAAG,EAAEA,GAAG,CAACzF,QAAQ,CAAC,KAAK;IAC3B;EACJ,CAAC;AACL,CAAC;AACD;AACA;AACA,SAAS5D,MAAMA,CAACqK,QAAQ,EAAE;EACtB,IAAI,CAACC,SAAS,GAAGD,QAAQ;EACzB,IAAI,CAAClJ,MAAM,GAAG,CAAC;EACf,IAAI,CAACoJ,cAAc,GAAG,eAAe;AACzC;AACAvK,MAAM,CAACC,SAAS,CAACuK,cAAc,GAAG,UAAUC,OAAO,EAAE;EACjDA,OAAO,GAAGA,OAAO,IAAI,CAAC;EACtB,IAAI,IAAI,CAACC,cAAc,CAACD,OAAO,CAAC,EAAE;IAC9B,OAAO,IAAI,CAACD,cAAc,CAACC,OAAO,GAAG,CAAC,CAAC;EAC3C,CAAC,MACI;IACD,OAAOA,OAAO;EAClB;AACJ,CAAC;AACDzK,MAAM,CAACC,SAAS,CAAC0K,eAAe,GAAG,YAAY;EAC3C,IAAIC,IAAI,GAAGxI,MAAM,CAACwI,IAAI,CAAC,IAAI,CAAC;EAC5B,IAAIC,OAAO,GAAGD,IAAI,CACbE,GAAG,CAAC,UAAUC,GAAG,EAAE;IACpB,OAAO7L,QAAQ,CAAC6L,GAAG,CAAC;EACxB,CAAC,CAAC,CACGC,MAAM,CAAC,UAAUlC,CAAC,EAAE;IACrB,OAAQA,CAAC,GAAG,IAAI;EACpB,CAAC,CAAC;EACF,OAAO+B,OAAO;AAClB,CAAC;AACD7K,MAAM,CAACC,SAAS,CAACY,MAAM,GAAG,UAAUoK,gBAAgB,EAAEnK,OAAO,EAAE;EAC3D,KAAK,IAAIoK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,gBAAgB,EAAE,EAAEC,CAAC,EAAE;IACvC,IAAI,CAAC7E,GAAG,CAAC,IAAI,CAACiE,SAAS,CAACzJ,MAAM,CAACC,OAAO,CAAC,CAACP,UAAU,CAAC;EACvD;EACA,OAAO,IAAI;AACf,CAAC;AACDP,MAAM,CAACC,SAAS,CAACoG,GAAG,GAAG,UAAUlG,OAAO,EAAE;EACtC,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC7BA,OAAO,GAAG,IAAI,CAACmK,SAAS,CAACtJ,mBAAmB,CAACb,OAAO,CAAC;EACzD;EACA,IAAI,CAAC,IAAI,CAACA,OAAO,CAACd,OAAO,CAAC,EAAE;IACxBc,OAAO,GAAG,IAAI,CAACmK,SAAS,CAACtJ,mBAAmB,CAACb,OAAO,CAACI,UAAU,CAAC;IAChEJ,OAAO,CAACgL,KAAK,GAAG,IAAI,CAACX,cAAc,CAAC,CAAC;IACrC,IAAI,CAACrK,OAAO,CAACgL,KAAK,CAAC,GAAGhL,OAAO;IAC7B,IAAI,CAACA,OAAO,CAACd,OAAO,CAAC,GAAGc,OAAO;IAC/B,IAAI,CAACA,OAAO,CAACd,OAAO,CAACuG,WAAW,CAAC,CAAC,CAAC,GAAGzF,OAAO;IAC7C,IAAI,CAACgB,MAAM,EAAE;IACb,OAAOhB,OAAO;EAClB,CAAC,MACI;IACD,OAAO,IAAI,CAACA,OAAO,CAACd,OAAO,CAAC;EAChC;AACJ,CAAC;AACDW,MAAM,CAACC,SAAS,CAACmL,MAAM,GAAG,UAAUC,cAAc,EAAE;EAChD,IAAIlL,OAAO,GAAG,IAAI,CAACkL,cAAc,CAAC;EAClC,IAAIlL,OAAO,IAAIA,OAAO,CAACd,OAAO,EAAE;IAC5B;IACA,IAAI,CAACc,OAAO,CAACd,OAAO,CAAC,CAACkB,UAAU,GAAG,IAAI;IACvC,OAAO,IAAI,CAACJ,OAAO,CAACd,OAAO,CAAC;IAC5B;IACA,IAAI,IAAI,CAACc,OAAO,CAACd,OAAO,CAACuG,WAAW,CAAC,CAAC,CAAC,EAAE;MACrC,IAAI,CAACzF,OAAO,CAACd,OAAO,CAACuG,WAAW,CAAC,CAAC,CAAC,CAACrF,UAAU,GAAG,IAAI;MACrD,OAAO,IAAI,CAACJ,OAAO,CAACd,OAAO,CAACuG,WAAW,CAAC,CAAC,CAAC;IAC9C;IACA;IACA,IAAI,CAACzF,OAAO,CAACgL,KAAK,CAAC,CAAC5K,UAAU,GAAG,IAAI;IACrC,OAAO,IAAI,CAACJ,OAAO,CAACgL,KAAK,CAAC;IAC1B,IAAI,CAAChK,MAAM,EAAE;IACb,OAAO,IAAI;EACf,CAAC,MACI;IACD,OAAO,KAAK;EAChB;AACJ,CAAC;AACDnB,MAAM,CAACC,SAAS,CAACqL,KAAK,GAAG,YAAY;EACjC,IAAI9M,KAAK,GAAG,IAAI;EAChB,IAAIqM,OAAO,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;EACpCE,OAAO,CAACnL,OAAO,CAAC,UAAUyL,KAAK,EAAE;IAC7B3M,KAAK,CAAC4M,MAAM,CAACD,KAAK,CAAC;EACvB,CAAC,CAAC;EACF,OAAO,IAAI;AACf,CAAC;AACDnL,MAAM,CAACC,SAAS,CAACS,OAAO,GAAG,UAAUC,QAAQ,EAAEC,OAAO,EAAE;EACpD,IAAIpC,KAAK,GAAG,IAAI;EAChB,IAAIqM,OAAO,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;EACpC,IAAIN,QAAQ,GAAGQ,OAAO,CAACC,GAAG,CAAC,UAAUK,KAAK,EAAE;IACxC,OAAO3M,KAAK,CAAC2M,KAAK,CAAC,CAACzK,OAAO,CAACC,QAAQ,EAAEC,OAAO,CAAC;EAClD,CAAC,CAAC;EACF,OAAOyJ,QAAQ;AACnB,CAAC;AACDrK,MAAM,CAACC,SAAS,CAACiI,OAAO,GAAG,UAAUqD,eAAe,EAAE5K,QAAQ,EAAE;EAC5D,IAAInC,KAAK,GAAG,IAAI;EAChB+M,eAAe,CAAC7L,OAAO,CAAC,UAAU8L,QAAQ,EAAE;IACxC,IAAIrL,OAAO,GAAG3B,KAAK,CAAC8L,SAAS,CAACpC,OAAO,CAACsD,QAAQ,EAAE7K,QAAQ,CAAC;IACzD,IAAIR,OAAO,EAAE;MACT3B,KAAK,CAAC6H,GAAG,CAAClG,OAAO,CAAC;IACtB,CAAC,MACI;MACD,MAAM,IAAIZ,KAAK,CAAC,6CAA6C,CAAC;IAClE;EACJ,CAAC,CAAC;EACF,OAAO,IAAI;AACf,CAAC;AACDS,MAAM,CAACC,SAAS,CAACwL,IAAI,GAAG,UAAU9K,QAAQ,EAAE+K,OAAO,EAAE;EACjDC,YAAY,CAACC,OAAO,CAACF,OAAO,IAAI,IAAI,CAACnB,cAAc,EAAE/E,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC/E,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC5F,OAAO,IAAI;AACf,CAAC;AACDX,MAAM,CAACC,SAAS,CAAC4L,IAAI,GAAG,UAAUlL,QAAQ,EAAE+K,OAAO,EAAE;EACjD,IAAIF,QAAQ,GAAGG,YAAY,CAACG,OAAO,CAACJ,OAAO,IAAI,IAAI,CAACnB,cAAc,CAAC;EACnE,IAAIiB,QAAQ,EAAE;IACV,IAAI;MACAA,QAAQ,GAAGhG,IAAI,CAAC8C,KAAK,CAACkD,QAAQ,CAAC;IACnC,CAAC,CACD,OAAOlH,CAAC,EAAE,CACV;EACJ;EACA,OAAO,IAAI,CAAC4D,OAAO,CAACsD,QAAQ,IAAI,EAAE,EAAE7K,QAAQ,CAAC;AACjD,CAAC;AACD,IAAI,CAACoL,gBAAgB,CAAC,cAAc,CAAC,EAAE;EACnC,OAAO/L,MAAM,CAACC,SAAS,CAACwL,IAAI;EAC5B,OAAOzL,MAAM,CAACC,SAAS,CAAC4L,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,gBAAgBA,CAACvJ,IAAI,EAAE;EAC5B,IAAIwJ,OAAO;EACX,IAAI;IACAA,OAAO,GAAGC,IAAI,CAACzJ,IAAI,CAAC;IACpB,IAAI0J,CAAC,GAAG,kBAAkB;IAC1BF,OAAO,CAACJ,OAAO,CAACM,CAAC,EAAEA,CAAC,CAAC;IACrBF,OAAO,CAACG,UAAU,CAACD,CAAC,CAAC;IACrB,OAAO,IAAI;EACf,CAAC,CACD,OAAO5H,CAAC,EAAE;IACN,OAAOA,CAAC;IACR;IACAA,CAAC,CAAC8H,IAAI,KAAK,EAAE;IACT;IACA9H,CAAC,CAAC8H,IAAI,KAAK,IAAI;IACf;IACA;IACA9H,CAAC,CAACxF,IAAI,KAAK,oBAAoB;IAC/B;IACAwF,CAAC,CAACxF,IAAI,KAAK,4BAA4B,CAAC;IACxC;IACCkN,OAAO,IAAIA,OAAO,CAAC7K,MAAM,KAAK,CAAE;EACzC;AACJ;AACAkL,MAAM,CAACC,OAAO,GAAG/N,QAAQ"},"metadata":{},"sourceType":"script"}