{"ast":null,"code":"(function (i, _) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = _() : \"function\" == typeof define && define.amd ? define(_) : (i = i || self, i.JSBI = _());\n})(this, function () {\n  'use strict';\n\n  var i = Math.imul,\n    _ = Math.clz32,\n    t = Math.abs,\n    e = Math.max,\n    g = Math.floor;\n  class o extends Array {\n    constructor(i, _) {\n      if (super(i), this.sign = _, i > o.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n    }\n    static BigInt(i) {\n      var _ = Number.isFinite;\n      if (\"number\" == typeof i) {\n        if (0 === i) return o.__zero();\n        if (o.__isOneDigitInt(i)) return 0 > i ? o.__oneDigit(-i, !0) : o.__oneDigit(i, !1);\n        if (!_(i) || g(i) !== i) throw new RangeError(\"The number \" + i + \" cannot be converted to BigInt because it is not an integer\");\n        return o.__fromDouble(i);\n      }\n      if (\"string\" == typeof i) {\n        const _ = o.__fromString(i);\n        if (null === _) throw new SyntaxError(\"Cannot convert \" + i + \" to a BigInt\");\n        return _;\n      }\n      if (\"boolean\" == typeof i) return !0 === i ? o.__oneDigit(1, !1) : o.__zero();\n      if (\"object\" == typeof i) {\n        if (i.constructor === o) return i;\n        const _ = o.__toPrimitive(i);\n        return o.BigInt(_);\n      }\n      throw new TypeError(\"Cannot convert \" + i + \" to a BigInt\");\n    }\n    toDebugString() {\n      const i = [\"BigInt[\"];\n      for (const _ of this) i.push((_ ? (_ >>> 0).toString(16) : _) + \", \");\n      return i.push(\"]\"), i.join(\"\");\n    }\n    toString() {\n      let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      if (2 > i || 36 < i) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n      return 0 === this.length ? \"0\" : 0 == (i & i - 1) ? o.__toStringBasePowerOfTwo(this, i) : o.__toStringGeneric(this, i, !1);\n    }\n    static toNumber(i) {\n      const _ = i.length;\n      if (0 === _) return 0;\n      if (1 === _) {\n        const _ = i.__unsignedDigit(0);\n        return i.sign ? -_ : _;\n      }\n      const t = i.__digit(_ - 1),\n        e = o.__clz30(t),\n        n = 30 * _ - e;\n      if (1024 < n) return i.sign ? -Infinity : 1 / 0;\n      let g = n - 1,\n        s = t,\n        l = _ - 1;\n      const r = e + 3;\n      let a = 32 === r ? 0 : s << r;\n      a >>>= 12;\n      const u = r - 12;\n      let d = 12 <= r ? 0 : s << 20 + r,\n        h = 20 + r;\n      for (0 < u && 0 < l && (l--, s = i.__digit(l), a |= s >>> 30 - u, d = s << u + 2, h = u + 2); 0 < h && 0 < l;) l--, s = i.__digit(l), d |= 30 <= h ? s << h - 30 : s >>> 30 - h, h -= 30;\n      const m = o.__decideRounding(i, h, l, s);\n      if ((1 === m || 0 === m && 1 == (1 & d)) && (d = d + 1 >>> 0, 0 === d && (a++, 0 != a >>> 20 && (a = 0, g++, 1023 < g)))) return i.sign ? -Infinity : 1 / 0;\n      const b = i.sign ? -2147483648 : 0;\n      return g = g + 1023 << 20, o.__kBitConversionInts[1] = b | g | a, o.__kBitConversionInts[0] = d, o.__kBitConversionDouble[0];\n    }\n    static unaryMinus(i) {\n      if (0 === i.length) return i;\n      const _ = i.__copy();\n      return _.sign = !i.sign, _;\n    }\n    static bitwiseNot(i) {\n      return i.sign ? o.__absoluteSubOne(i).__trim() : o.__absoluteAddOne(i, !0);\n    }\n    static exponentiate(i, _) {\n      if (_.sign) throw new RangeError(\"Exponent must be positive\");\n      if (0 === _.length) return o.__oneDigit(1, !1);\n      if (0 === i.length) return i;\n      if (1 === i.length && 1 === i.__digit(0)) return i.sign && 0 == (1 & _.__digit(0)) ? o.unaryMinus(i) : i;\n      if (1 < _.length) throw new RangeError(\"BigInt too big\");\n      let t = _.__unsignedDigit(0);\n      if (1 === t) return i;\n      if (t >= o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n      if (1 === i.length && 2 === i.__digit(0)) {\n        const _ = 1 + (0 | t / 30),\n          e = i.sign && 0 != (1 & t),\n          n = new o(_, e);\n        n.__initializeDigits();\n        const g = 1 << t % 30;\n        return n.__setDigit(_ - 1, g), n;\n      }\n      let e = null,\n        n = i;\n      for (0 != (1 & t) && (e = i), t >>= 1; 0 !== t; t >>= 1) n = o.multiply(n, n), 0 != (1 & t) && (null === e ? e = n : e = o.multiply(e, n));\n      return e;\n    }\n    static multiply(_, t) {\n      if (0 === _.length) return _;\n      if (0 === t.length) return t;\n      let i = _.length + t.length;\n      30 <= _.__clzmsd() + t.__clzmsd() && i--;\n      const e = new o(i, _.sign !== t.sign);\n      e.__initializeDigits();\n      for (let n = 0; n < _.length; n++) o.__multiplyAccumulate(t, _.__digit(n), e, n);\n      return e.__trim();\n    }\n    static divide(i, _) {\n      if (0 === _.length) throw new RangeError(\"Division by zero\");\n      if (0 > o.__absoluteCompare(i, _)) return o.__zero();\n      const t = i.sign !== _.sign,\n        e = _.__unsignedDigit(0);\n      let n;\n      if (1 === _.length && 32767 >= e) {\n        if (1 === e) return t === i.sign ? i : o.unaryMinus(i);\n        n = o.__absoluteDivSmall(i, e, null);\n      } else n = o.__absoluteDivLarge(i, _, !0, !1);\n      return n.sign = t, n.__trim();\n    }\n    static remainder(i, _) {\n      if (0 === _.length) throw new RangeError(\"Division by zero\");\n      if (0 > o.__absoluteCompare(i, _)) return i;\n      const t = _.__unsignedDigit(0);\n      if (1 === _.length && 32767 >= t) {\n        if (1 === t) return o.__zero();\n        const _ = o.__absoluteModSmall(i, t);\n        return 0 === _ ? o.__zero() : o.__oneDigit(_, i.sign);\n      }\n      const e = o.__absoluteDivLarge(i, _, !1, !0);\n      return e.sign = i.sign, e.__trim();\n    }\n    static add(i, _) {\n      const t = i.sign;\n      return t === _.sign ? o.__absoluteAdd(i, _, t) : 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t);\n    }\n    static subtract(i, _) {\n      const t = i.sign;\n      return t === _.sign ? 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t) : o.__absoluteAdd(i, _, t);\n    }\n    static leftShift(i, _) {\n      return 0 === _.length || 0 === i.length ? i : _.sign ? o.__rightShiftByAbsolute(i, _) : o.__leftShiftByAbsolute(i, _);\n    }\n    static signedRightShift(i, _) {\n      return 0 === _.length || 0 === i.length ? i : _.sign ? o.__leftShiftByAbsolute(i, _) : o.__rightShiftByAbsolute(i, _);\n    }\n    static unsignedRightShift() {\n      throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n    }\n    static lessThan(i, _) {\n      return 0 > o.__compareToBigInt(i, _);\n    }\n    static lessThanOrEqual(i, _) {\n      return 0 >= o.__compareToBigInt(i, _);\n    }\n    static greaterThan(i, _) {\n      return 0 < o.__compareToBigInt(i, _);\n    }\n    static greaterThanOrEqual(i, _) {\n      return 0 <= o.__compareToBigInt(i, _);\n    }\n    static equal(_, t) {\n      if (_.sign !== t.sign) return !1;\n      if (_.length !== t.length) return !1;\n      for (let e = 0; e < _.length; e++) if (_.__digit(e) !== t.__digit(e)) return !1;\n      return !0;\n    }\n    static notEqual(i, _) {\n      return !o.equal(i, _);\n    }\n    static bitwiseAnd(i, _) {\n      if (!i.sign && !_.sign) return o.__absoluteAnd(i, _).__trim();\n      if (i.sign && _.sign) {\n        const t = e(i.length, _.length) + 1;\n        let n = o.__absoluteSubOne(i, t);\n        const g = o.__absoluteSubOne(_);\n        return n = o.__absoluteOr(n, g, n), o.__absoluteAddOne(n, !0, n).__trim();\n      }\n      return i.sign && ([i, _] = [_, i]), o.__absoluteAndNot(i, o.__absoluteSubOne(_)).__trim();\n    }\n    static bitwiseXor(i, _) {\n      if (!i.sign && !_.sign) return o.__absoluteXor(i, _).__trim();\n      if (i.sign && _.sign) {\n        const t = e(i.length, _.length),\n          n = o.__absoluteSubOne(i, t),\n          g = o.__absoluteSubOne(_);\n        return o.__absoluteXor(n, g, n).__trim();\n      }\n      const t = e(i.length, _.length) + 1;\n      i.sign && ([i, _] = [_, i]);\n      let n = o.__absoluteSubOne(_, t);\n      return n = o.__absoluteXor(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n    }\n    static bitwiseOr(i, _) {\n      const t = e(i.length, _.length);\n      if (!i.sign && !_.sign) return o.__absoluteOr(i, _).__trim();\n      if (i.sign && _.sign) {\n        let e = o.__absoluteSubOne(i, t);\n        const n = o.__absoluteSubOne(_);\n        return e = o.__absoluteAnd(e, n, e), o.__absoluteAddOne(e, !0, e).__trim();\n      }\n      i.sign && ([i, _] = [_, i]);\n      let n = o.__absoluteSubOne(_, t);\n      return n = o.__absoluteAndNot(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n    }\n    static asIntN(_, t) {\n      if (0 === t.length) return t;\n      if (_ = g(_), 0 > _) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n      if (0 === _) return o.__zero();\n      if (_ >= o.__kMaxLengthBits) return t;\n      const e = 0 | (_ + 29) / 30;\n      if (t.length < e) return t;\n      const s = t.__unsignedDigit(e - 1),\n        l = 1 << (_ - 1) % 30;\n      if (t.length === e && s < l) return t;\n      if (!((s & l) === l)) return o.__truncateToNBits(_, t);\n      if (!t.sign) return o.__truncateAndSubFromPowerOfTwo(_, t, !0);\n      if (0 == (s & l - 1)) {\n        for (let n = e - 2; 0 <= n; n--) if (0 !== t.__digit(n)) return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n        return t.length === e && s === l ? t : o.__truncateToNBits(_, t);\n      }\n      return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n    }\n    static asUintN(i, _) {\n      if (0 === _.length) return _;\n      if (i = g(i), 0 > i) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n      if (0 === i) return o.__zero();\n      if (_.sign) {\n        if (i > o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n        return o.__truncateAndSubFromPowerOfTwo(i, _, !1);\n      }\n      if (i >= o.__kMaxLengthBits) return _;\n      const t = 0 | (i + 29) / 30;\n      if (_.length < t) return _;\n      const e = i % 30;\n      if (_.length == t) {\n        if (0 === e) return _;\n        const i = _.__digit(t - 1);\n        if (0 == i >>> e) return _;\n      }\n      return o.__truncateToNBits(i, _);\n    }\n    static ADD(i, _) {\n      if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i) return \"string\" != typeof _ && (_ = _.toString()), i + _;\n      if (\"string\" == typeof _) return i.toString() + _;\n      if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i) && o.__isBigInt(_)) return o.add(i, _);\n      if (\"number\" == typeof i && \"number\" == typeof _) return i + _;\n      throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n    }\n    static LT(i, _) {\n      return o.__compare(i, _, 0);\n    }\n    static LE(i, _) {\n      return o.__compare(i, _, 1);\n    }\n    static GT(i, _) {\n      return o.__compare(i, _, 2);\n    }\n    static GE(i, _) {\n      return o.__compare(i, _, 3);\n    }\n    static EQ(i, _) {\n      for (;;) {\n        if (o.__isBigInt(i)) return o.__isBigInt(_) ? o.equal(i, _) : o.EQ(_, i);\n        if (\"number\" == typeof i) {\n          if (o.__isBigInt(_)) return o.__equalToNumber(_, i);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"string\" == typeof i) {\n          if (o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.equal(i, _);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"boolean\" == typeof i) {\n          if (o.__isBigInt(_)) return o.__equalToNumber(_, +i);\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"symbol\" == typeof i) {\n          if (o.__isBigInt(_)) return !1;\n          if (\"object\" != typeof _) return i == _;\n          _ = o.__toPrimitive(_);\n        } else if (\"object\" == typeof i) {\n          if (\"object\" == typeof _ && _.constructor !== o) return i == _;\n          i = o.__toPrimitive(i);\n        } else return i == _;\n      }\n    }\n    static NE(i, _) {\n      return !o.EQ(i, _);\n    }\n    static __zero() {\n      return new o(0, !1);\n    }\n    static __oneDigit(i, _) {\n      const t = new o(1, _);\n      return t.__setDigit(0, i), t;\n    }\n    __copy() {\n      const _ = new o(this.length, this.sign);\n      for (let t = 0; t < this.length; t++) _[t] = this[t];\n      return _;\n    }\n    __trim() {\n      let i = this.length,\n        _ = this[i - 1];\n      for (; 0 === _;) i--, _ = this[i - 1], this.pop();\n      return 0 === i && (this.sign = !1), this;\n    }\n    __initializeDigits() {\n      for (let _ = 0; _ < this.length; _++) this[_] = 0;\n    }\n    static __decideRounding(i, _, t, e) {\n      if (0 < _) return -1;\n      let n;\n      if (0 > _) n = -_ - 1;else {\n        if (0 === t) return -1;\n        t--, e = i.__digit(t), n = 29;\n      }\n      let g = 1 << n;\n      if (0 == (e & g)) return -1;\n      if (g -= 1, 0 != (e & g)) return 1;\n      for (; 0 < t;) if (t--, 0 !== i.__digit(t)) return 1;\n      return 0;\n    }\n    static __fromDouble(i) {\n      o.__kBitConversionDouble[0] = i;\n      const _ = 2047 & o.__kBitConversionInts[1] >>> 20,\n        t = _ - 1023,\n        e = (0 | t / 30) + 1,\n        n = new o(e, 0 > i);\n      let g = 1048575 & o.__kBitConversionInts[1] | 1048576,\n        s = o.__kBitConversionInts[0];\n      const l = 20,\n        r = t % 30;\n      let a,\n        u = 0;\n      if (20 > r) {\n        const i = l - r;\n        u = i + 32, a = g >>> i, g = g << 32 - i | s >>> i, s <<= 32 - i;\n      } else if (20 === r) u = 32, a = g, g = s, s = 0;else {\n        const i = r - l;\n        u = 32 - i, a = g << i | s >>> 32 - i, g = s << i, s = 0;\n      }\n      n.__setDigit(e - 1, a);\n      for (let _ = e - 2; 0 <= _; _--) 0 < u ? (u -= 30, a = g >>> 2, g = g << 30 | s >>> 2, s <<= 30) : a = 0, n.__setDigit(_, a);\n      return n.__trim();\n    }\n    static __isWhitespace(i) {\n      return !!(13 >= i && 9 <= i) || (159 >= i ? 32 == i : 131071 >= i ? 160 == i || 5760 == i : 196607 >= i ? (i &= 131071, 10 >= i || 40 == i || 41 == i || 47 == i || 95 == i || 4096 == i) : 65279 == i);\n    }\n    static __fromString(i) {\n      let _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      let t = 0;\n      const e = i.length;\n      let n = 0;\n      if (n === e) return o.__zero();\n      let g = i.charCodeAt(n);\n      for (; o.__isWhitespace(g);) {\n        if (++n === e) return o.__zero();\n        g = i.charCodeAt(n);\n      }\n      if (43 === g) {\n        if (++n === e) return null;\n        g = i.charCodeAt(n), t = 1;\n      } else if (45 === g) {\n        if (++n === e) return null;\n        g = i.charCodeAt(n), t = -1;\n      }\n      if (0 === _) {\n        if (_ = 10, 48 === g) {\n          if (++n === e) return o.__zero();\n          if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n            if (_ = 16, ++n === e) return null;\n            g = i.charCodeAt(n);\n          } else if (79 === g || 111 === g) {\n            if (_ = 8, ++n === e) return null;\n            g = i.charCodeAt(n);\n          } else if (66 === g || 98 === g) {\n            if (_ = 2, ++n === e) return null;\n            g = i.charCodeAt(n);\n          }\n        }\n      } else if (16 === _ && 48 === g) {\n        if (++n === e) return o.__zero();\n        if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n          if (++n === e) return null;\n          g = i.charCodeAt(n);\n        }\n      }\n      if (0 != t && 10 !== _) return null;\n      for (; 48 === g;) {\n        if (++n === e) return o.__zero();\n        g = i.charCodeAt(n);\n      }\n      const s = e - n;\n      let l = o.__kMaxBitsPerChar[_],\n        r = o.__kBitsPerCharTableMultiplier - 1;\n      if (s > 1073741824 / l) return null;\n      const a = l * s + r >>> o.__kBitsPerCharTableShift,\n        u = new o(0 | (a + 29) / 30, !1),\n        h = 10 > _ ? _ : 10,\n        b = 10 < _ ? _ - 10 : 0;\n      if (0 == (_ & _ - 1)) {\n        l >>= o.__kBitsPerCharTableShift;\n        const _ = [],\n          t = [];\n        let s = !1;\n        do {\n          let o = 0,\n            r = 0;\n          for (;;) {\n            let _;\n            if (g - 48 >>> 0 < h) _ = g - 48;else if ((32 | g) - 97 >>> 0 < b) _ = (32 | g) - 87;else {\n              s = !0;\n              break;\n            }\n            if (r += l, o = o << l | _, ++n === e) {\n              s = !0;\n              break;\n            }\n            if (g = i.charCodeAt(n), 30 < r + l) break;\n          }\n          _.push(o), t.push(r);\n        } while (!s);\n        o.__fillFromParts(u, _, t);\n      } else {\n        u.__initializeDigits();\n        let t = !1,\n          s = 0;\n        do {\n          let a = 0,\n            D = 1;\n          for (;;) {\n            let o;\n            if (g - 48 >>> 0 < h) o = g - 48;else if ((32 | g) - 97 >>> 0 < b) o = (32 | g) - 87;else {\n              t = !0;\n              break;\n            }\n            const l = D * _;\n            if (1073741823 < l) break;\n            if (D = l, a = a * _ + o, s++, ++n === e) {\n              t = !0;\n              break;\n            }\n            g = i.charCodeAt(n);\n          }\n          r = 30 * o.__kBitsPerCharTableMultiplier - 1;\n          const c = 0 | (l * s + r >>> o.__kBitsPerCharTableShift) / 30;\n          u.__inplaceMultiplyAdd(D, a, c);\n        } while (!t);\n      }\n      if (n !== e) {\n        if (!o.__isWhitespace(g)) return null;\n        for (n++; n < e; n++) if (g = i.charCodeAt(n), !o.__isWhitespace(g)) return null;\n      }\n      return u.sign = -1 == t, u.__trim();\n    }\n    static __fillFromParts(_, t, e) {\n      let n = 0,\n        g = 0,\n        o = 0;\n      for (let s = t.length - 1; 0 <= s; s--) {\n        const i = t[s],\n          l = e[s];\n        g |= i << o, o += l, 30 === o ? (_.__setDigit(n++, g), o = 0, g = 0) : 30 < o && (_.__setDigit(n++, 1073741823 & g), o -= 30, g = i >>> l - o);\n      }\n      if (0 !== g) {\n        if (n >= _.length) throw new Error(\"implementation bug\");\n        _.__setDigit(n++, g);\n      }\n      for (; n < _.length; n++) _.__setDigit(n, 0);\n    }\n    static __toStringBasePowerOfTwo(_, i) {\n      const t = _.length;\n      let e = i - 1;\n      e = (85 & e >>> 1) + (85 & e), e = (51 & e >>> 2) + (51 & e), e = (15 & e >>> 4) + (15 & e);\n      const n = e,\n        g = i - 1,\n        s = _.__digit(t - 1),\n        l = o.__clz30(s);\n      let r = 0 | (30 * t - l + n - 1) / n;\n      if (_.sign && r++, 268435456 < r) throw new Error(\"string too long\");\n      const a = Array(r);\n      let u = r - 1,\n        d = 0,\n        h = 0;\n      for (let e = 0; e < t - 1; e++) {\n        const i = _.__digit(e),\n          t = (d | i << h) & g;\n        a[u--] = o.__kConversionChars[t];\n        const s = n - h;\n        for (d = i >>> s, h = 30 - s; h >= n;) a[u--] = o.__kConversionChars[d & g], d >>>= n, h -= n;\n      }\n      const m = (d | s << h) & g;\n      for (a[u--] = o.__kConversionChars[m], d = s >>> n - h; 0 !== d;) a[u--] = o.__kConversionChars[d & g], d >>>= n;\n      if (_.sign && (a[u--] = \"-\"), -1 != u) throw new Error(\"implementation bug\");\n      return a.join(\"\");\n    }\n    static __toStringGeneric(_, i, t) {\n      const e = _.length;\n      if (0 === e) return \"\";\n      if (1 === e) {\n        let e = _.__unsignedDigit(0).toString(i);\n        return !1 === t && _.sign && (e = \"-\" + e), e;\n      }\n      const n = 30 * e - o.__clz30(_.__digit(e - 1)),\n        g = o.__kMaxBitsPerChar[i],\n        s = g - 1;\n      let l = n * o.__kBitsPerCharTableMultiplier;\n      l += s - 1, l = 0 | l / s;\n      const r = l + 1 >> 1,\n        a = o.exponentiate(o.__oneDigit(i, !1), o.__oneDigit(r, !1));\n      let u, d;\n      const h = a.__unsignedDigit(0);\n      if (1 === a.length && 32767 >= h) {\n        u = new o(_.length, !1), u.__initializeDigits();\n        let t = 0;\n        for (let e = 2 * _.length - 1; 0 <= e; e--) {\n          const i = t << 15 | _.__halfDigit(e);\n          u.__setHalfDigit(e, 0 | i / h), t = 0 | i % h;\n        }\n        d = t.toString(i);\n      } else {\n        const t = o.__absoluteDivLarge(_, a, !0, !0);\n        u = t.quotient;\n        const e = t.remainder.__trim();\n        d = o.__toStringGeneric(e, i, !0);\n      }\n      u.__trim();\n      let m = o.__toStringGeneric(u, i, !0);\n      for (; d.length < r;) d = \"0\" + d;\n      return !1 === t && _.sign && (m = \"-\" + m), m + d;\n    }\n    static __unequalSign(i) {\n      return i ? -1 : 1;\n    }\n    static __absoluteGreater(i) {\n      return i ? -1 : 1;\n    }\n    static __absoluteLess(i) {\n      return i ? 1 : -1;\n    }\n    static __compareToBigInt(i, _) {\n      const t = i.sign;\n      if (t !== _.sign) return o.__unequalSign(t);\n      const e = o.__absoluteCompare(i, _);\n      return 0 < e ? o.__absoluteGreater(t) : 0 > e ? o.__absoluteLess(t) : 0;\n    }\n    static __compareToNumber(i, _) {\n      if (o.__isOneDigitInt(_)) {\n        const e = i.sign,\n          n = 0 > _;\n        if (e !== n) return o.__unequalSign(e);\n        if (0 === i.length) {\n          if (n) throw new Error(\"implementation bug\");\n          return 0 === _ ? 0 : -1;\n        }\n        if (1 < i.length) return o.__absoluteGreater(e);\n        const g = t(_),\n          s = i.__unsignedDigit(0);\n        return s > g ? o.__absoluteGreater(e) : s < g ? o.__absoluteLess(e) : 0;\n      }\n      return o.__compareToDouble(i, _);\n    }\n    static __compareToDouble(i, _) {\n      if (_ !== _) return _;\n      if (_ === 1 / 0) return -1;\n      if (_ === -Infinity) return 1;\n      const t = i.sign;\n      if (t !== 0 > _) return o.__unequalSign(t);\n      if (0 === _) throw new Error(\"implementation bug: should be handled elsewhere\");\n      if (0 === i.length) return -1;\n      o.__kBitConversionDouble[0] = _;\n      const e = 2047 & o.__kBitConversionInts[1] >>> 20;\n      if (2047 == e) throw new Error(\"implementation bug: handled elsewhere\");\n      const n = e - 1023;\n      if (0 > n) return o.__absoluteGreater(t);\n      const g = i.length;\n      let s = i.__digit(g - 1);\n      const l = o.__clz30(s),\n        r = 30 * g - l,\n        a = n + 1;\n      if (r < a) return o.__absoluteLess(t);\n      if (r > a) return o.__absoluteGreater(t);\n      let u = 1048576 | 1048575 & o.__kBitConversionInts[1],\n        d = o.__kBitConversionInts[0];\n      const h = 20,\n        m = 29 - l;\n      if (m !== (0 | (r - 1) % 30)) throw new Error(\"implementation bug\");\n      let b,\n        D = 0;\n      if (20 > m) {\n        const i = h - m;\n        D = i + 32, b = u >>> i, u = u << 32 - i | d >>> i, d <<= 32 - i;\n      } else if (20 === m) D = 32, b = u, u = d, d = 0;else {\n        const i = m - h;\n        D = 32 - i, b = u << i | d >>> 32 - i, u = d << i, d = 0;\n      }\n      if (s >>>= 0, b >>>= 0, s > b) return o.__absoluteGreater(t);\n      if (s < b) return o.__absoluteLess(t);\n      for (let e = g - 2; 0 <= e; e--) {\n        0 < D ? (D -= 30, b = u >>> 2, u = u << 30 | d >>> 2, d <<= 30) : b = 0;\n        const _ = i.__unsignedDigit(e);\n        if (_ > b) return o.__absoluteGreater(t);\n        if (_ < b) return o.__absoluteLess(t);\n      }\n      if (0 !== u || 0 !== d) {\n        if (0 === D) throw new Error(\"implementation bug\");\n        return o.__absoluteLess(t);\n      }\n      return 0;\n    }\n    static __equalToNumber(i, _) {\n      return o.__isOneDigitInt(_) ? 0 === _ ? 0 === i.length : 1 === i.length && i.sign === 0 > _ && i.__unsignedDigit(0) === t(_) : 0 === o.__compareToDouble(i, _);\n    }\n    static __comparisonResultToBool(i, _) {\n      return 0 === _ ? 0 > i : 1 === _ ? 0 >= i : 2 === _ ? 0 < i : 3 === _ ? 0 <= i : void 0;\n    }\n    static __compare(i, _, t) {\n      if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i && \"string\" == typeof _) switch (t) {\n        case 0:\n          return i < _;\n        case 1:\n          return i <= _;\n        case 2:\n          return i > _;\n        case 3:\n          return i >= _;\n      }\n      if (o.__isBigInt(i) && \"string\" == typeof _) return _ = o.__fromString(_), null !== _ && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n      if (\"string\" == typeof i && o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n      if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i)) {\n        if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n        if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n        return o.__comparisonResultToBool(o.__compareToNumber(i, _), t);\n      }\n      if (\"number\" != typeof i) throw new Error(\"implementation bug\");\n      if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToNumber(_, i), 2 ^ t);\n      if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n      return 0 === t ? i < _ : 1 === t ? i <= _ : 2 === t ? i > _ : 3 === t ? i >= _ : void 0;\n    }\n    __clzmsd() {\n      return o.__clz30(this.__digit(this.length - 1));\n    }\n    static __absoluteAdd(_, t, e) {\n      if (_.length < t.length) return o.__absoluteAdd(t, _, e);\n      if (0 === _.length) return _;\n      if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n      let n = _.length;\n      (0 === _.__clzmsd() || t.length === _.length && 0 === t.__clzmsd()) && n++;\n      const g = new o(n, e);\n      let s = 0,\n        l = 0;\n      for (; l < t.length; l++) {\n        const i = _.__digit(l) + t.__digit(l) + s;\n        s = i >>> 30, g.__setDigit(l, 1073741823 & i);\n      }\n      for (; l < _.length; l++) {\n        const i = _.__digit(l) + s;\n        s = i >>> 30, g.__setDigit(l, 1073741823 & i);\n      }\n      return l < g.length && g.__setDigit(l, s), g.__trim();\n    }\n    static __absoluteSub(_, t, e) {\n      if (0 === _.length) return _;\n      if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n      const n = new o(_.length, e);\n      let g = 0,\n        s = 0;\n      for (; s < t.length; s++) {\n        const i = _.__digit(s) - t.__digit(s) - g;\n        g = 1 & i >>> 30, n.__setDigit(s, 1073741823 & i);\n      }\n      for (; s < _.length; s++) {\n        const i = _.__digit(s) - g;\n        g = 1 & i >>> 30, n.__setDigit(s, 1073741823 & i);\n      }\n      return n.__trim();\n    }\n    static __absoluteAddOne(_, i) {\n      let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      const e = _.length;\n      null === t ? t = new o(e, i) : t.sign = i;\n      let n = 1;\n      for (let g = 0; g < e; g++) {\n        const i = _.__digit(g) + n;\n        n = i >>> 30, t.__setDigit(g, 1073741823 & i);\n      }\n      return 0 != n && t.__setDigitGrow(e, 1), t;\n    }\n    static __absoluteSubOne(_, t) {\n      const e = _.length;\n      t = t || e;\n      const n = new o(t, !1);\n      let g = 1;\n      for (let o = 0; o < e; o++) {\n        const i = _.__digit(o) - g;\n        g = 1 & i >>> 30, n.__setDigit(o, 1073741823 & i);\n      }\n      if (0 != g) throw new Error(\"implementation bug\");\n      for (let g = e; g < t; g++) n.__setDigit(g, 0);\n      return n;\n    }\n    static __absoluteAnd(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n        g = t.length,\n        s = g;\n      if (n < g) {\n        s = n;\n        const i = _,\n          e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n      let l = s;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) & t.__digit(r));\n      for (; r < l; r++) e.__setDigit(r, 0);\n      return e;\n    }\n    static __absoluteAndNot(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      const n = _.length,\n        g = t.length;\n      let s = g;\n      n < g && (s = n);\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) & ~t.__digit(r));\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n      for (; r < l; r++) e.__setDigit(r, 0);\n      return e;\n    }\n    static __absoluteOr(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n        g = t.length,\n        s = g;\n      if (n < g) {\n        s = n;\n        const i = _,\n          e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) | t.__digit(r));\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n      for (; r < l; r++) e.__setDigit(r, 0);\n      return e;\n    }\n    static __absoluteXor(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let n = _.length,\n        g = t.length,\n        s = g;\n      if (n < g) {\n        s = n;\n        const i = _,\n          e = n;\n        _ = t, n = g, t = i, g = e;\n      }\n      let l = n;\n      null === e ? e = new o(l, !1) : l = e.length;\n      let r = 0;\n      for (; r < s; r++) e.__setDigit(r, _.__digit(r) ^ t.__digit(r));\n      for (; r < n; r++) e.__setDigit(r, _.__digit(r));\n      for (; r < l; r++) e.__setDigit(r, 0);\n      return e;\n    }\n    static __absoluteCompare(_, t) {\n      const e = _.length - t.length;\n      if (0 != e) return e;\n      let n = _.length - 1;\n      for (; 0 <= n && _.__digit(n) === t.__digit(n);) n--;\n      return 0 > n ? 0 : _.__unsignedDigit(n) > t.__unsignedDigit(n) ? 1 : -1;\n    }\n    static __multiplyAccumulate(_, t, e, n) {\n      if (0 === t) return;\n      const g = 32767 & t,\n        s = t >>> 15;\n      let l = 0,\n        r = 0;\n      for (let a, u = 0; u < _.length; u++, n++) {\n        a = e.__digit(n);\n        const i = _.__digit(u),\n          t = 32767 & i,\n          d = i >>> 15,\n          h = o.__imul(t, g),\n          m = o.__imul(t, s),\n          b = o.__imul(d, g),\n          D = o.__imul(d, s);\n        a += r + h + l, l = a >>> 30, a &= 1073741823, a += ((32767 & m) << 15) + ((32767 & b) << 15), l += a >>> 30, r = D + (m >>> 15) + (b >>> 15), e.__setDigit(n, 1073741823 & a);\n      }\n      for (; 0 != l || 0 !== r; n++) {\n        let i = e.__digit(n);\n        i += l + r, r = 0, l = i >>> 30, e.__setDigit(n, 1073741823 & i);\n      }\n    }\n    static __internalMultiplyAdd(_, t, e, g, s) {\n      let l = e,\n        a = 0;\n      for (let n = 0; n < g; n++) {\n        const i = _.__digit(n),\n          e = o.__imul(32767 & i, t),\n          g = o.__imul(i >>> 15, t),\n          u = e + ((32767 & g) << 15) + a + l;\n        l = u >>> 30, a = g >>> 15, s.__setDigit(n, 1073741823 & u);\n      }\n      if (s.length > g) for (s.__setDigit(g++, l + a); g < s.length;) s.__setDigit(g++, 0);else if (0 !== l + a) throw new Error(\"implementation bug\");\n    }\n    __inplaceMultiplyAdd(i, _, t) {\n      t > this.length && (t = this.length);\n      const e = 32767 & i,\n        n = i >>> 15;\n      let g = 0,\n        s = _;\n      for (let l = 0; l < t; l++) {\n        const i = this.__digit(l),\n          _ = 32767 & i,\n          t = i >>> 15,\n          r = o.__imul(_, e),\n          a = o.__imul(_, n),\n          u = o.__imul(t, e),\n          d = o.__imul(t, n);\n        let h = s + r + g;\n        g = h >>> 30, h &= 1073741823, h += ((32767 & a) << 15) + ((32767 & u) << 15), g += h >>> 30, s = d + (a >>> 15) + (u >>> 15), this.__setDigit(l, 1073741823 & h);\n      }\n      if (0 != g || 0 !== s) throw new Error(\"implementation bug\");\n    }\n    static __absoluteDivSmall(_, t) {\n      let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      null === e && (e = new o(_.length, !1));\n      let n = 0;\n      for (let g, o = 2 * _.length - 1; 0 <= o; o -= 2) {\n        g = (n << 15 | _.__halfDigit(o)) >>> 0;\n        const i = 0 | g / t;\n        n = 0 | g % t, g = (n << 15 | _.__halfDigit(o - 1)) >>> 0;\n        const s = 0 | g / t;\n        n = 0 | g % t, e.__setDigit(o >>> 1, i << 15 | s);\n      }\n      return e;\n    }\n    static __absoluteModSmall(_, t) {\n      let e = 0;\n      for (let n = 2 * _.length - 1; 0 <= n; n--) {\n        const i = (e << 15 | _.__halfDigit(n)) >>> 0;\n        e = 0 | i % t;\n      }\n      return e;\n    }\n    static __absoluteDivLarge(i, _, t, e) {\n      const g = _.__halfDigitLength(),\n        n = _.length,\n        s = i.__halfDigitLength() - g;\n      let l = null;\n      t && (l = new o(s + 2 >>> 1, !1), l.__initializeDigits());\n      const r = new o(g + 2 >>> 1, !1);\n      r.__initializeDigits();\n      const a = o.__clz15(_.__halfDigit(g - 1));\n      0 < a && (_ = o.__specialLeftShift(_, a, 0));\n      const d = o.__specialLeftShift(i, a, 1),\n        u = _.__halfDigit(g - 1);\n      let h = 0;\n      for (let a, m = s; 0 <= m; m--) {\n        a = 32767;\n        const i = d.__halfDigit(m + g);\n        if (i !== u) {\n          const t = (i << 15 | d.__halfDigit(m + g - 1)) >>> 0;\n          a = 0 | t / u;\n          let e = 0 | t % u;\n          const n = _.__halfDigit(g - 2),\n            s = d.__halfDigit(m + g - 2);\n          for (; o.__imul(a, n) >>> 0 > (e << 16 | s) >>> 0 && (a--, e += u, !(32767 < e)););\n        }\n        o.__internalMultiplyAdd(_, a, 0, n, r);\n        let e = d.__inplaceSub(r, m, g + 1);\n        0 !== e && (e = d.__inplaceAdd(_, m, g), d.__setHalfDigit(m + g, 32767 & d.__halfDigit(m + g) + e), a--), t && (1 & m ? h = a << 15 : l.__setDigit(m >>> 1, h | a));\n      }\n      if (e) return d.__inplaceRightShift(a), t ? {\n        quotient: l,\n        remainder: d\n      } : d;\n      if (t) return l;\n      throw new Error(\"unreachable\");\n    }\n    static __clz15(i) {\n      return o.__clz30(i) - 15;\n    }\n    __inplaceAdd(_, t, e) {\n      let n = 0;\n      for (let g = 0; g < e; g++) {\n        const i = this.__halfDigit(t + g) + _.__halfDigit(g) + n;\n        n = i >>> 15, this.__setHalfDigit(t + g, 32767 & i);\n      }\n      return n;\n    }\n    __inplaceSub(_, t, e) {\n      let n = 0;\n      if (1 & t) {\n        t >>= 1;\n        let g = this.__digit(t),\n          o = 32767 & g,\n          s = 0;\n        for (; s < e - 1 >>> 1; s++) {\n          const i = _.__digit(s),\n            e = (g >>> 15) - (32767 & i) - n;\n          n = 1 & e >>> 15, this.__setDigit(t + s, (32767 & e) << 15 | 32767 & o), g = this.__digit(t + s + 1), o = (32767 & g) - (i >>> 15) - n, n = 1 & o >>> 15;\n        }\n        const i = _.__digit(s),\n          l = (g >>> 15) - (32767 & i) - n;\n        n = 1 & l >>> 15, this.__setDigit(t + s, (32767 & l) << 15 | 32767 & o);\n        if (t + s + 1 >= this.length) throw new RangeError(\"out of bounds\");\n        0 == (1 & e) && (g = this.__digit(t + s + 1), o = (32767 & g) - (i >>> 15) - n, n = 1 & o >>> 15, this.__setDigit(t + _.length, 1073709056 & g | 32767 & o));\n      } else {\n        t >>= 1;\n        let g = 0;\n        for (; g < _.length - 1; g++) {\n          const i = this.__digit(t + g),\n            e = _.__digit(g),\n            o = (32767 & i) - (32767 & e) - n;\n          n = 1 & o >>> 15;\n          const s = (i >>> 15) - (e >>> 15) - n;\n          n = 1 & s >>> 15, this.__setDigit(t + g, (32767 & s) << 15 | 32767 & o);\n        }\n        const i = this.__digit(t + g),\n          o = _.__digit(g),\n          s = (32767 & i) - (32767 & o) - n;\n        n = 1 & s >>> 15;\n        let l = 0;\n        0 == (1 & e) && (l = (i >>> 15) - (o >>> 15) - n, n = 1 & l >>> 15), this.__setDigit(t + g, (32767 & l) << 15 | 32767 & s);\n      }\n      return n;\n    }\n    __inplaceRightShift(_) {\n      if (0 === _) return;\n      let t = this.__digit(0) >>> _;\n      const e = this.length - 1;\n      for (let n = 0; n < e; n++) {\n        const i = this.__digit(n + 1);\n        this.__setDigit(n, 1073741823 & i << 30 - _ | t), t = i >>> _;\n      }\n      this.__setDigit(e, t);\n    }\n    static __specialLeftShift(_, t, e) {\n      const g = _.length,\n        n = new o(g + e, !1);\n      if (0 === t) {\n        for (let t = 0; t < g; t++) n.__setDigit(t, _.__digit(t));\n        return 0 < e && n.__setDigit(g, 0), n;\n      }\n      let s = 0;\n      for (let o = 0; o < g; o++) {\n        const i = _.__digit(o);\n        n.__setDigit(o, 1073741823 & i << t | s), s = i >>> 30 - t;\n      }\n      return 0 < e && n.__setDigit(g, s), n;\n    }\n    static __leftShiftByAbsolute(_, i) {\n      const t = o.__toShiftAmount(i);\n      if (0 > t) throw new RangeError(\"BigInt too big\");\n      const e = 0 | t / 30,\n        n = t % 30,\n        g = _.length,\n        s = 0 !== n && 0 != _.__digit(g - 1) >>> 30 - n,\n        l = g + e + (s ? 1 : 0),\n        r = new o(l, _.sign);\n      if (0 === n) {\n        let t = 0;\n        for (; t < e; t++) r.__setDigit(t, 0);\n        for (; t < l; t++) r.__setDigit(t, _.__digit(t - e));\n      } else {\n        let t = 0;\n        for (let _ = 0; _ < e; _++) r.__setDigit(_, 0);\n        for (let o = 0; o < g; o++) {\n          const i = _.__digit(o);\n          r.__setDigit(o + e, 1073741823 & i << n | t), t = i >>> 30 - n;\n        }\n        if (s) r.__setDigit(g + e, t);else if (0 !== t) throw new Error(\"implementation bug\");\n      }\n      return r.__trim();\n    }\n    static __rightShiftByAbsolute(_, i) {\n      const t = _.length,\n        e = _.sign,\n        n = o.__toShiftAmount(i);\n      if (0 > n) return o.__rightShiftByMaximum(e);\n      const g = 0 | n / 30,\n        s = n % 30;\n      let l = t - g;\n      if (0 >= l) return o.__rightShiftByMaximum(e);\n      let r = !1;\n      if (e) {\n        if (0 != (_.__digit(g) & (1 << s) - 1)) r = !0;else for (let t = 0; t < g; t++) if (0 !== _.__digit(t)) {\n          r = !0;\n          break;\n        }\n      }\n      if (r && 0 === s) {\n        const i = _.__digit(t - 1);\n        0 == ~i && l++;\n      }\n      let a = new o(l, e);\n      if (0 === s) {\n        a.__setDigit(l - 1, 0);\n        for (let e = g; e < t; e++) a.__setDigit(e - g, _.__digit(e));\n      } else {\n        let e = _.__digit(g) >>> s;\n        const n = t - g - 1;\n        for (let t = 0; t < n; t++) {\n          const i = _.__digit(t + g + 1);\n          a.__setDigit(t, 1073741823 & i << 30 - s | e), e = i >>> s;\n        }\n        a.__setDigit(n, e);\n      }\n      return r && (a = o.__absoluteAddOne(a, !0, a)), a.__trim();\n    }\n    static __rightShiftByMaximum(i) {\n      return i ? o.__oneDigit(1, !0) : o.__zero();\n    }\n    static __toShiftAmount(i) {\n      if (1 < i.length) return -1;\n      const _ = i.__unsignedDigit(0);\n      return _ > o.__kMaxLengthBits ? -1 : _;\n    }\n    static __toPrimitive(i) {\n      let _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"default\";\n      if (\"object\" != typeof i) return i;\n      if (i.constructor === o) return i;\n      if (\"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol.toPrimitive) {\n        const t = i[Symbol.toPrimitive];\n        if (t) {\n          const i = t(_);\n          if (\"object\" != typeof i) return i;\n          throw new TypeError(\"Cannot convert object to primitive value\");\n        }\n      }\n      const t = i.valueOf;\n      if (t) {\n        const _ = t.call(i);\n        if (\"object\" != typeof _) return _;\n      }\n      const e = i.toString;\n      if (e) {\n        const _ = e.call(i);\n        if (\"object\" != typeof _) return _;\n      }\n      throw new TypeError(\"Cannot convert object to primitive value\");\n    }\n    static __toNumeric(i) {\n      return o.__isBigInt(i) ? i : +i;\n    }\n    static __isBigInt(i) {\n      return \"object\" == typeof i && null !== i && i.constructor === o;\n    }\n    static __truncateToNBits(i, _) {\n      const t = 0 | (i + 29) / 30,\n        e = new o(t, _.sign),\n        n = t - 1;\n      for (let t = 0; t < n; t++) e.__setDigit(t, _.__digit(t));\n      let g = _.__digit(n);\n      if (0 != i % 30) {\n        const _ = 32 - i % 30;\n        g = g << _ >>> _;\n      }\n      return e.__setDigit(n, g), e.__trim();\n    }\n    static __truncateAndSubFromPowerOfTwo(_, t, e) {\n      var n = Math.min;\n      const g = 0 | (_ + 29) / 30,\n        s = new o(g, e);\n      let l = 0;\n      const r = g - 1;\n      let a = 0;\n      for (const i = n(r, t.length); l < i; l++) {\n        const i = 0 - t.__digit(l) - a;\n        a = 1 & i >>> 30, s.__setDigit(l, 1073741823 & i);\n      }\n      for (; l < r; l++) s.__setDigit(l, 0 | 1073741823 & -a);\n      let u = r < t.length ? t.__digit(r) : 0;\n      const d = _ % 30;\n      let h;\n      if (0 == d) h = 0 - u - a, h &= 1073741823;else {\n        const i = 32 - d;\n        u = u << i >>> i;\n        const _ = 1 << 32 - i;\n        h = _ - u - a, h &= _ - 1;\n      }\n      return s.__setDigit(r, h), s.__trim();\n    }\n    __digit(_) {\n      return this[_];\n    }\n    __unsignedDigit(_) {\n      return this[_] >>> 0;\n    }\n    __setDigit(_, i) {\n      this[_] = 0 | i;\n    }\n    __setDigitGrow(_, i) {\n      this[_] = 0 | i;\n    }\n    __halfDigitLength() {\n      const i = this.length;\n      return 32767 >= this.__unsignedDigit(i - 1) ? 2 * i - 1 : 2 * i;\n    }\n    __halfDigit(_) {\n      return 32767 & this[_ >>> 1] >>> 15 * (1 & _);\n    }\n    __setHalfDigit(_, i) {\n      const t = _ >>> 1,\n        e = this.__digit(t),\n        n = 1 & _ ? 32767 & e | i << 15 : 1073709056 & e | 32767 & i;\n      this.__setDigit(t, n);\n    }\n    static __digitPow(i, _) {\n      let t = 1;\n      for (; 0 < _;) 1 & _ && (t *= i), _ >>>= 1, i *= i;\n      return t;\n    }\n    static __isOneDigitInt(i) {\n      return (1073741823 & i) === i;\n    }\n  }\n  return o.__kMaxLength = 33554432, o.__kMaxLengthBits = o.__kMaxLength << 5, o.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], o.__kBitsPerCharTableShift = 5, o.__kBitsPerCharTableMultiplier = 1 << o.__kBitsPerCharTableShift, o.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], o.__kBitConversionBuffer = new ArrayBuffer(8), o.__kBitConversionDouble = new Float64Array(o.__kBitConversionBuffer), o.__kBitConversionInts = new Int32Array(o.__kBitConversionBuffer), o.__clz30 = _ ? function (i) {\n    return _(i) - 2;\n  } : function (i) {\n    var _ = Math.LN2,\n      t = Math.log;\n    return 0 === i ? 30 : 0 | 29 - (0 | t(i >>> 0) / _);\n  }, o.__imul = i || function (i, _) {\n    return 0 | i * _;\n  }, o;\n});","map":{"version":3,"sources":["../lib/jsbi.ts"],"names":["JSBI","Array","constructor","length","sign","__kMaxLength","RangeError","BigInt","arg","__zero","__isOneDigitInt","__oneDigit","Number","isFinite","Math","floor","__fromDouble","result","__fromString","SyntaxError","primitive","__toPrimitive","TypeError","toDebugString","digit","push","toString","join","radix","__toStringBasePowerOfTwo","__toStringGeneric","toNumber","x","xLength","value","__unsignedDigit","xMsd","__digit","msdLeadingZeros","__clz30","xBitLength","Infinity","exponent","currentDigit","digitIndex","shift","mantissaHigh","mantissaHighBitsUnset","mantissaLow","mantissaLowBitsUnset","rounding","__decideRounding","signBit","__kBitConversionInts","__kBitConversionDouble","unaryMinus","__copy","bitwiseNot","__absoluteSubOne","__trim","__absoluteAddOne","exponentiate","y","expValue","__kMaxLengthBits","neededDigits","__initializeDigits","msd","__setDigit","runningSquare","multiply","resultLength","__clzmsd","i","__multiplyAccumulate","divide","__absoluteCompare","resultSign","divisor","quotient","__absoluteDivSmall","__absoluteDivLarge","remainder","remainderDigit","__absoluteModSmall","add","__absoluteAdd","__absoluteSub","subtract","leftShift","__rightShiftByAbsolute","__leftShiftByAbsolute","signedRightShift","unsignedRightShift","lessThan","__compareToBigInt","lessThanOrEqual","greaterThan","greaterThanOrEqual","equal","notEqual","bitwiseAnd","__absoluteAnd","max","y1","__absoluteOr","__absoluteAndNot","bitwiseXor","__absoluteXor","bitwiseOr","asIntN","n","neededLength","topDigit","compareDigit","__truncateToNBits","__truncateAndSubFromPowerOfTwo","asUintN","bitsInTopDigit","ADD","__toNumeric","__isBigInt","LT","__compare","LE","GT","GE","EQ","__equalToNumber","NE","newLength","last","pop","mantissaBitsUnset","topUnconsumedBit","mask","rawExponent","digits","kMantissaHighTopBit","msdTopBit","remainingMantissaBits","__isWhitespace","c","string","cursor","current","charCodeAt","chars","bitsPerChar","__kMaxBitsPerChar","roundup","__kBitsPerCharTableMultiplier","bitsMin","__kBitsPerCharTableShift","limDigit","limAlpha","parts","partsBits","done","part","bits","d","__fillFromParts","charsSoFar","multiplier","m","digitsSoFar","__inplaceMultiplyAdd","bitsInDigit","partBits","Error","charMask","charsRequired","pos","availableBits","newDigit","__kConversionChars","consumedBits","isRecursiveCall","bitLength","maxBitsPerChar","minBitsPerChar","secondHalfChars","conqueror","secondHalf","input","__halfDigit","__setHalfDigit","divisionResult","firstHalf","__unequalSign","leftNegative","__absoluteGreater","bothNegative","__absoluteLess","xSign","__compareToNumber","ySign","yAbs","abs","xDigit","__compareToDouble","yBitLength","compareMantissa","__comparisonResultToBool","op","carry","r","borrow","inputLength","__setDigitGrow","yLength","numPairs","tmp","tmpLength","diff","multiplicand","accumulator","accumulatorIndex","m2Low","m2High","high","acc","m1","m1Low","m1High","rLow","__imul","rMid1","rMid2","rHigh","__internalMultiplyAdd","source","factor","summand","rx","ry","mLow","mHigh","dLow","dHigh","pLow","pMid1","pMid2","pHigh","upperHalf","lowerHalf","dividend","wantQuotient","wantRemainder","__halfDigitLength","n2","q","qhatv","__clz15","__specialLeftShift","u","vn1","halfDigitBuffer","j","qhat","ujn","rhat","vn2","ujn2","__inplaceSub","__inplaceAdd","__inplaceRightShift","startIndex","halfDigits","sum","subtrahend","r0","sub","r15","addDigit","__toShiftAmount","digitShift","bitsShift","grow","__rightShiftByMaximum","mustRoundDown","obj","hint","Symbol","toPrimitive","exoticToPrim","valueOf","call","drop","limit","min","msdBitsConsumed","resultMsd","minuendMsd","len","previous","updated","__digitPow","base","ArrayBuffer","Float64Array","__kBitConversionBuffer","Int32Array","clz32","log","LN2","imul","a","b"],"mappings":"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","sourcesContent":["(function(i,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=_():\"function\"==typeof define&&define.amd?define(_):(i=i||self,i.JSBI=_())})(this,function(){'use strict';var i=Math.imul,_=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(20>r){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(20===r)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d,d=0;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i,d=0}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}return o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){var _=Math.LN2,t=Math.log;return 0===i?30:0|29-(0|t(i>>>0)/_)},o.__imul=i||function(i,_){return 0|i*_},o});\n//# sourceMappingURL=jsbi-umd.js.map\n"]},"metadata":{},"sourceType":"script"}