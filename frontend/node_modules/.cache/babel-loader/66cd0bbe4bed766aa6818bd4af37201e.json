{"ast":null,"code":"import { isDualTradeBetter } from 'components/swap/routing/hooks/calculateBestTrades';\nimport { ZERO_PERCENT } from './../constants/index';\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(tradeA, tradeB) {\n  let minimumDelta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ZERO_PERCENT;\n  return isDualTradeBetter(tradeA, tradeB, minimumDelta);\n}","map":{"version":3,"names":["isDualTradeBetter","ZERO_PERCENT","isTradeBetter","tradeA","tradeB","minimumDelta","arguments","length","undefined"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/trades.ts"],"sourcesContent":["import { Percent } from '@ubeswap/sdk'\nimport { isDualTradeBetter } from 'components/swap/routing/hooks/calculateBestTrades'\nimport { UbeswapTrade } from 'components/swap/routing/trade'\n\nimport { ZERO_PERCENT } from './../constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: UbeswapTrade | undefined | null,\n  tradeB: UbeswapTrade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  return isDualTradeBetter(tradeA, tradeB, minimumDelta)\n}\n"],"mappings":"AACA,SAASA,iBAAiB,QAAQ,mDAAmD;AAGrF,SAASC,YAAY,QAAQ,sBAAsB;;AAEnD;AACA,OAAO,SAASC,aAAaA,CAC3BC,MAAuC,EACvCC,MAAuC,EAElB;EAAA,IADrBC,YAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAEpC,OAAOD,iBAAiB,CAACG,MAAM,EAAEC,MAAM,EAAEC,YAAY,CAAC;AACxD"},"metadata":{},"sourceType":"module"}