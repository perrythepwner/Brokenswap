{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/app/src/pages/Swap/index.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\n\nimport { JSBI } from '@ubeswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonPrimary } from '../../components/Button';\nimport Card from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport { ArrowWrapper, Wrapper } from '../../components/swap/styleds';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport TradePrice from '../../components/swap/TradePrice';\nimport { Field } from '../../state/swap/actions';\nimport { useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { LinkStyledButton } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport AppBody from '../AppBody';\nimport { Contract } from '@ethersproject/contracts';\nimport { ethers } from 'ethers';\nimport { getWeb3Provider } from '../../hooks/useContract';\nimport { ConnectionInfo } from '../Connection';\nimport BROKENSWAP_ABI from '../../constants/Brokenswap.json';\n\n// to-do: move to /abis/ \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Swap() {\n  _s();\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe, _trade;\n  const theme = useContext(ThemeContext);\n\n  // for expert mode\n  // const toggleSettings = useToggleSettingsMenu()\n  // const [isExpertMode] = useExpertModeManager()\n\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    showRamp\n  } = useDerivedSwapInfo();\n  const parsedAmounts = {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe = parsedAmounts[independentField]) === null || _parsedAmounts$indepe === void 0 ? void 0 : _parsedAmounts$indepe.greaterThan(JSBI.BigInt(0))));\n  // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  //useEffect(() => {\n  //  if (approval === ApprovalState.PENDING) {\n  //    setApprovalSubmitted(true)\n  //  }\n  //}, [approval, approvalSubmitted])\n\n  //const maxAmountInput: TokenAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const maxAmountInput = maxAmountSpend(500);\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: true,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: undefined,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  const handleHalfInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) * 0.5, 0).toString());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  const BROKENSWAP_ADDRESS = ConnectionInfo()['Target Contract'];\n  function SendSwapTx() {\n    return _SendSwapTx.apply(this, arguments);\n  }\n  function _SendSwapTx() {\n    _SendSwapTx = _asyncToGenerator(function* () {\n      const connectionInfo = ConnectionInfo();\n      if (connectionInfo === []) {\n        console.log('connectionInfo is null');\n        return;\n      }\n      const provider = getWeb3Provider();\n      const signer = new ethers.Wallet('0x5be4ad1a1d6c8298ec36dae3920bc0180ee928427b40ffaf3f26507abc303cbd', provider);\n      const Brokenswap = new Contract(BROKENSWAP_ADDRESS, BROKENSWAP_ABI.abi, signer);\n      const result = yield Brokenswap.FEERATE();\n      console.log('result', result);\n      return result;\n    });\n    return _SendSwapTx.apply(this, arguments);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n      active: 'swap'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapHeader, {\n        title: 'Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: undefined,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: undefined,\n          onConfirm: SendSwapTx,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: 'md',\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: 'From',\n            value: formattedAmounts[Field.INPUT],\n            showMaxButton: false,\n            showHalfButton: false,\n            currency: currencies[Field.INPUT],\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onHalf: handleHalfInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: Field.OUTPUT,\n            id: \"swap-currency-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: 'center',\n              style: {\n                padding: '0 1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    handleTypeInput(formattedAmounts[Field.OUTPUT]);\n                    onSwitchTokens();\n                  },\n                  color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.OUTPUT],\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && 'To',\n            showMaxButton: false,\n            currency: currencies[Field.OUTPUT],\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: currencies[Field.INPUT],\n            id: \"swap-currency-output\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), recipient !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: \"- Remove send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Card, {\n            padding: '0px',\n            borderRadius: '20px',\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"8px\",\n              style: {\n                padding: '0 16px'\n              },\n              children: Boolean(false) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                  price: (_trade = trade) === null || _trade === void 0 ? void 0 : _trade.executionPrice,\n                  showInverted: showInverted,\n                  setShowInverted: setShowInverted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            borderRadius: \"12px\",\n            onClick: HandleSendSwapTx,\n            children: 'Swap'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Swap, \"mXq0quPc+Ps8WuISwfyP4QwFBwM=\", false, function () {\n  return [useSwapState, useDerivedSwapInfo, useSwapActionHandlers];\n});\n_c = Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["JSBI","React","useCallback","useContext","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonPrimary","Card","AutoColumn","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","ConfirmSwapModal","ArrowWrapper","Wrapper","SwapHeader","TradePrice","Field","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","LinkStyledButton","maxAmountSpend","AppBody","Contract","ethers","getWeb3Provider","ConnectionInfo","BROKENSWAP_ABI","jsxDEV","_jsxDEV","Fragment","_Fragment","Swap","_s","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe","_trade","theme","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","showRamp","parsedAmounts","INPUT","OUTPUT","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","undefined","formattedAmounts","toSignificant","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","approvalSubmitted","setApprovalSubmitted","maxAmountInput","showInverted","setShowInverted","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","toExact","handleHalfInput","Math","max","Number","toString","handleOutputSelect","outputCurrency","BROKENSWAP_ADDRESS","SendSwapTx","_SendSwapTx","apply","arguments","_asyncToGenerator","connectionInfo","console","log","provider","signer","Wallet","Brokenswap","abi","result","FEERATE","children","active","fileName","_jsxFileName","lineNumber","columnNumber","title","id","isOpen","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","gap","label","showMaxButton","showHalfButton","currency","onMax","onHalf","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","disabled","onChange","borderRadius","align","fontWeight","fontSize","price","executionPrice","HandleSendSwapTx","_c","$RefreshReg$"],"sources":["/app/src/pages/Swap/index.tsx"],"sourcesContent":["// @ts-nocheck\nimport { useCelo } from '@celo/react-celo'\nimport { JsonRpcProvider } from '@ethersproject/providers'\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport { CELO, ChainId as UbeswapChainId, JSBI, Token, TokenAmount, Trade } from '@ubeswap/sdk'\nimport OpticsV1Warning from 'components/Header/OpticsV1Warning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport useENS from 'hooks/useENS'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\n\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport Loader from '../../components/Loader'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport ProgressSteps from '../../components/ProgressSteps'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport TradePrice from '../../components/swap/TradePrice'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useContract } from '../../hooks/useContract'\nimport { SendSwapTx } from '../../hooks/useContract'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\n\nimport { Contract } from '@ethersproject/contracts'\nimport { ethers } from 'ethers'\nimport { getWeb3Provider } from '../../hooks/useContract'\nimport { ConnectionInfo } from '../Connection'\nimport BROKENSWAP_ABI from '../../constants/Brokenswap.json'\n\n// to-do: move to /abis/ \n\nexport default function Swap() {\n  const theme = useContext(ThemeContext)\n\n  // for expert mode\n  // const toggleSettings = useToggleSettingsMenu()\n  // const [isExpertMode] = useExpertModeManager()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    showRamp,\n  } = useDerivedSwapInfo()\n  const parsedAmounts = {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount,\n  }\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  //useEffect(() => {\n  //  if (approval === ApprovalState.PENDING) {\n  //    setApprovalSubmitted(true)\n  //  }\n  //}, [approval, approvalSubmitted])\n\n  //const maxAmountInput: TokenAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const maxAmountInput: TokenAmount | undefined = maxAmountSpend(500)\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: true, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: undefined, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    onUserInput(Field.INPUT, maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  const handleHalfInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) * 0.5, 0).toString())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  )\n\n  const BROKENSWAP_ADDRESS = ConnectionInfo()['Target Contract']\n  \n  async function SendSwapTx() {\n    const connectionInfo = ConnectionInfo()\n    if (connectionInfo === []) {\n      console.log('connectionInfo is null')\n      return\n    }\n    const provider = getWeb3Provider()\n    const signer = new ethers.Wallet('0x5be4ad1a1d6c8298ec36dae3920bc0180ee928427b40ffaf3f26507abc303cbd', provider)\n    const Brokenswap = new Contract(BROKENSWAP_ADDRESS, BROKENSWAP_ABI.abi, signer)\n    const result = await Brokenswap.FEERATE()\n    console.log('result', result)\n    return result\n  }\n\n  return (\n    <>\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader title={'Swap'} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={undefined}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={undefined}\n            onConfirm={SendSwapTx}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={false}\n              showHalfButton={false}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onHalf={handleHalfInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={Field.OUTPUT}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      handleTypeInput(formattedAmounts[Field.OUTPUT])\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              disabled\n            />\n\n            {recipient !== null ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n            <Card padding={'0px'} borderRadius={'20px'}>\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(false) && (\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      Price\n                    </Text>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            </Card>\n            <ButtonPrimary borderRadius=\"12px\" onClick={HandleSendSwapTx}>{`${'Swap'}`}</ButtonPrimary>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}