{"ast":null,"code":"var _s = $RefreshSig$();\nimport { TokenAmount } from '@ubeswap/sdk';\nimport { useTokenContract } from '../hooks/useContract';\nimport { useSingleCallResult } from '../state/multicall/hooks';\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token) {\n  _s();\n  var _useSingleCallResult, _useSingleCallResult$;\n  const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\n  const totalSupply = (_useSingleCallResult = useSingleCallResult(contract, 'totalSupply')) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined;\n}\n_s(useTotalSupply, \"O1q4nO3dWKIds6AT6dgyx5XxxBQ=\", false, function () {\n  return [useTokenContract, useSingleCallResult];\n});","map":{"version":3,"names":["TokenAmount","useTokenContract","useSingleCallResult","useTotalSupply","token","_s","_useSingleCallResult","_useSingleCallResult$","contract","address","totalSupply","result","toString","undefined"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/data/TotalSupply.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@ubeswap/sdk'\n\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n"],"mappings":";AACA,SAAgBA,WAAW,QAAQ,cAAc;AAEjD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,KAAa,EAA2B;EAAAC,EAAA;EAAA,IAAAC,oBAAA,EAAAC,qBAAA;EACrE,MAAMC,QAAQ,GAAGP,gBAAgB,CAACG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,EAAE,KAAK,CAAC;EAExD,MAAMC,WAAsB,IAAAJ,oBAAA,GAAGJ,mBAAmB,CAACM,QAAQ,EAAE,aAAa,CAAC,cAAAF,oBAAA,wBAAAC,qBAAA,GAA5CD,oBAAA,CAA8CK,MAAM,cAAAJ,qBAAA,uBAApDA,qBAAA,CAAuD,CAAC,CAAC;EAExF,OAAOH,KAAK,IAAIM,WAAW,GAAG,IAAIV,WAAW,CAACI,KAAK,EAAEM,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,GAAGC,SAAS;AAC1F;AAACR,EAAA,CANeF,cAAc;EAAA,QACXF,gBAAgB,EAEFC,mBAAmB;AAAA"},"metadata":{},"sourceType":"module"}