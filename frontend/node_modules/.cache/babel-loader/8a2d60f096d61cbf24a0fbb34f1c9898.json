{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractKitProvider = exports.CeloProvider = exports.ContextProvider = exports.useReactCeloContext = void 0;\nconst base_1 = require(\"@celo/contractkit/lib/base\");\nconst react_1 = __importStar(require(\"react\"));\nconst ios_viewport_fix_1 = __importDefault(require(\"./components/ios-viewport-fix\"));\nconst constants_1 = require(\"./constants\");\nconst modals_1 = require(\"./modals\");\nconst react_celo_provider_state_1 = require(\"./react-celo-provider-state\");\nconst use_celo_methods_1 = require(\"./use-celo-methods\");\nconst logger_1 = require(\"./utils/logger\");\n_a = __read(createReactCeloContext(), 2), exports.useReactCeloContext = _a[0], exports.ContextProvider = _a[1];\n// This makes it so we don't have to provide defaults for our context\n// and also so that if our hooks are used outside of the Provider it\n// will throw an error.\nfunction createReactCeloContext() {\n  const contractKitContext = react_1.default.createContext(undefined);\n  const useCtx = () => {\n    const c = react_1.default.useContext(contractKitContext);\n    if (!c) throw new Error('Components using the react-celo hook must be a child of a CeloProvider');\n    return c;\n  };\n  return [useCtx, contractKitContext.Provider];\n}\nconst CeloProvider = _ref => {\n  let {\n    children,\n    connectModal,\n    actionModal,\n    dapp,\n    manualNetworkMode,\n    network,\n    // TODO:#246 remove when network prop is removed\n    defaultNetwork = constants_1.Mainnet.name,\n    theme,\n    networks = constants_1.DEFAULT_NETWORKS,\n    feeCurrency = base_1.CeloContract.GoldToken,\n    buildContractsCache,\n    logger\n  } = _ref;\n  if (logger) {\n    (0, logger_1.setApplicationLogger)(logger);\n  }\n  const [state, dispatch] = (0, react_celo_provider_state_1.useCeloState)({\n    dapp,\n    manualNetworkMode,\n    network,\n    defaultNetwork,\n    theme,\n    networks,\n    feeCurrency\n  });\n  const methods = (0, use_celo_methods_1.useCeloMethods)(state, dispatch, buildContractsCache);\n  // what happens when i disconnect, need to be able to switch chains still.\n  // need to init Unauthenticated connector both at startup and when last chain was disconnected or Replace the null object pattern\n  // benefit is that you might still want to just passively watch a chain\n  // downside is there are some sementics that get weird\n  (0, react_1.useEffect)(() => {\n    (0, logger_1.getApplicationLogger)().debug('onLoad Initialisation of', state.connector.type, 'Connector');\n    methods.initConnector(state.connector, state.address).catch(e => __awaiter(void 0, void 0, void 0, function* () {\n      (0, logger_1.getApplicationLogger)().error('onLoad Initialisation Failed', state.connector.type, e);\n      // If the connector fails to initialise on mount then we reset.\n      yield methods.disconnect();\n    }));\n    // We only want this to run on mount so the deps array is empty.\n    /* eslint-disable-next-line */\n  }, []);\n  return react_1.default.createElement(exports.ContextProvider, {\n    value: [state, dispatch, methods]\n  }, react_1.default.createElement(ios_viewport_fix_1.default, null), react_1.default.createElement(modals_1.ConnectModal, Object.assign({}, connectModal)), react_1.default.createElement(modals_1.ActionModal, Object.assign({}, actionModal)), children);\n};\nexports.CeloProvider = CeloProvider;\n/**\n *\n * @deprecated Use the alias {@link CeloProvider} Component instead.\n */\nexports.ContractKitProvider = exports.CeloProvider;","map":null,"metadata":{},"sourceType":"script"}