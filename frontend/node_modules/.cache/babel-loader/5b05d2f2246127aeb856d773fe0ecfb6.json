{"ast":null,"code":"/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nvar errorClasses = {};\nvar deserializers = {};\nvar addCustomErrorDeserializer = function addCustomErrorDeserializer(name, deserializer) {\n  deserializers[name] = deserializer;\n};\nvar createCustomErrorClass = function createCustomErrorClass(name) {\n  var C = function CustomError(message, fields) {\n    Object.assign(this, fields);\n    this.name = name;\n    this.message = message || name;\n    this.stack = new Error().stack;\n  };\n  C.prototype = new Error();\n  errorClasses[name] = C;\n  return C;\n};\n// inspired from https://github.com/programble/errio/blob/master/index.js\nvar deserializeError = function deserializeError(object) {\n  if (typeof object === \"object\" && object) {\n    try {\n      // $FlowFixMe FIXME HACK\n      var msg = JSON.parse(object.message);\n      if (msg.message && msg.name) {\n        object = msg;\n      }\n    } catch (e) {\n      // nothing\n    }\n    var error = void 0;\n    if (typeof object.name === \"string\") {\n      var name_1 = object.name;\n      var des = deserializers[name_1];\n      if (des) {\n        error = des(object);\n      } else {\n        var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\n          constructor = createCustomErrorClass(name_1);\n        }\n        error = Object.create(constructor.prototype);\n        try {\n          for (var prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {\n          // sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      error = new Error(object.message);\n    }\n    if (!error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n    return error;\n  }\n  return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nvar serializeError = function serializeError(value) {\n  if (!value) return value;\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n  if (typeof value === \"function\") {\n    return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\n  }\n  return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n  var to = {};\n  seen.push(from);\n  for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var value = from[key];\n    if (typeof value === \"function\") {\n      continue;\n    }\n    if (!value || typeof value !== \"object\") {\n      to[key] = value;\n      continue;\n    }\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      continue;\n    }\n    to[key] = \"[Circular]\";\n  }\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n  return to;\n}\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nvar SyncError = createCustomErrorClass(\"SyncError\");\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// db stuff, no need to translate\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\nfunction TransportError(message, id) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n}\nTransportError.prototype = new Error();\naddCustomErrorDeserializer(\"TransportError\", function (e) {\n  return new TransportError(e.message, e.id);\n});\nvar StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\nfunction getAltStatusMessage(code) {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6800:\n      return \"Missing critical parameter\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\nfunction TransportStatusError(statusCode) {\n  this.name = \"TransportStatusError\";\n  var statusText = Object.keys(StatusCodes).find(function (k) {\n    return StatusCodes[k] === statusCode;\n  }) || \"UNKNOWN_ERROR\";\n  var smsg = getAltStatusMessage(statusCode) || statusText;\n  var statusCodeStr = statusCode.toString(16);\n  this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\nTransportStatusError.prototype = new Error();\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) {\n  return new TransportStatusError(e.statusCode);\n});\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };","map":{"version":3,"names":["errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","CustomError","message","fields","Object","assign","stack","Error","prototype","deserializeError","object","msg","JSON","parse","e","error","name_1","des","constructor","console","warn","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","value","destroyCircular","from","seen","to","push","_i","_a","keys","length","key","indexOf","slice","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","id","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","find","k","smsg","statusCodeStr","toString"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@ledgerhq/errors/dist/index.js"],"sourcesContent":["/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}