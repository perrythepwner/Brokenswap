{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProvider = exports.fetchFromProvider = void 0;\nconst micro_ftch_1 = require(\"micro-ftch\");\nconst fetchFromProvider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (url, params) {\n    const res = yield (0, micro_ftch_1.default)(url, {\n      headers: {\n        'content-type': 'application/json'\n      },\n      type: 'json',\n      data: {\n        method: params.method,\n        params: params.params,\n        jsonrpc: '2.0',\n        id: 1\n      }\n    });\n    return res.result;\n  });\n  return function fetchFromProvider(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.fetchFromProvider = fetchFromProvider;\nconst getProvider = provider => {\n  var _provider$connection;\n  if (typeof provider === 'string') {\n    return provider;\n  } else if ((provider === null || provider === void 0 || (_provider$connection = provider.connection) === null || _provider$connection === void 0 ? void 0 : _provider$connection.url) !== undefined) {\n    return provider.connection.url;\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider');\n  }\n};\nexports.getProvider = getProvider;","map":null,"metadata":{},"sourceType":"script"}