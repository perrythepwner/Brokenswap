{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SortedOraclesWrapper = exports.MedianRelation = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar connect_1 = require(\"@celo/connect\");\nvar address_2 = require(\"@celo/utils/lib/address\");\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\nvar base_1 = require(\"../base\");\nvar celo_tokens_1 = require(\"../celo-tokens\");\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\nvar MedianRelation;\n(function (MedianRelation) {\n  MedianRelation[MedianRelation[\"Undefined\"] = 0] = \"Undefined\";\n  MedianRelation[MedianRelation[\"Lesser\"] = 1] = \"Lesser\";\n  MedianRelation[MedianRelation[\"Greater\"] = 2] = \"Greater\";\n  MedianRelation[MedianRelation[\"Equal\"] = 3] = \"Equal\";\n})(MedianRelation = exports.MedianRelation || (exports.MedianRelation = {}));\n/**\n * Currency price oracle contract.\n */\nvar SortedOraclesWrapper = /** @class */function (_super) {\n  __extends(SortedOraclesWrapper, _super);\n  function SortedOraclesWrapper(connection, contract, registry) {\n    var _this = _super.call(this, connection, contract) || this;\n    _this.connection = connection;\n    _this.contract = contract;\n    _this.registry = registry;\n    /**\n     * Returns the report expiry parameter.\n     * @returns Current report expiry.\n     */\n    _this.reportExpirySeconds = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reportExpirySeconds, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Helper function to get the rates for StableToken, by passing the address\n     * of StableToken to `getRates`.\n     */\n    _this.getStableTokenRates = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2 /*return*/, this.getRates(base_1.CeloContract.StableToken)\n          /**\n           * Gets all elements from the doubly linked list.\n           * @param target The ReportTarget, either CeloToken or currency pair in question\n           * @return An unpacked list of elements from largest to smallest.\n           */];\n        });\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Gets the number of rates that have been reported for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The number of reported oracle rates for `token`.\n   */\n  SortedOraclesWrapper.prototype.numRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.numRates(identifier).call()];\n          case 2:\n            response = _a.sent();\n            return [2 /*return*/, (0, BaseWrapper_1.valueToInt)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the median rate for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The median exchange rate for `token`, expressed as:\n   *   amount of that token / equivalent amount in CELO\n   */\n  SortedOraclesWrapper.prototype.medianRate = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.medianRate(identifier).call()];\n          case 2:\n            response = _a.sent();\n            return [2 /*return*/, {\n              rate: (0, BaseWrapper_1.valueToFrac)(response[0], response[1])\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the given address is whitelisted as an oracle for the target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param oracle The address that we're checking the oracle status of\n   * @returns boolean describing whether this account is an oracle\n   */\n  SortedOraclesWrapper.prototype.isOracle = function (target, oracle) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [2 /*return*/, this.contract.methods.isOracle(identifier, oracle).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the list of whitelisted oracles for a given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @returns The list of whitelisted oracles for a given token.\n   */\n  SortedOraclesWrapper.prototype.getOracles = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [2 /*return*/, this.contract.methods.getOracles(identifier).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the expiry for the target if exists, if not the default.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The report expiry in seconds.\n   */\n  SortedOraclesWrapper.prototype.getTokenReportExpirySeconds = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.getTokenReportExpirySeconds(identifier).call()];\n          case 2:\n            response = _a.sent();\n            return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the oldest report for a given target is expired\n   * @param target The ReportTarget, either CeloToken or currency pair\n   */\n  SortedOraclesWrapper.prototype.isOldestReportExpired = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.isOldestReportExpired(identifier).call()];\n          case 2:\n            response = _a.sent();\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  /**\n   * Removes expired reports, if any exist\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param numReports The upper-limit of reports to remove. For example, if there\n   * are 2 expired reports, and this param is 5, it will only remove the 2 that\n   * are expired.\n   */\n  SortedOraclesWrapper.prototype.removeExpiredReports = function (target, numReports) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            if (!!numReports) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.getReports(target)];\n          case 2:\n            numReports = _a.sent().length - 1;\n            _a.label = 3;\n          case 3:\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.removeExpiredReports(identifier, numReports))];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param value The amount of `token` equal to one CELO.\n   */\n  SortedOraclesWrapper.prototype.report = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, fixedValue, _a, lesserKey, greaterKey;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _b.sent();\n            fixedValue = (0, fixidity_1.toFixed)((0, BaseWrapper_1.valueToBigNumber)(value));\n            return [4 /*yield*/, this.findLesserAndGreaterKeys(target, (0, BaseWrapper_1.valueToBigNumber)(value), oracleAddress)];\n          case 2:\n            _a = _b.sent(), lesserKey = _a.lesserKey, greaterKey = _a.greaterKey;\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.report(identifier, fixedValue.toFixed(), lesserKey, greaterKey), {\n              from: oracleAddress\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param value The amount of US Dollars equal to one CELO.\n   * @param oracleAddress The address to report as\n   * @param token The token to report for\n   */\n  SortedOraclesWrapper.prototype.reportStableToken = function (value, oracleAddress, token) {\n    if (token === void 0) {\n      token = celo_tokens_1.StableToken.cUSD;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.report(celo_tokens_1.stableTokenInfos[token].contract, value, oracleAddress)];\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n  SortedOraclesWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {};\n            return [4 /*yield*/, this.reportExpirySeconds()];\n          case 1:\n            return [2 /*return*/, (_a.reportExpirySeconds = _b.sent(), _a)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the sortedoracles contract\n   * @return SortedOraclesConfig object\n   */\n  SortedOraclesWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getConfig()];\n          case 1:\n            config = _a.sent();\n            return [2 /*return*/, {\n              reportExpiry: (0, BaseWrapper_1.secondsToDurationString)(config.reportExpirySeconds)\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n  SortedOraclesWrapper.prototype.getRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, rates, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.getRates(identifier).call()];\n          case 2:\n            response = _a.sent();\n            rates = [];\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              rates.push({\n                address: response[0][i],\n                rate: (0, fixidity_1.fromFixed)((0, BaseWrapper_1.valueToBigNumber)(response[1][i])),\n                medianRelation: medRelIndex\n              });\n            }\n            return [2 /*return*/, rates];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n  SortedOraclesWrapper.prototype.getTimestamps = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, timestamps, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n          case 1:\n            identifier = _a.sent();\n            return [4 /*yield*/, this.contract.methods.getTimestamps(identifier).call()];\n          case 2:\n            response = _a.sent();\n            timestamps = [];\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              timestamps.push({\n                address: response[0][i],\n                timestamp: (0, BaseWrapper_1.valueToBigNumber)(response[1][i]),\n                medianRelation: medRelIndex\n              });\n            }\n            return [2 /*return*/, timestamps];\n        }\n      });\n    });\n  };\n  SortedOraclesWrapper.prototype.getReports = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, rates, timestamps, reports, _loop_1, _i, rates_1, rate;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.getRates(target), this.getTimestamps(target)])];\n          case 1:\n            _a = _b.sent(), rates = _a[0], timestamps = _a[1];\n            reports = [];\n            _loop_1 = function _loop_1(rate) {\n              var match = timestamps.filter(function (t) {\n                return (0, address_1.eqAddress)(t.address, rate.address);\n              });\n              reports.push({\n                address: rate.address,\n                rate: rate.rate,\n                timestamp: match[0].timestamp\n              });\n            };\n            for (_i = 0, rates_1 = rates; _i < rates_1.length; _i++) {\n              rate = rates_1[_i];\n              _loop_1(rate);\n            }\n            return [2 /*return*/, reports];\n        }\n      });\n    });\n  };\n  SortedOraclesWrapper.prototype.findLesserAndGreaterKeys = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentRates, greaterKey, lesserKey, _i, currentRates_1, rate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getRates(target)];\n          case 1:\n            currentRates = _a.sent();\n            greaterKey = address_1.NULL_ADDRESS;\n            lesserKey = address_1.NULL_ADDRESS;\n            // This leverages the fact that the currentRates are already sorted from\n            // greatest to lowest value\n            for (_i = 0, currentRates_1 = currentRates; _i < currentRates_1.length; _i++) {\n              rate = currentRates_1[_i];\n              if (!(0, address_1.eqAddress)(rate.address, oracleAddress)) {\n                if (rate.rate.isLessThanOrEqualTo(value)) {\n                  lesserKey = rate.address;\n                  break;\n                }\n                greaterKey = rate.address;\n              }\n            }\n            return [2 /*return*/, {\n              lesserKey: lesserKey,\n              greaterKey: greaterKey\n            }];\n        }\n      });\n    });\n  };\n  SortedOraclesWrapper.prototype.toCurrencyPairIdentifier = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if ((0, celo_tokens_1.isStableTokenContract)(target)) {\n          return [2 /*return*/, this.registry.addressFor(target)];\n        } else if ((0, address_2.isValidAddress)(target)) {\n          return [2 /*return*/, target];\n        } else {\n          throw new Error(\"\".concat(target, \" is not StableTokenContract deployed or a valid Address\"));\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return SortedOraclesWrapper;\n}(BaseWrapper_1.BaseWrapper);\nexports.SortedOraclesWrapper = SortedOraclesWrapper;","map":null,"metadata":{},"sourceType":"script"}