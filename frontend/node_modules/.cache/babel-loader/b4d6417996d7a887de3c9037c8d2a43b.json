{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst mini_kit_1 = require(\"@celo/contractkit/lib/mini-kit\");\nconst wallet_ledger_1 = require(\"@celo/wallet-ledger\");\nconst hw_transport_webusb_1 = __importDefault(require(\"@ledgerhq/hw-transport-webusb\"));\nconst constants_1 = require(\"../constants\");\nconst common_1 = require(\"./common\");\nclass LedgerConnector extends common_1.AbstractConnector {\n  constructor(network, index, feeCurrency) {\n    super();\n    this.network = network;\n    this.index = index;\n    this.feeCurrency = feeCurrency;\n    this.initialised = false;\n    this.type = constants_1.WalletTypes.Ledger;\n    this.updateFeeCurrency = common_1.updateFeeCurrency.bind(this);\n    this.kit = (0, mini_kit_1.newKit)(network.rpcUrl);\n  }\n  getWallet() {\n    return this.wallet;\n  }\n  createWallet(index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const transport = yield hw_transport_webusb_1.default.create();\n      this.wallet = yield (0, wallet_ledger_1.newLedgerWalletWithSetup)(transport, [index]);\n      return this.wallet;\n    });\n  }\n  createKit(wallet, network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.kit = (0, mini_kit_1.newKit)(network.rpcUrl, wallet);\n      this.kit.connection.defaultAccount = wallet.getAccounts()[0];\n      if (this.feeCurrency) {\n        yield this.updateFeeCurrency(this.feeCurrency);\n      }\n    });\n  }\n  initialise() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.initialised) {\n        return this;\n      }\n      const wallet = yield this.createWallet(this.index);\n      yield this.createKit(wallet, this.network);\n      this.initialised = true;\n      this.emit(common_1.ConnectorEvents.CONNECTED, {\n        walletChainId: null,\n        walletType: this.type,\n        address: this.kit.connection.defaultAccount,\n        index: this.index,\n        networkName: this.network.name\n      });\n      return this;\n    });\n  }\n  supportsFeeCurrency() {\n    return true;\n  }\n  startNetworkChangeFromApp(network) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.createKit(this.getWallet(), network);\n      this.emit(common_1.ConnectorEvents.NETWORK_CHANGED, network.name);\n    });\n  }\n  close() {\n    try {\n      this.kit.connection.stop();\n    } finally {\n      this.disconnect();\n    }\n  }\n}\nexports.default = LedgerConnector;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","mini_kit_1","require","wallet_ledger_1","hw_transport_webusb_1","constants_1","common_1","LedgerConnector","AbstractConnector","constructor","network","index","feeCurrency","initialised","type","WalletTypes","Ledger","updateFeeCurrency","bind","kit","newKit","rpcUrl","getWallet","wallet","createWallet","transport","default","create","newLedgerWalletWithSetup","createKit","connection","defaultAccount","getAccounts","initialise","emit","ConnectorEvents","CONNECTED","walletChainId","walletType","address","networkName","name","supportsFeeCurrency","startNetworkChangeFromApp","NETWORK_CHANGED","close","stop","disconnect"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/connectors/ledger.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mini_kit_1 = require(\"@celo/contractkit/lib/mini-kit\");\nconst wallet_ledger_1 = require(\"@celo/wallet-ledger\");\nconst hw_transport_webusb_1 = __importDefault(require(\"@ledgerhq/hw-transport-webusb\"));\nconst constants_1 = require(\"../constants\");\nconst common_1 = require(\"./common\");\nclass LedgerConnector extends common_1.AbstractConnector {\n    constructor(network, index, feeCurrency) {\n        super();\n        this.network = network;\n        this.index = index;\n        this.feeCurrency = feeCurrency;\n        this.initialised = false;\n        this.type = constants_1.WalletTypes.Ledger;\n        this.updateFeeCurrency = common_1.updateFeeCurrency.bind(this);\n        this.kit = (0, mini_kit_1.newKit)(network.rpcUrl);\n    }\n    getWallet() {\n        return this.wallet;\n    }\n    createWallet(index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transport = yield hw_transport_webusb_1.default.create();\n            this.wallet = yield (0, wallet_ledger_1.newLedgerWalletWithSetup)(transport, [index]);\n            return this.wallet;\n        });\n    }\n    createKit(wallet, network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.kit = (0, mini_kit_1.newKit)(network.rpcUrl, wallet);\n            this.kit.connection.defaultAccount = wallet.getAccounts()[0];\n            if (this.feeCurrency) {\n                yield this.updateFeeCurrency(this.feeCurrency);\n            }\n        });\n    }\n    initialise() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initialised) {\n                return this;\n            }\n            const wallet = yield this.createWallet(this.index);\n            yield this.createKit(wallet, this.network);\n            this.initialised = true;\n            this.emit(common_1.ConnectorEvents.CONNECTED, {\n                walletChainId: null,\n                walletType: this.type,\n                address: this.kit.connection.defaultAccount,\n                index: this.index,\n                networkName: this.network.name,\n            });\n            return this;\n        });\n    }\n    supportsFeeCurrency() {\n        return true;\n    }\n    startNetworkChangeFromApp(network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createKit(this.getWallet(), network);\n            this.emit(common_1.ConnectorEvents.NETWORK_CHANGED, network.name);\n        });\n    }\n    close() {\n        try {\n            this.kit.connection.stop();\n        }\n        finally {\n            this.disconnect();\n        }\n    }\n}\nexports.default = LedgerConnector;\n//# sourceMappingURL=ledger.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}