{"ast":null,"code":"import _asyncToGenerator from \"/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _taggedTemplateLiteral from \"/app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/app/src/pages/Swap/index.tsx\",\n  _templateObject,\n  _templateObject2,\n  _s = $RefreshSig$();\n// @ts-nocheck\n\nimport { JSBI } from '@ubeswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonPrimary } from '../../components/Button';\nimport Card from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport { ArrowWrapper, Wrapper } from '../../components/swap/styleds';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport TradePrice from '../../components/swap/TradePrice';\nimport { Field } from '../../state/swap/actions';\nimport { useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { LinkStyledButton } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport AppBody from '../AppBody';\nimport { Contract } from '@ethersproject/contracts';\nimport { ethers } from 'ethers';\nimport { useWeb3Provider } from '../../hooks/useContract';\nimport { useConnectionInfo, useBalances } from '../../hooks/useConnectionInfo';\nimport BROKENSWAP_ABI from '../../constants/Brokenswap.json';\nimport { CloseIcon } from '../../theme';\nimport Modal from '../../components/Modal';\nimport styled from 'styled-components';\nimport { ERC20_ABI } from 'constants/abis/erc20';\nimport { formatUnits } from '@ethersproject/units';\n\n// to-do: move to /abis/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentWrapper = styled(AutoColumn)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  flex: 1 1;\\n  position: relative;\\n  padding: 1rem;\\n\"])));\n_c = ContentWrapper;\nconst Label = styled.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-weight: bold;\\n  margin-bottom: 0.5rem;\\n\"])));\n_c2 = Label;\nconst InfoLabel = _ref => {\n  let {\n    label,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: [label, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n_c3 = InfoLabel;\nexport default function Swap() {\n  _s();\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe, _trade;\n  const theme = useContext(ThemeContext);\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    showRamp\n  } = useDerivedSwapInfo();\n  const parsedAmounts = {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe = parsedAmounts[independentField]) === null || _parsedAmounts$indepe === void 0 ? void 0 : _parsedAmounts$indepe.greaterThan(JSBI.BigInt(0))));\n  // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  //useEffect(() => {\n  //  if (approval === ApprovalState.PENDING) {\n  //    setApprovalSubmitted(true)\n  //  }\n  //}, [approval, approvalSubmitted])\n\n  //const maxAmountInput: TokenAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const maxAmountInput = maxAmountSpend(500);\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: true,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: undefined,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  const handleHalfInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) * 0.5, 0).toString());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [showTxPopup, setShowTxPopup] = useState(false);\n  const [transactionInfo, setTransactionInfo] = useState({\n    title: '',\n    txHash: '',\n    logs: [],\n    errorCode: '',\n    errorMessage: '',\n    revertReason: ''\n  });\n  const [connectionInfo, isInstanceRunning] = useConnectionInfo();\n  const [HtbTokenBalance, WethTokenBalance] = useBalances();\n  const provider = useWeb3Provider();\n  function sendSwap(_x, _x2, _x3) {\n    return _sendSwap.apply(this, arguments);\n  }\n  function _sendSwap() {\n    _sendSwap = _asyncToGenerator(function* (inputToken, outputToken, inputAmount) {\n      if (isInstanceRunning && provider) {\n        try {\n          console.log('===========INITIALIZING SWAP===========', 'inputToken', inputToken, 'outputToken', outputToken, 'inputAmount', inputAmount);\n          const BROKENSWAP_ADDRESS = connectionInfo['Target Contract'];\n          const signer = new ethers.Wallet(connectionInfo['Player Private Key'], provider);\n          // approve transfer first\n          const inputTokenContract = new Contract(inputToken.address, ERC20_ABI, signer);\n          const approval = yield inputTokenContract.approve(BROKENSWAP_ADDRESS, ethers.utils.parseUnits(inputAmount, 18));\n          const approvalRcpt = yield approval.wait();\n          const Brokenswap = new Contract(BROKENSWAP_ADDRESS, BROKENSWAP_ABI.abi, signer);\n          const transaction = yield Brokenswap.swap(inputToken.address, outputToken.address, ethers.utils.parseUnits(inputAmount, 18));\n          const TxRcpt = yield transaction.wait();\n          const currentBlock = yield provider.getBlockNumber();\n          const events = yield Brokenswap.queryFilter('Swap', currentBlock, currentBlock);\n          console.log(events);\n          console.log('===========SWAP SUCCESSFUL===========', 'Transaction Receipt', TxRcpt);\n          setTransactionInfo({\n            title: 'SWAP SUCCESSFUL',\n            txHash: TxRcpt.transactionHash,\n            logs: events[0].topics\n          });\n          setShowTxPopup(true);\n        } catch (error) {\n          var _ref2, _ref3, _error$error$error$bo, _error$error;\n          console.log('===========SWAP FAILED===========', 'ERROR', error);\n          setTransactionInfo({\n            title: 'SWAP FAILED',\n            revertReason: error.reason || undefined,\n            errorCode: error.code || undefined,\n            errorMessage: (_ref2 = (_ref3 = (_error$error$error$bo = (_error$error = error.error) === null || _error$error === void 0 ? void 0 : _error$error.error.body) !== null && _error$error$error$bo !== void 0 ? _error$error$error$bo : error.error.body) !== null && _ref3 !== void 0 ? _ref3 : error) !== null && _ref2 !== void 0 ? _ref2 : undefined\n          });\n          setShowTxPopup(true);\n        }\n      } else {\n        setShowPopup(true);\n      }\n    });\n    return _sendSwap.apply(this, arguments);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n      active: 'swap'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapHeader, {\n        title: 'Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: undefined,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: undefined,\n          onConfirm: undefined,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: 'md',\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: 'From',\n            value: formattedAmounts[Field.INPUT],\n            showMaxButton: false,\n            showHalfButton: false,\n            currency: currencies[Field.INPUT],\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onHalf: handleHalfInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: Field.OUTPUT,\n            id: \"swap-currency-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: 'center',\n              style: {\n                padding: '0 1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    handleTypeInput(formattedAmounts[Field.OUTPUT]);\n                    onSwitchTokens();\n                  },\n                  color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.OUTPUT],\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && 'To',\n            showMaxButton: false,\n            currency: currencies[Field.OUTPUT],\n            hideNumericalInput: true,\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: currencies[Field.INPUT],\n            id: \"swap-currency-output\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), recipient !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: \"- Remove send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Card, {\n            padding: '0px',\n            borderRadius: '20px',\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"8px\",\n              style: {\n                padding: '0 16px'\n              },\n              children: Boolean(false) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                  price: (_trade = trade) === null || _trade === void 0 ? void 0 : _trade.executionPrice,\n                  showInverted: showInverted,\n                  setShowInverted: setShowInverted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            borderRadius: \"12px\",\n            onClick: () => sendSwap(currencies[Field.INPUT], currencies[Field.OUTPUT], formattedAmounts[Field.INPUT]),\n            children: 'Swap'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: showPopup,\n            onDismiss: () => setShowPopup(false),\n            children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"12px\",\n                children: /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 500,\n                    fontSize: 18,\n                    children: 'No instance found!\\nStart a new instance in the Challenge Handler and then Reload the page.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    onClick: () => setShowPopup(false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: showTxPopup,\n            onDismiss: () => setShowTxPopup(false),\n            children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n              gap: '12x',\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"12px\",\n                children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 800,\n                    fontSize: 18,\n                    style: transactionInfo.error === undefined ? {\n                      color: '#8878C3'\n                    } : {\n                      color: '#E83B46'\n                    },\n                    children: transactionInfo.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    onClick: () => setShowTxPopup(false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 400,\n                    fontSize: 18,\n                    children: [transactionInfo.txHash && /*#__PURE__*/_jsxDEV(InfoLabel, {\n                      label: \"Transaction Hash\",\n                      value: transactionInfo.txHash\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 50\n                    }, this), transactionInfo.logs && transactionInfo.logs.length == 4 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n                        label: \"Swap Details\",\n                        value: ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n                        label: \"Input\",\n                        value: parseFloat(formatUnits(transactionInfo.logs[1], 18)) + ' ' + currencies[Field.INPUT].symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n                        label: \"Output\",\n                        value: parseFloat(formatUnits(transactionInfo.logs[2], 18)) + '  ' + currencies[Field.OUTPUT].symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n                        label: \"With Amount of Fees moved to Fees Pool\",\n                        value: parseFloat(formatUnits(transactionInfo.logs[3], 18)) + ' ' + currencies[Field.INPUT].symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n                        label: \"NOTE\",\n                        value: '\\n Reload page to view updated balances'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true), transactionInfo.errorMessage && /*#__PURE__*/_jsxDEV(InfoLabel, {\n                      label: \"Error\",\n                      value: JSON.parse(transactionInfo.errorMessage).message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 56\n                    }, this), transactionInfo.errorCode && /*#__PURE__*/_jsxDEV(InfoLabel, {\n                      label: \"Error code\",\n                      value: transactionInfo.errorCode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 53\n                    }, this), transactionInfo.revertReason && /*#__PURE__*/_jsxDEV(InfoLabel, {\n                      label: \"Revert reason\",\n                      value: transactionInfo.revertReason\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Swap, \"G18QyKTlNdVT5/uPMzLV7zPpub0=\", false, function () {\n  return [useSwapState, useDerivedSwapInfo, useSwapActionHandlers, useConnectionInfo, useBalances, useWeb3Provider];\n});\n_c4 = Swap;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ContentWrapper\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"InfoLabel\");\n$RefreshReg$(_c4, \"Swap\");","map":{"version":3,"names":["JSBI","React","useCallback","useContext","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonPrimary","Card","AutoColumn","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","ConfirmSwapModal","ArrowWrapper","Wrapper","SwapHeader","TradePrice","Field","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","LinkStyledButton","maxAmountSpend","AppBody","Contract","ethers","useWeb3Provider","useConnectionInfo","useBalances","BROKENSWAP_ABI","CloseIcon","Modal","styled","ERC20_ABI","formatUnits","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentWrapper","_templateObject","_taggedTemplateLiteral","_c","Label","span","_templateObject2","_c2","InfoLabel","_ref","label","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","Swap","_s","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe","_trade","theme","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","showRamp","parsedAmounts","INPUT","OUTPUT","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","dependentField","handleTypeInput","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","undefined","formattedAmounts","toSignificant","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","approvalSubmitted","setApprovalSubmitted","maxAmountInput","showInverted","setShowInverted","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","toExact","handleHalfInput","Math","max","Number","toString","handleOutputSelect","outputCurrency","showPopup","setShowPopup","showTxPopup","setShowTxPopup","transactionInfo","setTransactionInfo","title","logs","errorCode","errorMessage","revertReason","connectionInfo","isInstanceRunning","HtbTokenBalance","WethTokenBalance","provider","sendSwap","_x","_x2","_x3","_sendSwap","apply","arguments","_asyncToGenerator","inputToken","outputToken","inputAmount","console","log","BROKENSWAP_ADDRESS","signer","Wallet","inputTokenContract","address","approval","approve","utils","parseUnits","approvalRcpt","wait","Brokenswap","abi","transaction","swap","TxRcpt","currentBlock","getBlockNumber","events","queryFilter","transactionHash","topics","error","_ref2","_ref3","_error$error$error$bo","_error$error","reason","code","body","active","id","isOpen","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","gap","showMaxButton","showHalfButton","currency","onMax","onHalf","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","hideNumericalInput","disabled","onChange","borderRadius","align","fontWeight","fontSize","price","executionPrice","length","parseFloat","symbol","JSON","parse","message","_c4","$RefreshReg$"],"sources":["/app/src/pages/Swap/index.tsx"],"sourcesContent":["// @ts-nocheck\nimport { useCelo } from '@celo/react-celo'\nimport { JsonRpcProvider } from '@ethersproject/providers'\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport { CELO, ChainId as UbeswapChainId, JSBI, Token, TokenAmount, Trade } from '@ubeswap/sdk'\nimport OpticsV1Warning from 'components/Header/OpticsV1Warning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport useENS from 'hooks/useENS'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown, Info } from 'react-feather'\nimport ReactGA, { send } from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { decodeError } from 'ethers-decode-error'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport Loader from '../../components/Loader'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport ProgressSteps from '../../components/ProgressSteps'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport TradePrice from '../../components/swap/TradePrice'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useContract, useTokenContract } from '../../hooks/useContract'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\n\nimport { Contract } from '@ethersproject/contracts'\nimport { ethers } from 'ethers'\nimport { useWeb3Provider } from '../../hooks/useContract'\nimport { useConnectionInfo, useBalances } from '../../hooks/useConnectionInfo'\nimport BROKENSWAP_ABI from '../../constants/Brokenswap.json'\nimport { CloseIcon } from '../../theme'\nimport Modal from '../../components/Modal'\nimport styled from 'styled-components'\nimport { connect } from 'http2'\nimport { ERC20_ABI } from 'constants/abis/erc20'\nimport { set } from 'lodash'\nimport { formatUnits } from '@ethersproject/units'\n\n// to-do: move to /abis/\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  flex: 1 1;\n  position: relative;\n  padding: 1rem;\n`\nconst Label = styled.span`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`\n\nconst InfoLabel = ({ label, value }) => (\n  <div>\n    <Label>{label}: </Label>\n    {value}\n  </div>\n)\n\nexport default function Swap() {\n  const theme = useContext(ThemeContext)\n\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    showRamp,\n  } = useDerivedSwapInfo()\n  const parsedAmounts = {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount,\n  }\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  //useEffect(() => {\n  //  if (approval === ApprovalState.PENDING) {\n  //    setApprovalSubmitted(true)\n  //  }\n  //}, [approval, approvalSubmitted])\n\n  //const maxAmountInput: TokenAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const maxAmountInput: TokenAmount | undefined = maxAmountSpend(500)\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: true, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: undefined, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    onUserInput(Field.INPUT, maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  const handleHalfInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) * 0.5, 0).toString())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  )\n\n  const [showPopup, setShowPopup] = useState(false)\n  const [showTxPopup, setShowTxPopup] = useState(false)\n  const [transactionInfo, setTransactionInfo] = useState({\n    title: '',\n    txHash: '',\n    logs: [],\n    errorCode: '',\n    errorMessage: '',\n    revertReason: '',\n  })\n  const [connectionInfo, isInstanceRunning] = useConnectionInfo()\n  const [HtbTokenBalance, WethTokenBalance] = useBalances()\n  const provider = useWeb3Provider()\n\n  async function sendSwap(inputToken: Token, outputToken: Token, inputAmount: string) {\n    if (isInstanceRunning && provider) {\n      try {\n        console.log(\n          '===========INITIALIZING SWAP===========',\n          'inputToken',\n          inputToken,\n          'outputToken',\n          outputToken,\n          'inputAmount',\n          inputAmount\n        )\n        const BROKENSWAP_ADDRESS = connectionInfo['Target Contract']\n        const signer = new ethers.Wallet(connectionInfo['Player Private Key'], provider)\n        // approve transfer first\n        const inputTokenContract = new Contract(inputToken.address, ERC20_ABI, signer)\n        const approval = await inputTokenContract.approve(BROKENSWAP_ADDRESS, ethers.utils.parseUnits(inputAmount, 18))\n        const approvalRcpt = await approval.wait()\n        const Brokenswap = new Contract(BROKENSWAP_ADDRESS, BROKENSWAP_ABI.abi, signer)\n        const transaction = await Brokenswap.swap(\n          inputToken.address,\n          outputToken.address,\n          ethers.utils.parseUnits(inputAmount, 18)\n        )\n        const TxRcpt = await transaction.wait()\n        const currentBlock = await provider.getBlockNumber()\n        const events = await Brokenswap.queryFilter('Swap', currentBlock, currentBlock)\n        console.log(events)\n        console.log('===========SWAP SUCCESSFUL===========', 'Transaction Receipt', TxRcpt)\n        setTransactionInfo({\n          title: 'SWAP SUCCESSFUL',\n          txHash: TxRcpt.transactionHash,\n          logs: events[0].topics,\n        })\n        setShowTxPopup(true)\n      } catch (error) {\n        console.log('===========SWAP FAILED===========', 'ERROR', error)\n        setTransactionInfo({\n          title: 'SWAP FAILED',\n          revertReason: error.reason || undefined,\n          errorCode: error.code || undefined,\n          errorMessage: error.error?.error.body ?? error.error.body ?? error ?? undefined,\n        })\n        setShowTxPopup(true)\n      }\n    } else {\n      setShowPopup(true)\n    }\n  }\n\n  return (\n    <>\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader title={'Swap'} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={undefined}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={undefined}\n            onConfirm={undefined}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={false}\n              showHalfButton={false}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onHalf={handleHalfInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={Field.OUTPUT}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      handleTypeInput(formattedAmounts[Field.OUTPUT])\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              hideNumericalInput={true}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              disabled\n            />\n\n            {recipient !== null ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n            <Card padding={'0px'} borderRadius={'20px'}>\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(false) && (\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      Price\n                    </Text>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            </Card>\n            <ButtonPrimary\n              borderRadius=\"12px\"\n              onClick={() => sendSwap(currencies[Field.INPUT], currencies[Field.OUTPUT], formattedAmounts[Field.INPUT])}\n            >{`${'Swap'}`}</ButtonPrimary>\n            <Modal isOpen={showPopup} onDismiss={() => setShowPopup(false)}>\n              <ContentWrapper>\n                <AutoColumn gap=\"12px\">\n                  <RowBetween>\n                    <Text fontWeight={500} fontSize={18}>\n                      {'No instance found!\\nStart a new instance in the Challenge Handler and then Reload the page.'}\n                    </Text>\n                    <CloseIcon onClick={() => setShowPopup(false)} />\n                  </RowBetween>\n                </AutoColumn>\n              </ContentWrapper>\n            </Modal>\n\n            <Modal isOpen={showTxPopup} onDismiss={() => setShowTxPopup(false)}>\n              <ContentWrapper gap={'12x'}>\n                <AutoColumn gap=\"12px\">\n                  <RowBetween>\n                    <Text\n                      fontWeight={800}\n                      fontSize={18}\n                      style={transactionInfo.error === undefined ? { color: '#8878C3' } : { color: '#E83B46' }}\n                    >\n                      {transactionInfo.title}\n                    </Text>\n                    <CloseIcon onClick={() => setShowTxPopup(false)} />\n                  </RowBetween>\n                  <RowBetween>\n                    <Text fontWeight={400} fontSize={18}>\n                      {transactionInfo.txHash && <InfoLabel label=\"Transaction Hash\" value={transactionInfo.txHash} />}\n                      {transactionInfo.logs && transactionInfo.logs.length == 4 && (\n                        <>\n                          <br />\n                          <InfoLabel label=\"Swap Details\" value={''} />\n                          <InfoLabel\n                            label=\"Input\"\n                            value={\n                              parseFloat(formatUnits(transactionInfo.logs[1], 18)) +\n                              ' ' +\n                              currencies[Field.INPUT].symbol\n                            }\n                          />\n                          <InfoLabel\n                            label=\"Output\"\n                            value={\n                              parseFloat(formatUnits(transactionInfo.logs[2], 18)) +\n                              '  ' +\n                              currencies[Field.OUTPUT].symbol\n                            }\n                          />\n                          <InfoLabel\n                            label=\"With Amount of Fees moved to Fees Pool\"\n                            value={\n                              parseFloat(formatUnits(transactionInfo.logs[3], 18)) +\n                              ' ' +\n                              currencies[Field.INPUT].symbol\n                            }\n                          />\n                          <br />\n                          <InfoLabel label=\"NOTE\" value={'\\n Reload page to view updated balances'} />\n                        </>\n                      )}\n                      {transactionInfo.errorMessage && <InfoLabel label=\"Error\" value={JSON.parse(transactionInfo.errorMessage).message} />}\n                      {transactionInfo.errorCode && <InfoLabel label=\"Error code\" value={transactionInfo.errorCode} />}\n                      {transactionInfo.revertReason && (\n                        <InfoLabel label=\"Revert reason\" value={transactionInfo.revertReason} />\n                      )}\n                    </Text>\n                  </RowBetween>\n                </AutoColumn>\n              </ContentWrapper>\n            </Modal>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}