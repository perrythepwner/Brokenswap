{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAccountClaim = exports.AccountClaimType = exports.AccountClaimTypeH = void 0;\nvar address_1 = require(\"@celo/utils/lib/address\");\nvar io_1 = require(\"@celo/utils/lib/io\");\nvar Either_1 = require(\"fp-ts/lib/Either\");\nvar t = __importStar(require(\"io-ts\"));\nvar types_1 = require(\"./types\");\n/**\n *\n * Provide the type minus the validation that the public key and address are derived from the same private key\n */\nexports.AccountClaimTypeH = t.type({\n  type: t.literal(types_1.ClaimTypes.ACCOUNT),\n  timestamp: types_1.TimestampType,\n  address: io_1.AddressType,\n  // io-ts way of defining optional key-value pair\n  publicKey: t.union([t.undefined, io_1.PublicKeyType])\n});\nexports.AccountClaimType = new t.Type('AccountClaimType', exports.AccountClaimTypeH.is, function (unknownValue, context) {\n  return Either_1.either.chain(exports.AccountClaimTypeH.validate(unknownValue, context), function (claim) {\n    if (claim.publicKey === undefined) {\n      return t.success(claim);\n    }\n    var derivedAddress = (0, address_1.publicKeyToAddress)(claim.publicKey);\n    return derivedAddress === claim.address ? t.success(claim) : t.failure(claim, context, 'public key did not match the address in the claim');\n  });\n}, function (x) {\n  return x;\n});\nvar createAccountClaim = function createAccountClaim(address, publicKey) {\n  var claim = {\n    timestamp: (0, types_1.now)(),\n    type: types_1.ClaimTypes.ACCOUNT,\n    address: address,\n    publicKey: publicKey\n  };\n  var parsedClaim = exports.AccountClaimType.decode(claim);\n  if ((0, Either_1.isLeft)(parsedClaim)) {\n    throw new Error(\"A valid claim could not be created\");\n  }\n  return parsedClaim.right;\n};\nexports.createAccountClaim = createAccountClaim;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","createAccountClaim","AccountClaimType","AccountClaimTypeH","address_1","require","io_1","Either_1","t","types_1","type","literal","ClaimTypes","ACCOUNT","timestamp","TimestampType","address","AddressType","publicKey","union","PublicKeyType","Type","is","unknownValue","context","either","chain","validate","claim","success","derivedAddress","publicKeyToAddress","failure","x","now","parsedClaim","decode","isLeft","Error","right"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/contractkit/lib/identity/claims/account.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAccountClaim = exports.AccountClaimType = exports.AccountClaimTypeH = void 0;\nvar address_1 = require(\"@celo/utils/lib/address\");\nvar io_1 = require(\"@celo/utils/lib/io\");\nvar Either_1 = require(\"fp-ts/lib/Either\");\nvar t = __importStar(require(\"io-ts\"));\nvar types_1 = require(\"./types\");\n/**\n *\n * Provide the type minus the validation that the public key and address are derived from the same private key\n */\nexports.AccountClaimTypeH = t.type({\n    type: t.literal(types_1.ClaimTypes.ACCOUNT),\n    timestamp: types_1.TimestampType,\n    address: io_1.AddressType,\n    // io-ts way of defining optional key-value pair\n    publicKey: t.union([t.undefined, io_1.PublicKeyType]),\n});\nexports.AccountClaimType = new t.Type('AccountClaimType', exports.AccountClaimTypeH.is, function (unknownValue, context) {\n    return Either_1.either.chain(exports.AccountClaimTypeH.validate(unknownValue, context), function (claim) {\n        if (claim.publicKey === undefined) {\n            return t.success(claim);\n        }\n        var derivedAddress = (0, address_1.publicKeyToAddress)(claim.publicKey);\n        return derivedAddress === claim.address\n            ? t.success(claim)\n            : t.failure(claim, context, 'public key did not match the address in the claim');\n    });\n}, function (x) { return x; });\nvar createAccountClaim = function (address, publicKey) {\n    var claim = {\n        timestamp: (0, types_1.now)(),\n        type: types_1.ClaimTypes.ACCOUNT,\n        address: address,\n        publicKey: publicKey,\n    };\n    var parsedClaim = exports.AccountClaimType.decode(claim);\n    if ((0, Either_1.isLeft)(parsedClaim)) {\n        throw new Error(\"A valid claim could not be created\");\n    }\n    return parsedClaim.right;\n};\nexports.createAccountClaim = createAccountClaim;\n//# sourceMappingURL=account.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}