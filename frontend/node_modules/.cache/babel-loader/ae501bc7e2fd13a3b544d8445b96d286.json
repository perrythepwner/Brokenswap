{"ast":null,"code":"var MersenneTwister = require('mersenne-twister');\nvar paperGen = require('./paper');\nvar Color = require('color');\nvar colors = require('./colors');\nvar shapeCount = 4;\nmodule.exports = generateIdenticon;\nvar generator;\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n  var elements = paperGen(diameter);\n  var paper = elements.paper;\n  var container = elements.container;\n  var remainingColors = hueShift(colors.slice(), generator);\n  var bkgnd = paper.rect(0, 0, diameter, diameter);\n  bkgnd.attr(\"fill\", genColor(remainingColors));\n  bkgnd.attr('stroke', 'none');\n  for (var i = 0; i < shapeCount - 1; i++) {\n    genShape(paper, remainingColors, diameter, i, shapeCount - 1);\n  }\n  return container;\n}\nfunction genShape(paper, remainingColors, diameter, i, total) {\n  var shape = paper.rect(0, 0, diameter, diameter);\n  shape.rotate(360 * generator.random());\n  var trans = diameter / total * generator.random() + i * diameter / total;\n  shape.translate(trans);\n  shape.rotate(180 * generator.random());\n  shape.attr('fill', genColor(remainingColors));\n  shape.attr('stroke', 'none');\n}\nfunction genColor(colors) {\n  var rand = generator.random();\n  var idx = Math.floor(colors.length * generator.random());\n  var color = colors.splice(idx, 1)[0];\n  return color;\n}\nvar wobble = 30;\nfunction hueShift(colors, generator) {\n  var amount = generator.random() * 30 - wobble / 2;\n  return colors.map(function (hex) {\n    var color = Color(hex);\n    color.rotate(amount);\n    return color.hexString();\n  });\n}","map":{"version":3,"names":["MersenneTwister","require","paperGen","Color","colors","shapeCount","module","exports","generateIdenticon","generator","diameter","seed","elements","paper","container","remainingColors","hueShift","slice","bkgnd","rect","attr","genColor","i","genShape","total","shape","rotate","random","trans","translate","rand","idx","Math","floor","length","color","splice","wobble","amount","map","hex","hexString"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/jazzicon/index.js"],"sourcesContent":["var MersenneTwister = require('mersenne-twister');\nvar paperGen = require('./paper')\nvar Color = require('color')\nvar colors = require('./colors')\nvar shapeCount = 4\n\nmodule.exports = generateIdenticon\n\nvar generator\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n\n  var elements = paperGen(diameter)\n  var paper = elements.paper\n  var container = elements.container\n\n  var remainingColors = hueShift(colors.slice(), generator)\n\n\n  var bkgnd = paper.rect(0, 0, diameter, diameter);\n  bkgnd.attr(\"fill\", genColor(remainingColors));\n  bkgnd.attr('stroke', 'none');\n\n  for(var i = 0; i < shapeCount - 1; i++) {\n    genShape(paper, remainingColors, diameter, i, shapeCount - 1)\n  }\n\n  return container\n}\n\nfunction genShape(paper, remainingColors, diameter, i, total) {\n  var shape = paper.rect(0, 0, diameter, diameter);\n  shape.rotate(360 * generator.random())\n\n  var trans = diameter / total * generator.random() + (i * diameter / total)\n  shape.translate(trans)\n\n  shape.rotate(180 * generator.random())\n  shape.attr('fill', genColor(remainingColors));\n  shape.attr('stroke', 'none');\n}\n\nfunction genColor(colors) {\n  var rand = generator.random()\n  var idx = Math.floor(colors.length * generator.random())\n  var color = colors.splice(idx,1)[0]\n  return color\n}\n\nvar wobble = 30\nfunction hueShift(colors, generator) {\n  var amount = (generator.random() * 30) - (wobble / 2)\n  return colors.map(function(hex) {\n    var color = Color(hex)\n    color.rotate(amount)\n    return color.hexString()\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}