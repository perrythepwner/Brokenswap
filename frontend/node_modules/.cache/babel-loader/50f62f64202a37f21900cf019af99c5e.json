{"ast":null,"code":"import _asyncToGenerator from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useCelo,useConnectedSigner}from'@celo/react-celo';import{MaxUint256}from'@ethersproject/constants';import{TokenAmount}from'@ubeswap/sdk';import{useDoTransaction}from'components/swap/routing';import{MoolaRouterTrade}from'components/swap/routing/hooks/useTrade';import{MoolaDirectTrade}from'components/swap/routing/moola/MoolaDirectTrade';import{useMoolaConfig}from'components/swap/routing/moola/useMoola';import{MinimaRouterTrade}from'components/swap/routing/trade';import{useCallback,useMemo}from'react';import{useUserMinApprove}from'state/user/hooks';import{MINIMA_ROUTER_ADDRESS,ROUTER_ADDRESS,UBESWAP_MOOLA_ROUTER_ADDRESS}from'../constants';import{useTokenAllowance}from'../data/Allowances';import{Field}from'../state/swap/actions';import{useHasPendingApproval}from'../state/transactions/hooks';import{computeSlippageAdjustedAmounts}from'../utils/prices';import{useTokenContract}from'./useContract';export let ApprovalState=/*#__PURE__*/function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";return ApprovalState;}({});// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(amountToApprove,spender){const{address:account}=useCelo();const signer=useConnectedSigner();const token=amountToApprove instanceof TokenAmount?amountToApprove.token:undefined;const[minApprove]=useUserMinApprove();const currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);const pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nconst approvalState=useMemo(()=>{if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);const tokenContractDisconnected=useTokenContract(token===null||token===void 0?void 0:token.address);const doTransaction=useDoTransaction();const approve=useCallback(/*#__PURE__*/_asyncToGenerator(function*(){if(approvalState!==ApprovalState.NOT_APPROVED){console.error('approve was called unnecessarily');return;}if(!token){console.error('no token');return;}if(!tokenContractDisconnected){console.error('tokenContract is null');return;}if(!amountToApprove){console.error('missing amount to approve');return;}if(!spender){console.error('no spender');return;}// connect\nconst tokenContract=tokenContractDisconnected.connect(signer);if(minApprove){yield doTransaction(tokenContract,'approve',{args:[spender,amountToApprove.raw.toString()],summary:\"Approve \".concat(amountToApprove.toSignificant(6),\" \").concat(amountToApprove.currency.symbol),approval:{tokenAddress:token.address,spender:spender}});}else{yield doTransaction(tokenContract,'approve',{args:[spender,MaxUint256],summary:\"Approve \".concat(amountToApprove.currency.symbol),approval:{tokenAddress:token.address,spender:spender}});}}),[approvalState,token,tokenContractDisconnected,amountToApprove,spender,signer,minApprove,doTransaction]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade){let allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const amountToApprove=useMemo(()=>trade?computeSlippageAdjustedAmounts(trade,allowedSlippage)[Field.INPUT]:undefined,[trade,allowedSlippage]);const moola=useMoolaConfig();return useApproveCallback(amountToApprove,trade instanceof MinimaRouterTrade?MINIMA_ROUTER_ADDRESS:trade instanceof MoolaDirectTrade?moola===null||moola===void 0?void 0:moola.lendingPool:trade instanceof MoolaRouterTrade?UBESWAP_MOOLA_ROUTER_ADDRESS:ROUTER_ADDRESS);}","map":{"version":3,"names":["useCelo","useConnectedSigner","MaxUint256","TokenAmount","useDoTransaction","MoolaRouterTrade","MoolaDirectTrade","useMoolaConfig","MinimaRouterTrade","useCallback","useMemo","useUserMinApprove","MINIMA_ROUTER_ADDRESS","ROUTER_ADDRESS","UBESWAP_MOOLA_ROUTER_ADDRESS","useTokenAllowance","Field","useHasPendingApproval","computeSlippageAdjustedAmounts","useTokenContract","ApprovalState","useApproveCallback","amountToApprove","spender","address","account","signer","token","undefined","minApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","lessThan","PENDING","NOT_APPROVED","APPROVED","tokenContractDisconnected","doTransaction","approve","_asyncToGenerator","console","error","tokenContract","connect","args","raw","toString","summary","concat","toSignificant","currency","symbol","approval","tokenAddress","useApproveCallbackFromTrade","trade","allowedSlippage","arguments","length","INPUT","moola","lendingPool"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { useCelo, useConnectedSigner } from '@celo/react-celo'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { JsonRpcSigner } from '@ethersproject/providers'\nimport { TokenAmount, Trade } from '@ubeswap/sdk'\nimport { useDoTransaction } from 'components/swap/routing'\nimport { MoolaRouterTrade } from 'components/swap/routing/hooks/useTrade'\nimport { MoolaDirectTrade } from 'components/swap/routing/moola/MoolaDirectTrade'\nimport { useMoolaConfig } from 'components/swap/routing/moola/useMoola'\nimport { MinimaRouterTrade } from 'components/swap/routing/trade'\nimport { useCallback, useMemo } from 'react'\nimport { useUserMinApprove } from 'state/user/hooks'\n\nimport { MINIMA_ROUTER_ADDRESS, ROUTER_ADDRESS, UBESWAP_MOOLA_ROUTER_ADDRESS } from '../constants'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { Field } from '../state/swap/actions'\nimport { useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: TokenAmount,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { address: account } = useCelo()\n  const signer = useConnectedSigner() as JsonRpcSigner\n\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const [minApprove] = useUserMinApprove()\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContractDisconnected = useTokenContract(token?.address)\n  const doTransaction = useDoTransaction()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContractDisconnected) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    // connect\n    const tokenContract = tokenContractDisconnected.connect(signer)\n\n    if (minApprove) {\n      await doTransaction(tokenContract, 'approve', {\n        args: [spender, amountToApprove.raw.toString()],\n        summary: `Approve ${amountToApprove.toSignificant(6)} ${amountToApprove.currency.symbol}`,\n        approval: { tokenAddress: token.address, spender: spender },\n      })\n    } else {\n      await doTransaction(tokenContract, 'approve', {\n        args: [spender, MaxUint256],\n        summary: `Approve ${amountToApprove.currency.symbol}`,\n        approval: { tokenAddress: token.address, spender: spender },\n      })\n    }\n  }, [approvalState, token, tokenContractDisconnected, amountToApprove, spender, signer, minApprove, doTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage]\n  )\n  const moola = useMoolaConfig()\n  return useApproveCallback(\n    amountToApprove,\n    trade instanceof MinimaRouterTrade\n      ? MINIMA_ROUTER_ADDRESS\n      : trade instanceof MoolaDirectTrade\n      ? moola?.lendingPool\n      : trade instanceof MoolaRouterTrade\n      ? UBESWAP_MOOLA_ROUTER_ADDRESS\n      : ROUTER_ADDRESS\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}