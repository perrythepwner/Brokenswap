{"ast":null,"code":"import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var checkFetcher = function checkFetcher(fetcher) {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(37);\n  }\n};","map":{"version":3,"sources":["../../../src/link/http/checkFetcher.ts"],"names":[],"mappings":"AAAA,SAAS,iBAAiB,QAAQ,kCAAkC;AAEpE,OAAO,IAAM,YAAY,GAAG,SAAf,YAAY,CACvB,OAAuD,EAAA;EAEvD,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;IAC5C,MAAM,iBAAiB,CAAC,EAAA,CAAA;EAYzB;AACH,CAAC","sourcesContent":["import { newInvariantError } from \"../../utilities/globals/index.js\";\n\nexport const checkFetcher = (\n  fetcher: WindowOrWorkerGlobalScope[\"fetch\"] | undefined\n) => {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}