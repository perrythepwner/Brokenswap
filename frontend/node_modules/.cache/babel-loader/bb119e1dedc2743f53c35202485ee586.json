{"ast":null,"code":"import _asyncToGenerator from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useCelo}from'@celo/react-celo';import{CELO,JSBI,Token}from'@ubeswap/sdk';import{describeTrade}from'components/swap/routing/describeTrade';import{MoolaDirectTrade}from'components/swap/routing/moola/MoolaDirectTrade';import{useTradeCallback}from'components/swap/routing/useTradeCallback';import UnsupportedCurrencyFooter from'components/swap/UnsupportedCurrencyFooter';import{useIsTransactionUnsupported}from'hooks/Trades';import useENS from'hooks/useENS';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonPrimary}from'../../components/Button';import Card from'../../components/Card';import{AutoColumn}from'../../components/Column';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import{ArrowWrapper,Wrapper}from'../../components/swap/styleds';import SwapHeader from'../../components/swap/SwapHeader';import TradePrice from'../../components/swap/TradePrice';import{useAllTokens,useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useUserSingleHopOnly,useUserSlippageTolerance}from'../../state/user/hooks';import{LinkStyledButton}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Swap(){var _ref2,_parsedAmounts$depend,_parsedAmounts$depend2,_parsedAmounts$indepe,_parsedAmounts$Field$,_parsedAmounts$Field$2;const loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nconst[loadedInputCurrency,loadedOutputCurrency]=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)];const[dismissTokenWarning,setDismissTokenWarning]=useState(false);const urlLoadedTokens=useMemo(()=>{var _filter,_ref;return(_filter=(_ref=[loadedInputCurrency,loadedOutputCurrency])===null||_ref===void 0?void 0:_ref.filter(c=>c instanceof Token))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);const handleConfirmTokenWarning=useCallback(()=>{setDismissTokenWarning(true);},[]);// dismiss warning if all imported tokens are in active lists\nconst defaultTokens=useAllTokens();const importTokensNotInDefault=urlLoadedTokens&&urlLoadedTokens.filter(token=>{return!(token.address in defaultTokens);});const{address:account,network}=useCelo();const chainId=network.chainId;const theme=useContext(ThemeContext);// toggle wallet when disconnected\nconst toggleWalletModal=useWalletModalToggle();// for expert mode\nconst toggleSettings=useToggleSettingsMenu();const[isExpertMode]=useExpertModeManager();// get custom setting values for user\nconst[allowedSlippage]=useUserSlippageTolerance();// swap state\nconst{independentField,typedValue,recipient}=useSwapState();const{v2Trade,currencyBalances,parsedAmount,currencies,inputError:swapInputError,showRamp}=useDerivedSwapInfo();const{address:recipientAddress}=useENS(recipient);const trade=v2Trade;const parsedAmounts={[Field.INPUT]:independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount,[Field.OUTPUT]:independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount};const{onSwitchTokens,onCurrencySelection,onUserInput,onChangeRecipient}=useSwapActionHandlers();const isValid=!swapInputError;const dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;const handleTypeInput=useCallback(value=>{onUserInput(Field.INPUT,value);},[onUserInput]);const handleTypeOutput=useCallback(value=>{onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nconst[{showConfirm,tradeToConfirm,swapErrorMessage,attemptingTxn,txHash},setSwapState]=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined});const formattedAmounts={[independentField]:typedValue,[dependentField]:(_ref2=trade instanceof MoolaDirectTrade?(_parsedAmounts$depend=parsedAmounts[dependentField])===null||_parsedAmounts$depend===void 0?void 0:_parsedAmounts$depend.toExact():(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_ref2!==void 0?_ref2:''};const userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe=parsedAmounts[independentField])===null||_parsedAmounts$indepe===void 0?void 0:_parsedAmounts$indepe.greaterThan(JSBI.BigInt(0))));const route=trade===null||trade===void 0?void 0:trade.route;const noRoute=!route;// check whether the user has approved the router on the input token\nconst[approval,approveCallback]=useApproveCallbackFromTrade(trade,allowedSlippage);// check if user has gone through approval process, used to show two step buttons, reset on token change\nconst[approvalSubmitted,setApprovalSubmitted]=useState(false);// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(()=>{if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);const maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);const atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));const atHalfAmountInput=Boolean(maxAmountInput&&Number(maxAmountInput.toExact())*0.5===Number((_parsedAmounts$Field$2=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toExact()));// the callback to execute the swap\nconst{callback:swapCallback,error:swapCallbackError}=useTradeCallback(trade,allowedSlippage,recipient);const{priceImpactWithoutFee}=computeTradePriceBreakdown(trade);const[singleHopOnly]=useUserSingleHopOnly();const handleSwap=useCallback(()=>{if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm,showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(hash=>{var _trade$inputAmount,_trade$inputAmount$cu,_trade$outputAmount,_trade$outputAmount$c;setSwapState({attemptingTxn:false,tradeToConfirm,showConfirm,swapErrorMessage:undefined,txHash:hash});ReactGA.event({category:'Swap',action:recipient===null?'Swap w/o Send':(recipientAddress!==null&&recipientAddress!==void 0?recipientAddress:recipient)===account?'Swap w/o Send + recipient':'Swap w/ Send',label:[trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:(_trade$inputAmount$cu=_trade$inputAmount.currency)===null||_trade$inputAmount$cu===void 0?void 0:_trade$inputAmount$cu.symbol,trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:(_trade$outputAmount$c=_trade$outputAmount.currency)===null||_trade$outputAmount$c===void 0?void 0:_trade$outputAmount$c.symbol].join('/')});ReactGA.event({category:'Routing',action:singleHopOnly?'Swap with multihop disabled':'Swap with multihop enabled'});}).catch(error=>{setSwapState({attemptingTxn:false,tradeToConfirm,showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[priceImpactWithoutFee,swapCallback,tradeToConfirm,showConfirm,recipient,recipientAddress,account,trade,singleHopOnly]);// errors\nconst[showInverted,setShowInverted]=useState(false);// warnings on slippage\nconst priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nconst showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);const handleConfirmDismiss=useCallback(()=>{setSwapState({showConfirm:false,tradeToConfirm,attemptingTxn,swapErrorMessage,txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);const handleAcceptChanges=useCallback(()=>{setSwapState({tradeToConfirm:trade,swapErrorMessage,txHash,attemptingTxn,showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);const handleInputSelect=useCallback(inputCurrency=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);},[onCurrencySelection]);const handleMaxInput=useCallback(()=>{if(maxAmountInput){var _currencies$INPUT;if((currencies===null||currencies===void 0?void 0:(_currencies$INPUT=currencies.INPUT)===null||_currencies$INPUT===void 0?void 0:_currencies$INPUT.address)===CELO[chainId].address){onUserInput(Field.INPUT,Math.max(Number(maxAmountInput.toExact())-0.01,0).toString());}else{onUserInput(Field.INPUT,maxAmountInput.toExact());}}},[maxAmountInput,onUserInput,currencies,chainId]);const handleHalfInput=useCallback(()=>{if(maxAmountInput){onUserInput(Field.INPUT,Math.max(Number(maxAmountInput.toExact())*0.5,0).toString());}},[maxAmountInput,onUserInput]);const handleOutputSelect=useCallback(outputCurrency=>onCurrencySelection(Field.OUTPUT,outputCurrency),[onCurrencySelection]);const swapIsUnsupported=useIsTransactionUnsupported(currencies===null||currencies===void 0?void 0:currencies.INPUT,currencies===null||currencies===void 0?void 0:currencies.OUTPUT);const{isEstimate,makeLabel}=describeTrade(trade);const actionLabel=makeLabel(independentField!==Field.INPUT);// const web3 = new Web3(window.ethereum)\n// const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS)\nconst sendSwapTx=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(function*(){const inputElement=document.getElementById('swap-currency-input');const outputElement=document.getElementById('swap-currency-output');const inputCurrency=inputElement.value;const outputCurrency=outputElement.value;const inputAmount=formattedAmounts[Field.INPUT];const outputAmount=formattedAmounts[Field.OUTPUT];//const rawTx = await contract.methods.swap(inputCurrency, outputCurrency, inputAmount, outputAmount).encodeABI()\n//web3.eth.sendTransaction({ to: CONTRACT_ADDRESS, data: rawTx })\n});return function sendSwapTx(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(SwapHeader,{title:actionLabel}),/*#__PURE__*/_jsxs(Wrapper,{id:\"swap-page\",children:[/*#__PURE__*/_jsx(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/_jsxs(AutoColumn,{gap:'md',children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&trade?'From'.concat(isEstimate?' (estimated)':''):'From',value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,showHalfButton:!atHalfAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onHalf:handleHalfInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/_jsx(AutoColumn,{justify:\"space-between\",children:/*#__PURE__*/_jsx(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'},children:/*#__PURE__*/_jsx(ArrowWrapper,{clickable:true,children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",onClick:()=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nhandleTypeInput(formattedAmounts[Field.OUTPUT]);onSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})})})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&trade?'To'.concat(isEstimate?' (estimated)':''):'To',showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\",disabled:true}),recipient!==null?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:false,children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsx(LinkStyledButton,{id:\"remove-recipient-button\",onClick:()=>onChangeRecipient(null),children:\"- Remove send\"})]}),/*#__PURE__*/_jsx(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})]}):null,/*#__PURE__*/_jsx(Card,{padding:'0px',borderRadius:'20px',children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"8px\",style:{padding:'0 16px'},children:Boolean(trade)&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:500,fontSize:14,color:theme.text2,children:\"Price\"}),/*#__PURE__*/_jsx(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})]})})}),/*#__PURE__*/_jsx(ButtonPrimary,{borderRadius:\"12px\",onClick:sendSwapTx,children:'Swap'})]})]})]}),!swapIsUnsupported?/*#__PURE__*/_jsx(AdvancedSwapDetailsDropdown,{trade:trade}):/*#__PURE__*/_jsx(UnsupportedCurrencyFooter,{show:swapIsUnsupported,currencies:[currencies.INPUT,currencies.OUTPUT]})]});}","map":{"version":3,"names":["useCelo","CELO","JSBI","Token","describeTrade","MoolaDirectTrade","useTradeCallback","UnsupportedCurrencyFooter","useIsTransactionUnsupported","useENS","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","ReactGA","Text","ThemeContext","AddressInputPanel","ButtonPrimary","Card","AutoColumn","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ConfirmSwapModal","ArrowWrapper","Wrapper","SwapHeader","TradePrice","useAllTokens","useCurrency","ApprovalState","useApproveCallbackFromTrade","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSingleHopOnly","useUserSlippageTolerance","LinkStyledButton","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Swap","_ref2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe","_parsedAmounts$Field$","_parsedAmounts$Field$2","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","_filter","_ref","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","address","account","network","chainId","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","showRamp","recipientAddress","trade","parsedAmounts","INPUT","inputAmount","OUTPUT","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","undefined","formattedAmounts","toExact","toSignificant","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","route","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","atHalfAmountInput","Number","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","_trade$inputAmount","_trade$inputAmount$cu","_trade$outputAmount","_trade$outputAmount$c","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","_currencies$INPUT","Math","max","toString","handleHalfInput","handleOutputSelect","outputCurrency","swapIsUnsupported","isEstimate","makeLabel","actionLabel","sendSwapTx","_ref3","_asyncToGenerator","inputElement","document","getElementById","outputElement","apply","arguments","children","active","title","id","isOpen","originalTrade","onAcceptChanges","onConfirm","onDismiss","gap","concat","showMaxButton","showHalfButton","onMax","onHalf","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","disabled","onChange","borderRadius","align","fontWeight","fontSize","price","executionPrice","show"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/pages/Swap/index.tsx"],"sourcesContent":["import { useCelo } from '@celo/react-celo'\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport { CELO, ChainId as UbeswapChainId, JSBI, Token, TokenAmount, Trade } from '@ubeswap/sdk'\nimport OpticsV1Warning from 'components/Header/OpticsV1Warning'\nimport { describeTrade } from 'components/swap/routing/describeTrade'\nimport { MoolaDirectTrade } from 'components/swap/routing/moola/MoolaDirectTrade'\nimport { useTradeCallback } from 'components/swap/routing/useTradeCallback'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport useENS from 'hooks/useENS'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\n\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport Loader from '../../components/Loader'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport ProgressSteps from '../../components/ProgressSteps'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport TradePrice from '../../components/swap/TradePrice'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ClickableText } from '../Pool/styleds'\n\nimport Web3 from 'web3'\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { address: account, network } = useCelo()\n  const chainId = network.chainId as unknown as UbeswapChainId\n\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n    showRamp,\n  } = useDerivedSwapInfo()\n  const { address: recipientAddress } = useENS(recipient)\n  const trade = v2Trade\n\n  const parsedAmounts = {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n  }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]:\n      (trade instanceof MoolaDirectTrade\n        ? parsedAmounts[dependentField]?.toExact()\n        : parsedAmounts[dependentField]?.toSignificant(6)) ?? '',\n  }\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const route = trade?.route\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: TokenAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n  const atHalfAmountInput = Boolean(\n    maxAmountInput && Number(maxAmountInput.toExact()) * 0.5 === Number(parsedAmounts[Field.INPUT]?.toExact())\n  )\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useTradeCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [trade?.inputAmount?.currency?.symbol, trade?.outputAmount?.currency?.symbol].join('/'),\n        })\n\n        ReactGA.event({\n          category: 'Routing',\n          action: singleHopOnly ? 'Swap with multihop disabled' : 'Swap with multihop enabled',\n        })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [\n    priceImpactWithoutFee,\n    swapCallback,\n    tradeToConfirm,\n    showConfirm,\n    recipient,\n    recipientAddress,\n    account,\n    trade,\n    singleHopOnly,\n  ])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      if (currencies?.INPUT?.address === CELO[chainId].address) {\n        onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) - 0.01, 0).toString())\n      } else {\n        onUserInput(Field.INPUT, maxAmountInput.toExact())\n      }\n    }\n  }, [maxAmountInput, onUserInput, currencies, chainId])\n\n  const handleHalfInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, Math.max(Number(maxAmountInput.toExact()) * 0.5, 0).toString())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const { isEstimate, makeLabel } = describeTrade(trade)\n  const actionLabel = makeLabel(independentField !== Field.INPUT)\n  \n  // const web3 = new Web3(window.ethereum)\n  // const contract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS)\n\n  const sendSwapTx = async () => {\n    const inputElement = document.getElementById('swap-currency-input') as HTMLInputElement\n    const outputElement = document.getElementById('swap-currency-output') as HTMLInputElement\n    const inputCurrency = inputElement.value\n    const outputCurrency = outputElement.value\n    const inputAmount = formattedAmounts[Field.INPUT]\n    const outputAmount = formattedAmounts[Field.OUTPUT]\n    //const rawTx = await contract.methods.swap(inputCurrency, outputCurrency, inputAmount, outputAmount).encodeABI()\n    //web3.eth.sendTransaction({ to: CONTRACT_ADDRESS, data: rawTx })\n  }\n\n  return (\n    <>\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader title={actionLabel} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={\n                independentField === Field.OUTPUT && trade ? `${'From'}${isEstimate ? ' (estimated)' : ''}` : 'From'\n              }\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              showHalfButton={!atHalfAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onHalf={handleHalfInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      handleTypeInput(formattedAmounts[Field.OUTPUT])\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && trade ? `${'To'}${isEstimate ? ' (estimated)' : ''}` : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              disabled\n            />\n\n            {recipient !== null ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n            <Card padding={'0px'} borderRadius={'20px'}>\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      Price\n                    </Text>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            </Card>\n            <ButtonPrimary borderRadius=\"12px\" onClick={sendSwapTx}>{`${'Swap'}`}</ButtonPrimary>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter show={swapIsUnsupported} currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}