{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt) {\n    const {\n      gen,\n      schema,\n      it\n    } = cxt;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) {\n      cxt.fail();\n      return;\n    }\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n      keyword: \"not\",\n      compositeRule: true,\n      createErrors: false,\n      allErrors: false\n    }, valid);\n    cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n  },\n  error: {\n    message: \"must NOT be valid\"\n  }\n};\nexports.default = def;","map":null,"metadata":{},"sourceType":"script"}