{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.consoleLogger = exports.prefixLogger = exports.noopLogger = void 0;\n/** @internal */\nvar noopLogger = function noopLogger() {\n  /*noop*/\n};\nexports.noopLogger = noopLogger;\n/** @internal */\nvar prefixLogger = function prefixLogger(prefix, logger) {\n  if (logger === exports.noopLogger) {\n    return exports.noopLogger;\n  } else {\n    return function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return logger.apply(void 0, __spreadArray([\"\".concat(prefix, \":: \")], args, false));\n    };\n  }\n};\nexports.prefixLogger = prefixLogger;\n/** @internal */\nexports.consoleLogger = console.log;","map":null,"metadata":{},"sourceType":"script"}