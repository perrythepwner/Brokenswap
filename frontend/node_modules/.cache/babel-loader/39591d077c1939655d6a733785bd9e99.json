{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExchangeWrapper = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * Contract that allows to exchange StableToken for GoldToken and vice versa\n * using a Constant Product Market Maker Model aka Mento\n */\nvar ExchangeWrapper = /** @class */function (_super) {\n  __extends(ExchangeWrapper, _super);\n  function ExchangeWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Query spread parameter\n     * @returns Current spread charged on exchanges\n     */\n    _this.spread = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.spread, undefined, BaseWrapper_1.fixidityValueToBigNumber);\n    /**\n     * Query reserve fraction parameter\n     * @returns Current fraction to commit to the gold bucket\n     */\n    _this.reserveFraction = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reserveFraction, undefined, BaseWrapper_1.fixidityValueToBigNumber);\n    /**\n     * Query update frequency parameter\n     * @returns The time period that needs to elapse between bucket\n     * updates\n     */\n    _this.updateFrequency = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.updateFrequency, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query minimum reports parameter\n     * @returns The minimum number of fresh reports that need to be\n     * present in the oracle to update buckets\n     * commit to the gold bucket\n     */\n    _this.minimumReports = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.minimumReports, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query last bucket update\n     * @returns The timestamp of the last time exchange buckets were updated.\n     */\n    _this.lastBucketUpdate = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lastBucketUpdate, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * DEPRECATED: use function sell\n     * Exchanges sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n     * Requires the sellAmount to have been approved to the exchange\n     * @param sellAmount The amount of sellToken the user is selling to the exchange\n     * @param minBuyAmount The minimum amount of buyToken the user has to receive for this\n     * transaction to succeed\n     * @param sellGold `true` if gold is the sell token\n     * @return The amount of buyToken that was transfered\n     */\n    _this.exchange = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.exchange, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n    /**\n     * Sells sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n     * Requires the sellAmount to have been approved to the exchange\n     * @param sellAmount The amount of sellToken the user is selling to the exchange\n     * @param minBuyAmount The minimum amount of buyToken the user has to receive for this\n     * transaction to succeed\n     * @param sellGold `true` if gold is the sell token\n     * @return The amount of buyToken that was transfered\n     */\n    _this.sell = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.sell, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n    /**\n     * Sells sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n     * Requires the sellAmount to have been approved to the exchange\n     * @param buyAmount The amount of sellToken the user is selling to the exchange\n     * @param maxSellAmount The maximum amount of sellToken the user will sell for this\n     * transaction to succeed\n     * @param buyGold `true` if gold is the buy token\n     * @return The amount of buyToken that was transfered\n     */\n    _this.buy = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.buy, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n    /**\n     * Returns the buy token and sell token bucket sizes, in order. The ratio of\n     * the two also represents the exchange rate between the two.\n     * @param sellGold `true` if gold is the sell token\n     * @return [buyTokenBucket, sellTokenBucket]\n     */\n    _this.getBuyAndSellBuckets = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getBuyAndSellBuckets, undefined, function (callRes) {\n      return [(0, BaseWrapper_1.valueToBigNumber)(callRes[0]), (0, BaseWrapper_1.valueToBigNumber)(callRes[1])];\n    });\n    /**\n     * Sell amount of CELO in exchange for at least minStableAmount of the stable token\n     * Requires the amount to have been approved to the exchange\n     * @param amount The amount of CELO the user is selling to the exchange\n     * @param minStableAmount The minimum amount of the stable token the user has to receive for this\n     * transaction to succeed\n     */\n    _this.sellGold = function (amount, minStableAmount) {\n      return _this.sell(amount, minStableAmount, true);\n    };\n    /**\n     * Sell amount of the stable token in exchange for at least minGoldAmount of CELO\n     * Requires the amount to have been approved to the exchange\n     * @param amount The amount of the stable token the user is selling to the exchange\n     * @param minGoldAmount The minimum amount of CELO the user has to receive for this\n     * transaction to succeed\n     */\n    _this.sellStable = function (amount, minGoldAmount) {\n      return _this.sell(amount, minGoldAmount, false);\n    };\n    /**\n     * Deprecated alias of sellStable.\n     * Sell amount of the stable token in exchange for at least minGoldAmount of CELO\n     * Requires the amount to have been approved to the exchange\n     * @deprecated use sellStable instead\n     * @param amount The amount of the stable token the user is selling to the exchange\n     * @param minGoldAmount The minimum amount of CELO the user has to receive for this\n     * transaction to succeed\n     */\n    _this.sellDollar = _this.sellStable;\n    /**\n     * Buy amount of CELO in exchange for at most maxStableAmount of the stable token\n     * Requires the amount to have been approved to the exchange\n     * @param amount The amount of CELO the user is buying from the exchange\n     * @param maxStableAmount The maximum amount of the stable token the user will pay for this\n     * transaction to succeed\n     */\n    _this.buyGold = function (amount, maxStableAmount) {\n      return _this.buy(amount, maxStableAmount, true);\n    };\n    /**\n     * Buy amount of the stable token in exchange for at least minGoldAmount of CELO\n     * Requires the amount to have been approved to the exchange\n     * @param amount The amount of the stable token the user is selling to the exchange\n     * @param maxGoldAmount The maximum amount of CELO the user will pay for this\n     * transaction to succeed\n     */\n    _this.buyStable = function (amount, maxGoldAmount) {\n      return _this.buy(amount, maxGoldAmount, false);\n    };\n    /**\n     * Deprecated alias of buyStable.\n     * Buy amount of the stable token in exchange for at least minGoldAmount of CELO\n     * Requires the amount to have been approved to the exchange\n     * @deprecated use buyStable instead\n     * @param amount The amount of the stable token the user is selling to the exchange\n     * @param maxGoldAmount The maximum amount of CELO the user will pay for this\n     * transaction to succeed\n     */\n    _this.buyDollar = _this.buyStable;\n    /**\n     * Returns the amount of CELO a user would get for sellAmount of the stable token\n     * @param sellAmount The amount of the stable token the user is selling to the exchange\n     * @return The corresponding CELO amount.\n     */\n    _this.quoteStableSell = function (sellAmount) {\n      return _this.getBuyTokenAmount(sellAmount, false);\n    };\n    /**\n     * Deprecated alias of quoteStableSell.\n     * Returns the amount of CELO a user would get for sellAmount of the stable token\n     * @deprecated Use quoteStableSell instead\n     * @param sellAmount The amount of the stable token the user is selling to the exchange\n     * @return The corresponding CELO amount.\n     */\n    _this.quoteUsdSell = _this.quoteStableSell;\n    /**\n     * Returns the amount of the stable token a user would get for sellAmount of CELO\n     * @param sellAmount The amount of CELO the user is selling to the exchange\n     * @return The corresponding stable token amount.\n     */\n    _this.quoteGoldSell = function (sellAmount) {\n      return _this.getBuyTokenAmount(sellAmount, true);\n    };\n    /**\n     * Returns the amount of CELO a user would need to exchange to receive buyAmount of\n     * the stable token.\n     * @param buyAmount The amount of the stable token the user would like to purchase.\n     * @return The corresponding CELO amount.\n     */\n    _this.quoteStableBuy = function (buyAmount) {\n      return _this.getSellTokenAmount(buyAmount, false);\n    };\n    /**\n     * Deprecated alias of quoteStableBuy.\n     * Returns the amount of CELO a user would need to exchange to receive buyAmount of\n     * the stable token.\n     * @deprecated Use quoteStableBuy instead\n     * @param buyAmount The amount of the stable token the user would like to purchase.\n     * @return The corresponding CELO amount.\n     */\n    _this.quoteUsdBuy = _this.quoteStableBuy;\n    /**\n     * Returns the amount of the stable token a user would need to exchange to receive buyAmount of\n     * CELO.\n     * @param buyAmount The amount of CELO the user would like to purchase.\n     * @return The corresponding stable token amount.\n     */\n    _this.quoteGoldBuy = function (buyAmount) {\n      return _this.getSellTokenAmount(buyAmount, true);\n    };\n    /**\n     * Returns the exchange rate for the stable token estimated at the buyAmount\n     * @param buyAmount The amount of the stable token in wei to estimate the exchange rate at\n     * @return The exchange rate (number of CELO received for one stable token)\n     */\n    _this.getStableExchangeRate = function (buyAmount) {\n      return _this.getExchangeRate(buyAmount, false);\n    };\n    /**\n     * Deprecated alias of getStableExchangeRate.\n     * Returns the exchange rate for the stable token estimated at the buyAmount\n     * @deprecated Use getStableExchangeRate instead\n     * @param buyAmount The amount of the stable token in wei to estimate the exchange rate at\n     * @return The exchange rate (number of CELO received for one stable token)\n     */\n    _this.getUsdExchangeRate = _this.getStableExchangeRate;\n    /**\n     * Returns the exchange rate for CELO estimated at the buyAmount\n     * @param buyAmount The amount of CELO in wei to estimate the exchange rate at\n     * @return The exchange rate (number of stable tokens received for one CELO)\n     */\n    _this.getGoldExchangeRate = function (buyAmount) {\n      return _this.getExchangeRate(buyAmount, true);\n    };\n    return _this;\n  }\n  /**\n   * @dev Returns the amount of buyToken a user would get for sellAmount of sellToken\n   * @param sellAmount The amount of sellToken the user is selling to the exchange\n   * @param sellGold `true` if gold is the sell token\n   * @return The corresponding buyToken amount.\n   */\n  ExchangeWrapper.prototype.getBuyTokenAmount = function (sellAmount, sellGold) {\n    return __awaiter(this, void 0, void 0, function () {\n      var sell, res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            sell = (0, BaseWrapper_1.valueToString)(sellAmount);\n            if (new bignumber_js_1.default(sell).eq(0)) {\n              return [2 /*return*/, new bignumber_js_1.default(0)];\n            }\n            return [4 /*yield*/, this.contract.methods.getBuyTokenAmount(sell, sellGold).call()];\n          case 1:\n            res = _a.sent();\n            return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(res)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the amount of sellToken a user would need to exchange to receive buyAmount of\n   * buyToken.\n   * @param buyAmount The amount of buyToken the user would like to purchase.\n   * @param sellGold `true` if gold is the sell token\n   * @return The corresponding sellToken amount.\n   */\n  ExchangeWrapper.prototype.getSellTokenAmount = function (buyAmount, sellGold) {\n    return __awaiter(this, void 0, void 0, function () {\n      var buy, res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            buy = (0, BaseWrapper_1.valueToString)(buyAmount);\n            if (new bignumber_js_1.default(buy).eq(0)) {\n              return [2 /*return*/, new bignumber_js_1.default(0)];\n            }\n            return [4 /*yield*/, this.contract.methods.getSellTokenAmount(buy, sellGold).call()];\n          case 1:\n            res = _a.sent();\n            return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(res)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns the current configuration of the exchange contract\n   * @return ExchangeConfig object\n   */\n  ExchangeWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.spread(), this.reserveFraction(), this.updateFrequency(), this.minimumReports(), this.lastBucketUpdate()])];\n          case 1:\n            res = _a.sent();\n            return [2 /*return*/, {\n              spread: res[0],\n              reserveFraction: res[1],\n              updateFrequency: res[2],\n              minimumReports: res[3],\n              lastBucketUpdate: res[4]\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the exchange contract\n   * @return ExchangeConfig object\n   */\n  ExchangeWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getConfig()];\n          case 1:\n            config = _a.sent();\n            return [2 /*return*/, __assign(__assign({}, config), {\n              updateFrequency: (0, BaseWrapper_1.secondsToDurationString)(config.updateFrequency),\n              lastBucketUpdate: (0, BaseWrapper_1.unixSecondsTimestampToDateString)(config.lastBucketUpdate)\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the exchange rate estimated at buyAmount.\n   * @param buyAmount The amount of buyToken in wei to estimate the exchange rate at\n   * @param sellGold `true` if gold is the sell token\n   * @return The exchange rate (number of sellTokens received for one buyToken).\n   */\n  ExchangeWrapper.prototype.getExchangeRate = function (buyAmount, sellGold) {\n    return __awaiter(this, void 0, void 0, function () {\n      var takerAmount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getBuyTokenAmount(buyAmount, sellGold)];\n          case 1:\n            takerAmount = _a.sent();\n            return [2 /*return*/, (0, BaseWrapper_1.valueToFrac)(buyAmount, takerAmount)];\n          // Number of sellTokens received for one buyToken\n        }\n      });\n    });\n  };\n\n  return ExchangeWrapper;\n}(BaseWrapper_1.BaseWrapper);\nexports.ExchangeWrapper = ExchangeWrapper;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","pop","push","__importDefault","mod","__esModule","defineProperty","exports","ExchangeWrapper","bignumber_js_1","require","BaseWrapper_1","_super","_this","spread","proxyCall","contract","methods","undefined","fixidityValueToBigNumber","reserveFraction","updateFrequency","valueToBigNumber","minimumReports","lastBucketUpdate","exchange","proxySend","connection","tupleParser","valueToString","identity","sell","buy","getBuyAndSellBuckets","callRes","sellGold","amount","minStableAmount","sellStable","minGoldAmount","sellDollar","buyGold","maxStableAmount","buyStable","maxGoldAmount","buyDollar","quoteStableSell","sellAmount","getBuyTokenAmount","quoteUsdSell","quoteGoldSell","quoteStableBuy","buyAmount","getSellTokenAmount","quoteUsdBuy","quoteGoldBuy","getStableExchangeRate","getExchangeRate","getUsdExchangeRate","getGoldExchangeRate","res","_a","default","eq","getConfig","all","getHumanReadableConfig","config","secondsToDurationString","unixSecondsTimestampToDateString","takerAmount","valueToFrac","BaseWrapper"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/contractkit/lib/wrappers/Exchange.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExchangeWrapper = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * Contract that allows to exchange StableToken for GoldToken and vice versa\n * using a Constant Product Market Maker Model aka Mento\n */\nvar ExchangeWrapper = /** @class */ (function (_super) {\n    __extends(ExchangeWrapper, _super);\n    function ExchangeWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Query spread parameter\n         * @returns Current spread charged on exchanges\n         */\n        _this.spread = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.spread, undefined, BaseWrapper_1.fixidityValueToBigNumber);\n        /**\n         * Query reserve fraction parameter\n         * @returns Current fraction to commit to the gold bucket\n         */\n        _this.reserveFraction = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reserveFraction, undefined, BaseWrapper_1.fixidityValueToBigNumber);\n        /**\n         * Query update frequency parameter\n         * @returns The time period that needs to elapse between bucket\n         * updates\n         */\n        _this.updateFrequency = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.updateFrequency, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query minimum reports parameter\n         * @returns The minimum number of fresh reports that need to be\n         * present in the oracle to update buckets\n         * commit to the gold bucket\n         */\n        _this.minimumReports = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.minimumReports, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query last bucket update\n         * @returns The timestamp of the last time exchange buckets were updated.\n         */\n        _this.lastBucketUpdate = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lastBucketUpdate, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * DEPRECATED: use function sell\n         * Exchanges sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n         * Requires the sellAmount to have been approved to the exchange\n         * @param sellAmount The amount of sellToken the user is selling to the exchange\n         * @param minBuyAmount The minimum amount of buyToken the user has to receive for this\n         * transaction to succeed\n         * @param sellGold `true` if gold is the sell token\n         * @return The amount of buyToken that was transfered\n         */\n        _this.exchange = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.exchange, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n        /**\n         * Sells sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n         * Requires the sellAmount to have been approved to the exchange\n         * @param sellAmount The amount of sellToken the user is selling to the exchange\n         * @param minBuyAmount The minimum amount of buyToken the user has to receive for this\n         * transaction to succeed\n         * @param sellGold `true` if gold is the sell token\n         * @return The amount of buyToken that was transfered\n         */\n        _this.sell = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.sell, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n        /**\n         * Sells sellAmount of sellToken in exchange for at least minBuyAmount of buyToken\n         * Requires the sellAmount to have been approved to the exchange\n         * @param buyAmount The amount of sellToken the user is selling to the exchange\n         * @param maxSellAmount The maximum amount of sellToken the user will sell for this\n         * transaction to succeed\n         * @param buyGold `true` if gold is the buy token\n         * @return The amount of buyToken that was transfered\n         */\n        _this.buy = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.buy, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString, BaseWrapper_1.identity));\n        /**\n         * Returns the buy token and sell token bucket sizes, in order. The ratio of\n         * the two also represents the exchange rate between the two.\n         * @param sellGold `true` if gold is the sell token\n         * @return [buyTokenBucket, sellTokenBucket]\n         */\n        _this.getBuyAndSellBuckets = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getBuyAndSellBuckets, undefined, function (callRes) {\n            return [(0, BaseWrapper_1.valueToBigNumber)(callRes[0]), (0, BaseWrapper_1.valueToBigNumber)(callRes[1])];\n        });\n        /**\n         * Sell amount of CELO in exchange for at least minStableAmount of the stable token\n         * Requires the amount to have been approved to the exchange\n         * @param amount The amount of CELO the user is selling to the exchange\n         * @param minStableAmount The minimum amount of the stable token the user has to receive for this\n         * transaction to succeed\n         */\n        _this.sellGold = function (amount, minStableAmount) {\n            return _this.sell(amount, minStableAmount, true);\n        };\n        /**\n         * Sell amount of the stable token in exchange for at least minGoldAmount of CELO\n         * Requires the amount to have been approved to the exchange\n         * @param amount The amount of the stable token the user is selling to the exchange\n         * @param minGoldAmount The minimum amount of CELO the user has to receive for this\n         * transaction to succeed\n         */\n        _this.sellStable = function (amount, minGoldAmount) {\n            return _this.sell(amount, minGoldAmount, false);\n        };\n        /**\n         * Deprecated alias of sellStable.\n         * Sell amount of the stable token in exchange for at least minGoldAmount of CELO\n         * Requires the amount to have been approved to the exchange\n         * @deprecated use sellStable instead\n         * @param amount The amount of the stable token the user is selling to the exchange\n         * @param minGoldAmount The minimum amount of CELO the user has to receive for this\n         * transaction to succeed\n         */\n        _this.sellDollar = _this.sellStable;\n        /**\n         * Buy amount of CELO in exchange for at most maxStableAmount of the stable token\n         * Requires the amount to have been approved to the exchange\n         * @param amount The amount of CELO the user is buying from the exchange\n         * @param maxStableAmount The maximum amount of the stable token the user will pay for this\n         * transaction to succeed\n         */\n        _this.buyGold = function (amount, maxStableAmount) {\n            return _this.buy(amount, maxStableAmount, true);\n        };\n        /**\n         * Buy amount of the stable token in exchange for at least minGoldAmount of CELO\n         * Requires the amount to have been approved to the exchange\n         * @param amount The amount of the stable token the user is selling to the exchange\n         * @param maxGoldAmount The maximum amount of CELO the user will pay for this\n         * transaction to succeed\n         */\n        _this.buyStable = function (amount, maxGoldAmount) {\n            return _this.buy(amount, maxGoldAmount, false);\n        };\n        /**\n         * Deprecated alias of buyStable.\n         * Buy amount of the stable token in exchange for at least minGoldAmount of CELO\n         * Requires the amount to have been approved to the exchange\n         * @deprecated use buyStable instead\n         * @param amount The amount of the stable token the user is selling to the exchange\n         * @param maxGoldAmount The maximum amount of CELO the user will pay for this\n         * transaction to succeed\n         */\n        _this.buyDollar = _this.buyStable;\n        /**\n         * Returns the amount of CELO a user would get for sellAmount of the stable token\n         * @param sellAmount The amount of the stable token the user is selling to the exchange\n         * @return The corresponding CELO amount.\n         */\n        _this.quoteStableSell = function (sellAmount) { return _this.getBuyTokenAmount(sellAmount, false); };\n        /**\n         * Deprecated alias of quoteStableSell.\n         * Returns the amount of CELO a user would get for sellAmount of the stable token\n         * @deprecated Use quoteStableSell instead\n         * @param sellAmount The amount of the stable token the user is selling to the exchange\n         * @return The corresponding CELO amount.\n         */\n        _this.quoteUsdSell = _this.quoteStableSell;\n        /**\n         * Returns the amount of the stable token a user would get for sellAmount of CELO\n         * @param sellAmount The amount of CELO the user is selling to the exchange\n         * @return The corresponding stable token amount.\n         */\n        _this.quoteGoldSell = function (sellAmount) { return _this.getBuyTokenAmount(sellAmount, true); };\n        /**\n         * Returns the amount of CELO a user would need to exchange to receive buyAmount of\n         * the stable token.\n         * @param buyAmount The amount of the stable token the user would like to purchase.\n         * @return The corresponding CELO amount.\n         */\n        _this.quoteStableBuy = function (buyAmount) { return _this.getSellTokenAmount(buyAmount, false); };\n        /**\n         * Deprecated alias of quoteStableBuy.\n         * Returns the amount of CELO a user would need to exchange to receive buyAmount of\n         * the stable token.\n         * @deprecated Use quoteStableBuy instead\n         * @param buyAmount The amount of the stable token the user would like to purchase.\n         * @return The corresponding CELO amount.\n         */\n        _this.quoteUsdBuy = _this.quoteStableBuy;\n        /**\n         * Returns the amount of the stable token a user would need to exchange to receive buyAmount of\n         * CELO.\n         * @param buyAmount The amount of CELO the user would like to purchase.\n         * @return The corresponding stable token amount.\n         */\n        _this.quoteGoldBuy = function (buyAmount) { return _this.getSellTokenAmount(buyAmount, true); };\n        /**\n         * Returns the exchange rate for the stable token estimated at the buyAmount\n         * @param buyAmount The amount of the stable token in wei to estimate the exchange rate at\n         * @return The exchange rate (number of CELO received for one stable token)\n         */\n        _this.getStableExchangeRate = function (buyAmount) { return _this.getExchangeRate(buyAmount, false); };\n        /**\n         * Deprecated alias of getStableExchangeRate.\n         * Returns the exchange rate for the stable token estimated at the buyAmount\n         * @deprecated Use getStableExchangeRate instead\n         * @param buyAmount The amount of the stable token in wei to estimate the exchange rate at\n         * @return The exchange rate (number of CELO received for one stable token)\n         */\n        _this.getUsdExchangeRate = _this.getStableExchangeRate;\n        /**\n         * Returns the exchange rate for CELO estimated at the buyAmount\n         * @param buyAmount The amount of CELO in wei to estimate the exchange rate at\n         * @return The exchange rate (number of stable tokens received for one CELO)\n         */\n        _this.getGoldExchangeRate = function (buyAmount) { return _this.getExchangeRate(buyAmount, true); };\n        return _this;\n    }\n    /**\n     * @dev Returns the amount of buyToken a user would get for sellAmount of sellToken\n     * @param sellAmount The amount of sellToken the user is selling to the exchange\n     * @param sellGold `true` if gold is the sell token\n     * @return The corresponding buyToken amount.\n     */\n    ExchangeWrapper.prototype.getBuyTokenAmount = function (sellAmount, sellGold) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sell, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        sell = (0, BaseWrapper_1.valueToString)(sellAmount);\n                        if (new bignumber_js_1.default(sell).eq(0)) {\n                            return [2 /*return*/, new bignumber_js_1.default(0)];\n                        }\n                        return [4 /*yield*/, this.contract.methods.getBuyTokenAmount(sell, sellGold).call()];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(res)];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the amount of sellToken a user would need to exchange to receive buyAmount of\n     * buyToken.\n     * @param buyAmount The amount of buyToken the user would like to purchase.\n     * @param sellGold `true` if gold is the sell token\n     * @return The corresponding sellToken amount.\n     */\n    ExchangeWrapper.prototype.getSellTokenAmount = function (buyAmount, sellGold) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buy, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buy = (0, BaseWrapper_1.valueToString)(buyAmount);\n                        if (new bignumber_js_1.default(buy).eq(0)) {\n                            return [2 /*return*/, new bignumber_js_1.default(0)];\n                        }\n                        return [4 /*yield*/, this.contract.methods.getSellTokenAmount(buy, sellGold).call()];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(res)];\n                }\n            });\n        });\n    };\n    /**\n     * @dev Returns the current configuration of the exchange contract\n     * @return ExchangeConfig object\n     */\n    ExchangeWrapper.prototype.getConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.spread(),\n                            this.reserveFraction(),\n                            this.updateFrequency(),\n                            this.minimumReports(),\n                            this.lastBucketUpdate(),\n                        ])];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                spread: res[0],\n                                reserveFraction: res[1],\n                                updateFrequency: res[2],\n                                minimumReports: res[3],\n                                lastBucketUpdate: res[4],\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * @dev Returns human readable configuration of the exchange contract\n     * @return ExchangeConfig object\n     */\n    ExchangeWrapper.prototype.getHumanReadableConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getConfig()];\n                    case 1:\n                        config = _a.sent();\n                        return [2 /*return*/, __assign(__assign({}, config), { updateFrequency: (0, BaseWrapper_1.secondsToDurationString)(config.updateFrequency), lastBucketUpdate: (0, BaseWrapper_1.unixSecondsTimestampToDateString)(config.lastBucketUpdate) })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the exchange rate estimated at buyAmount.\n     * @param buyAmount The amount of buyToken in wei to estimate the exchange rate at\n     * @param sellGold `true` if gold is the sell token\n     * @return The exchange rate (number of sellTokens received for one buyToken).\n     */\n    ExchangeWrapper.prototype.getExchangeRate = function (buyAmount, sellGold) {\n        return __awaiter(this, void 0, void 0, function () {\n            var takerAmount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getBuyTokenAmount(buyAmount, sellGold)];\n                    case 1:\n                        takerAmount = _a.sent();\n                        return [2 /*return*/, (0, BaseWrapper_1.valueToFrac)(buyAmount, takerAmount)]; // Number of sellTokens received for one buyToken\n                }\n            });\n        });\n    };\n    return ExchangeWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.ExchangeWrapper = ExchangeWrapper;\n//# sourceMappingURL=Exchange.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}