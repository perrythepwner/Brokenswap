{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FederatedAttestationsWrapper = void 0;\nvar connect_1 = require(\"@celo/connect\");\nvar typed_data_constructors_1 = require(\"@celo/utils/lib/typed-data-constructors\");\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\nvar FederatedAttestationsWrapper = /** @class */function (_super) {\n  __extends(FederatedAttestationsWrapper, _super);\n  function FederatedAttestationsWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @notice Returns identifiers mapped to `account` by signers of `trustedIssuers`\n     * @param account Address of the account\n     * @param trustedIssuers Array of n issuers whose identifier mappings will be used\n     * @return countsPerIssuer Array of number of identifiers returned per issuer\n     * @return identifiers Array (length == sum([0])) of identifiers\n     * @dev Adds identifier info to the arrays in order of provided trustedIssuers\n     * @dev Expectation that only one attestation exists per (identifier, issuer, account)\n     */\n    _this.lookupIdentifiers = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lookupIdentifiers);\n    /**\n     * @notice Returns info about attestations for `identifier` produced by\n     *    signers of `trustedIssuers`\n     * @param identifier Hash of the identifier\n     * @param trustedIssuers Array of n issuers whose attestations will be included\n     * @return countsPerIssuer Array of number of attestations returned per issuer\n     *          For m (== sum([0])) found attestations:\n     * @return accounts Array of m accounts\n     * @return signers Array of m signers\n     * @return issuedOns Array of m issuedOns\n     * @return publishedOns Array of m publishedOns\n     * @dev Adds attestation info to the arrays in order of provided trustedIssuers\n     * @dev Expectation that only one attestation exists per (identifier, issuer, account)\n     */\n    _this.lookupAttestations = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lookupAttestations);\n    /**\n     * @notice Validates the given attestation and signature\n     * @param identifier Hash of the identifier to be attested\n     * @param issuer Address of the attestation issuer\n     * @param account Address of the account being mapped to the identifier\n     * @param issuedOn Time at which the issuer issued the attestation in Unix time\n     * @param signer Address of the signer of the attestation\n     * @param v The recovery id of the incoming ECDSA signature\n     * @param r Output value r of the ECDSA signature\n     * @param s Output value s of the ECDSA signature\n     * @dev Throws if attestation has been revoked\n     * @dev Throws if signer is not an authorized AttestationSigner of the issuer\n     */\n    _this.validateAttestationSig = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.validateAttestationSig);\n    /**\n     * @return keccak 256 of abi encoded parameters\n     */\n    _this.getUniqueAttestationHash = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getUniqueAttestationHash);\n    /**\n     * @notice Registers an attestation directly from the issuer\n     * @param identifier Hash of the identifier to be attested\n     * @param account Address of the account being mapped to the identifier\n     * @param issuedOn Time at which the issuer issued the attestation in Unix time\n     * @dev Attestation signer and issuer in storage is set to msg.sender\n     * @dev Throws if an attestation with the same (identifier, issuer, account) already exists\n     */\n    _this.registerAttestationAsIssuer = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.registerAttestationAsIssuer);\n    /**\n     * @notice Revokes an attestation\n     * @param identifier Hash of the identifier to be revoked\n     * @param issuer Address of the attestation issuer\n     * @param account Address of the account mapped to the identifier\n     * @dev Throws if sender is not the issuer, signer, or account\n     */\n    _this.revokeAttestation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.revokeAttestation);\n    /**\n     * @notice Revokes attestations [identifiers <-> accounts] from issuer\n     * @param issuer Address of the issuer of all attestations to be revoked\n     * @param identifiers Hash of the identifiers\n     * @param accounts Addresses of the accounts mapped to the identifiers\n     *   at the same indices\n     * @dev Throws if the number of identifiers and accounts is not the same\n     * @dev Throws if sender is not the issuer or currently registered signer of issuer\n     * @dev Throws if an attestation is not found for identifiers[i] <-> accounts[i]\n     */\n    _this.batchRevokeAttestations = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.batchRevokeAttestations);\n    return _this;\n  }\n  /**\n   * @notice Generates a valid signature and registers the attestation\n   * @param identifier Hash of the identifier to be attested\n   * @param issuer Address of the attestation issuer\n   * @param account Address of the account being mapped to the identifier\n   * @param issuedOn Time at which the issuer issued the attestation in Unix time\n   * @param signer Address of the signer of the attestation\n   * @dev Throws if an attestation with the same (identifier, issuer, account) already exists\n   */\n  FederatedAttestationsWrapper.prototype.registerAttestation = function (identifier, issuer, account, signer, issuedOn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var chainId, typedData, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.connection.chainId()];\n          case 1:\n            chainId = _a.sent();\n            typedData = (0, typed_data_constructors_1.registerAttestation)(chainId, this.address, {\n              identifier: identifier,\n              issuer: issuer,\n              account: account,\n              signer: signer,\n              issuedOn: issuedOn\n            });\n            return [4 /*yield*/, this.connection.signTypedData(signer, typedData)];\n          case 2:\n            sig = _a.sent();\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.registerAttestation(identifier, issuer, account, signer, issuedOn, sig.v, sig.r, sig.s))];\n        }\n      });\n    });\n  };\n  return FederatedAttestationsWrapper;\n}(BaseWrapper_1.BaseWrapper);\nexports.FederatedAttestationsWrapper = FederatedAttestationsWrapper;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","defineProperty","exports","FederatedAttestationsWrapper","connect_1","require","typed_data_constructors_1","BaseWrapper_1","_super","_this","arguments","lookupIdentifiers","proxyCall","contract","methods","lookupAttestations","validateAttestationSig","getUniqueAttestationHash","registerAttestationAsIssuer","proxySend","connection","revokeAttestation","batchRevokeAttestations","registerAttestation","identifier","issuer","account","signer","issuedOn","chainId","typedData","sig","_a","address","signTypedData","toTransactionObject","r","s","BaseWrapper"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/contractkit/lib/wrappers/FederatedAttestations.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FederatedAttestationsWrapper = void 0;\nvar connect_1 = require(\"@celo/connect\");\nvar typed_data_constructors_1 = require(\"@celo/utils/lib/typed-data-constructors\");\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\nvar FederatedAttestationsWrapper = /** @class */ (function (_super) {\n    __extends(FederatedAttestationsWrapper, _super);\n    function FederatedAttestationsWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @notice Returns identifiers mapped to `account` by signers of `trustedIssuers`\n         * @param account Address of the account\n         * @param trustedIssuers Array of n issuers whose identifier mappings will be used\n         * @return countsPerIssuer Array of number of identifiers returned per issuer\n         * @return identifiers Array (length == sum([0])) of identifiers\n         * @dev Adds identifier info to the arrays in order of provided trustedIssuers\n         * @dev Expectation that only one attestation exists per (identifier, issuer, account)\n         */\n        _this.lookupIdentifiers = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lookupIdentifiers);\n        /**\n         * @notice Returns info about attestations for `identifier` produced by\n         *    signers of `trustedIssuers`\n         * @param identifier Hash of the identifier\n         * @param trustedIssuers Array of n issuers whose attestations will be included\n         * @return countsPerIssuer Array of number of attestations returned per issuer\n         *          For m (== sum([0])) found attestations:\n         * @return accounts Array of m accounts\n         * @return signers Array of m signers\n         * @return issuedOns Array of m issuedOns\n         * @return publishedOns Array of m publishedOns\n         * @dev Adds attestation info to the arrays in order of provided trustedIssuers\n         * @dev Expectation that only one attestation exists per (identifier, issuer, account)\n         */\n        _this.lookupAttestations = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lookupAttestations);\n        /**\n         * @notice Validates the given attestation and signature\n         * @param identifier Hash of the identifier to be attested\n         * @param issuer Address of the attestation issuer\n         * @param account Address of the account being mapped to the identifier\n         * @param issuedOn Time at which the issuer issued the attestation in Unix time\n         * @param signer Address of the signer of the attestation\n         * @param v The recovery id of the incoming ECDSA signature\n         * @param r Output value r of the ECDSA signature\n         * @param s Output value s of the ECDSA signature\n         * @dev Throws if attestation has been revoked\n         * @dev Throws if signer is not an authorized AttestationSigner of the issuer\n         */\n        _this.validateAttestationSig = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.validateAttestationSig);\n        /**\n         * @return keccak 256 of abi encoded parameters\n         */\n        _this.getUniqueAttestationHash = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getUniqueAttestationHash);\n        /**\n         * @notice Registers an attestation directly from the issuer\n         * @param identifier Hash of the identifier to be attested\n         * @param account Address of the account being mapped to the identifier\n         * @param issuedOn Time at which the issuer issued the attestation in Unix time\n         * @dev Attestation signer and issuer in storage is set to msg.sender\n         * @dev Throws if an attestation with the same (identifier, issuer, account) already exists\n         */\n        _this.registerAttestationAsIssuer = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.registerAttestationAsIssuer);\n        /**\n         * @notice Revokes an attestation\n         * @param identifier Hash of the identifier to be revoked\n         * @param issuer Address of the attestation issuer\n         * @param account Address of the account mapped to the identifier\n         * @dev Throws if sender is not the issuer, signer, or account\n         */\n        _this.revokeAttestation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.revokeAttestation);\n        /**\n         * @notice Revokes attestations [identifiers <-> accounts] from issuer\n         * @param issuer Address of the issuer of all attestations to be revoked\n         * @param identifiers Hash of the identifiers\n         * @param accounts Addresses of the accounts mapped to the identifiers\n         *   at the same indices\n         * @dev Throws if the number of identifiers and accounts is not the same\n         * @dev Throws if sender is not the issuer or currently registered signer of issuer\n         * @dev Throws if an attestation is not found for identifiers[i] <-> accounts[i]\n         */\n        _this.batchRevokeAttestations = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.batchRevokeAttestations);\n        return _this;\n    }\n    /**\n     * @notice Generates a valid signature and registers the attestation\n     * @param identifier Hash of the identifier to be attested\n     * @param issuer Address of the attestation issuer\n     * @param account Address of the account being mapped to the identifier\n     * @param issuedOn Time at which the issuer issued the attestation in Unix time\n     * @param signer Address of the signer of the attestation\n     * @dev Throws if an attestation with the same (identifier, issuer, account) already exists\n     */\n    FederatedAttestationsWrapper.prototype.registerAttestation = function (identifier, issuer, account, signer, issuedOn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var chainId, typedData, sig;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connection.chainId()];\n                    case 1:\n                        chainId = _a.sent();\n                        typedData = (0, typed_data_constructors_1.registerAttestation)(chainId, this.address, {\n                            identifier: identifier,\n                            issuer: issuer,\n                            account: account,\n                            signer: signer,\n                            issuedOn: issuedOn,\n                        });\n                        return [4 /*yield*/, this.connection.signTypedData(signer, typedData)];\n                    case 2:\n                        sig = _a.sent();\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.registerAttestation(identifier, issuer, account, signer, issuedOn, sig.v, sig.r, sig.s))];\n                }\n            });\n        });\n    };\n    return FederatedAttestationsWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.FederatedAttestationsWrapper = FederatedAttestationsWrapper;\n//# sourceMappingURL=FederatedAttestations.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}