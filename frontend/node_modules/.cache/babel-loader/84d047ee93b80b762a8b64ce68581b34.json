{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst wallet_walletconnect_1 = require(\"@celo/wallet-walletconnect\");\nconst react_1 = require(\"react\");\nconst connectors_1 = require(\"../connectors\");\nconst common_1 = require(\"../connectors/common\");\nconst use_celo_1 = require(\"../use-celo\");\nconst logger_1 = require(\"../utils/logger\");\nconst use_wallet_version_1 = require(\"./use-wallet-version\");\nfunction useWalletConnectConnector(onSubmit, autoOpen, walletId, getDeeplinkUrl) {\n  const {\n    dapp,\n    network,\n    feeCurrency,\n    initConnector,\n    resetInitError,\n    initError,\n    disconnect,\n    manualNetworkMode\n  } = (0, use_celo_1.useCeloInternal)();\n  const [uri, setUri] = (0, react_1.useState)(null);\n  const [loading, setLoading] = (0, react_1.useState)(false);\n  const [error, setError] = (0, react_1.useState)(null);\n  const version = (0, use_wallet_version_1.useWalletVersion)(walletId);\n  const [retryValue, setRetry] = (0, react_1.useState)(0);\n  const retry = (0, react_1.useCallback)(() => {\n    setUri(null);\n    setError(null);\n    resetInitError();\n    disconnect;\n    setLoading(false);\n    setRetry(x => x + 1);\n  }, [disconnect, resetInitError]);\n  (0, react_1.useEffect)(() => {\n    let mounted = true;\n    let connector;\n    void (() => __awaiter(this, void 0, void 0, function* () {\n      if (version == null) {\n        (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Initialization awaiting for registry');\n        return;\n      }\n      if (!dapp.walletConnectProjectId) {\n        const err = 'Missing WalletConnect Project Id, create one here: https://docs.walletconnect.com/2.0/cloud/relay';\n        (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', err);\n        setError(err);\n        return;\n      }\n      connector = new connectors_1.WalletConnectConnector(network, manualNetworkMode, feeCurrency, {\n        projectId: dapp.walletConnectProjectId,\n        chainId: network.chainId,\n        init: {\n          metadata: Object.assign(Object.assign({}, dapp), {\n            icons: [dapp.icon]\n          })\n        }\n      }, autoOpen, getDeeplinkUrl, version, walletId);\n      connector.on(common_1.ConnectorEvents.WC_URI_RECEIVED, nextURI => {\n        (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Generated WC URI', nextURI);\n        if (mounted) {\n          setUri(nextURI);\n        }\n      });\n      connector.on(common_1.ConnectorEvents.DISCONNECTED, () => {\n        (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Lost connection to WC servers');\n        setError('Connection with wallet was closed.');\n        setUri(null);\n      });\n      try {\n        yield initConnector(connector);\n        onSubmit(connector);\n      } catch (reason) {\n        if (reason === wallet_walletconnect_1.CANCELED) {\n          (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'User canceled connection');\n          // disconnect so we dont have open connectors all over the place\n          return disconnect();\n        }\n        (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'WC error', reason);\n        setError(reason.message);\n      }\n    }))();\n    return () => {\n      // This will be called when unmounting the component rendering the qrcode\n      // if initialised is false, it means the connection was canceled or errored.\n      // We should cleanup the state\n      if (!(connector === null || connector === void 0 ? void 0 : connector.initialised)) {\n        // disconnect so we dont have open connectors all over the place\n        void disconnect();\n      }\n      setUri(null);\n      mounted = false;\n    };\n    // adding all deps here causes an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [walletId, network.chainId, retryValue]);\n  return {\n    uri,\n    error: error || (initError === null || initError === void 0 ? void 0 : initError.message),\n    loading,\n    retry\n  };\n}\nexports.default = useWalletConnectConnector;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","wallet_walletconnect_1","require","react_1","connectors_1","common_1","use_celo_1","logger_1","use_wallet_version_1","useWalletConnectConnector","onSubmit","autoOpen","walletId","getDeeplinkUrl","dapp","network","feeCurrency","initConnector","resetInitError","initError","disconnect","manualNetworkMode","useCeloInternal","uri","setUri","useState","loading","setLoading","error","setError","version","useWalletVersion","retryValue","setRetry","retry","useCallback","x","useEffect","mounted","connector","getApplicationLogger","debug","walletConnectProjectId","err","WalletConnectConnector","projectId","chainId","init","metadata","assign","icons","icon","on","ConnectorEvents","WC_URI_RECEIVED","nextURI","DISCONNECTED","reason","CANCELED","message","initialised","default"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/hooks/use-wallet-connect-connector.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wallet_walletconnect_1 = require(\"@celo/wallet-walletconnect\");\nconst react_1 = require(\"react\");\nconst connectors_1 = require(\"../connectors\");\nconst common_1 = require(\"../connectors/common\");\nconst use_celo_1 = require(\"../use-celo\");\nconst logger_1 = require(\"../utils/logger\");\nconst use_wallet_version_1 = require(\"./use-wallet-version\");\nfunction useWalletConnectConnector(onSubmit, autoOpen, walletId, getDeeplinkUrl) {\n    const { dapp, network, feeCurrency, initConnector, resetInitError, initError, disconnect, manualNetworkMode, } = (0, use_celo_1.useCeloInternal)();\n    const [uri, setUri] = (0, react_1.useState)(null);\n    const [loading, setLoading] = (0, react_1.useState)(false);\n    const [error, setError] = (0, react_1.useState)(null);\n    const version = (0, use_wallet_version_1.useWalletVersion)(walletId);\n    const [retryValue, setRetry] = (0, react_1.useState)(0);\n    const retry = (0, react_1.useCallback)(() => {\n        setUri(null);\n        setError(null);\n        resetInitError();\n        disconnect;\n        setLoading(false);\n        setRetry((x) => x + 1);\n    }, [disconnect, resetInitError]);\n    (0, react_1.useEffect)(() => {\n        let mounted = true;\n        let connector;\n        void (() => __awaiter(this, void 0, void 0, function* () {\n            if (version == null) {\n                (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Initialization awaiting for registry');\n                return;\n            }\n            if (!dapp.walletConnectProjectId) {\n                const err = 'Missing WalletConnect Project Id, create one here: https://docs.walletconnect.com/2.0/cloud/relay';\n                (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', err);\n                setError(err);\n                return;\n            }\n            connector = new connectors_1.WalletConnectConnector(network, manualNetworkMode, feeCurrency, {\n                projectId: dapp.walletConnectProjectId,\n                chainId: network.chainId,\n                init: {\n                    metadata: Object.assign(Object.assign({}, dapp), { icons: [dapp.icon] }),\n                },\n            }, autoOpen, getDeeplinkUrl, version, walletId);\n            connector.on(common_1.ConnectorEvents.WC_URI_RECEIVED, (nextURI) => {\n                (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Generated WC URI', nextURI);\n                if (mounted) {\n                    setUri(nextURI);\n                }\n            });\n            connector.on(common_1.ConnectorEvents.DISCONNECTED, () => {\n                (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'Lost connection to WC servers');\n                setError('Connection with wallet was closed.');\n                setUri(null);\n            });\n            try {\n                yield initConnector(connector);\n                onSubmit(connector);\n            }\n            catch (reason) {\n                if (reason === wallet_walletconnect_1.CANCELED) {\n                    (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'User canceled connection');\n                    // disconnect so we dont have open connectors all over the place\n                    return disconnect();\n                }\n                (0, logger_1.getApplicationLogger)().debug('[useWalletConnectConnector]', 'WC error', reason);\n                setError(reason.message);\n            }\n        }))();\n        return () => {\n            // This will be called when unmounting the component rendering the qrcode\n            // if initialised is false, it means the connection was canceled or errored.\n            // We should cleanup the state\n            if (!(connector === null || connector === void 0 ? void 0 : connector.initialised)) {\n                // disconnect so we dont have open connectors all over the place\n                void disconnect();\n            }\n            setUri(null);\n            mounted = false;\n        };\n        // adding all deps here causes an infinite loop.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [walletId, network.chainId, retryValue]);\n    return { uri, error: error || (initError === null || initError === void 0 ? void 0 : initError.message), loading, retry };\n}\nexports.default = useWalletConnectConnector;\n//# sourceMappingURL=use-wallet-connect-connector.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}