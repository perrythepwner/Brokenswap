{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletConnect = void 0;\nconst react_1 = __importStar(require(\"react\"));\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst button_1 = __importDefault(require(\"../components/button\"));\nconst connector_screen_1 = __importDefault(require(\"../components/connector-screen\"));\nconst copy_1 = require(\"../components/copy\");\nconst qrcode_1 = __importDefault(require(\"../components/qrcode\"));\nconst spinner_1 = __importDefault(require(\"../components/spinner\"));\nconst constants_1 = require(\"../constants\");\nconst use_theme_1 = __importDefault(require(\"../hooks/use-theme\"));\nconst use_wallet_connect_connector_1 = __importDefault(require(\"../hooks/use-wallet-connect-connector\"));\nconst tailwind_1 = __importDefault(require(\"../utils/tailwind\"));\nconst styles = (0, tailwind_1.default)({\n  contentContainer: \"\\n    tw-flex\\n    tw-flex-col\\n    tw-items-center\\n    tw-flex-grow\\n    justify-center\",\n  error: \"\\n    tw-text-md\\n    tw-pb-4\",\n  desktopContainer: \"\\n    tw-flex\\n    tw-items-center\\n    tw-gap-9\",\n  desktopSectionName: \"\\n    tw-text-lg\\n    tw-mt-4\",\n  desktopButton: \"\\n    tw-px-6\\n    tw-py-4\\n    tw-flex\\n    tw-flex-col\\n    tw-items-center\\n    tw-grow\\n    tw-rounded-md\\n    tw-transition\\n    focus:tw-outline-none\\n    tw-will-change-transform\\n    tw-scale-100\\n    active:tw-scale-95\",\n  desktopDisclaimer: \"\\n    tw-text-sm\\n    tw-pb-4\",\n  mobileDisclaimer: \"\\n    tw-text-center\\n    tw-text-md\\n    tw-pb-4\",\n  desktopCopyContainer: \"\\n    tw-flex\\n    tw-items-center\\n    tw-justify-center\",\n  titleContainer: \"\\n    tw-flex\\n    tw-flex-row\\n    tw-items-center\\n    tw-justify-center\"\n});\nconst WalletConnect = _ref => {\n  let {\n    onSubmit,\n    provider\n  } = _ref;\n  var _a, _b, _c;\n  const theme = (0, use_theme_1.default)();\n  const {\n    uri,\n    error,\n    loading,\n    retry\n  } = (0, use_wallet_connect_connector_1.default)(onSubmit, react_device_detect_1.isMobile, provider.walletConnectId, provider.getLink && (URI => provider.getLink(URI, react_device_detect_1.isMobile ? constants_1.Platform.Mobile : constants_1.Platform.Desktop)));\n  const onClickPlatform = (0, react_1.useCallback)(platform => {\n    var _a;\n    if (!uri) return;\n    const url = (_a = provider === null || provider === void 0 ? void 0 : provider.getLink) === null || _a === void 0 ? void 0 : _a.call(provider, uri, platform);\n    if (url) window.open(url, '_blank');\n  }, [provider, uri]);\n  if (!provider) return null;\n  let content = null;\n  // need to be able to show errors that are returned from wallet after URI exists. such as \"chain not support\"\n  if (!uri || loading || error) {\n    if (error) {\n      content = react_1.default.createElement(\"div\", {\n        className: styles.contentContainer\n      }, react_1.default.createElement(\"p\", {\n        className: styles.error,\n        style: {\n          color: theme.error\n        }\n      }, error), react_1.default.createElement(button_1.default, {\n        as: \"button\",\n        onClick: retry\n      }, \"Retry\"));\n    } else {\n      content = react_1.default.createElement(spinner_1.default, null);\n    }\n  } else if (!((_a = provider.supportedPlatforms) === null || _a === void 0 ? void 0 : _a.includes(constants_1.Platform.Mobile))) {\n    if (!provider.supportedPlatforms || !provider.supportedPlatforms.length) {\n      content = react_1.default.createElement(\"div\", null, react_1.default.createElement(\"div\", {\n        className: styles.desktopContainer\n      }, react_1.default.createElement(\"span\", {\n        className: styles.desktopDisclaimer\n      }, provider.name, \" doesn't seem to support deeplinking, but you can still copy the wallet-connect URI to connect.\")), react_1.default.createElement(\"div\", {\n        className: styles.desktopCopyContainer\n      }, react_1.default.createElement(copy_1.CopyText, {\n        text: \"Copy to clipboard\",\n        payload: uri\n      })));\n    } else {\n      content = react_1.default.createElement(\"div\", null, react_1.default.createElement(\"div\", {\n        className: styles.desktopContainer\n      }, (provider.supportedPlatforms || []).map(platform => react_1.default.createElement(\"button\", {\n        onClick: () => onClickPlatform(platform),\n        className: styles.desktopButton,\n        key: platform\n      }, platform === constants_1.Platform.Web ? react_1.default.createElement(WebIcon, null) : react_1.default.createElement(DesktopIcon, null), react_1.default.createElement(\"div\", {\n        className: styles.desktopSectionName\n      }, platform)))), react_1.default.createElement(\"div\", {\n        className: styles.desktopCopyContainer\n      }, react_1.default.createElement(copy_1.CopyText, {\n        text: \"Copy to clipboard\",\n        payload: uri\n      })));\n    }\n  } else if (react_device_detect_1.isMobile && ((_b = provider.supportedPlatforms) === null || _b === void 0 ? void 0 : _b.includes(constants_1.Platform.Mobile))) {\n    content = react_1.default.createElement(\"div\", {\n      className: styles.contentContainer\n    }, react_1.default.createElement(\"span\", {\n      className: styles.mobileDisclaimer\n    }, \"Switching to \", provider.name, \"\\u2026\", react_1.default.createElement(\"br\", null), \"If it doesn't open automatically, please use the button below\"), react_1.default.createElement(button_1.default, {\n      as: \"a\",\n      href: (_c = provider.getLink) === null || _c === void 0 ? void 0 : _c.call(provider, uri, constants_1.Platform.Mobile),\n      target: \"_blank\",\n      rel: \"noreferrer\"\n    }, \"Open in \", provider.name));\n  } else {\n    content = react_1.default.createElement(\"div\", null, react_1.default.createElement(qrcode_1.default, {\n      value: uri,\n      size: react_device_detect_1.isMobile ? 200 : 340\n    }));\n  }\n  return react_1.default.createElement(connector_screen_1.default, {\n    title: react_1.default.createElement(\"div\", {\n      className: styles.titleContainer\n    }, \"Scan with \", provider.name, uri && react_1.default.createElement(\"div\", null, react_1.default.createElement(copy_1.CopyText, {\n      text: \"\",\n      payload: uri\n    }))),\n    content: react_1.default.createElement(\"div\", {\n      className: styles.contentContainer\n    }, content),\n    wcUri: uri,\n    footer: provider.installURL ? {\n      name: provider.name,\n      url: provider.installURL\n    } : {\n      desc: 'Not sure if your wallet is compatible?',\n      url: 'https://explorer.walletconnect.com/',\n      CTA: 'Learn'\n    }\n  });\n};\nexports.WalletConnect = WalletConnect;\nfunction WebIcon() {\n  // From bootstrap\n  return react_1.default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"60\",\n    height: \"60\",\n    fill: \"#2E3338\",\n    className: \"tw-fill-current\",\n    viewBox: \"0 0 16 16\"\n  }, react_1.default.createElement(\"path\", {\n    d: \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855-.143.268-.276.56-.395.872.705.157 1.472.257 2.282.287V1.077zM4.249 3.539c.142-.384.304-.744.481-1.078a6.7 6.7 0 0 1 .597-.933A7.01 7.01 0 0 0 3.051 3.05c.362.184.763.349 1.198.49zM3.509 7.5c.036-1.07.188-2.087.436-3.008a9.124 9.124 0 0 1-1.565-.667A6.964 6.964 0 0 0 1.018 7.5h2.49zm1.4-2.741a12.344 12.344 0 0 0-.4 2.741H7.5V5.091c-.91-.03-1.783-.145-2.591-.332zM8.5 5.09V7.5h2.99a12.342 12.342 0 0 0-.399-2.741c-.808.187-1.681.301-2.591.332zM4.51 8.5c.035.987.176 1.914.399 2.741A13.612 13.612 0 0 1 7.5 10.91V8.5H4.51zm3.99 0v2.409c.91.03 1.783.145 2.591.332.223-.827.364-1.754.4-2.741H8.5zm-3.282 3.696c.12.312.252.604.395.872.552 1.035 1.218 1.65 1.887 1.855V11.91c-.81.03-1.577.13-2.282.287zm.11 2.276a6.696 6.696 0 0 1-.598-.933 8.853 8.853 0 0 1-.481-1.079 8.38 8.38 0 0 0-1.198.49 7.01 7.01 0 0 0 2.276 1.522zm-1.383-2.964A13.36 13.36 0 0 1 3.508 8.5h-2.49a6.963 6.963 0 0 0 1.362 3.675c.47-.258.995-.482 1.565-.667zm6.728 2.964a7.009 7.009 0 0 0 2.275-1.521 8.376 8.376 0 0 0-1.197-.49 8.853 8.853 0 0 1-.481 1.078 6.688 6.688 0 0 1-.597.933zM8.5 11.909v3.014c.67-.204 1.335-.82 1.887-1.855.143-.268.276-.56.395-.872A12.63 12.63 0 0 0 8.5 11.91zm3.555-.401c.57.185 1.095.409 1.565.667A6.963 6.963 0 0 0 14.982 8.5h-2.49a13.36 13.36 0 0 1-.437 3.008zM14.982 7.5a6.963 6.963 0 0 0-1.362-3.675c-.47.258-.995.482-1.565.667.248.92.4 1.938.437 3.008h2.49zM11.27 2.461c.177.334.339.694.482 1.078a8.368 8.368 0 0 0 1.196-.49 7.01 7.01 0 0 0-2.275-1.52c.218.283.418.597.597.932zm-.488 1.343a7.765 7.765 0 0 0-.395-.872C9.835 1.897 9.17 1.282 8.5 1.077V4.09c.81-.03 1.577-.13 2.282-.287z\"\n  }));\n}\nfunction DesktopIcon() {\n  // From bootstrap\n  return react_1.default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"60\",\n    height: \"60\",\n    className: \"tw-fill-current\",\n    viewBox: \"0 0 16 16\"\n  }, react_1.default.createElement(\"path\", {\n    d: \"M0 4s0-2 2-2h12s2 0 2 2v6s0 2-2 2h-4c0 .667.083 1.167.25 1.5H11a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1h.75c.167-.333.25-.833.25-1.5H2s-2 0-2-2V4zm1.398-.855a.758.758 0 0 0-.254.302A1.46 1.46 0 0 0 1 4.01V10c0 .325.078.502.145.602.07.105.17.188.302.254a1.464 1.464 0 0 0 .538.143L2.01 11H14c.325 0 .502-.078.602-.145a.758.758 0 0 0 .254-.302 1.464 1.464 0 0 0 .143-.538L15 9.99V4c0-.325-.078-.502-.145-.602a.757.757 0 0 0-.302-.254A1.46 1.46 0 0 0 13.99 3H2c-.325 0-.502.078-.602.145z\"\n  }));\n}","map":null,"metadata":{},"sourceType":"script"}