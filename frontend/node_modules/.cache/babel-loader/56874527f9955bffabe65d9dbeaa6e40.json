{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MultiSigWrapper = void 0;\nvar connect_1 = require(\"@celo/connect\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * Contract for handling multisig actions\n */\nvar MultiSigWrapper = /** @class */function (_super) {\n  __extends(MultiSigWrapper, _super);\n  function MultiSigWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.isowner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isOwner);\n    _this.getOwners = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getOwners);\n    _this.getRequired = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.required, undefined, BaseWrapper_1.valueToBigNumber);\n    _this.getInternalRequired = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.internalRequired, undefined, BaseWrapper_1.valueToBigNumber);\n    _this.totalTransactionCount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.transactionCount, undefined, BaseWrapper_1.valueToInt);\n    _this.getTransactionCount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getTransactionCount, undefined, BaseWrapper_1.valueToInt);\n    _this.replaceOwner = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.replaceOwner, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.stringIdentity, BaseWrapper_1.stringIdentity));\n    return _this;\n  }\n  /**\n   * Allows an owner to submit and confirm a transaction.\n   * If an unexecuted transaction matching `txObject` exists on the multisig, adds a confirmation to that tx ID.\n   * Otherwise, submits the `txObject` to the multisig and add confirmation.\n   * @param index The index of the pending withdrawal to withdraw.\n   */\n  MultiSigWrapper.prototype.submitOrConfirmTransaction = function (destination, txObject, value) {\n    if (value === void 0) {\n      value = '0';\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var data, transactionCount, transactionId, transaction;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            data = (0, BaseWrapper_1.stringToSolidityBytes)(txObject.encodeABI());\n            return [4 /*yield*/, this.contract.methods.getTransactionCount(true, true).call()];\n          case 1:\n            transactionCount = _a.sent();\n            transactionId = Number(transactionCount) - 1;\n            _a.label = 2;\n          case 2:\n            if (!(transactionId >= 0)) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.contract.methods.transactions(transactionId).call()];\n          case 3:\n            transaction = _a.sent();\n            if (transaction.data === data && transaction.destination === destination && transaction.value === value && !transaction.executed) {\n              return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.confirmTransaction(transactionId))];\n            }\n            _a.label = 4;\n          case 4:\n            transactionId--;\n            return [3 /*break*/, 2];\n          case 5:\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.submitTransaction(destination, value, data))];\n        }\n      });\n    });\n  };\n  MultiSigWrapper.prototype.getTransactionDataByContent = function (destination, txo, value) {\n    if (value === void 0) {\n      value = 0;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var data, transactionCount, transactionId, tx;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            data = (0, BaseWrapper_1.stringToSolidityBytes)(txo.encodeABI());\n            return [4 /*yield*/, this.getTransactionCount(true, true)\n            // reverse order for recency\n            ];\n\n          case 1:\n            transactionCount = _a.sent();\n            transactionId = transactionCount - 1;\n            _a.label = 2;\n          case 2:\n            if (!(transactionId >= 0)) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.getTransaction(transactionId)];\n          case 3:\n            tx = _a.sent();\n            if (tx.data === data && tx.destination === destination && tx.value.isEqualTo(value)) {\n              return [2 /*return*/, tx];\n            }\n            _a.label = 4;\n          case 4:\n            transactionId--;\n            return [3 /*break*/, 2];\n          case 5:\n            return [2 /*return*/, undefined];\n        }\n      });\n    });\n  };\n  MultiSigWrapper.prototype.getTransaction = function (i) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, destination, value, data, executed, confirmations, _i, _b, e;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.contract.methods.transactions(i).call()];\n          case 1:\n            _a = _c.sent(), destination = _a.destination, value = _a.value, data = _a.data, executed = _a.executed;\n            confirmations = [];\n            _i = 0;\n            return [4 /*yield*/, this.getOwners()];\n          case 2:\n            _b = _c.sent();\n            _c.label = 3;\n          case 3:\n            if (!(_i < _b.length)) return [3 /*break*/, 6];\n            e = _b[_i];\n            return [4 /*yield*/, this.contract.methods.confirmations(i, e).call()];\n          case 4:\n            if (_c.sent()) {\n              confirmations.push(e);\n            }\n            _c.label = 5;\n          case 5:\n            _i++;\n            return [3 /*break*/, 3];\n          case 6:\n            return [2 /*return*/, {\n              destination: destination,\n              data: data,\n              executed: executed,\n              confirmations: confirmations,\n              value: new bignumber_js_1.default(value)\n            }];\n        }\n      });\n    });\n  };\n  MultiSigWrapper.prototype.getTransactions = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var txcount, res, i, _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.totalTransactionCount()];\n          case 1:\n            txcount = _c.sent();\n            res = [];\n            i = 0;\n            _c.label = 2;\n          case 2:\n            if (!(i < txcount)) return [3 /*break*/, 5];\n            _b = (_a = res).push;\n            return [4 /*yield*/, this.getTransaction(i)];\n          case 3:\n            _b.apply(_a, [_c.sent()]);\n            _c.label = 4;\n          case 4:\n            i++;\n            return [3 /*break*/, 2];\n          case 5:\n            return [2 /*return*/, res];\n        }\n      });\n    });\n  };\n  return MultiSigWrapper;\n}(BaseWrapper_1.BaseWrapper);\nexports.MultiSigWrapper = MultiSigWrapper;","map":null,"metadata":{},"sourceType":"script"}