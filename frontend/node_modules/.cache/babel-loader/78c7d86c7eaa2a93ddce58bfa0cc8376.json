{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LocalWallet = void 0;\nvar address_1 = require(\"@celo/utils/lib/address\");\nvar wallet_base_1 = require(\"@celo/wallet-base\");\nvar local_signer_1 = require(\"./local-signer\");\nvar LocalWallet = /** @class */function (_super) {\n  __extends(LocalWallet, _super);\n  function LocalWallet() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Register the private key as signer account\n   * @param privateKey account private key\n   */\n  LocalWallet.prototype.addAccount = function (privateKey) {\n    // Prefix 0x here or else the signed transaction produces dramatically different signer!!!\n    privateKey = (0, address_1.normalizeAddressWith0x)(privateKey);\n    var accountAddress = (0, address_1.normalizeAddressWith0x)((0, address_1.privateKeyToAddress)(privateKey));\n    if (this.hasAccount(accountAddress)) {\n      return;\n    }\n    this.addSigner(accountAddress, new local_signer_1.LocalSigner(privateKey));\n  };\n  /**\n   * Remove the account\n   * @param address Adddress of the account to remove\n   */\n  LocalWallet.prototype.removeAccount = function (address) {\n    this.removeSigner(address);\n  };\n  return LocalWallet;\n}(wallet_base_1.WalletBase);\nexports.LocalWallet = LocalWallet;","map":null,"metadata":{},"sourceType":"script"}