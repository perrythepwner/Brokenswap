{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler(value, onChange) {\n  _s();\n  let debouncedMs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  const [inner, setInner] = useState(() => value);\n  const timer = useRef();\n  const onChangeInner = useCallback(newValue => {\n    setInner(newValue);\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      onChange(newValue);\n      timer.current = undefined;\n    }, debouncedMs);\n  }, [debouncedMs, onChange]);\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = undefined;\n    }\n    setInner(value);\n  }, [value]);\n  return [inner, onChangeInner];\n}\n_s(useDebouncedChangeHandler, \"hMxW3E4LWgKh3jKpAjrpeYPhb3U=\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useDebouncedChangeHandler","value","onChange","_s","debouncedMs","arguments","length","undefined","inner","setInner","timer","onChangeInner","newValue","current","clearTimeout","setTimeout"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/useDebouncedChangeHandler.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,yBAAyBA,CAC/CC,KAAQ,EACRC,QAA+B,EAEN;EAAAC,EAAA;EAAA,IADzBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAEjB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAI,MAAME,KAAK,CAAC;EAClD,MAAMS,KAAK,GAAGZ,MAAM,CAAgC,CAAC;EAErD,MAAMa,aAAa,GAAGf,WAAW,CAC9BgB,QAAW,IAAK;IACfH,QAAQ,CAACG,QAAQ,CAAC;IAClB,IAAIF,KAAK,CAACG,OAAO,EAAE;MACjBC,YAAY,CAACJ,KAAK,CAACG,OAAO,CAAC;IAC7B;IACAH,KAAK,CAACG,OAAO,GAAGE,UAAU,CAAC,MAAM;MAC/Bb,QAAQ,CAACU,QAAQ,CAAC;MAClBF,KAAK,CAACG,OAAO,GAAGN,SAAS;IAC3B,CAAC,EAAEH,WAAW,CAAC;EACjB,CAAC,EACD,CAACA,WAAW,EAAEF,QAAQ,CACxB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK,CAACG,OAAO,EAAE;MACjBC,YAAY,CAACJ,KAAK,CAACG,OAAO,CAAC;MAC3BH,KAAK,CAACG,OAAO,GAAGN,SAAS;IAC3B;IACAE,QAAQ,CAACR,KAAK,CAAC;EACjB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAO,CAACO,KAAK,EAAEG,aAAa,CAAC;AAC/B;AAACR,EAAA,CA/BuBH,yBAAyB"},"metadata":{},"sourceType":"module"}