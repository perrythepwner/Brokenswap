{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoteWallet = void 0;\nvar async_1 = require(\"@celo/utils/lib/async\");\nvar wallet_base_1 = require(\"@celo/wallet-base\");\n/**\n * Abstract class representing a remote wallet that requires async initialization\n */\nvar RemoteWallet = /** @class */function (_super) {\n  __extends(RemoteWallet, _super);\n  function RemoteWallet() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.setupFinished = false;\n    _this.setupLocked = false;\n    _this.INIT_TIMEOUT_IN_MS = 10 * 1000;\n    _this.isSetupFinished = function () {\n      return _this.setupFinished;\n    };\n    return _this;\n  }\n  /**\n   * Discovers wallet accounts and caches results in memory\n   * Idempotent to ensure multiple calls are benign\n   */\n  RemoteWallet.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var accountSigners;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.setupLocked || this.setupFinished)) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.initCompleted()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n          case 2:\n            _a.trys.push([2,, 4, 5]);\n            this.setupLocked = true;\n            return [4 /*yield*/, this.loadAccountSigners()];\n          case 3:\n            accountSigners = _a.sent();\n            accountSigners.forEach(function (signer, address) {\n              _this.addSigner(address, signer);\n            });\n            this.setupFinished = true;\n            return [3 /*break*/, 5];\n          case 4:\n            this.setupLocked = false;\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Monitor the initialization state until it reaches completion or time out\n   */\n  RemoteWallet.prototype.initCompleted = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var initTimeout, sleepIntervalInMs;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            initTimeout = this.INIT_TIMEOUT_IN_MS;\n            sleepIntervalInMs = 1 * 1000;\n            _a.label = 1;\n          case 1:\n            if (!(initTimeout > 0)) return [3 /*break*/, 3];\n            initTimeout -= sleepIntervalInMs;\n            if (this.setupFinished) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, (0, async_1.sleep)(sleepIntervalInMs)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 1];\n          case 3:\n            throw new Error('Initialization took too long. Ensure the wallet signer is available');\n        }\n      });\n    });\n  };\n  /**\n   * Get a list of accounts in the remote wallet\n   */\n  RemoteWallet.prototype.getAccounts = function () {\n    this.initializationRequired();\n    return _super.prototype.getAccounts.call(this);\n  };\n  /**\n   * Returns true if account is in the remote wallet\n   * @param address Account to check\n   */\n  RemoteWallet.prototype.hasAccount = function (address) {\n    this.initializationRequired();\n    return _super.prototype.hasAccount.call(this, address);\n  };\n  /**\n   * Signs the EVM transaction using the signer pulled from the from field\n   * @param txParams EVM transaction\n   */\n  RemoteWallet.prototype.signTransaction = function (txParams) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.initializationRequired();\n        return [2 /*return*/, _super.prototype.signTransaction.call(this, txParams)];\n      });\n    });\n  };\n  /**\n   * @param address Address of the account to sign with\n   * @param data Hex string message to sign\n   * @return Signature hex string (order: rsv)\n   */\n  RemoteWallet.prototype.signPersonalMessage = function (address, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.initializationRequired();\n        return [2 /*return*/, _super.prototype.signPersonalMessage.call(this, address, data)];\n      });\n    });\n  };\n  /**\n   * @param address Address of the account to sign with\n   * @param typedData the typed data object\n   * @return Signature hex string (order: rsv)\n   */\n  RemoteWallet.prototype.signTypedData = function (address, typedData) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.initializationRequired();\n        return [2 /*return*/, _super.prototype.signTypedData.call(this, address, typedData)];\n      });\n    });\n  };\n  RemoteWallet.prototype.initializationRequired = function () {\n    if (!this.setupFinished) {\n      throw new Error('wallet needs to be initialized first');\n    }\n  };\n  return RemoteWallet;\n}(wallet_base_1.WalletBase);\nexports.RemoteWallet = RemoteWallet;","map":null,"metadata":{},"sourceType":"script"}