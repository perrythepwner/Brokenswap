{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhoneNumberBase = exports.anonymizedPhone = exports.isE164Number = exports.getPhoneHash = void 0;\nvar attestations_1 = require(\"./attestations\");\nvar PHONE_SALT_SEPARATOR = '__';\nvar E164_REGEX = /^\\+[1-9][0-9]{1,14}$/;\nvar getPhoneHash = function getPhoneHash(sha3, phoneNumber, salt) {\n  if (!phoneNumber || !isE164Number(phoneNumber)) {\n    throw Error('Attempting to hash a non-e164 number: ' + phoneNumber);\n  }\n  var prefix = (0, attestations_1.getIdentifierPrefix)(attestations_1.IdentifierType.PHONE_NUMBER);\n  var value = prefix + (salt ? phoneNumber + PHONE_SALT_SEPARATOR + salt : phoneNumber);\n  return sha3(value);\n};\nexports.getPhoneHash = getPhoneHash;\nfunction isE164Number(phoneNumber) {\n  return E164_REGEX.test(phoneNumber);\n}\nexports.isE164Number = isE164Number;\nfunction anonymizedPhone(phoneNumber) {\n  return phoneNumber.slice(0, -4) + 'XXXX';\n}\nexports.anonymizedPhone = anonymizedPhone;\nexports.PhoneNumberBase = {\n  getPhoneHash: exports.getPhoneHash,\n  isE164Number: isE164Number\n};","map":{"version":3,"sources":["../src/phoneNumbers.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;AAUA,IAAM,oBAAoB,GAAG,IAAI;AACjC,IAAM,UAAU,GAAG,sBAAsB;AAElC,IAAM,YAAY,GAAG,SAAf,YAAY,CACvB,IAAkC,EAClC,WAAmB,EACnB,IAAa,EAAA;EAEb,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;IAC9C,MAAM,KAAK,CAAC,wCAAwC,GAAG,WAAW,CAAC;EACpE;EACD,IAAM,MAAM,GAAG,CAAA,CAAA,EAAA,cAAA,CAAA,mBAAmB,EAAC,cAAA,CAAA,cAAc,CAAC,YAAY,CAAC;EAC/D,IAAM,KAAK,GAAG,MAAM,IAAI,IAAI,GAAG,WAAW,GAAG,oBAAoB,GAAG,IAAI,GAAG,WAAW,CAAC;EACvF,OAAO,IAAI,CAAC,KAAK,CAAW;AAC9B,CAAC;AAXY,OAAA,CAAA,YAAY,GAAA,YAAA;AAazB,SAAgB,YAAY,CAAC,WAAmB,EAAA;EAC9C,OAAO,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;AACrC;AAFA,OAAA,CAAA,YAAA,GAAA,YAAA;AAIA,SAAgB,eAAe,CAAC,WAAmB,EAAA;EACjD,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM;AAC1C;AAFA,OAAA,CAAA,eAAA,GAAA,eAAA;AAIa,OAAA,CAAA,eAAe,GAAG;EAC7B,YAAY,EAAA,OAAA,CAAA,YAAA;EACZ,YAAY,EAAA;CACb","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhoneNumberBase = exports.anonymizedPhone = exports.isE164Number = exports.getPhoneHash = void 0;\nvar attestations_1 = require(\"./attestations\");\nvar PHONE_SALT_SEPARATOR = '__';\nvar E164_REGEX = /^\\+[1-9][0-9]{1,14}$/;\nvar getPhoneHash = function (sha3, phoneNumber, salt) {\n    if (!phoneNumber || !isE164Number(phoneNumber)) {\n        throw Error('Attempting to hash a non-e164 number: ' + phoneNumber);\n    }\n    var prefix = (0, attestations_1.getIdentifierPrefix)(attestations_1.IdentifierType.PHONE_NUMBER);\n    var value = prefix + (salt ? phoneNumber + PHONE_SALT_SEPARATOR + salt : phoneNumber);\n    return sha3(value);\n};\nexports.getPhoneHash = getPhoneHash;\nfunction isE164Number(phoneNumber) {\n    return E164_REGEX.test(phoneNumber);\n}\nexports.isE164Number = isE164Number;\nfunction anonymizedPhone(phoneNumber) {\n    return phoneNumber.slice(0, -4) + 'XXXX';\n}\nexports.anonymizedPhone = anonymizedPhone;\nexports.PhoneNumberBase = {\n    getPhoneHash: exports.getPhoneHash,\n    isE164Number: isE164Number,\n};\n//# sourceMappingURL=phoneNumbers.js.map"]},"metadata":{},"sourceType":"script"}