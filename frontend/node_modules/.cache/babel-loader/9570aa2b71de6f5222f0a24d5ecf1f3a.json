{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Token } from '@ubeswap/sdk';\nimport tokenList from './../../constants/token-list.json';\nconst TOKEN_LIST = tokenList;\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tokenInfo = tokenInfo;\n  }\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n}\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [1]: {}\n};\nconst listCache = typeof WeakMap !== 'undefined' ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenMap$token$chain;\n    const token = new WrappedTokenInfo(tokenInfo);\n    if (((_tokenMap$token$chain = tokenMap[token.chainId]) === null || _tokenMap$token$chain === void 0 ? void 0 : _tokenMap$token$chain[token.address]) !== undefined) throw Error(\"Duplicate tokens found for \".concat(token.name));\n    return _objectSpread(_objectSpread({}, tokenMap), {}, {\n      [token.chainId]: _objectSpread(_objectSpread({}, tokenMap[token.chainId]), {}, {\n        [token.address]: {\n          token,\n          list\n        }\n      })\n    });\n  }, _objectSpread({}, EMPTY_LIST));\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList() {\n  const defaultTokenMap = listToTokenMap(TOKEN_LIST);\n  return defaultTokenMap;\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList() {\n  return [];\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList() {\n  return listToTokenMap(TOKEN_LIST);\n}","map":{"version":3,"names":["Token","tokenList","TOKEN_LIST","WrappedTokenInfo","constructor","tokenInfo","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","_tokenMap$token$chain","token","undefined","Error","concat","_objectSpread","set","useCombinedActiveList","defaultTokenMap","useCombinedInactiveList","useDefaultTokenList"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/lists/hooks.ts"],"sourcesContent":["import { Token } from '@ubeswap/sdk'\nimport { TokenInfo, TokenList } from '@uniswap/token-lists'\n\nimport tokenList from './../../constants/token-list.json'\n\nconst TOKEN_LIST: TokenList = tokenList\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n  constructor(tokenInfo: TokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{\n  [chainId: number]: Readonly<{\n    [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\n  }>\n}>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [1]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const token = new WrappedTokenInfo(tokenInfo)\n      if (tokenMap[token.chainId]?.[token.address] !== undefined)\n        throw Error(`Duplicate tokens found for ${token.name}`)\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const defaultTokenMap = listToTokenMap(TOKEN_LIST)\n  return defaultTokenMap\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  return []\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(TOKEN_LIST)\n}\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,cAAc;AAGpC,OAAOC,SAAS,MAAM,mCAAmC;AAEzD,MAAMC,UAAqB,GAAGD,SAAS;;AAEvC;AACA;AACA;AACA,OAAO,MAAME,gBAAgB,SAASH,KAAK,CAAC;EAE1CI,WAAWA,CAACC,SAAoB,EAAE;IAChC,KAAK,CAACA,SAAS,CAACC,OAAO,EAAED,SAAS,CAACE,OAAO,EAAEF,SAAS,CAACG,QAAQ,EAAEH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACK,IAAI,CAAC;IAAA,KAFnFL,SAAS;IAGvB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EACA,IAAWM,OAAOA,CAAA,EAAuB;IACvC,OAAO,IAAI,CAACN,SAAS,CAACM,OAAO;EAC/B;AACF;AAQA;AACA;AACA;AACA,MAAMC,UAA2B,GAAG;EAClC,CAAC,CAAC,GAAG,CAAC;AACR,CAAC;AAED,MAAMC,SAAqD,GACzD,OAAOC,OAAO,KAAK,WAAW,GAAG,IAAIA,OAAO,CAA6B,CAAC,GAAG,IAAI;AAEnF,OAAO,SAASC,cAAcA,CAACC,IAAe,EAAmB;EAC/D,MAAMC,MAAM,GAAGJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,GAAG,CAACF,IAAI,CAAC;EACnC,IAAIC,MAAM,EAAE,OAAOA,MAAM;EAEzB,MAAME,GAAG,GAAGH,IAAI,CAACI,MAAM,CAACC,MAAM,CAC5B,CAACC,QAAQ,EAAEjB,SAAS,KAAK;IAAA,IAAAkB,qBAAA;IACvB,MAAMC,KAAK,GAAG,IAAIrB,gBAAgB,CAACE,SAAS,CAAC;IAC7C,IAAI,EAAAkB,qBAAA,GAAAD,QAAQ,CAACE,KAAK,CAAClB,OAAO,CAAC,cAAAiB,qBAAA,uBAAvBA,qBAAA,CAA0BC,KAAK,CAACjB,OAAO,CAAC,MAAKkB,SAAS,EACxD,MAAMC,KAAK,+BAAAC,MAAA,CAA+BH,KAAK,CAACd,IAAI,CAAE,CAAC;IACzD,OAAAkB,aAAA,CAAAA,aAAA,KACKN,QAAQ;MACX,CAACE,KAAK,CAAClB,OAAO,GAAAsB,aAAA,CAAAA,aAAA,KACTN,QAAQ,CAACE,KAAK,CAAClB,OAAO,CAAC;QAC1B,CAACkB,KAAK,CAACjB,OAAO,GAAG;UACfiB,KAAK;UACLR;QACF;MAAC;IACF;EAEL,CAAC,EAAAY,aAAA,KACIhB,UAAU,CACjB,CAAC;EACDC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgB,GAAG,CAACb,IAAI,EAAEG,GAAG,CAAC;EACzB,OAAOA,GAAG;AACZ;;AAEA;AACA,OAAO,SAASW,qBAAqBA,CAAA,EAAoB;EACvD,MAAMC,eAAe,GAAGhB,cAAc,CAACb,UAAU,CAAC;EAClD,OAAO6B,eAAe;AACxB;;AAEA;AACA,OAAO,SAASC,uBAAuBA,CAAA,EAAoB;EACzD,OAAO,EAAE;AACX;;AAEA;AACA,OAAO,SAASC,mBAAmBA,CAAA,EAAoB;EACrD,OAAOlB,cAAc,CAACb,UAAU,CAAC;AACnC"},"metadata":{},"sourceType":"module"}