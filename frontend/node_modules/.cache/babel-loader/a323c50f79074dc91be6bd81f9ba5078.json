{"ast":null,"code":"import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import{load,save}from'redux-localstorage-simple';import application from'./application/reducer';import burn from'./burn/reducer';import{updateVersion}from'./global/actions';import importfarm from'./importfarm/reducer';import limit from'./limit/reducer';import lists from'./lists/reducer';import mint from'./mint/reducer';import multicall from'./multicall/reducer';import swap from'./swap/reducer';import transactions from'./transactions/reducer';import user from'./user/reducer';const PERSISTED_KEYS=['user','transactions','lists'];const store=configureStore({reducer:{application,user,transactions,swap,limit,mint,burn,multicall,lists,importfarm},middleware:[...getDefaultMiddleware({thunk:false,serializableCheck:false}),save({states:PERSISTED_KEYS})],preloadedState:load({states:PERSISTED_KEYS})});store.dispatch(updateVersion());export default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","load","save","application","burn","updateVersion","importfarm","limit","lists","mint","multicall","swap","transactions","user","PERSISTED_KEYS","store","reducer","middleware","thunk","serializableCheck","states","preloadedState","dispatch"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/index.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { load, save } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport burn from './burn/reducer'\nimport { updateVersion } from './global/actions'\nimport importfarm from './importfarm/reducer'\nimport limit from './limit/reducer'\nimport lists from './lists/reducer'\nimport mint from './mint/reducer'\nimport multicall from './multicall/reducer'\nimport swap from './swap/reducer'\nimport transactions from './transactions/reducer'\nimport user from './user/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    transactions,\n    swap,\n    limit,\n    mint,\n    burn,\n    multicall,\n    lists,\n    importfarm,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false, serializableCheck: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,OAASA,cAAc,CAAEC,oBAAoB,KAAQ,kBAAkB,CACvE,OAASC,IAAI,CAAEC,IAAI,KAAQ,2BAA2B,CAEtD,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,YAAY,KAAM,wBAAwB,CACjD,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CAEjC,KAAM,CAAAC,cAAwB,CAAG,CAAC,MAAM,CAAE,cAAc,CAAE,OAAO,CAAC,CAElE,KAAM,CAAAC,KAAK,CAAGhB,cAAc,CAAC,CAC3BiB,OAAO,CAAE,CACPb,WAAW,CACXU,IAAI,CACJD,YAAY,CACZD,IAAI,CACJJ,KAAK,CACLE,IAAI,CACJL,IAAI,CACJM,SAAS,CACTF,KAAK,CACLF,UACF,CAAC,CACDW,UAAU,CAAE,CAAC,GAAGjB,oBAAoB,CAAC,CAAEkB,KAAK,CAAE,KAAK,CAAEC,iBAAiB,CAAE,KAAM,CAAC,CAAC,CAAEjB,IAAI,CAAC,CAAEkB,MAAM,CAAEN,cAAe,CAAC,CAAC,CAAC,CACnHO,cAAc,CAAEpB,IAAI,CAAC,CAAEmB,MAAM,CAAEN,cAAe,CAAC,CACjD,CAAC,CAAC,CAEFC,KAAK,CAACO,QAAQ,CAACjB,aAAa,CAAC,CAAC,CAAC,CAE/B,cAAe,CAAAU,KAAK"},"metadata":{},"sourceType":"module"}