{"ast":null,"code":"import{useSingleCallResult}from'../state/multicall/hooks';import{useMulticallContract}from'./useContract';// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(){var _useSingleCallResult,_useSingleCallResult$;const multicall=useMulticallContract();return(_useSingleCallResult=useSingleCallResult(multicall,'getCurrentBlockTimestamp'))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];}","map":{"version":3,"names":["useSingleCallResult","useMulticallContract","useCurrentBlockTimestamp","_useSingleCallResult","_useSingleCallResult$","multicall","result"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/hooks/useCurrentBlockTimestamp.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n"],"mappings":"AAEA,OAASA,mBAAmB,KAAQ,0BAA0B,CAC9D,OAASC,oBAAoB,KAAQ,eAAe,CAEpD;AACA,cAAe,SAAS,CAAAC,wBAAwBA,CAAA,CAA0B,KAAAC,oBAAA,CAAAC,qBAAA,CACxE,KAAM,CAAAC,SAAS,CAAGJ,oBAAoB,CAAC,CAAC,CACxC,OAAAE,oBAAA,CAAOH,mBAAmB,CAACK,SAAS,CAAE,0BAA0B,CAAC,UAAAF,oBAAA,kBAAAC,qBAAA,CAA1DD,oBAAA,CAA4DG,MAAM,UAAAF,qBAAA,iBAAlEA,qBAAA,CAAqE,CAAC,CAAC,CAChF"},"metadata":{},"sourceType":"module"}