{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureUtils = exports.guessSigner = exports.verifyEIP712TypedDataSigner = exports.recoverEIP712TypedDataSignerVrs = exports.recoverEIP712TypedDataSignerRsv = exports.parseSignatureWithoutPrefix = exports.parseSignature = exports.verifySignature = exports.signMessageWithoutPrefix = exports.signMessage = exports.signedMessageToPublicKey = exports.LocalSigner = exports.addressToPublicKey = exports.hashMessage = exports.hashMessageWithPrefix = exports.serializeSignature = exports.POP_SIZE = exports.NativeSigner = void 0;\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\nvar web3_utils_1 = require(\"web3-utils\");\nvar address_1 = require(\"./address\");\nvar sign_typed_data_utils_1 = require(\"./sign-typed-data-utils\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar signatureUtils_2 = require(\"@celo/base/lib/signatureUtils\");\nObject.defineProperty(exports, \"NativeSigner\", {\n  enumerable: true,\n  get: function get() {\n    return signatureUtils_2.NativeSigner;\n  }\n});\nObject.defineProperty(exports, \"POP_SIZE\", {\n  enumerable: true,\n  get: function get() {\n    return signatureUtils_2.POP_SIZE;\n  }\n});\nObject.defineProperty(exports, \"serializeSignature\", {\n  enumerable: true,\n  get: function get() {\n    return signatureUtils_2.serializeSignature;\n  }\n});\nvar ethjsutil = require('ethereumjs-util');\n// If messages is a hex, the length of it should be the number of bytes\nfunction messageLength(message) {\n  if ((0, web3_utils_1.isHexStrict)(message)) {\n    return (message.length - 2) / 2;\n  }\n  return message.length;\n}\n// Ethereum has a special signature format that requires a prefix\n// https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\nfunction hashMessageWithPrefix(message) {\n  var prefix = '\\x19Ethereum Signed Message:\\n' + messageLength(message);\n  return (0, web3_utils_1.soliditySha3)(prefix, message);\n}\nexports.hashMessageWithPrefix = hashMessageWithPrefix;\nfunction hashMessage(message) {\n  return (0, web3_utils_1.soliditySha3)({\n    type: 'string',\n    value: message\n  });\n}\nexports.hashMessage = hashMessage;\nfunction addressToPublicKey(signer, signFn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var msg, data, sig, rawsig, prefixedMsg, pubKey, computedAddr;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          msg = Buffer.from('dummy_msg_data');\n          data = '0x' + msg.toString('hex');\n          return [4 /*yield*/, signFn(data, signer)];\n        case 1:\n          sig = _a.sent();\n          rawsig = ethjsutil.fromRpcSig(sig);\n          prefixedMsg = hashMessageWithPrefix(data);\n          pubKey = ethjsutil.ecrecover(Buffer.from(prefixedMsg.slice(2), 'hex'), rawsig.v, rawsig.r, rawsig.s);\n          computedAddr = ethjsutil.pubToAddress(pubKey).toString('hex');\n          if (!(0, address_1.eqAddress)(computedAddr, signer)) {\n            throw new Error('computed address !== signer');\n          }\n          return [2 /*return*/, '0x' + pubKey.toString('hex')];\n      }\n    });\n  });\n}\nexports.addressToPublicKey = addressToPublicKey;\nfunction LocalSigner(privateKey) {\n  var _this = this;\n  return {\n    sign: function sign(message) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2 /*return*/, Promise.resolve((0, signatureUtils_1.serializeSignature)(signMessage(message, privateKey, (0, address_1.privateKeyToAddress)(privateKey))))];\n        });\n      });\n    }\n  };\n}\nexports.LocalSigner = LocalSigner;\nfunction signedMessageToPublicKey(message, v, r, s) {\n  var pubKeyBuf = ethjsutil.ecrecover(Buffer.from(message.slice(2), 'hex'), v, Buffer.from(r.slice(2), 'hex'), Buffer.from(s.slice(2), 'hex'));\n  return '0x' + pubKeyBuf.toString('hex');\n}\nexports.signedMessageToPublicKey = signedMessageToPublicKey;\nfunction signMessage(message, privateKey, address) {\n  return signMessageWithoutPrefix(hashMessageWithPrefix(message), (0, address_1.ensureLeading0x)(privateKey), address);\n}\nexports.signMessage = signMessage;\nfunction signMessageWithoutPrefix(messageHash, privateKey, address) {\n  var publicKey = ethjsutil.privateToPublic(ethjsutil.toBuffer(privateKey));\n  var derivedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n  if (derivedAddress.toLowerCase() !== address.toLowerCase()) {\n    throw new Error('Provided private key does not match address of intended signer');\n  }\n  var _a = ethjsutil.ecsign(ethjsutil.toBuffer(messageHash), ethjsutil.toBuffer(privateKey)),\n    r = _a.r,\n    s = _a.s,\n    v = _a.v;\n  if (!isValidSignature(address, messageHash, v, ethjsutil.bufferToHex(r), ethjsutil.bufferToHex(s))) {\n    throw new Error('Unable to validate signature');\n  }\n  return {\n    v: v,\n    r: ethjsutil.bufferToHex(r),\n    s: ethjsutil.bufferToHex(s)\n  };\n}\nexports.signMessageWithoutPrefix = signMessageWithoutPrefix;\nfunction verifySignature(message, signature, signer) {\n  try {\n    parseSignature(message, signature, signer);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nexports.verifySignature = verifySignature;\nfunction parseSignature(message, signature, signer) {\n  return parseSignatureWithoutPrefix(hashMessageWithPrefix(message), signature, signer);\n}\nexports.parseSignature = parseSignature;\nfunction parseSignatureWithoutPrefix(messageHash, signature, signer) {\n  var _a;\n  var _b = parseSignatureAsRsv(signature.slice(2)),\n    r = _b.r,\n    s = _b.s,\n    v = _b.v;\n  if (isValidSignature(signer, messageHash, v, r, s)) {\n    return {\n      v: v,\n      r: r,\n      s: s\n    };\n  }\n  ;\n  _a = parseSignatureAsVrs(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v;\n  if (isValidSignature(signer, messageHash, v, r, s)) {\n    return {\n      v: v,\n      r: r,\n      s: s\n    };\n  }\n  throw new Error(\"Unable to parse signature (expected signer \".concat(signer, \")\"));\n}\nexports.parseSignatureWithoutPrefix = parseSignatureWithoutPrefix;\nfunction recoverEIP712TypedDataSigner(typedData, signature, parseFunction) {\n  var dataBuff = (0, sign_typed_data_utils_1.generateTypedDataHash)(typedData);\n  var _a = parseFunction((0, address_1.trimLeading0x)(signature)),\n    r = _a.r,\n    s = _a.s,\n    v = _a.v;\n  var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(dataBuff), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n  // TODO test error handling on this\n  return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\n/**\n * Recover signer from RSV-serialized signature over signed typed data.\n * @param typedData EIP712 typed data\n * @param signature RSV signature of signed type data by signer\n * @returns string signer, or throws error if parsing fails\n */\nfunction recoverEIP712TypedDataSignerRsv(typedData, signature) {\n  return recoverEIP712TypedDataSigner(typedData, signature, parseSignatureAsRsv);\n}\nexports.recoverEIP712TypedDataSignerRsv = recoverEIP712TypedDataSignerRsv;\n/**\n * Recover signer from VRS-serialized signature over signed typed data.\n * @param typedData EIP712 typed data\n * @param signature VRS signature of signed type data by signer\n * @returns string signer, or throws error if parsing fails\n */\nfunction recoverEIP712TypedDataSignerVrs(typedData, signature) {\n  return recoverEIP712TypedDataSigner(typedData, signature, parseSignatureAsVrs);\n}\nexports.recoverEIP712TypedDataSignerVrs = recoverEIP712TypedDataSignerVrs;\n/**\n * @param typedData EIP712 typed data\n * @param signature VRS or SRV signature of `typedData` by `signer`\n * @param signer address to verify signed the `typedData`\n * @returns boolean, true if `signer` is a possible signer of `signature`\n */\nfunction verifyEIP712TypedDataSigner(typedData, signature, signer) {\n  var e_1, _a;\n  try {\n    for (var _b = __values([recoverEIP712TypedDataSignerVrs, recoverEIP712TypedDataSignerRsv]), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var recover = _c.value;\n      try {\n        if ((0, address_1.eqAddress)(recover(typedData, signature), signer)) {\n          return true;\n        }\n      } catch (e) {\n        // try both serialization formats before failing to verify\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return false;\n}\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\nfunction guessSigner(message, signature) {\n  var messageHash = hashMessageWithPrefix(message);\n  var _a = parseSignatureAsRsv(signature.slice(2)),\n    r = _a.r,\n    s = _a.s,\n    v = _a.v;\n  var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(messageHash), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n  return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\nexports.guessSigner = guessSigner;\nfunction parseSignatureAsVrs(signature) {\n  var v = parseInt(signature.slice(0, 2), 16);\n  var r = \"0x\".concat(signature.slice(2, 66));\n  var s = \"0x\".concat(signature.slice(66, 130));\n  if (v < 27) {\n    v += 27;\n  }\n  return {\n    v: v,\n    r: r,\n    s: s\n  };\n}\nfunction parseSignatureAsRsv(signature) {\n  var r = \"0x\".concat(signature.slice(0, 64));\n  var s = \"0x\".concat(signature.slice(64, 128));\n  var v = parseInt(signature.slice(128, 130), 16);\n  if (v < 27) {\n    v += 27;\n  }\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n}\nfunction isValidSignature(signer, message, v, r, s) {\n  try {\n    var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(message), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n    var retrievedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n    return (0, address_1.eqAddress)(retrievedAddress, signer);\n  } catch (err) {\n    return false;\n  }\n}\nexports.SignatureUtils = {\n  NativeSigner: signatureUtils_1.NativeSigner,\n  LocalSigner: LocalSigner,\n  signMessage: signMessage,\n  signMessageWithoutPrefix: signMessageWithoutPrefix,\n  parseSignature: parseSignature,\n  parseSignatureWithoutPrefix: parseSignatureWithoutPrefix,\n  serializeSignature: signatureUtils_1.serializeSignature,\n  recoverEIP712TypedDataSignerRsv: recoverEIP712TypedDataSignerRsv,\n  recoverEIP712TypedDataSignerVrs: recoverEIP712TypedDataSignerVrs,\n  verifyEIP712TypedDataSigner: verifyEIP712TypedDataSigner\n};","map":{"version":3,"sources":["../src/signatureUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureUtils = exports.guessSigner = exports.verifyEIP712TypedDataSigner = exports.recoverEIP712TypedDataSignerVrs = exports.recoverEIP712TypedDataSignerRsv = exports.parseSignatureWithoutPrefix = exports.parseSignature = exports.verifySignature = exports.signMessageWithoutPrefix = exports.signMessage = exports.signedMessageToPublicKey = exports.LocalSigner = exports.addressToPublicKey = exports.hashMessage = exports.hashMessageWithPrefix = exports.serializeSignature = exports.POP_SIZE = exports.NativeSigner = void 0;\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\nvar web3_utils_1 = require(\"web3-utils\");\nvar address_1 = require(\"./address\");\nvar sign_typed_data_utils_1 = require(\"./sign-typed-data-utils\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar signatureUtils_2 = require(\"@celo/base/lib/signatureUtils\");\nObject.defineProperty(exports, \"NativeSigner\", { enumerable: true, get: function () { return signatureUtils_2.NativeSigner; } });\nObject.defineProperty(exports, \"POP_SIZE\", { enumerable: true, get: function () { return signatureUtils_2.POP_SIZE; } });\nObject.defineProperty(exports, \"serializeSignature\", { enumerable: true, get: function () { return signatureUtils_2.serializeSignature; } });\nvar ethjsutil = require('ethereumjs-util');\n// If messages is a hex, the length of it should be the number of bytes\nfunction messageLength(message) {\n    if ((0, web3_utils_1.isHexStrict)(message)) {\n        return (message.length - 2) / 2;\n    }\n    return message.length;\n}\n// Ethereum has a special signature format that requires a prefix\n// https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\nfunction hashMessageWithPrefix(message) {\n    var prefix = '\\x19Ethereum Signed Message:\\n' + messageLength(message);\n    return (0, web3_utils_1.soliditySha3)(prefix, message);\n}\nexports.hashMessageWithPrefix = hashMessageWithPrefix;\nfunction hashMessage(message) {\n    return (0, web3_utils_1.soliditySha3)({ type: 'string', value: message });\n}\nexports.hashMessage = hashMessage;\nfunction addressToPublicKey(signer, signFn) {\n    return __awaiter(this, void 0, void 0, function () {\n        var msg, data, sig, rawsig, prefixedMsg, pubKey, computedAddr;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    msg = Buffer.from('dummy_msg_data');\n                    data = '0x' + msg.toString('hex');\n                    return [4 /*yield*/, signFn(data, signer)];\n                case 1:\n                    sig = _a.sent();\n                    rawsig = ethjsutil.fromRpcSig(sig);\n                    prefixedMsg = hashMessageWithPrefix(data);\n                    pubKey = ethjsutil.ecrecover(Buffer.from(prefixedMsg.slice(2), 'hex'), rawsig.v, rawsig.r, rawsig.s);\n                    computedAddr = ethjsutil.pubToAddress(pubKey).toString('hex');\n                    if (!(0, address_1.eqAddress)(computedAddr, signer)) {\n                        throw new Error('computed address !== signer');\n                    }\n                    return [2 /*return*/, '0x' + pubKey.toString('hex')];\n            }\n        });\n    });\n}\nexports.addressToPublicKey = addressToPublicKey;\nfunction LocalSigner(privateKey) {\n    var _this = this;\n    return {\n        sign: function (message) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve((0, signatureUtils_1.serializeSignature)(signMessage(message, privateKey, (0, address_1.privateKeyToAddress)(privateKey))))];\n            });\n        }); },\n    };\n}\nexports.LocalSigner = LocalSigner;\nfunction signedMessageToPublicKey(message, v, r, s) {\n    var pubKeyBuf = ethjsutil.ecrecover(Buffer.from(message.slice(2), 'hex'), v, Buffer.from(r.slice(2), 'hex'), Buffer.from(s.slice(2), 'hex'));\n    return '0x' + pubKeyBuf.toString('hex');\n}\nexports.signedMessageToPublicKey = signedMessageToPublicKey;\nfunction signMessage(message, privateKey, address) {\n    return signMessageWithoutPrefix(hashMessageWithPrefix(message), (0, address_1.ensureLeading0x)(privateKey), address);\n}\nexports.signMessage = signMessage;\nfunction signMessageWithoutPrefix(messageHash, privateKey, address) {\n    var publicKey = ethjsutil.privateToPublic(ethjsutil.toBuffer(privateKey));\n    var derivedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n    if (derivedAddress.toLowerCase() !== address.toLowerCase()) {\n        throw new Error('Provided private key does not match address of intended signer');\n    }\n    var _a = ethjsutil.ecsign(ethjsutil.toBuffer(messageHash), ethjsutil.toBuffer(privateKey)), r = _a.r, s = _a.s, v = _a.v;\n    if (!isValidSignature(address, messageHash, v, ethjsutil.bufferToHex(r), ethjsutil.bufferToHex(s))) {\n        throw new Error('Unable to validate signature');\n    }\n    return { v: v, r: ethjsutil.bufferToHex(r), s: ethjsutil.bufferToHex(s) };\n}\nexports.signMessageWithoutPrefix = signMessageWithoutPrefix;\nfunction verifySignature(message, signature, signer) {\n    try {\n        parseSignature(message, signature, signer);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.verifySignature = verifySignature;\nfunction parseSignature(message, signature, signer) {\n    return parseSignatureWithoutPrefix(hashMessageWithPrefix(message), signature, signer);\n}\nexports.parseSignature = parseSignature;\nfunction parseSignatureWithoutPrefix(messageHash, signature, signer) {\n    var _a;\n    var _b = parseSignatureAsRsv(signature.slice(2)), r = _b.r, s = _b.s, v = _b.v;\n    if (isValidSignature(signer, messageHash, v, r, s)) {\n        return { v: v, r: r, s: s };\n    }\n    ;\n    (_a = parseSignatureAsVrs(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v);\n    if (isValidSignature(signer, messageHash, v, r, s)) {\n        return { v: v, r: r, s: s };\n    }\n    throw new Error(\"Unable to parse signature (expected signer \".concat(signer, \")\"));\n}\nexports.parseSignatureWithoutPrefix = parseSignatureWithoutPrefix;\nfunction recoverEIP712TypedDataSigner(typedData, signature, parseFunction) {\n    var dataBuff = (0, sign_typed_data_utils_1.generateTypedDataHash)(typedData);\n    var _a = parseFunction((0, address_1.trimLeading0x)(signature)), r = _a.r, s = _a.s, v = _a.v;\n    var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(dataBuff), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n    // TODO test error handling on this\n    return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\n/**\n * Recover signer from RSV-serialized signature over signed typed data.\n * @param typedData EIP712 typed data\n * @param signature RSV signature of signed type data by signer\n * @returns string signer, or throws error if parsing fails\n */\nfunction recoverEIP712TypedDataSignerRsv(typedData, signature) {\n    return recoverEIP712TypedDataSigner(typedData, signature, parseSignatureAsRsv);\n}\nexports.recoverEIP712TypedDataSignerRsv = recoverEIP712TypedDataSignerRsv;\n/**\n * Recover signer from VRS-serialized signature over signed typed data.\n * @param typedData EIP712 typed data\n * @param signature VRS signature of signed type data by signer\n * @returns string signer, or throws error if parsing fails\n */\nfunction recoverEIP712TypedDataSignerVrs(typedData, signature) {\n    return recoverEIP712TypedDataSigner(typedData, signature, parseSignatureAsVrs);\n}\nexports.recoverEIP712TypedDataSignerVrs = recoverEIP712TypedDataSignerVrs;\n/**\n * @param typedData EIP712 typed data\n * @param signature VRS or SRV signature of `typedData` by `signer`\n * @param signer address to verify signed the `typedData`\n * @returns boolean, true if `signer` is a possible signer of `signature`\n */\nfunction verifyEIP712TypedDataSigner(typedData, signature, signer) {\n    var e_1, _a;\n    try {\n        for (var _b = __values([recoverEIP712TypedDataSignerVrs, recoverEIP712TypedDataSignerRsv]), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var recover = _c.value;\n            try {\n                if ((0, address_1.eqAddress)(recover(typedData, signature), signer)) {\n                    return true;\n                }\n            }\n            catch (e) {\n                // try both serialization formats before failing to verify\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\nfunction guessSigner(message, signature) {\n    var messageHash = hashMessageWithPrefix(message);\n    var _a = parseSignatureAsRsv(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v;\n    var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(messageHash), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n    return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\nexports.guessSigner = guessSigner;\nfunction parseSignatureAsVrs(signature) {\n    var v = parseInt(signature.slice(0, 2), 16);\n    var r = \"0x\".concat(signature.slice(2, 66));\n    var s = \"0x\".concat(signature.slice(66, 130));\n    if (v < 27) {\n        v += 27;\n    }\n    return { v: v, r: r, s: s };\n}\nfunction parseSignatureAsRsv(signature) {\n    var r = \"0x\".concat(signature.slice(0, 64));\n    var s = \"0x\".concat(signature.slice(64, 128));\n    var v = parseInt(signature.slice(128, 130), 16);\n    if (v < 27) {\n        v += 27;\n    }\n    return { r: r, s: s, v: v };\n}\nfunction isValidSignature(signer, message, v, r, s) {\n    try {\n        var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(message), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n        var retrievedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n        return (0, address_1.eqAddress)(retrievedAddress, signer);\n    }\n    catch (err) {\n        return false;\n    }\n}\nexports.SignatureUtils = {\n    NativeSigner: signatureUtils_1.NativeSigner,\n    LocalSigner: LocalSigner,\n    signMessage: signMessage,\n    signMessageWithoutPrefix: signMessageWithoutPrefix,\n    parseSignature: parseSignature,\n    parseSignatureWithoutPrefix: parseSignatureWithoutPrefix,\n    serializeSignature: signatureUtils_1.serializeSignature,\n    recoverEIP712TypedDataSignerRsv: recoverEIP712TypedDataSignerRsv,\n    recoverEIP712TypedDataSignerVrs: recoverEIP712TypedDataSignerVrs,\n    verifyEIP712TypedDataSigner: verifyEIP712TypedDataSigner,\n};\n//# sourceMappingURL=signatureUtils.js.map"]},"metadata":{},"sourceType":"script"}