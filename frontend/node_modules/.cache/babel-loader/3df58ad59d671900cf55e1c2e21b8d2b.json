{"ast":null,"code":"import { getTabbableNodes } from './utils/DOMutils';\nimport { getAllAffectedNodes } from './utils/all-affected';\nimport { isGuard, isNotAGuard } from './utils/is';\nimport { getTopCommonParent } from './utils/parenting';\n/**\n * @returns list of focusable elements inside a given top node\n * @see {@link getFocusableNodes} for lower level access\n */\nexport var expandFocusableNodes = function expandFocusableNodes(topNode) {\n  var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);\n  var commonParent = getTopCommonParent(topNode, topNode, entries);\n  var visibilityCache = new Map();\n  var outerNodes = getTabbableNodes([commonParent], visibilityCache, true);\n  var innerElements = getTabbableNodes(entries, visibilityCache).filter(function (_a) {\n    var node = _a.node;\n    return isNotAGuard(node);\n  }).map(function (_a) {\n    var node = _a.node;\n    return node;\n  });\n  return outerNodes.map(function (_a) {\n    var node = _a.node,\n      index = _a.index;\n    return {\n      node: node,\n      index: index,\n      lockItem: innerElements.indexOf(node) >= 0,\n      guard: isGuard(node)\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"module"}