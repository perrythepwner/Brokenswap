{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCeloMethods = void 0;\nconst react_1 = require(\"react\");\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst connectors_1 = require(\"./connectors\");\nconst constants_1 = require(\"./constants\");\nconst use_contracts_cache_1 = require(\"./hooks/use-contracts-cache\");\nconst colors_1 = require(\"./utils/colors\");\nconst logger_1 = require(\"./utils/logger\");\nconst network_watcher_1 = __importDefault(require(\"./utils/network-watcher\"));\nconst persistor_1 = __importDefault(require(\"./utils/persistor\"));\nconst updater_1 = require(\"./utils/updater\");\nfunction useCeloMethods(_ref, dispatch, buildContractsCache) {\n  var _this = this;\n  let {\n    connector,\n    networks,\n    network,\n    manualNetworkMode\n  } = _ref;\n  const initConnector = (0, react_1.useCallback)((nextConnector, lastUsedAddress) => __awaiter(this, void 0, void 0, function* () {\n    try {\n      // need to set the event listeners here before initialise()\n      (0, updater_1.updater)(nextConnector, dispatch);\n      (0, persistor_1.default)(nextConnector);\n      (0, network_watcher_1.default)(nextConnector, networks, manualNetworkMode);\n      const initialisedConnector = yield nextConnector.initialise(lastUsedAddress);\n      dispatch('initialisedConnector', initialisedConnector);\n    } catch (e) {\n      if (typeof e === 'symbol') {\n        (0, logger_1.getApplicationLogger)().debug('[initConnector]', 'Ignoring error initializing connector with reason', e.description);\n        throw e;\n      }\n      (0, logger_1.getApplicationLogger)().error('[initConnector]', 'Error initializing connector', nextConnector.type, e);\n      const error = e instanceof Error ? e : new Error('Failed to initialise connector');\n      dispatch('setConnectorInitError', error);\n      throw e;\n    }\n  }), [dispatch, networks, manualNetworkMode]);\n  const disconnect = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n    yield connector.close();\n    const passiveConnector = new connectors_1.UnauthenticatedConnector(network);\n    yield initConnector(passiveConnector);\n  }), [connector, network, initConnector]);\n  // This is just to be used to for users to explicitly change\n  // the network. It doesn't work for all wallets.\n  const updateNetwork = (0, react_1.useCallback)(function (newNetwork) {\n    let dappOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return __awaiter(_this, void 0, void 0, function* () {\n      (0, logger_1.getApplicationLogger)().debug('[updateNetwork]', newNetwork, connector.type);\n      if (dappOnly && connector.continueNetworkUpdateFromWallet) {\n        connector.continueNetworkUpdateFromWallet(newNetwork);\n      } else if (constants_1.STATIC_NETWORK_WALLETS.includes(connector.type)) {\n        throw new Error(\"The connected wallet's network must be changed from the wallet.\");\n      }\n      yield connector.startNetworkChangeFromApp(newNetwork);\n    });\n  }, [connector]);\n  const connect = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n    const connectionResultPromise = new Promise(resolve => {\n      dispatch('setConnectionCallback', resolve);\n    });\n    const newConnector = yield connectionResultPromise;\n    dispatch('setConnectionCallback', null);\n    if (newConnector === false) {\n      throw new Error('Connection cancelled');\n    }\n    return newConnector;\n  }), [dispatch]);\n  const getConnectedKit = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n    let initialisedConnection = connector;\n    if (connector.type === constants_1.WalletTypes.Unauthenticated) {\n      initialisedConnection = yield connect();\n    } else if (!initialisedConnection.initialised) {\n      yield initConnector(initialisedConnection);\n    }\n    return initialisedConnection.kit;\n  }), [connect, connector, initConnector]);\n  const updateFeeCurrency = (0, react_1.useCallback)(newFeeCurrency => __awaiter(this, void 0, void 0, function* () {\n    try {\n      if (connector.supportsFeeCurrency() && connector.updateFeeCurrency) {\n        yield connector.updateFeeCurrency(newFeeCurrency);\n        dispatch('setFeeCurrency', newFeeCurrency);\n      }\n    } catch (error) {\n      (0, logger_1.getApplicationLogger)().warn('[updateFeeCurrency]', 'updating Fee Currency not supported by this wallet or network', error);\n    }\n  }), [connector, dispatch]);\n  const updateTheme = (0, react_1.useCallback)(theme => {\n    if (!theme) return dispatch('setTheme', null);\n    if (process.env.NODE_ENV !== 'production') {\n      (0, colors_1.fixTheme)(theme);\n      (0, colors_1.contrastCheck)(theme);\n    }\n    dispatch('setTheme', theme);\n  }, [dispatch]);\n  const performActions = (0, react_1.useCallback)(function () {\n    for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n      operations[_key] = arguments[_key];\n    }\n    return __awaiter(_this, void 0, void 0, function* () {\n      const kit = yield getConnectedKit();\n      dispatch('setPendingActionCount', operations.length);\n      const results = [];\n      for (const op of operations) {\n        try {\n          // When on mobile direct user to their wallet app.\n          if (react_device_detect_1.isMobile && connector.getDeeplinkUrl) {\n            const url = connector.getDeeplinkUrl('');\n            if (url) window.open(url, '_blank');\n          }\n          results.push(yield op(kit));\n        } catch (e) {\n          dispatch('setPendingActionCount', 0);\n          throw e;\n        }\n        dispatch('decrementPendingActionCount');\n      }\n      return results;\n    });\n  }, [getConnectedKit, dispatch, connector]);\n  const contractsCache = (0, use_contracts_cache_1.useContractsCache)(buildContractsCache, connector);\n  const resetInitError = (0, react_1.useCallback)(() => {\n    dispatch('setConnectorInitError', null);\n  }, [dispatch]);\n  return {\n    destroy: disconnect,\n    disconnect,\n    initConnector,\n    resetInitError,\n    updateNetwork,\n    connect,\n    getConnectedKit,\n    performActions,\n    updateFeeCurrency,\n    contractsCache,\n    updateTheme\n  };\n}\nexports.useCeloMethods = useCeloMethods;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","useCeloMethods","react_1","require","react_device_detect_1","connectors_1","constants_1","use_contracts_cache_1","colors_1","logger_1","network_watcher_1","persistor_1","updater_1","_ref","dispatch","buildContractsCache","_this","connector","networks","network","manualNetworkMode","initConnector","useCallback","nextConnector","lastUsedAddress","updater","default","initialisedConnector","initialise","getApplicationLogger","debug","description","error","type","Error","disconnect","close","passiveConnector","UnauthenticatedConnector","updateNetwork","newNetwork","dappOnly","arguments","length","undefined","continueNetworkUpdateFromWallet","STATIC_NETWORK_WALLETS","includes","startNetworkChangeFromApp","connect","connectionResultPromise","newConnector","getConnectedKit","initialisedConnection","WalletTypes","Unauthenticated","initialised","kit","updateFeeCurrency","newFeeCurrency","supportsFeeCurrency","warn","updateTheme","theme","process","env","NODE_ENV","fixTheme","contrastCheck","performActions","_len","operations","Array","_key","results","op","isMobile","getDeeplinkUrl","url","window","open","push","contractsCache","useContractsCache","resetInitError","destroy"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/use-celo-methods.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCeloMethods = void 0;\nconst react_1 = require(\"react\");\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst connectors_1 = require(\"./connectors\");\nconst constants_1 = require(\"./constants\");\nconst use_contracts_cache_1 = require(\"./hooks/use-contracts-cache\");\nconst colors_1 = require(\"./utils/colors\");\nconst logger_1 = require(\"./utils/logger\");\nconst network_watcher_1 = __importDefault(require(\"./utils/network-watcher\"));\nconst persistor_1 = __importDefault(require(\"./utils/persistor\"));\nconst updater_1 = require(\"./utils/updater\");\nfunction useCeloMethods({ connector, networks, network, manualNetworkMode }, dispatch, buildContractsCache) {\n    const initConnector = (0, react_1.useCallback)((nextConnector, lastUsedAddress) => __awaiter(this, void 0, void 0, function* () {\n        try {\n            // need to set the event listeners here before initialise()\n            (0, updater_1.updater)(nextConnector, dispatch);\n            (0, persistor_1.default)(nextConnector);\n            (0, network_watcher_1.default)(nextConnector, networks, manualNetworkMode);\n            const initialisedConnector = yield nextConnector.initialise(lastUsedAddress);\n            dispatch('initialisedConnector', initialisedConnector);\n        }\n        catch (e) {\n            if (typeof e === 'symbol') {\n                (0, logger_1.getApplicationLogger)().debug('[initConnector]', 'Ignoring error initializing connector with reason', e.description);\n                throw e;\n            }\n            (0, logger_1.getApplicationLogger)().error('[initConnector]', 'Error initializing connector', nextConnector.type, e);\n            const error = e instanceof Error ? e : new Error('Failed to initialise connector');\n            dispatch('setConnectorInitError', error);\n            throw e;\n        }\n    }), [dispatch, networks, manualNetworkMode]);\n    const disconnect = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n        yield connector.close();\n        const passiveConnector = new connectors_1.UnauthenticatedConnector(network);\n        yield initConnector(passiveConnector);\n    }), [connector, network, initConnector]);\n    // This is just to be used to for users to explicitly change\n    // the network. It doesn't work for all wallets.\n    const updateNetwork = (0, react_1.useCallback)((newNetwork, dappOnly = false) => __awaiter(this, void 0, void 0, function* () {\n        (0, logger_1.getApplicationLogger)().debug('[updateNetwork]', newNetwork, connector.type);\n        if (dappOnly && connector.continueNetworkUpdateFromWallet) {\n            connector.continueNetworkUpdateFromWallet(newNetwork);\n        }\n        else if (constants_1.STATIC_NETWORK_WALLETS.includes(connector.type)) {\n            throw new Error(\"The connected wallet's network must be changed from the wallet.\");\n        }\n        yield connector.startNetworkChangeFromApp(newNetwork);\n    }), [connector]);\n    const connect = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n        const connectionResultPromise = new Promise((resolve) => {\n            dispatch('setConnectionCallback', resolve);\n        });\n        const newConnector = yield connectionResultPromise;\n        dispatch('setConnectionCallback', null);\n        if (newConnector === false) {\n            throw new Error('Connection cancelled');\n        }\n        return newConnector;\n    }), [dispatch]);\n    const getConnectedKit = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n        let initialisedConnection = connector;\n        if (connector.type === constants_1.WalletTypes.Unauthenticated) {\n            initialisedConnection = yield connect();\n        }\n        else if (!initialisedConnection.initialised) {\n            yield initConnector(initialisedConnection);\n        }\n        return initialisedConnection.kit;\n    }), [connect, connector, initConnector]);\n    const updateFeeCurrency = (0, react_1.useCallback)((newFeeCurrency) => __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (connector.supportsFeeCurrency() && connector.updateFeeCurrency) {\n                yield connector.updateFeeCurrency(newFeeCurrency);\n                dispatch('setFeeCurrency', newFeeCurrency);\n            }\n        }\n        catch (error) {\n            (0, logger_1.getApplicationLogger)().warn('[updateFeeCurrency]', 'updating Fee Currency not supported by this wallet or network', error);\n        }\n    }), [connector, dispatch]);\n    const updateTheme = (0, react_1.useCallback)((theme) => {\n        if (!theme)\n            return dispatch('setTheme', null);\n        if (process.env.NODE_ENV !== 'production') {\n            (0, colors_1.fixTheme)(theme);\n            (0, colors_1.contrastCheck)(theme);\n        }\n        dispatch('setTheme', theme);\n    }, [dispatch]);\n    const performActions = (0, react_1.useCallback)((...operations) => __awaiter(this, void 0, void 0, function* () {\n        const kit = yield getConnectedKit();\n        dispatch('setPendingActionCount', operations.length);\n        const results = [];\n        for (const op of operations) {\n            try {\n                // When on mobile direct user to their wallet app.\n                if (react_device_detect_1.isMobile && connector.getDeeplinkUrl) {\n                    const url = connector.getDeeplinkUrl('');\n                    if (url)\n                        window.open(url, '_blank');\n                }\n                results.push(yield op(kit));\n            }\n            catch (e) {\n                dispatch('setPendingActionCount', 0);\n                throw e;\n            }\n            dispatch('decrementPendingActionCount');\n        }\n        return results;\n    }), [getConnectedKit, dispatch, connector]);\n    const contractsCache = (0, use_contracts_cache_1.useContractsCache)(buildContractsCache, connector);\n    const resetInitError = (0, react_1.useCallback)(() => {\n        dispatch('setConnectorInitError', null);\n    }, [dispatch]);\n    return {\n        destroy: disconnect,\n        disconnect,\n        initConnector,\n        resetInitError,\n        updateNetwork,\n        connect,\n        getConnectedKit,\n        performActions,\n        updateFeeCurrency,\n        contractsCache,\n        updateTheme,\n    };\n}\nexports.useCeloMethods = useCeloMethods;\n//# sourceMappingURL=use-celo-methods.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}