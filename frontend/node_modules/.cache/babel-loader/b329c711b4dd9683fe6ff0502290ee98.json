{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { load, save } from 'redux-localstorage-simple';\nimport application from './application/reducer';\nimport { updateVersion } from './global/actions';\nimport multicall from './multicall/reducer';\nimport swap from './swap/reducer';\nimport user from './user/reducer';\nimport lists from './lists/reducer';\nconst PERSISTED_KEYS = ['user', 'transactions', 'lists'];\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    swap,\n    multicall,\n    lists\n  },\n  middleware: [...getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: false\n  }), save({\n    states: PERSISTED_KEYS\n  })],\n  preloadedState: load({\n    states: PERSISTED_KEYS\n  })\n});\nstore.dispatch(updateVersion());\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","load","save","application","updateVersion","multicall","swap","user","lists","PERSISTED_KEYS","store","reducer","middleware","thunk","serializableCheck","states","preloadedState","dispatch"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/index.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { load, save } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport multicall from './multicall/reducer'\nimport swap from './swap/reducer'\nimport user from './user/reducer'\nimport lists from './lists/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    swap,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false, serializableCheck: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AAEtD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,cAAwB,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC;AAElE,MAAMC,KAAK,GAAGX,cAAc,CAAC;EAC3BY,OAAO,EAAE;IACPR,WAAW;IACXI,IAAI;IACJD,IAAI;IACJD,SAAS;IACTG;EACF,CAAC;EACDI,UAAU,EAAE,CAAC,GAAGZ,oBAAoB,CAAC;IAAEa,KAAK,EAAE,KAAK;IAAEC,iBAAiB,EAAE;EAAM,CAAC,CAAC,EAAEZ,IAAI,CAAC;IAAEa,MAAM,EAAEN;EAAe,CAAC,CAAC,CAAC;EACnHO,cAAc,EAAEf,IAAI,CAAC;IAAEc,MAAM,EAAEN;EAAe,CAAC;AACjD,CAAC,CAAC;AAEFC,KAAK,CAACO,QAAQ,CAACb,aAAa,CAAC,CAAC,CAAC;AAE/B,eAAeM,KAAK"},"metadata":{},"sourceType":"module"}