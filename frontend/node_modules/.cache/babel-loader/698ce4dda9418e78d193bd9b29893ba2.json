{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInjectedConnector = void 0;\nconst react_1 = require(\"react\");\nconst connectors_1 = require(\"../connectors\");\nconst use_celo_1 = require(\"../use-celo\");\nconst logger_1 = require(\"../utils/logger\");\nfunction useInjectedConnector(onSubmit, isMetaMask) {\n  const {\n    network,\n    manualNetworkMode,\n    feeCurrency,\n    initConnector,\n    initError: error,\n    dapp,\n    kit\n  } = (0, use_celo_1.useCeloInternal)();\n  (0, react_1.useEffect)(() => {\n    let stale;\n    void (() => __awaiter(this, void 0, void 0, function* () {\n      const connector = isMetaMask ? new connectors_1.MetaMaskConnector(network, manualNetworkMode, feeCurrency) : new connectors_1.InjectedConnector(network, manualNetworkMode, feeCurrency);\n      try {\n        yield initConnector(connector);\n        if (!stale) {\n          onSubmit(connector);\n        }\n      } catch (e) {\n        (0, logger_1.getApplicationLogger)().error('[useMetaMaskConnector]', e);\n      }\n    }))();\n    return () => {\n      stale = true;\n    };\n  }, [initConnector, network, onSubmit, isMetaMask, feeCurrency, manualNetworkMode]);\n  const getTokens = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n    return kit.celoTokens.getWrappers();\n  }), [kit]);\n  return {\n    error,\n    dapp,\n    network,\n    getTokens\n  };\n}\nexports.useInjectedConnector = useInjectedConnector;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","useInjectedConnector","react_1","require","connectors_1","use_celo_1","logger_1","onSubmit","isMetaMask","network","manualNetworkMode","feeCurrency","initConnector","initError","error","dapp","kit","useCeloInternal","useEffect","stale","connector","MetaMaskConnector","InjectedConnector","getApplicationLogger","getTokens","useCallback","celoTokens","getWrappers"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/hooks/use-injected-connector.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useInjectedConnector = void 0;\nconst react_1 = require(\"react\");\nconst connectors_1 = require(\"../connectors\");\nconst use_celo_1 = require(\"../use-celo\");\nconst logger_1 = require(\"../utils/logger\");\nfunction useInjectedConnector(onSubmit, isMetaMask) {\n    const { network, manualNetworkMode, feeCurrency, initConnector, initError: error, dapp, kit, } = (0, use_celo_1.useCeloInternal)();\n    (0, react_1.useEffect)(() => {\n        let stale;\n        void (() => __awaiter(this, void 0, void 0, function* () {\n            const connector = isMetaMask\n                ? new connectors_1.MetaMaskConnector(network, manualNetworkMode, feeCurrency)\n                : new connectors_1.InjectedConnector(network, manualNetworkMode, feeCurrency);\n            try {\n                yield initConnector(connector);\n                if (!stale) {\n                    onSubmit(connector);\n                }\n            }\n            catch (e) {\n                (0, logger_1.getApplicationLogger)().error('[useMetaMaskConnector]', e);\n            }\n        }))();\n        return () => {\n            stale = true;\n        };\n    }, [\n        initConnector,\n        network,\n        onSubmit,\n        isMetaMask,\n        feeCurrency,\n        manualNetworkMode,\n    ]);\n    const getTokens = (0, react_1.useCallback)(() => __awaiter(this, void 0, void 0, function* () {\n        return kit.celoTokens.getWrappers();\n    }), [kit]);\n    return { error, dapp, network, getTokens };\n}\nexports.useInjectedConnector = useInjectedConnector;\n//# sourceMappingURL=use-injected-connector.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}