{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccountsWrapper = void 0;\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\nvar connect_1 = require(\"@celo/connect\");\nvar signatureUtils_2 = require(\"@celo/utils/lib/signatureUtils\");\nvar solidity_1 = require(\"@celo/utils/lib/solidity\");\nvar typed_data_constructors_1 = require(\"@celo/utils/lib/typed-data-constructors\");\nvar versions_1 = require(\"../versions\");\nvar BaseWrapper_1 = require(\"../wrappers/BaseWrapper\");\nvar BaseWrapper_2 = require(\"./BaseWrapper\");\n/**\n * Contract for handling deposits needed for voting.\n */\nvar AccountsWrapper = /** @class */function (_super) {\n  __extends(AccountsWrapper, _super);\n  function AccountsWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.RELEASE_4_VERSION = (0, versions_1.newContractVersion)(1, 1, 2, 0);\n    /**\n     * Creates an account.\n     */\n    _this.createAccount = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.createAccount);\n    /**\n     * Returns the attestation signer for the specified account.\n     * @param account The address of the account.\n     * @return The address with which the account can vote.\n     */\n    _this.getAttestationSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAttestationSigner);\n    /**\n     * Returns if the account has authorized an attestation signer\n     * @param account The address of the account.\n     * @return If the account has authorized an attestation signer\n     */\n    _this.hasAuthorizedAttestationSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.hasAuthorizedAttestationSigner);\n    /**\n     * Returns the vote signer for the specified account.\n     * @param account The address of the account.\n     * @return The address with which the account can vote.\n     */\n    _this.getVoteSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getVoteSigner);\n    /**\n     * Returns the validator signer for the specified account.\n     * @param account The address of the account.\n     * @return The address with which the account can register a validator or group.\n     */\n    _this.getValidatorSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getValidatorSigner);\n    /**\n     * Returns the account address given the signer for voting\n     * @param signer Address that is authorized to sign the tx as voter\n     * @return The Account address\n     */\n    _this.voteSignerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.voteSignerToAccount);\n    /**\n     * Returns the account address given the signer for validating\n     * @param signer Address that is authorized to sign the tx as validator\n     * @return The Account address\n     */\n    _this.validatorSignerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.validatorSignerToAccount);\n    /**\n     * Returns the account associated with `signer`.\n     * @param signer The address of the account or previously authorized signer.\n     * @dev Fails if the `signer` is not an account or previously authorized signer.\n     * @return The associated account.\n     */\n    _this.signerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.signerToAccount);\n    /**\n     * Check if an account already exists.\n     * @param account The address of the account\n     * @return Returns `true` if account exists. Returns `false` otherwise.\n     */\n    _this.isAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isAccount);\n    /**\n     * Check if an address is a signer address\n     * @param address The address of the account\n     * @return Returns `true` if account exists. Returns `false` otherwise.\n     */\n    _this.isSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isAuthorizedSigner);\n    /**\n     * Returns the set data encryption key for the account\n     * @param account Account\n     */\n    _this.getDataEncryptionKey = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getDataEncryptionKey, undefined, function (res) {\n      return (0, BaseWrapper_1.solidityBytesToString)(res);\n    });\n    /**\n     * Returns the set wallet address for the account\n     * @param account Account\n     */\n    _this.getWalletAddress = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getWalletAddress);\n    /**\n     * Returns the metadataURL for the account\n     * @param account Account\n     */\n    _this.getMetadataURL = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getMetadataURL);\n    /**\n     * Sets the data encryption of the account\n     * @param encryptionKey The key to set\n     */\n    _this.setAccountDataEncryptionKey = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setAccountDataEncryptionKey);\n    /**\n     * Sets the name for the account\n     * @param name The name to set\n     */\n    _this.setName = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setName);\n    /**\n     * Sets the metadataURL for the account\n     * @param url The url to set\n     */\n    _this.setMetadataURL = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setMetadataURL);\n    /**\n     * Set a validator's payment delegation settings.\n     * @param beneficiary The address that should receive a portion of validator\n     * payments.\n     * @param fraction The fraction of the validator's payment that should be\n     * diverted to `beneficiary` every epoch, given as FixidityLib value. Must not\n     * be greater than 1.\n     * @dev Use `deletePaymentDelegation` to unset the payment delegation.\n     */\n    _this.setPaymentDelegation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setPaymentDelegation);\n    /**\n     * Remove a validator's payment delegation by setting benficiary and\n     * fraction to 0.\n     */\n    _this.deletePaymentDelegation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.deletePaymentDelegation);\n    /**\n     * Get a validator's payment delegation settings.\n     * @param account Account of the validator.\n     * @return Beneficiary address and fraction of payment delegated.\n     */\n    _this.getPaymentDelegation = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getPaymentDelegation);\n    return _this;\n  }\n  AccountsWrapper.prototype.getCurrentSigners = function (address) {\n    return Promise.all([this.getVoteSigner(address), this.getValidatorSigner(address), this.getAttestationSigner(address)]);\n  };\n  AccountsWrapper.prototype.getAccountSummary = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ret;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.getName(account), this.getVoteSigner(account), this.getValidatorSigner(account), this.getAttestationSigner(account), this.getMetadataURL(account), this.getWalletAddress(account), this.getDataEncryptionKey(account)])];\n          case 1:\n            ret = _a.sent();\n            return [2 /*return*/, {\n              address: account,\n              name: ret[0],\n              authorizedSigners: {\n                vote: ret[1],\n                validator: ret[2],\n                attestation: ret[3]\n              },\n              metadataURL: ret[4],\n              wallet: ret[5],\n              dataEncryptionKey: ret[6]\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Authorize an attestation signing key on behalf of this account to another address.\n   * @param signer The address of the signing key to authorize.\n   * @param proofOfSigningKeyPossession The account address signed by the signer address.\n   * @return A CeloTransactionObject\n   */\n  AccountsWrapper.prototype.authorizeAttestationSigner = function (signer, proofOfSigningKeyPossession) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeAttestationSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n      });\n    });\n  };\n  /**\n   * Authorizes an address to sign votes on behalf of the account.\n   * @param signer The address of the vote signing key to authorize.\n   * @param proofOfSigningKeyPossession The account address signed by the signer address.\n   * @return A CeloTransactionObject\n   */\n  AccountsWrapper.prototype.authorizeVoteSigner = function (signer, proofOfSigningKeyPossession) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeVoteSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n      });\n    });\n  };\n  /**\n   * Authorizes an address to sign consensus messages on behalf of the account.\n   * @param signer The address of the signing key to authorize.\n   * @param proofOfSigningKeyPossession The account address signed by the signer address.\n   * @return A CeloTransactionObject\n   */\n  AccountsWrapper.prototype.authorizeValidatorSigner = function (signer, proofOfSigningKeyPossession, validatorsWrapper) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, _a, message, prefixedMsg, pubKey;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.connection.defaultAccount;\n            if (_a) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.connection.getAccounts()];\n          case 1:\n            _a = _b.sent()[0];\n            _b.label = 2;\n          case 2:\n            account = _a;\n            return [4 /*yield*/, validatorsWrapper.isValidator(account)];\n          case 3:\n            if (_b.sent()) {\n              message = this.connection.web3.utils.soliditySha3({\n                type: 'address',\n                value: account\n              });\n              prefixedMsg = (0, signatureUtils_2.hashMessageWithPrefix)(message);\n              pubKey = (0, signatureUtils_2.signedMessageToPublicKey)(prefixedMsg, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s);\n              return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSignerWithPublicKey(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s, (0, BaseWrapper_1.stringToSolidityBytes)(pubKey)))];\n            } else {\n              return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Authorizes an address to sign consensus messages on behalf of the account. Also switch BLS key at the same time.\n   * @param signer The address of the signing key to authorize.\n   * @param proofOfSigningKeyPossession The account address signed by the signer address.\n   * @param blsPublicKey The BLS public key that the validator is using for consensus, should pass proof\n   *   of possession. 48 bytes.\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\n   *   account address. 96 bytes.\n   * @return A CeloTransactionObject\n   */\n  AccountsWrapper.prototype.authorizeValidatorSignerAndBls = function (signer, proofOfSigningKeyPossession, blsPublicKey, blsPop) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, _a, message, prefixedMsg, pubKey;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.connection.defaultAccount;\n            if (_a) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.connection.getAccounts()];\n          case 1:\n            _a = _b.sent()[0];\n            _b.label = 2;\n          case 2:\n            account = _a;\n            message = this.connection.web3.utils.soliditySha3({\n              type: 'address',\n              value: account\n            });\n            prefixedMsg = (0, signatureUtils_2.hashMessageWithPrefix)(message);\n            pubKey = (0, signatureUtils_2.signedMessageToPublicKey)(prefixedMsg, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s);\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSignerWithKeys(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s, (0, BaseWrapper_1.stringToSolidityBytes)(pubKey), (0, BaseWrapper_1.stringToSolidityBytes)(blsPublicKey), (0, BaseWrapper_1.stringToSolidityBytes)(blsPop)))];\n        }\n      });\n    });\n  };\n  AccountsWrapper.prototype.authorizeSigner = function (signer, role) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, accounts, chainId, account, hashedRole, typedData, sig;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n          case 1:\n            _b.sent();\n            return [4 /*yield*/, Promise.all([this.connection.getAccounts(), this.connection.chainId()\n            // This IS the accounts contract wrapper no need to get it\n            ])];\n\n          case 2:\n            _a = _b.sent(), accounts = _a[0], chainId = _a[1];\n            account = this.connection.defaultAccount || accounts[0];\n            hashedRole = this.keccak256(role);\n            typedData = (0, typed_data_constructors_1.authorizeSigner)({\n              account: account,\n              signer: signer,\n              chainId: chainId,\n              role: hashedRole,\n              accountsContractAddress: this.address\n            });\n            return [4 /*yield*/, this.connection.signTypedData(signer, typedData)];\n          case 3:\n            sig = _b.sent();\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeSignerWithSignature(signer, hashedRole, sig.v, sig.r, sig.s))];\n        }\n      });\n    });\n  };\n  AccountsWrapper.prototype.startSignerAuthorization = function (signer, role) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeSigner(signer, this.keccak256(role)))];\n        }\n      });\n    });\n  };\n  AccountsWrapper.prototype.completeSignerAuthorization = function (account, role) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.completeSignerAuthorization(account, this.keccak256(role)))];\n        }\n      });\n    });\n  };\n  /**\n   * Removes the currently authorized attestation signer for the account\n   * @returns A CeloTransactionObject\n   */\n  AccountsWrapper.prototype.removeAttestationSigner = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.removeAttestationSigner())];\n      });\n    });\n  };\n  AccountsWrapper.prototype.generateProofOfKeyPossession = function (account, signer) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.getParsedSignatureOfAddress(account, signer, (0, signatureUtils_1.NativeSigner)(this.connection.web3.eth.sign, signer))];\n      });\n    });\n  };\n  AccountsWrapper.prototype.generateProofOfKeyPossessionLocally = function (account, signer, privateKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.getParsedSignatureOfAddress(account, signer, (0, signatureUtils_2.LocalSigner)(privateKey))];\n      });\n    });\n  };\n  /**\n   * Returns the set name for the account\n   * @param account Account\n   * @param blockNumber Height of result, defaults to tip.\n   */\n  AccountsWrapper.prototype.getName = function (account, blockNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // @ts-ignore: Expected 0-1 arguments, but got 2\n        return [2 /*return*/, this.contract.methods.getName(account).call({}, blockNumber)];\n      });\n    });\n  };\n  /**\n   * Convenience Setter for the dataEncryptionKey and wallet address for an account\n   * @param name A string to set as the name of the account\n   * @param dataEncryptionKey secp256k1 public key for data encryption. Preferably compressed.\n   * @param walletAddress The wallet address to set for the account\n   * @param proofOfPossession Signature from the wallet address key over the sender's address\n   */\n  AccountsWrapper.prototype.setAccount = function (name, dataEncryptionKey, walletAddress, proofOfPossession) {\n    if (proofOfPossession === void 0) {\n      proofOfPossession = null;\n    }\n    if (proofOfPossession) {\n      return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setAccount(name,\n      // @ts-ignore\n      dataEncryptionKey, walletAddress, proofOfPossession.v, proofOfPossession.r, proofOfPossession.s));\n    } else {\n      return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setAccount(name,\n      // @ts-ignore\n      dataEncryptionKey, walletAddress, '0x0', '0x0', '0x0'));\n    }\n  };\n  /**\n   * Sets the wallet address for the account\n   * @param address The address to set\n   */\n  AccountsWrapper.prototype.setWalletAddress = function (walletAddress, proofOfPossession) {\n    if (proofOfPossession === void 0) {\n      proofOfPossession = null;\n    }\n    if (proofOfPossession) {\n      return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setWalletAddress(walletAddress, proofOfPossession.v, proofOfPossession.r, proofOfPossession.s));\n    } else {\n      return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setWalletAddress(walletAddress, '0x0', '0x0', '0x0'));\n    }\n  };\n  AccountsWrapper.prototype.parseSignatureOfAddress = function (address, signer, signature) {\n    var hash = (0, solidity_1.soliditySha3)({\n      type: 'address',\n      value: address\n    });\n    return (0, signatureUtils_2.parseSignature)(hash, signature, signer);\n  };\n  AccountsWrapper.prototype.getParsedSignatureOfAddress = function (address, signer, signerFn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var hash, signature;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            hash = (0, solidity_1.soliditySha3)({\n              type: 'address',\n              value: address\n            });\n            return [4 /*yield*/, signerFn.sign(hash)];\n          case 1:\n            signature = _a.sent();\n            return [2 /*return*/, (0, signatureUtils_2.parseSignature)(hash, signature, signer)];\n        }\n      });\n    });\n  };\n  AccountsWrapper.prototype.keccak256 = function (value) {\n    return this.connection.keccak256(value);\n  };\n  return AccountsWrapper;\n}(BaseWrapper_2.BaseWrapper);\nexports.AccountsWrapper = AccountsWrapper;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","defineProperty","exports","AccountsWrapper","signatureUtils_1","require","connect_1","signatureUtils_2","solidity_1","typed_data_constructors_1","versions_1","BaseWrapper_1","BaseWrapper_2","_super","_this","arguments","RELEASE_4_VERSION","newContractVersion","createAccount","proxySend","connection","contract","methods","getAttestationSigner","proxyCall","hasAuthorizedAttestationSigner","getVoteSigner","getValidatorSigner","voteSignerToAccount","validatorSignerToAccount","signerToAccount","isAccount","isSigner","isAuthorizedSigner","getDataEncryptionKey","undefined","res","solidityBytesToString","getWalletAddress","getMetadataURL","setAccountDataEncryptionKey","setName","setMetadataURL","setPaymentDelegation","deletePaymentDelegation","getPaymentDelegation","getCurrentSigners","address","all","getAccountSummary","account","ret","_a","getName","name","authorizedSigners","vote","validator","attestation","metadataURL","wallet","dataEncryptionKey","authorizeAttestationSigner","signer","proofOfSigningKeyPossession","toTransactionObject","r","s","authorizeVoteSigner","authorizeValidatorSigner","validatorsWrapper","message","prefixedMsg","pubKey","_b","defaultAccount","getAccounts","isValidator","web3","utils","soliditySha3","type","hashMessageWithPrefix","signedMessageToPublicKey","authorizeValidatorSignerWithPublicKey","stringToSolidityBytes","authorizeValidatorSignerAndBls","blsPublicKey","blsPop","authorizeValidatorSignerWithKeys","authorizeSigner","role","accounts","chainId","hashedRole","typedData","sig","onlyVersionOrGreater","keccak256","accountsContractAddress","signTypedData","authorizeSignerWithSignature","startSignerAuthorization","completeSignerAuthorization","removeAttestationSigner","generateProofOfKeyPossession","getParsedSignatureOfAddress","NativeSigner","eth","sign","generateProofOfKeyPossessionLocally","privateKey","LocalSigner","blockNumber","setAccount","walletAddress","proofOfPossession","setWalletAddress","parseSignatureOfAddress","signature","hash","parseSignature","signerFn","BaseWrapper"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/contractkit/lib/wrappers/Accounts.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountsWrapper = void 0;\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\nvar connect_1 = require(\"@celo/connect\");\nvar signatureUtils_2 = require(\"@celo/utils/lib/signatureUtils\");\nvar solidity_1 = require(\"@celo/utils/lib/solidity\");\nvar typed_data_constructors_1 = require(\"@celo/utils/lib/typed-data-constructors\");\nvar versions_1 = require(\"../versions\");\nvar BaseWrapper_1 = require(\"../wrappers/BaseWrapper\");\nvar BaseWrapper_2 = require(\"./BaseWrapper\");\n/**\n * Contract for handling deposits needed for voting.\n */\nvar AccountsWrapper = /** @class */ (function (_super) {\n    __extends(AccountsWrapper, _super);\n    function AccountsWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.RELEASE_4_VERSION = (0, versions_1.newContractVersion)(1, 1, 2, 0);\n        /**\n         * Creates an account.\n         */\n        _this.createAccount = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.createAccount);\n        /**\n         * Returns the attestation signer for the specified account.\n         * @param account The address of the account.\n         * @return The address with which the account can vote.\n         */\n        _this.getAttestationSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAttestationSigner);\n        /**\n         * Returns if the account has authorized an attestation signer\n         * @param account The address of the account.\n         * @return If the account has authorized an attestation signer\n         */\n        _this.hasAuthorizedAttestationSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.hasAuthorizedAttestationSigner);\n        /**\n         * Returns the vote signer for the specified account.\n         * @param account The address of the account.\n         * @return The address with which the account can vote.\n         */\n        _this.getVoteSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getVoteSigner);\n        /**\n         * Returns the validator signer for the specified account.\n         * @param account The address of the account.\n         * @return The address with which the account can register a validator or group.\n         */\n        _this.getValidatorSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getValidatorSigner);\n        /**\n         * Returns the account address given the signer for voting\n         * @param signer Address that is authorized to sign the tx as voter\n         * @return The Account address\n         */\n        _this.voteSignerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.voteSignerToAccount);\n        /**\n         * Returns the account address given the signer for validating\n         * @param signer Address that is authorized to sign the tx as validator\n         * @return The Account address\n         */\n        _this.validatorSignerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.validatorSignerToAccount);\n        /**\n         * Returns the account associated with `signer`.\n         * @param signer The address of the account or previously authorized signer.\n         * @dev Fails if the `signer` is not an account or previously authorized signer.\n         * @return The associated account.\n         */\n        _this.signerToAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.signerToAccount);\n        /**\n         * Check if an account already exists.\n         * @param account The address of the account\n         * @return Returns `true` if account exists. Returns `false` otherwise.\n         */\n        _this.isAccount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isAccount);\n        /**\n         * Check if an address is a signer address\n         * @param address The address of the account\n         * @return Returns `true` if account exists. Returns `false` otherwise.\n         */\n        _this.isSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isAuthorizedSigner);\n        /**\n         * Returns the set data encryption key for the account\n         * @param account Account\n         */\n        _this.getDataEncryptionKey = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getDataEncryptionKey, undefined, function (res) {\n            return (0, BaseWrapper_1.solidityBytesToString)(res);\n        });\n        /**\n         * Returns the set wallet address for the account\n         * @param account Account\n         */\n        _this.getWalletAddress = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getWalletAddress);\n        /**\n         * Returns the metadataURL for the account\n         * @param account Account\n         */\n        _this.getMetadataURL = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getMetadataURL);\n        /**\n         * Sets the data encryption of the account\n         * @param encryptionKey The key to set\n         */\n        _this.setAccountDataEncryptionKey = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setAccountDataEncryptionKey);\n        /**\n         * Sets the name for the account\n         * @param name The name to set\n         */\n        _this.setName = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setName);\n        /**\n         * Sets the metadataURL for the account\n         * @param url The url to set\n         */\n        _this.setMetadataURL = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setMetadataURL);\n        /**\n         * Set a validator's payment delegation settings.\n         * @param beneficiary The address that should receive a portion of validator\n         * payments.\n         * @param fraction The fraction of the validator's payment that should be\n         * diverted to `beneficiary` every epoch, given as FixidityLib value. Must not\n         * be greater than 1.\n         * @dev Use `deletePaymentDelegation` to unset the payment delegation.\n         */\n        _this.setPaymentDelegation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.setPaymentDelegation);\n        /**\n         * Remove a validator's payment delegation by setting benficiary and\n         * fraction to 0.\n         */\n        _this.deletePaymentDelegation = (0, BaseWrapper_1.proxySend)(_this.connection, _this.contract.methods.deletePaymentDelegation);\n        /**\n         * Get a validator's payment delegation settings.\n         * @param account Account of the validator.\n         * @return Beneficiary address and fraction of payment delegated.\n         */\n        _this.getPaymentDelegation = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getPaymentDelegation);\n        return _this;\n    }\n    AccountsWrapper.prototype.getCurrentSigners = function (address) {\n        return Promise.all([\n            this.getVoteSigner(address),\n            this.getValidatorSigner(address),\n            this.getAttestationSigner(address),\n        ]);\n    };\n    AccountsWrapper.prototype.getAccountSummary = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ret;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.getName(account),\n                            this.getVoteSigner(account),\n                            this.getValidatorSigner(account),\n                            this.getAttestationSigner(account),\n                            this.getMetadataURL(account),\n                            this.getWalletAddress(account),\n                            this.getDataEncryptionKey(account),\n                        ])];\n                    case 1:\n                        ret = _a.sent();\n                        return [2 /*return*/, {\n                                address: account,\n                                name: ret[0],\n                                authorizedSigners: {\n                                    vote: ret[1],\n                                    validator: ret[2],\n                                    attestation: ret[3],\n                                },\n                                metadataURL: ret[4],\n                                wallet: ret[5],\n                                dataEncryptionKey: ret[6],\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Authorize an attestation signing key on behalf of this account to another address.\n     * @param signer The address of the signing key to authorize.\n     * @param proofOfSigningKeyPossession The account address signed by the signer address.\n     * @return A CeloTransactionObject\n     */\n    AccountsWrapper.prototype.authorizeAttestationSigner = function (signer, proofOfSigningKeyPossession) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeAttestationSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n            });\n        });\n    };\n    /**\n     * Authorizes an address to sign votes on behalf of the account.\n     * @param signer The address of the vote signing key to authorize.\n     * @param proofOfSigningKeyPossession The account address signed by the signer address.\n     * @return A CeloTransactionObject\n     */\n    AccountsWrapper.prototype.authorizeVoteSigner = function (signer, proofOfSigningKeyPossession) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeVoteSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n            });\n        });\n    };\n    /**\n     * Authorizes an address to sign consensus messages on behalf of the account.\n     * @param signer The address of the signing key to authorize.\n     * @param proofOfSigningKeyPossession The account address signed by the signer address.\n     * @return A CeloTransactionObject\n     */\n    AccountsWrapper.prototype.authorizeValidatorSigner = function (signer, proofOfSigningKeyPossession, validatorsWrapper) {\n        return __awaiter(this, void 0, void 0, function () {\n            var account, _a, message, prefixedMsg, pubKey;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.connection.defaultAccount;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.connection.getAccounts()];\n                    case 1:\n                        _a = (_b.sent())[0];\n                        _b.label = 2;\n                    case 2:\n                        account = _a;\n                        return [4 /*yield*/, validatorsWrapper.isValidator(account)];\n                    case 3:\n                        if (_b.sent()) {\n                            message = this.connection.web3.utils.soliditySha3({\n                                type: 'address',\n                                value: account,\n                            });\n                            prefixedMsg = (0, signatureUtils_2.hashMessageWithPrefix)(message);\n                            pubKey = (0, signatureUtils_2.signedMessageToPublicKey)(prefixedMsg, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s);\n                            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSignerWithPublicKey(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s, (0, BaseWrapper_1.stringToSolidityBytes)(pubKey)))];\n                        }\n                        else {\n                            return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSigner(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s))];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Authorizes an address to sign consensus messages on behalf of the account. Also switch BLS key at the same time.\n     * @param signer The address of the signing key to authorize.\n     * @param proofOfSigningKeyPossession The account address signed by the signer address.\n     * @param blsPublicKey The BLS public key that the validator is using for consensus, should pass proof\n     *   of possession. 48 bytes.\n     * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\n     *   account address. 96 bytes.\n     * @return A CeloTransactionObject\n     */\n    AccountsWrapper.prototype.authorizeValidatorSignerAndBls = function (signer, proofOfSigningKeyPossession, blsPublicKey, blsPop) {\n        return __awaiter(this, void 0, void 0, function () {\n            var account, _a, message, prefixedMsg, pubKey;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.connection.defaultAccount;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.connection.getAccounts()];\n                    case 1:\n                        _a = (_b.sent())[0];\n                        _b.label = 2;\n                    case 2:\n                        account = _a;\n                        message = this.connection.web3.utils.soliditySha3({\n                            type: 'address',\n                            value: account,\n                        });\n                        prefixedMsg = (0, signatureUtils_2.hashMessageWithPrefix)(message);\n                        pubKey = (0, signatureUtils_2.signedMessageToPublicKey)(prefixedMsg, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s);\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeValidatorSignerWithKeys(signer, proofOfSigningKeyPossession.v, proofOfSigningKeyPossession.r, proofOfSigningKeyPossession.s, (0, BaseWrapper_1.stringToSolidityBytes)(pubKey), (0, BaseWrapper_1.stringToSolidityBytes)(blsPublicKey), (0, BaseWrapper_1.stringToSolidityBytes)(blsPop)))];\n                }\n            });\n        });\n    };\n    AccountsWrapper.prototype.authorizeSigner = function (signer, role) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, accounts, chainId, account, hashedRole, typedData, sig;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n                    case 1:\n                        _b.sent();\n                        return [4 /*yield*/, Promise.all([\n                                this.connection.getAccounts(),\n                                this.connection.chainId(),\n                                // This IS the accounts contract wrapper no need to get it\n                            ])];\n                    case 2:\n                        _a = _b.sent(), accounts = _a[0], chainId = _a[1];\n                        account = this.connection.defaultAccount || accounts[0];\n                        hashedRole = this.keccak256(role);\n                        typedData = (0, typed_data_constructors_1.authorizeSigner)({\n                            account: account,\n                            signer: signer,\n                            chainId: chainId,\n                            role: hashedRole,\n                            accountsContractAddress: this.address,\n                        });\n                        return [4 /*yield*/, this.connection.signTypedData(signer, typedData)];\n                    case 3:\n                        sig = _b.sent();\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeSignerWithSignature(signer, hashedRole, sig.v, sig.r, sig.s))];\n                }\n            });\n        });\n    };\n    AccountsWrapper.prototype.startSignerAuthorization = function (signer, role) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.authorizeSigner(signer, this.keccak256(role)))];\n                }\n            });\n        });\n    };\n    AccountsWrapper.prototype.completeSignerAuthorization = function (account, role) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.onlyVersionOrGreater(this.RELEASE_4_VERSION)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.completeSignerAuthorization(account, this.keccak256(role)))];\n                }\n            });\n        });\n    };\n    /**\n     * Removes the currently authorized attestation signer for the account\n     * @returns A CeloTransactionObject\n     */\n    AccountsWrapper.prototype.removeAttestationSigner = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.removeAttestationSigner())];\n            });\n        });\n    };\n    AccountsWrapper.prototype.generateProofOfKeyPossession = function (account, signer) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getParsedSignatureOfAddress(account, signer, (0, signatureUtils_1.NativeSigner)(this.connection.web3.eth.sign, signer))];\n            });\n        });\n    };\n    AccountsWrapper.prototype.generateProofOfKeyPossessionLocally = function (account, signer, privateKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getParsedSignatureOfAddress(account, signer, (0, signatureUtils_2.LocalSigner)(privateKey))];\n            });\n        });\n    };\n    /**\n     * Returns the set name for the account\n     * @param account Account\n     * @param blockNumber Height of result, defaults to tip.\n     */\n    AccountsWrapper.prototype.getName = function (account, blockNumber) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // @ts-ignore: Expected 0-1 arguments, but got 2\n                return [2 /*return*/, this.contract.methods.getName(account).call({}, blockNumber)];\n            });\n        });\n    };\n    /**\n     * Convenience Setter for the dataEncryptionKey and wallet address for an account\n     * @param name A string to set as the name of the account\n     * @param dataEncryptionKey secp256k1 public key for data encryption. Preferably compressed.\n     * @param walletAddress The wallet address to set for the account\n     * @param proofOfPossession Signature from the wallet address key over the sender's address\n     */\n    AccountsWrapper.prototype.setAccount = function (name, dataEncryptionKey, walletAddress, proofOfPossession) {\n        if (proofOfPossession === void 0) { proofOfPossession = null; }\n        if (proofOfPossession) {\n            return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setAccount(name, \n            // @ts-ignore\n            dataEncryptionKey, walletAddress, proofOfPossession.v, proofOfPossession.r, proofOfPossession.s));\n        }\n        else {\n            return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setAccount(name, \n            // @ts-ignore\n            dataEncryptionKey, walletAddress, '0x0', '0x0', '0x0'));\n        }\n    };\n    /**\n     * Sets the wallet address for the account\n     * @param address The address to set\n     */\n    AccountsWrapper.prototype.setWalletAddress = function (walletAddress, proofOfPossession) {\n        if (proofOfPossession === void 0) { proofOfPossession = null; }\n        if (proofOfPossession) {\n            return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setWalletAddress(walletAddress, proofOfPossession.v, proofOfPossession.r, proofOfPossession.s));\n        }\n        else {\n            return (0, connect_1.toTransactionObject)(this.connection, this.contract.methods.setWalletAddress(walletAddress, '0x0', '0x0', '0x0'));\n        }\n    };\n    AccountsWrapper.prototype.parseSignatureOfAddress = function (address, signer, signature) {\n        var hash = (0, solidity_1.soliditySha3)({ type: 'address', value: address });\n        return (0, signatureUtils_2.parseSignature)(hash, signature, signer);\n    };\n    AccountsWrapper.prototype.getParsedSignatureOfAddress = function (address, signer, signerFn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hash, signature;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        hash = (0, solidity_1.soliditySha3)({ type: 'address', value: address });\n                        return [4 /*yield*/, signerFn.sign(hash)];\n                    case 1:\n                        signature = _a.sent();\n                        return [2 /*return*/, (0, signatureUtils_2.parseSignature)(hash, signature, signer)];\n                }\n            });\n        });\n    };\n    AccountsWrapper.prototype.keccak256 = function (value) {\n        return this.connection.keccak256(value);\n    };\n    return AccountsWrapper;\n}(BaseWrapper_2.BaseWrapper));\nexports.AccountsWrapper = AccountsWrapper;\n//# sourceMappingURL=Accounts.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}