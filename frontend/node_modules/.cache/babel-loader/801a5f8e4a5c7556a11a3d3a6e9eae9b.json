{"ast":null,"code":"import { MoolaRouterTrade } from './hooks/useTrade';\nimport { MoolaDirectTrade } from './moola/MoolaDirectTrade';\nexport let RoutingMethod = /*#__PURE__*/function (RoutingMethod) {\n  RoutingMethod[RoutingMethod[\"UBESWAP\"] = 0] = \"UBESWAP\";\n  RoutingMethod[RoutingMethod[\"MOOLA\"] = 1] = \"MOOLA\";\n  RoutingMethod[RoutingMethod[\"MOOLA_ROUTER\"] = 2] = \"MOOLA_ROUTER\";\n  RoutingMethod[RoutingMethod[\"LIMIT\"] = 3] = \"LIMIT\";\n  return RoutingMethod;\n}({});\nexport const describeTrade = trade => {\n  if (trade instanceof MoolaDirectTrade) {\n    return {\n      label: trade.isWithdrawal() ? 'Withdraw' : 'Deposit',\n      makeLabel: isInverted => {\n        const result = trade.isWithdrawal();\n        const resultInverted = isInverted ? !result : result;\n        return resultInverted ? 'Withdraw' : 'Deposit';\n      },\n      routingMethod: RoutingMethod.MOOLA,\n      isEstimate: false\n    };\n  } else {\n    return {\n      label: 'Swap',\n      routingMethod: trade instanceof MoolaRouterTrade ? RoutingMethod.MOOLA_ROUTER : RoutingMethod.UBESWAP,\n      isEstimate: true,\n      makeLabel: () => 'Swap'\n    };\n  }\n};","map":{"version":3,"names":["MoolaRouterTrade","MoolaDirectTrade","RoutingMethod","describeTrade","trade","label","isWithdrawal","makeLabel","isInverted","result","resultInverted","routingMethod","MOOLA","isEstimate","MOOLA_ROUTER","UBESWAP"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/routing/describeTrade.ts"],"sourcesContent":["import { Trade } from '@ubeswap/sdk'\n\nimport { MoolaRouterTrade } from './hooks/useTrade'\nimport { MoolaDirectTrade } from './moola/MoolaDirectTrade'\n\nexport enum RoutingMethod {\n  UBESWAP = 0,\n  MOOLA = 1,\n  MOOLA_ROUTER = 2,\n  LIMIT = 3,\n}\n\nexport const describeTrade = (\n  trade: Trade | undefined\n): {\n  label: string\n  makeLabel: (isInverted: boolean) => string\n  routingMethod: RoutingMethod\n  isEstimate: boolean\n} => {\n  if (trade instanceof MoolaDirectTrade) {\n    return {\n      label: trade.isWithdrawal() ? 'Withdraw' : 'Deposit',\n      makeLabel: (isInverted) => {\n        const result = trade.isWithdrawal()\n        const resultInverted = isInverted ? !result : result\n        return resultInverted ? 'Withdraw' : 'Deposit'\n      },\n      routingMethod: RoutingMethod.MOOLA,\n      isEstimate: false,\n    }\n  } else {\n    return {\n      label: 'Swap',\n      routingMethod: trade instanceof MoolaRouterTrade ? RoutingMethod.MOOLA_ROUTER : RoutingMethod.UBESWAP,\n      isEstimate: true,\n      makeLabel: () => 'Swap',\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,gBAAgB,QAAQ,0BAA0B;AAE3D,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAOzB,OAAO,MAAMC,aAAa,GACxBC,KAAwB,IAMrB;EACH,IAAIA,KAAK,YAAYH,gBAAgB,EAAE;IACrC,OAAO;MACLI,KAAK,EAAED,KAAK,CAACE,YAAY,CAAC,CAAC,GAAG,UAAU,GAAG,SAAS;MACpDC,SAAS,EAAGC,UAAU,IAAK;QACzB,MAAMC,MAAM,GAAGL,KAAK,CAACE,YAAY,CAAC,CAAC;QACnC,MAAMI,cAAc,GAAGF,UAAU,GAAG,CAACC,MAAM,GAAGA,MAAM;QACpD,OAAOC,cAAc,GAAG,UAAU,GAAG,SAAS;MAChD,CAAC;MACDC,aAAa,EAAET,aAAa,CAACU,KAAK;MAClCC,UAAU,EAAE;IACd,CAAC;EACH,CAAC,MAAM;IACL,OAAO;MACLR,KAAK,EAAE,MAAM;MACbM,aAAa,EAAEP,KAAK,YAAYJ,gBAAgB,GAAGE,aAAa,CAACY,YAAY,GAAGZ,aAAa,CAACa,OAAO;MACrGF,UAAU,EAAE,IAAI;MAChBN,SAAS,EAAEA,CAAA,KAAM;IACnB,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module"}