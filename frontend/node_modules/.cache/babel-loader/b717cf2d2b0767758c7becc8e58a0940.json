{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectModal = exports.styles = void 0;\nconst react_1 = __importStar(require(\"react\"));\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst react_modal_1 = __importDefault(require(\"react-modal\"));\nconst modal_container_1 = __importDefault(require(\"../components/modal-container\"));\nconst tray_1 = __importDefault(require(\"../components/tray\"));\nconst constants_1 = require(\"../constants\");\nconst use_providers_1 = __importStar(require(\"../hooks/use-providers\"));\nconst use_theme_1 = __importDefault(require(\"../hooks/use-theme\"));\nconst screens_1 = require(\"../screens\");\nconst placeholder_1 = __importDefault(require(\"../screens/placeholder\"));\nconst wallet_connect_1 = require(\"../screens/wallet-connect\");\nconst use_celo_1 = require(\"../use-celo\");\nconst colors_1 = require(\"../utils/colors\");\nconst sort_1 = require(\"../utils/sort\");\nconst tailwind_1 = __importDefault(require(\"../utils/tailwind\"));\nexports.styles = (0, tailwind_1.default)({\n  overlay: \"tw-z-40\\n      tw-fixed\\n      tw-inset-0\",\n  modal: react_device_detect_1.isMobile ? \"\\n      tw-h-screen\\n      tw-w-screen\" : \"\\n      tw-overflow-hidden\\n      tw-absolute\\n      tw-top-1/2\\n      tw-right-auto\\n      tw-bottom-auto\\n      tw-left-1/2\\n      tw--translate-x-1/2\\n      tw--translate-y-1/2\\n      tw-border-none\\n      tw-padding-0\\n      tw-rounded-lg\\n      tw-drop-shadow\\n      dark:tw-drop-shadow\",\n  portal: \"\\n    tw-overflow-hidden\"\n});\nfunction walletToScreen(wallet) {\n  const WalletConnectCustomWrapper = _ref => {\n    let {\n      onSubmit\n    } = _ref;\n    return react_1.default.createElement(wallet_connect_1.WalletConnect, {\n      onSubmit: onSubmit,\n      provider: (0, use_providers_1.walletToProvider)(wallet)\n    });\n  };\n  return WalletConnectCustomWrapper;\n}\nconst ConnectModal = _ref2 => {\n  let {\n    reactModalProps,\n    screens = screens_1.defaultScreens,\n    title = 'Connect a wallet',\n    providersOptions = {}\n  } = _ref2;\n  var _a;\n  const theme = (0, use_theme_1.default)();\n  const {\n    connectionCallback,\n    resetInitError\n  } = (0, use_celo_1.useCeloInternal)();\n  const [search, setSearch] = (0, react_1.useState)('');\n  const [adding, setAdding] = (0, react_1.useState)(null);\n  const onClickProvider = provider => {\n    resetInitError();\n    setAdding(provider);\n  };\n  const back = (0, react_1.useCallback)(() => {\n    resetInitError();\n    setSearch('');\n    setAdding(null);\n  }, [resetInitError, setSearch, setAdding]);\n  const close = (0, react_1.useCallback)(() => {\n    back();\n    connectionCallback === null || connectionCallback === void 0 ? void 0 : connectionCallback(false);\n  }, [back, connectionCallback]);\n  const onSubmit = (0, react_1.useCallback)(connector => {\n    connectionCallback === null || connectionCallback === void 0 ? void 0 : connectionCallback(connector);\n    back();\n  }, [back, connectionCallback]);\n  const {\n    hideFromDefaults,\n    additionalWCWallets,\n    sort = sort_1.defaultProviderSort,\n    searchable = true\n  } = providersOptions;\n  const {\n    wallets,\n    allScreens,\n    includedDefaultProviders\n  } = (0, react_1.useMemo)(() => {\n    let _screens;\n    const _wallets = additionalWCWallets || [];\n    if (hideFromDefaults) {\n      if (hideFromDefaults === true) {\n        _screens = {};\n      } else {\n        _screens = Object.keys(screens).filter(x => !hideFromDefaults.includes(x)).reduce((acc, provider) => Object.assign(Object.assign({}, acc), {\n          [provider]: screens[provider]\n        }), {});\n      }\n    } else {\n      _screens = screens;\n    }\n    return {\n      includedDefaultProviders: Object.keys(_screens),\n      wallets: _wallets,\n      allScreens: _wallets.reduce((acc, wallet) => {\n        acc[wallet.id] = walletToScreen(wallet);\n        return acc;\n      }, _screens)\n    };\n  }, [screens, hideFromDefaults, additionalWCWallets]);\n  const providers = (0, use_providers_1.default)(wallets, includedDefaultProviders, sort, search);\n  const ProviderElement = adding && (allScreens === null || allScreens === void 0 ? void 0 : allScreens[adding]);\n  const content = ProviderElement ? react_1.default.createElement(ProviderElement, {\n    onSubmit: onSubmit,\n    provider: constants_1.PROVIDERS[adding]\n  }) : react_1.default.createElement(placeholder_1.default, null);\n  return react_1.default.createElement(react_modal_1.default, Object.assign({\n    portalClassName: exports.styles.portal,\n    htmlOpenClassName: 'react-celo-modal-open-html',\n    bodyOpenClassName: 'react-celo-modal-open-body',\n    isOpen: !!connectionCallback,\n    className: exports.styles.modal,\n    overlayClassName: exports.styles.overlay\n  }, reactModalProps, {\n    onRequestClose: close,\n    style: {\n      content: {\n        background: theme.background\n      },\n      overlay: Object.assign({\n        background: (0, colors_1.hexToRGB)(theme.background, 0.75)\n      }, (_a = reactModalProps === null || reactModalProps === void 0 ? void 0 : reactModalProps.style) === null || _a === void 0 ? void 0 : _a.overlay)\n    },\n    shouldCloseOnOverlayClick: !react_device_detect_1.isMobile,\n    ariaHideApp: false\n  }), react_1.default.createElement(modal_container_1.default, {\n    onClose: close,\n    onBack: back,\n    selectedProvider: adding,\n    tray: react_1.default.createElement(tray_1.default, Object.assign({\n      providers: providers,\n      title: title,\n      onClickProvider: onClickProvider,\n      selectedProvider: adding\n    }, searchable && {\n      search: search,\n      onSearch: str => setSearch(str)\n    })),\n    content: content\n  }));\n};\nexports.ConnectModal = ConnectModal;","map":null,"metadata":{},"sourceType":"script"}