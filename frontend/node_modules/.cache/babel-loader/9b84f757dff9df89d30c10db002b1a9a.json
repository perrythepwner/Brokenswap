{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import{useCelo,WalletTypes}from'@celo/react-celo';import*as Sentry from'@sentry/react';import useAccountSummary from'hooks/useAccountSummary';import{darken,lighten}from'polished';import React,{useEffect,useMemo}from'react';import{Activity}from'react-feather';import styled,{css}from'styled-components';import{isAddress}from'web3-utils';import{NETWORK_CHAIN_NAME}from'../../connectors';import{useWalletModalToggle}from'../../state/application/hooks';import{isTransactionRecent,useAllTransactions}from'../../state/transactions/hooks';import{shortenAddress}from'../../utils';import{ButtonSecondary}from'../Button';import Identicon from'../Identicon';import Loader from'../Loader';import{RowBetween}from'../Row';import WalletModal from'../WalletModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Web3StatusGeneric=styled(ButtonSecondary)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\"\\n  width: 100%;\\n  align-items: center;\\n  padding: 0.5rem;\\n  border-radius: 12px;\\n  cursor: pointer;\\n  user-select: none;\\n  :focus {\\n    outline: none;\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.flexRowNoWrap;});const Web3StatusError=styled(Web3StatusGeneric)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: 1px solid \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  :hover,\\n  :focus {\\n    background-color: \",\";\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.red1;},_ref3=>{let{theme}=_ref3;return theme.red1;},_ref4=>{let{theme}=_ref4;return theme.white;},_ref5=>{let{theme}=_ref5;return darken(0.1,theme.red1);});const Web3StatusConnect=styled(Web3StatusGeneric)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: none;\\n  color: \",\";\\n  font-weight: 500;\\n\\n  :hover,\\n  :focus {\\n    border: 1px solid \",\";\\n    color: \",\";\\n  }\\n\\n  \",\"\\n\"])),_ref6=>{let{theme}=_ref6;return theme.primary4;},_ref7=>{let{theme}=_ref7;return theme.primaryText1;},_ref8=>{let{theme}=_ref8;return darken(0.05,theme.primary4);},_ref9=>{let{theme}=_ref9;return theme.primaryText1;},_ref10=>{let{faded}=_ref10;return faded&&css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n      background-color: \",\";\\n      border: 1px solid \",\";\\n      color: \",\";\\n\\n      :hover,\\n      :focus {\\n        border: 1px solid \",\";\\n        color: \",\";\\n      }\\n    \"])),_ref11=>{let{theme}=_ref11;return theme.primary5;},_ref12=>{let{theme}=_ref12;return theme.primary5;},_ref13=>{let{theme}=_ref13;return theme.primaryText1;},_ref14=>{let{theme}=_ref14;return darken(0.05,theme.primary4);},_ref15=>{let{theme}=_ref15;return darken(0.05,theme.primaryText1);});});const Web3StatusConnected=styled(Web3StatusGeneric)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: 1px solid \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  :hover,\\n  :focus {\\n    background-color: \",\";\\n\\n    :focus {\\n      border: 1px solid \",\";\\n    }\\n  }\\n\"])),_ref16=>{let{pending,theme}=_ref16;return pending?theme.primary1:theme.bg2;},_ref17=>{let{pending,theme}=_ref17;return pending?theme.primary1:theme.bg3;},_ref18=>{let{pending,theme}=_ref18;return pending?theme.white:theme.text1;},_ref19=>{let{pending,theme}=_ref19;return pending?darken(0.05,theme.primary1):lighten(0.05,theme.bg2);},_ref20=>{let{pending,theme}=_ref20;return pending?darken(0.1,theme.primary1):darken(0.1,theme.bg3);});const Text=styled.p(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: 1 1 auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  margin: 0 0.5rem 0 0.25rem;\\n  font-size: 1rem;\\n  width: fit-content;\\n  font-weight: 500;\\n\"])));const NetworkIcon=styled(Activity)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-left: 0.25rem;\\n  margin-right: 0.5rem;\\n  width: 16px;\\n  height: 16px;\\n\"])));// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a,b){return b.addedTime-a.addedTime;}const StatusIcon=()=>{const{walletType}=useCelo();if(walletType===WalletTypes.MetaMask||walletType===WalletTypes.CeloExtensionWallet||walletType===WalletTypes.Injected){return/*#__PURE__*/_jsx(Identicon,{});}return null;};function Web3StatusInner(){const{connect,address,account}=useCelo();const{nom}=useAccountSummary(address);const error=null;const allTransactions=useAllTransactions();const sortedRecentTransactions=useMemo(()=>{const txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);const pending=sortedRecentTransactions.filter(tx=>!tx.receipt).map(tx=>tx.hash);const hasPendingTransactions=!!pending.length;const toggleWalletModal=useWalletModalToggle();let accountName;if(nom){accountName=nom;}else if(account&&!isAddress(account)){// Phone numbers show up under `account`, so we need to check if it is an address\naccountName=account;}else if(address){accountName=shortenAddress(address);}if(accountName){return/*#__PURE__*/_jsxs(Web3StatusConnected,{id:\"web3-status-connected\",onClick:toggleWalletModal,pending:hasPendingTransactions,children:[hasPendingTransactions?/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(Text,{children:[pending===null||pending===void 0?void 0:pending.length,\" \",'Pending']}),' ',/*#__PURE__*/_jsx(Loader,{stroke:\"white\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Text,{children:accountName})}),!hasPendingTransactions&&/*#__PURE__*/_jsx(StatusIcon,{})]});}else if(error){return/*#__PURE__*/_jsxs(Web3StatusError,{onClick:()=>connect().catch(console.warn),children:[/*#__PURE__*/_jsx(NetworkIcon,{}),/*#__PURE__*/_jsx(Text,{children:error==='unsupported'?'Wrong Network':'Error'})]});}else{return/*#__PURE__*/_jsx(Web3StatusConnect,{id:\"connect-wallet\",onClick:()=>connect().catch(console.warn),faded:!address,children:/*#__PURE__*/_jsx(Text,{children:'Connect to a wallet'})});}}export default function Web3Status(){var _ref21;const{address:account,walletType}=useCelo();const allTransactions=useAllTransactions();const sortedRecentTransactions=useMemo(()=>{const txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);const pending=sortedRecentTransactions.filter(tx=>!tx.receipt).map(tx=>tx.hash);const confirmed=sortedRecentTransactions.filter(tx=>tx.receipt).map(tx=>tx.hash);const{summary,nom}=useAccountSummary(account!==null&&account!==void 0?account:undefined);useEffect(()=>{Sentry.setUser({id:account!==null&&account!==void 0?account:undefined});Sentry.setTag('connector',walletType);Sentry.setTag('network',NETWORK_CHAIN_NAME);},[walletType,account]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Web3StatusInner,{}),/*#__PURE__*/_jsx(WalletModal,{ENSName:(_ref21=nom!==null&&nom!==void 0?nom:summary===null||summary===void 0?void 0:summary.name)!==null&&_ref21!==void 0?_ref21:undefined,pendingTransactions:pending,confirmedTransactions:confirmed})]});}","map":null,"metadata":{},"sourceType":"module"}