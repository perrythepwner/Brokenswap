{"ast":null,"code":"import _objectSpread from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCelo}from'@celo/react-celo';import{JSBI,TokenAmount}from'@ubeswap/sdk';import{useToken}from'hooks/Tokens';import{useMultiStakingContract}from'hooks/useContract';import zip from'lodash/zip';import{useMemo}from'react';import{useSingleCallResult,useSingleContractMultipleData}from'state/multicall/hooks';import{INT_SECONDS_IN_WEEK}from'./../../constants/index';export const useMultiStakeRewards=(address,underlyingPool,numRewards,active)=>{var _useSingleCallResult,_useSingleCallResult$,_useSingleCallResult2,_useSingleCallResult3,_useSingleCallResult4,_useSingleCallResult5,_useSingleContractMul,_useSingleCallResult6,_useSingleCallResult7,_useSingleCallResult8,_useSingleCallResult9,_useSingleCallResult10,_useSingleCallResult11,_useSingleCallResult12,_useSingleCallResult13;const{address:owner}=useCelo();const accountArg=useMemo(()=>[owner!==null&&owner!==void 0?owner:undefined],[owner]);const stakeRewards=useMultiStakingContract(address);const totalSupply=(_useSingleCallResult=useSingleCallResult(stakeRewards,'totalSupply',[]))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];const rewardRate=(_useSingleCallResult2=useSingleCallResult(stakeRewards,'rewardRate',[]))===null||_useSingleCallResult2===void 0?void 0:(_useSingleCallResult3=_useSingleCallResult2.result)===null||_useSingleCallResult3===void 0?void 0:_useSingleCallResult3[0];const rewardsToken=useToken((_useSingleCallResult4=useSingleCallResult(stakeRewards,'rewardsToken',[]))===null||_useSingleCallResult4===void 0?void 0:(_useSingleCallResult5=_useSingleCallResult4.result)===null||_useSingleCallResult5===void 0?void 0:_useSingleCallResult5[0]);const externalRewardsTokens=(_useSingleContractMul=useSingleContractMultipleData(stakeRewards,'externalRewardsTokens',[...[...Array(numRewards-2).keys()].map(i=>[i])]))===null||_useSingleContractMul===void 0?void 0:_useSingleContractMul.map(cr=>cr===null||cr===void 0?void 0:cr.result).reduce((acc,curr,idx)=>_objectSpread(_objectSpread({},acc),{},{[curr]:idx}),{});const stakeBalance=(_useSingleCallResult6=useSingleCallResult(stakeRewards,'balanceOf',accountArg))===null||_useSingleCallResult6===void 0?void 0:(_useSingleCallResult7=_useSingleCallResult6.result)===null||_useSingleCallResult7===void 0?void 0:_useSingleCallResult7[0];const earned=(_useSingleCallResult8=useSingleCallResult(stakeRewards,'earned',accountArg))===null||_useSingleCallResult8===void 0?void 0:(_useSingleCallResult9=_useSingleCallResult8.result)===null||_useSingleCallResult9===void 0?void 0:_useSingleCallResult9[0];const earnedExternal=(_useSingleCallResult10=useSingleCallResult(stakeRewards,'earnedExternal',accountArg))===null||_useSingleCallResult10===void 0?void 0:(_useSingleCallResult11=_useSingleCallResult10.result)===null||_useSingleCallResult11===void 0?void 0:_useSingleCallResult11[0];const periodFinish=(_useSingleCallResult12=useSingleCallResult(stakeRewards,'periodFinish',[]))===null||_useSingleCallResult12===void 0?void 0:(_useSingleCallResult13=_useSingleCallResult12.result)===null||_useSingleCallResult13===void 0?void 0:_useSingleCallResult13[0];const data=useMemo(()=>({totalSupply,rewardRate,rewardsToken,periodFinish,myBalance:stakeBalance,earned:[earned,...(earnedExternal?earnedExternal:[])]}),[earned,earnedExternal,rewardRate,rewardsToken,stakeBalance,totalSupply,periodFinish]);return useMemo(()=>{var _myBalance$toString,_totalSupplyRaw$toStr,_totalRewardRateRaw$t;if(!data||!rewardsToken||!underlyingPool){return null;}const{totalSupply:totalSupplyRaw,rewardRate:totalRewardRateRaw,myBalance,earned,periodFinish}=data;const{stakingToken}=underlyingPool;const getHypotheticalRewardRate=(stakedAmount,totalStakedAmount,totalRewardRates)=>{return totalRewardRates.map(totalRewardRate=>{return new TokenAmount(totalRewardRate.token,JSBI.greaterThan(totalStakedAmount.raw,JSBI.BigInt(0))?JSBI.divide(JSBI.multiply(totalRewardRate.raw,stakedAmount.raw),totalStakedAmount.raw):JSBI.BigInt(0));});};const rewardsFinished=Math.floor(Date.now()/1000)-periodFinish.toNumber()>INT_SECONDS_IN_WEEK;const stakedAmount=myBalance?new TokenAmount(stakingToken,(_myBalance$toString=myBalance===null||myBalance===void 0?void 0:myBalance.toString())!==null&&_myBalance$toString!==void 0?_myBalance$toString:'0'):undefined;const totalStakedAmount=new TokenAmount(stakingToken,(_totalSupplyRaw$toStr=totalSupplyRaw===null||totalSupplyRaw===void 0?void 0:totalSupplyRaw.toString())!==null&&_totalSupplyRaw$toStr!==void 0?_totalSupplyRaw$toStr:'0');const totalRewardRates=[new TokenAmount(rewardsToken,rewardsFinished?JSBI.BigInt(0):(_totalRewardRateRaw$t=totalRewardRateRaw===null||totalRewardRateRaw===void 0?void 0:totalRewardRateRaw.toString())!==null&&_totalRewardRateRaw$t!==void 0?_totalRewardRateRaw$t:'0'),...underlyingPool.totalRewardRates].sort((a,b)=>{var _a$token,_b$token;return(_a$token=a.token)!==null&&_a$token!==void 0&&_a$token.symbol&&b!==null&&b!==void 0&&(_b$token=b.token)!==null&&_b$token!==void 0&&_b$token.symbol?a.token.symbol.localeCompare(b.token.symbol):0;});const rewardRates=stakedAmount?getHypotheticalRewardRate(stakedAmount,totalStakedAmount,totalRewardRates):totalRewardRates.map(totalRewardRate=>new TokenAmount(totalRewardRate.token,'0'));const underlyingRewardTokens=underlyingPool.rewardTokens.sort((a,b)=>externalRewardsTokens[a===null||a===void 0?void 0:a.address]-externalRewardsTokens[b===null||b===void 0?void 0:b.address]);const rewardTokens=rewardsToken?[rewardsToken,...underlyingRewardTokens]:[...underlyingRewardTokens];const earnedAmounts=earned&&earned.length===rewardTokens.length?zip(earned,rewardTokens).map(_ref=>{var _amount$toString;let[amount,token]=_ref;return new TokenAmount(token,(_amount$toString=amount===null||amount===void 0?void 0:amount.toString())!==null&&_amount$toString!==void 0?_amount$toString:'0');}).sort((a,b)=>{var _a$token2,_b$token2;return a!==null&&a!==void 0&&(_a$token2=a.token)!==null&&_a$token2!==void 0&&_a$token2.symbol&&b!==null&&b!==void 0&&(_b$token2=b.token)!==null&&_b$token2!==void 0&&_b$token2.symbol?a.token.symbol.localeCompare(b.token.symbol):0;}):undefined;return{stakingRewardAddress:address,stakingToken,tokens:underlyingPool.tokens,stakedAmount,totalStakedAmount,earnedAmounts,rewardRates,totalRewardRates,periodFinish:new Date(),active,getHypotheticalRewardRate,nextPeriodRewards:underlyingPool.nextPeriodRewards,poolInfo:underlyingPool.poolInfo,rewardTokens};},[data,rewardsToken,underlyingPool,address,active,externalRewardsTokens]);};","map":{"version":3,"names":["useCelo","JSBI","TokenAmount","useToken","useMultiStakingContract","zip","useMemo","useSingleCallResult","useSingleContractMultipleData","INT_SECONDS_IN_WEEK","useMultiStakeRewards","address","underlyingPool","numRewards","active","_useSingleCallResult","_useSingleCallResult$","_useSingleCallResult2","_useSingleCallResult3","_useSingleCallResult4","_useSingleCallResult5","_useSingleContractMul","_useSingleCallResult6","_useSingleCallResult7","_useSingleCallResult8","_useSingleCallResult9","_useSingleCallResult10","_useSingleCallResult11","_useSingleCallResult12","_useSingleCallResult13","owner","accountArg","undefined","stakeRewards","totalSupply","result","rewardRate","rewardsToken","externalRewardsTokens","Array","keys","map","i","cr","reduce","acc","curr","idx","_objectSpread","stakeBalance","earned","earnedExternal","periodFinish","data","myBalance","_myBalance$toString","_totalSupplyRaw$toStr","_totalRewardRateRaw$t","totalSupplyRaw","totalRewardRateRaw","stakingToken","getHypotheticalRewardRate","stakedAmount","totalStakedAmount","totalRewardRates","totalRewardRate","token","greaterThan","raw","BigInt","divide","multiply","rewardsFinished","Math","floor","Date","now","toNumber","toString","sort","a","b","_a$token","_b$token","symbol","localeCompare","rewardRates","underlyingRewardTokens","rewardTokens","earnedAmounts","length","_ref","_amount$toString","amount","_a$token2","_b$token2","stakingRewardAddress","tokens","nextPeriodRewards","poolInfo"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/stake/useDualStakeRewards.ts"],"sourcesContent":["import { Address } from '@celo/contractkit'\nimport { useCelo } from '@celo/react-celo'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { JSBI, Token, TokenAmount } from '@ubeswap/sdk'\nimport { useToken } from 'hooks/Tokens'\nimport { useMultiStakingContract } from 'hooks/useContract'\nimport zip from 'lodash/zip'\nimport { useMemo } from 'react'\nimport { useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\n\nimport { INT_SECONDS_IN_WEEK } from './../../constants/index'\nimport { StakingInfo } from './hooks'\n\nexport const useMultiStakeRewards = (\n  address: Address | undefined,\n  underlyingPool: StakingInfo | undefined | null,\n  numRewards: number,\n  active: boolean\n): StakingInfo | null => {\n  const { address: owner } = useCelo()\n  const accountArg = useMemo(() => [owner ?? undefined], [owner])\n  const stakeRewards = useMultiStakingContract(address)\n\n  const totalSupply = useSingleCallResult(stakeRewards, 'totalSupply', [])?.result?.[0]\n  const rewardRate = useSingleCallResult(stakeRewards, 'rewardRate', [])?.result?.[0]\n  const rewardsToken = useToken(useSingleCallResult(stakeRewards, 'rewardsToken', [])?.result?.[0])\n  const externalRewardsTokens: Record<string, number> = useSingleContractMultipleData(\n    stakeRewards,\n    'externalRewardsTokens',\n    [...[...Array(numRewards - 2).keys()].map((i) => [i])]\n  )\n    ?.map((cr) => cr?.result as unknown as string)\n    .reduce((acc, curr, idx) => ({ ...acc, [curr]: idx }), {})\n\n  const stakeBalance = useSingleCallResult(stakeRewards, 'balanceOf', accountArg)?.result?.[0]\n  const earned = useSingleCallResult(stakeRewards, 'earned', accountArg)?.result?.[0]\n  const earnedExternal = useSingleCallResult(stakeRewards, 'earnedExternal', accountArg)?.result?.[0]\n  const periodFinish = useSingleCallResult(stakeRewards, 'periodFinish', [])?.result?.[0]\n  const data = useMemo(\n    () => ({\n      totalSupply,\n      rewardRate,\n      rewardsToken,\n      periodFinish,\n      myBalance: stakeBalance,\n      earned: [earned, ...(earnedExternal ? earnedExternal : [])],\n    }),\n    [earned, earnedExternal, rewardRate, rewardsToken, stakeBalance, totalSupply, periodFinish]\n  )\n\n  return useMemo((): StakingInfo | null => {\n    if (!data || !rewardsToken || !underlyingPool) {\n      return null\n    }\n    const { totalSupply: totalSupplyRaw, rewardRate: totalRewardRateRaw, myBalance, earned, periodFinish } = data\n    const { stakingToken } = underlyingPool\n\n    const getHypotheticalRewardRate = (\n      stakedAmount: TokenAmount,\n      totalStakedAmount: TokenAmount,\n      totalRewardRates: TokenAmount[]\n    ): TokenAmount[] => {\n      return totalRewardRates.map((totalRewardRate) => {\n        return new TokenAmount(\n          totalRewardRate.token,\n          JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\n            ? JSBI.divide(JSBI.multiply(totalRewardRate.raw, stakedAmount.raw), totalStakedAmount.raw)\n            : JSBI.BigInt(0)\n        )\n      })\n    }\n\n    const rewardsFinished = Math.floor(Date.now() / 1000) - periodFinish.toNumber() > INT_SECONDS_IN_WEEK\n    const stakedAmount = myBalance ? new TokenAmount(stakingToken, myBalance?.toString() ?? '0') : undefined\n    const totalStakedAmount = new TokenAmount(stakingToken, totalSupplyRaw?.toString() ?? '0')\n    const totalRewardRates = [\n      new TokenAmount(rewardsToken, rewardsFinished ? JSBI.BigInt(0) : totalRewardRateRaw?.toString() ?? '0'),\n      ...underlyingPool.totalRewardRates,\n    ].sort((a, b) => (a.token?.symbol && b?.token?.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0))\n\n    const rewardRates = stakedAmount\n      ? getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRates)\n      : totalRewardRates.map((totalRewardRate) => new TokenAmount(totalRewardRate.token, '0'))\n\n    const underlyingRewardTokens = underlyingPool.rewardTokens.sort(\n      (a, b) => externalRewardsTokens[a?.address] - externalRewardsTokens[b?.address]\n    )\n    const rewardTokens = rewardsToken ? [rewardsToken, ...underlyingRewardTokens] : [...underlyingRewardTokens]\n    const earnedAmounts =\n      earned && earned.length === rewardTokens.length\n        ? zip<BigNumber, Token>(earned, rewardTokens)\n            .map(([amount, token]) => new TokenAmount(token as Token, amount?.toString() ?? '0'))\n            .sort((a, b) => (a?.token?.symbol && b?.token?.symbol ? a.token.symbol.localeCompare(b.token.symbol) : 0))\n        : undefined\n\n    return {\n      stakingRewardAddress: address,\n      stakingToken,\n      tokens: underlyingPool.tokens,\n      stakedAmount,\n      totalStakedAmount,\n      earnedAmounts,\n      rewardRates,\n      totalRewardRates,\n      periodFinish: new Date(),\n      active,\n      getHypotheticalRewardRate,\n      nextPeriodRewards: underlyingPool.nextPeriodRewards,\n      poolInfo: underlyingPool.poolInfo,\n      rewardTokens,\n    }\n  }, [data, rewardsToken, underlyingPool, address, active, externalRewardsTokens])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}