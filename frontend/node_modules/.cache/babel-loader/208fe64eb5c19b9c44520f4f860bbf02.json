{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, utils } from \"ethers\";\nconst _abi = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"_token\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"_amount\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint32\",\n    name: \"_destination\",\n    type: \"uint32\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"_recipient\",\n    type: \"bytes32\"\n  }],\n  name: \"send\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nexport class BridgeRouter__factory {\n  static createInterface() {\n    return new utils.Interface(_abi);\n  }\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n}\nBridgeRouter__factory.abi = _abi;","map":{"version":3,"names":["Contract","utils","_abi","inputs","internalType","name","type","outputs","stateMutability","BridgeRouter__factory","createInterface","Interface","connect","address","signerOrProvider","abi"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/generated/factories/BridgeRouter__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { BridgeRouter, BridgeRouterInterface } from \"../BridgeRouter\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_destination\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_recipient\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"send\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class BridgeRouter__factory {\n  static readonly abi = _abi;\n  static createInterface(): BridgeRouterInterface {\n    return new utils.Interface(_abi) as BridgeRouterInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): BridgeRouter {\n    return new Contract(address, _abi, signerOrProvider) as BridgeRouter;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAUC,KAAK,QAAQ,QAAQ;AAIhD,MAAMC,IAAI,GAAG,CACX;EACEC,MAAM,EAAE,CACN;IACEC,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,QAAQ;IACtBC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,YAAY,EAAE,SAAS;IACvBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;EACR,CAAC,CACF;EACDD,IAAI,EAAE,MAAM;EACZE,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,YAAY;EAC7BF,IAAI,EAAE;AACR,CAAC,CACF;AAED,OAAO,MAAMG,qBAAqB,CAAC;EAEjC,OAAOC,eAAeA,CAAA,EAA0B;IAC9C,OAAO,IAAIT,KAAK,CAACU,SAAS,CAACT,IAAI,CAAC;EAClC;EACA,OAAOU,OAAOA,CACZC,OAAe,EACfC,gBAAmC,EACrB;IACd,OAAO,IAAId,QAAQ,CAACa,OAAO,EAAEX,IAAI,EAAEY,gBAAgB,CAAC;EACtD;AACF;AAXaL,qBAAqB,CAChBM,GAAG,GAAGb,IAAI"},"metadata":{},"sourceType":"module"}