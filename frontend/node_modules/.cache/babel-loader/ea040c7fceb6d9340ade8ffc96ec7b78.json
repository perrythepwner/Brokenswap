{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\n\nvar _asyncToGenerator = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar PromiEvent = require('web3-core-promievent');\nvar namehash = require('eth-ens-namehash');\nvar errors = require('web3-core-helpers').errors;\nvar _ = require('underscore');\nvar interfaceIds = require('../config').interfaceIds;\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n  this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n  return {\n    call: this.call.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this,\n      outputFormatter: outputFormatter\n    }),\n    send: this.send.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    })\n  };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  var outputFormatter = this.outputFormatter || null;\n  this.parent.registry.getResolver(this.ensName).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (resolver) {\n      yield self.parent.checkInterfaceSupport(resolver, self.methodName);\n      self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()).catch(function (error) {\n    if (_.isFunction(callback)) {\n      callback(error, null);\n      return;\n    }\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.getResolver(this.ensName).then( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (resolver) {\n      yield self.parent.checkInterfaceSupport(resolver, self.methodName);\n      self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (error) {\n    if (_.isFunction(callback)) {\n      callback(error, null);\n      return;\n    }\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n  method.apply(this, preparedArguments).call().then(function (result) {\n    if (outputFormatter) {\n      result = outputFormatter(result);\n    }\n    if (_.isFunction(callback)) {\n      // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n      callback(result, result);\n      return;\n    }\n    promiEvent.resolve(result);\n  }).catch(function (error) {\n    if (_.isFunction(callback)) {\n      callback(error, null);\n      return;\n    }\n    promiEvent.reject(error);\n  });\n  return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n  method.apply(this, preparedArguments).send(sendOptions).on('sending', function () {\n    promiEvent.eventEmitter.emit('sending');\n  }).on('sent', function () {\n    promiEvent.eventEmitter.emit('sent');\n  }).on('transactionHash', function (hash) {\n    promiEvent.eventEmitter.emit('transactionHash', hash);\n  }).on('confirmation', function (confirmationNumber, receipt) {\n    promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n  }).on('receipt', function (receipt) {\n    promiEvent.eventEmitter.emit('receipt', receipt);\n    promiEvent.resolve(receipt);\n    if (_.isFunction(callback)) {\n      // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n      callback(receipt, receipt);\n    }\n  }).on('error', function (error) {\n    promiEvent.eventEmitter.emit('error', error);\n    if (_.isFunction(callback)) {\n      callback(error, null);\n      return;\n    }\n    promiEvent.reject(error);\n  });\n  return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n  var node = namehash.hash(name);\n  if (methodArguments.length > 0) {\n    methodArguments.unshift(node);\n    return methodArguments;\n  }\n  return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\nResolverMethodHandler.prototype.checkInterfaceSupport = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (resolver, methodName) {\n    // Skip validation for undocumented interface ids (ex: multihash)\n    if (!interfaceIds[methodName]) return;\n    var supported = false;\n    try {\n      supported = yield resolver.methods.supportsInterface(interfaceIds[methodName]).call();\n    } catch (err) {\n      console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n    }\n    if (!supported) {\n      throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nmodule.exports = ResolverMethodHandler;","map":{"version":3,"names":["_asyncToGenerator","require","default","PromiEvent","namehash","errors","_","interfaceIds","ResolverMethodHandler","registry","prototype","method","ensName","methodName","methodArguments","outputFormatter","callback","call","bind","parent","send","self","promiEvent","preparedArguments","prepareArguments","getResolver","then","_ref","resolver","checkInterfaceSupport","handleCall","methods","_x","apply","arguments","catch","error","isFunction","reject","eventEmitter","sendOptions","_ref2","handleSend","_x2","result","resolve","on","emit","hash","confirmationNumber","receipt","name","node","length","unshift","_ref3","supported","supportsInterface","err","console","warn","options","address","ResolverMethodMissingError","_x3","_x4","module","exports"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/contractkit/node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar PromiEvent = require('web3-core-promievent');\nvar namehash = require('eth-ens-namehash');\nvar errors = require('web3-core-helpers').errors;\nvar _ = require('underscore');\nvar interfaceIds = require('../config').interfaceIds;\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n    this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n    return {\n        call: this.call.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this,\n            outputFormatter: outputFormatter\n        }),\n        send: this.send.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        })\n    };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    var outputFormatter = this.outputFormatter || null;\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n    }).catch(function (error) {\n        if (_.isFunction(callback)) {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    }).catch(function (error) {\n        if (_.isFunction(callback)) {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n    method.apply(this, preparedArguments).call()\n        .then(function (result) {\n        if (outputFormatter) {\n            result = outputFormatter(result);\n        }\n        if (_.isFunction(callback)) {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(result, result);\n            return;\n        }\n        promiEvent.resolve(result);\n    }).catch(function (error) {\n        if (_.isFunction(callback)) {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n    method.apply(this, preparedArguments).send(sendOptions)\n        .on('sending', function () {\n        promiEvent.eventEmitter.emit('sending');\n    })\n        .on('sent', function () {\n        promiEvent.eventEmitter.emit('sent');\n    })\n        .on('transactionHash', function (hash) {\n        promiEvent.eventEmitter.emit('transactionHash', hash);\n    })\n        .on('confirmation', function (confirmationNumber, receipt) {\n        promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n    })\n        .on('receipt', function (receipt) {\n        promiEvent.eventEmitter.emit('receipt', receipt);\n        promiEvent.resolve(receipt);\n        if (_.isFunction(callback)) {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(receipt, receipt);\n        }\n    })\n        .on('error', function (error) {\n        promiEvent.eventEmitter.emit('error', error);\n        if (_.isFunction(callback)) {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n    var node = namehash.hash(name);\n    if (methodArguments.length > 0) {\n        methodArguments.unshift(node);\n        return methodArguments;\n    }\n    return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\nResolverMethodHandler.prototype.checkInterfaceSupport = async function (resolver, methodName) {\n    // Skip validation for undocumented interface ids (ex: multihash)\n    if (!interfaceIds[methodName])\n        return;\n    var supported = false;\n    try {\n        supported = await resolver\n            .methods\n            .supportsInterface(interfaceIds[methodName])\n            .call();\n    }\n    catch (err) {\n        console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n    }\n    if (!supported) {\n        throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n    }\n};\nmodule.exports = ResolverMethodHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}