{"ast":null,"code":"import _objectSpread from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\n// @ts-nocheck\nimport { ChainId } from '@celo/react-celo';\nimport { Token } from '@ubeswap/sdk';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport sortByListPriority from 'utils/listSort';\nimport { UNSUPPORTED_LIST_URLS } from './../../constants/lists';\nimport tokenList from './../../constants/token-list.json';\nconst TOKEN_LIST = tokenList;\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tokenInfo = tokenInfo;\n  }\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n}\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [1]: {}\n};\nconst listCache = typeof WeakMap !== 'undefined' ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenMap$token$chain;\n    const token = new WrappedTokenInfo(tokenInfo);\n    if (((_tokenMap$token$chain = tokenMap[token.chainId]) === null || _tokenMap$token$chain === void 0 ? void 0 : _tokenMap$token$chain[token.address]) !== undefined) throw Error(\"Duplicate tokens found for \".concat(token.name));\n    return _objectSpread(_objectSpread({}, tokenMap), {}, {\n      [token.chainId]: _objectSpread(_objectSpread({}, tokenMap[token.chainId]), {}, {\n        [token.address]: {\n          token,\n          list: list\n        }\n      })\n    });\n  }, _objectSpread({}, EMPTY_LIST));\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\nexport function useAllLists() {\n  _s();\n  return useSelector(state => state.lists.byUrl);\n}\n_s(useAllLists, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nfunction combineMaps(map1, map2) {\n  return {\n    [ChainId.Mainnet]: _objectSpread(_objectSpread({}, map1[ChainId.Mainnet]), map2[ChainId.Mainnet]),\n    [ChainId.Alfajores]: _objectSpread(_objectSpread({}, map1[ChainId.Alfajores]), map2[ChainId.Alfajores]),\n    [ChainId.Baklava]: _objectSpread(_objectSpread({}, map1[ChainId.Baklava]), map2[ChainId.Baklava])\n  };\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls) {\n  _s2();\n  const lists = useAllLists();\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n    return urls.slice()\n    // sort by priority so top priority goes last\n    .sort(sortByListPriority).reduce((allTokens, currentUrl) => {\n      var _lists$currentUrl;\n      const current = (_lists$currentUrl = lists[currentUrl]) === null || _lists$currentUrl === void 0 ? void 0 : _lists$currentUrl.current;\n      if (!current) return allTokens;\n      try {\n        const newTokens = Object.assign(listToTokenMap(current));\n        return combineMaps(allTokens, newTokens);\n      } catch (error) {\n        console.error('Could not show token list due to error', error);\n        return allTokens;\n      }\n    }, EMPTY_LIST);\n  }, [lists, urls]);\n}\n\n// filter out unsupported lists\n_s2(useCombinedTokenMapFromUrls, \"dehXRrnFU9pff84Mq4UWf/sQUEg=\", false, function () {\n  return [useAllLists];\n});\nexport function useActiveListUrls() {\n  _s3();\n  var _useSelector;\n  return (_useSelector = useSelector(state => state.lists.activeListUrls)) === null || _useSelector === void 0 ? void 0 : _useSelector.filter(url => !UNSUPPORTED_LIST_URLS.includes(url));\n}\n_s3(useActiveListUrls, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useInactiveListUrls() {\n  _s4();\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter(url => !(allActiveListUrls !== null && allActiveListUrls !== void 0 && allActiveListUrls.includes(url)) && !UNSUPPORTED_LIST_URLS.includes(url));\n}\n\n// get all the tokens from active lists, combine with local default tokens\n_s4(useInactiveListUrls, \"Aaa3RmQiPVrq8Yq5CzTAgDsk1NQ=\", false, function () {\n  return [useAllLists, useActiveListUrls];\n});\nexport function useCombinedActiveList() {\n  const defaultTokenMap = listToTokenMap(TOKEN_LIST);\n  return defaultTokenMap;\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList() {\n  _s5();\n  const allInactiveListUrls = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n}\n\n// used to hide warnings on import for default tokens\n_s5(useCombinedInactiveList, \"KkTaFdmygCZo4aYLCj+AgUEN+q4=\", false, function () {\n  return [useInactiveListUrls, useCombinedTokenMapFromUrls];\n});\nexport function useDefaultTokenList() {\n  return listToTokenMap(TOKEN_LIST);\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList() {\n  _s6();\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS);\n\n  // format into one token address map\n  return loadedUnsupportedListMap;\n}\n_s6(useUnsupportedTokenList, \"IDLqbTCADDxqzN3Mo99zPBv+VI4=\", false, function () {\n  return [useCombinedTokenMapFromUrls];\n});\nexport function useIsListActive(url) {\n  _s7();\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls === null || activeListUrls === void 0 ? void 0 : activeListUrls.includes(url));\n}\n_s7(useIsListActive, \"OzLukTCRH8SDpmsIh1vZXvu7OrM=\", false, function () {\n  return [useActiveListUrls];\n});","map":{"version":3,"names":["ChainId","Token","useMemo","useSelector","sortByListPriority","UNSUPPORTED_LIST_URLS","tokenList","TOKEN_LIST","WrappedTokenInfo","constructor","tokenInfo","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","_tokenMap$token$chain","token","undefined","Error","concat","_objectSpread","set","useAllLists","_s","state","lists","byUrl","combineMaps","map1","map2","Mainnet","Alfajores","Baklava","useCombinedTokenMapFromUrls","urls","_s2","slice","sort","allTokens","currentUrl","_lists$currentUrl","current","newTokens","Object","assign","error","console","useActiveListUrls","_s3","_useSelector","activeListUrls","filter","url","includes","useInactiveListUrls","_s4","allActiveListUrls","keys","useCombinedActiveList","defaultTokenMap","useCombinedInactiveList","_s5","allInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","_s6","loadedUnsupportedListMap","useIsListActive","_s7","Boolean"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/lists/hooks.ts"],"sourcesContent":["// @ts-nocheck\nimport { ChainId } from '@celo/react-celo'\nimport { Token } from '@ubeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport sortByListPriority from 'utils/listSort'\n\nimport { AppState } from '../index'\nimport { UNSUPPORTED_LIST_URLS } from './../../constants/lists'\nimport tokenList from './../../constants/token-list.json'\n\ntype TagDetails = Tags[keyof Tags]\n\nconst TOKEN_LIST: TokenList = tokenList\n\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n  constructor(tokenInfo: TokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{\n  [chainId: number]: Readonly<{\n    [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\n  }>\n}>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [1]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const token = new WrappedTokenInfo(tokenInfo)\n      if (tokenMap[token.chainId]?.[token.address] !== undefined)\n        throw Error(`Duplicate tokens found for ${token.name}`)\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list: list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.Mainnet]: { ...map1[ChainId.Mainnet], ...map2[ChainId.Mainnet] },\n    [ChainId.Alfajores]: { ...map1[ChainId.Alfajores], ...map2[ChainId.Alfajores] },\n    [ChainId.Baklava]: { ...map1[ChainId.Baklava], ...map2[ChainId.Baklava] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url)\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const defaultTokenMap = listToTokenMap(TOKEN_LIST)\n  return defaultTokenMap\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return loadedUnsupportedListMap\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}