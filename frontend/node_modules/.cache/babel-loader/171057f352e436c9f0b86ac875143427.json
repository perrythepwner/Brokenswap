{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _asyncToGenerator = require(\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst errors_1 = require(\"../errors\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst Web3Method_1 = require(\"../relay/Web3Method\");\nconst Web3Response_1 = require(\"../relay/Web3Response\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n  constructor(options) {\n    var _a, _b;\n    super();\n    this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n    this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n    this._relay = null;\n    this._addresses = [];\n    this.hasMadeFirstChainChangedEmission = false;\n    this.setProviderInfo = this.setProviderInfo.bind(this);\n    this.updateProviderInfo = this.updateProviderInfo.bind(this);\n    this.getChainId = this.getChainId.bind(this);\n    this.setAppInfo = this.setAppInfo.bind(this);\n    this.enable = this.enable.bind(this);\n    this.close = this.close.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.request = this.request.bind(this);\n    this._setAddresses = this._setAddresses.bind(this);\n    this.scanQRCode = this.scanQRCode.bind(this);\n    this.genericRequest = this.genericRequest.bind(this);\n    this._chainIdFromOpts = options.chainId;\n    this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    this._overrideIsMetaMask = options.overrideIsMetaMask;\n    this._relayProvider = options.relayProvider;\n    this._storage = options.storage;\n    this._relayEventManager = options.relayEventManager;\n    this.diagnostic = options.diagnosticLogger;\n    this.reloadOnDisconnect = true;\n    this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    this.qrUrl = options.qrUrl;\n    const chainId = this.getChainId();\n    const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    this.emit(\"connect\", {\n      chainIdStr\n    });\n    const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    this._subscriptionManager.events.on(\"notification\", notification => {\n      this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (this._isAuthorized()) {\n      void this.initializeRelay();\n    }\n    window.addEventListener(\"message\", event => {\n      var _a;\n      // Used to verify the source and window are correct before proceeding\n      if (event.origin !== location.origin || event.source !== window) {\n        return;\n      }\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n      if (event.data.data.action === \"dappChainSwitched\") {\n        const _chainId = event.data.data.chainId;\n        const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n        this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n      }\n      if (event.data.data.action === \"addressChanged\") {\n        this._setAddresses([event.data.data.address]);\n      }\n    });\n  }\n  /** @deprecated Use `.request({ method: 'eth_accounts' })` instead. */\n  get selectedAddress() {\n    return this._addresses[0] || undefined;\n  }\n  /** @deprecated Use the chain ID. If you still need the network ID, use `.request({ method: 'net_version' })`. */\n  get networkVersion() {\n    return this.getChainId().toString(10);\n  }\n  /** @deprecated Use `.request({ method: 'eth_chainId' })` instead. */\n  get chainId() {\n    return (0, util_1.prepend0x)(this.getChainId().toString(16));\n  }\n  get isWalletLink() {\n    // backward compatibility\n    return true;\n  }\n  /**\n   * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n   * true for this method.\n   */\n  get isMetaMask() {\n    return this._overrideIsMetaMask;\n  }\n  get host() {\n    return this.jsonRpcUrl;\n  }\n  get connected() {\n    return true;\n  }\n  isConnected() {\n    return true;\n  }\n  get jsonRpcUrl() {\n    var _a;\n    return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n  }\n  set jsonRpcUrl(value) {\n    this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n  }\n  disableReloadOnDisconnect() {\n    this.reloadOnDisconnect = false;\n  }\n  setProviderInfo(jsonRpcUrl, chainId) {\n    if (!this.isCoinbaseBrowser) {\n      this._chainIdFromOpts = chainId;\n      this._jsonRpcUrlFromOpts = jsonRpcUrl;\n    }\n    this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n  }\n  updateProviderInfo(jsonRpcUrl, chainId) {\n    this.jsonRpcUrl = jsonRpcUrl;\n    // emit chainChanged event if necessary\n    const originalChainId = this.getChainId();\n    this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n    const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n    if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n      this.emit(\"chainChanged\", this.getChainId());\n      this.hasMadeFirstChainChangedEmission = true;\n    }\n  }\n  watchAsset(type, address, symbol, decimals, image, chainId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const relay = yield _this.initializeRelay();\n      const result = yield relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n      return !!result.result;\n    })();\n  }\n  addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n      if ((0, util_1.ensureIntNumber)(chainId) === _this2.getChainId()) {\n        return false;\n      }\n      const relay = yield _this2.initializeRelay();\n      const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n      if (!_this2._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n        yield relay.requestEthereumAccounts().promise;\n      }\n      const res = yield relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n      if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n        _this2.updateProviderInfo(rpcUrls[0], chainId);\n      }\n      return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    })();\n  }\n  switchEthereumChain(chainId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const relay = yield _this3.initializeRelay();\n      const res = yield relay.switchEthereumChain(chainId.toString(10), _this3.selectedAddress || undefined).promise;\n      // backward compatibility\n      if ((0, Web3Response_1.isErrorResponse)(res) && res.errorCode) {\n        if (res.errorCode === errors_1.standardErrorCodes.provider.unsupportedChain) {\n          throw errors_1.standardErrors.provider.unsupportedChain(chainId);\n        } else {\n          throw errors_1.standardErrors.provider.custom({\n            message: res.errorMessage,\n            code: res.errorCode\n          });\n        }\n      }\n      const switchResponse = res.result;\n      if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n        _this3.updateProviderInfo(switchResponse.rpcUrl, chainId);\n      }\n    })();\n  }\n  setAppInfo(appName, appLogoUrl) {\n    void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n  }\n  /** @deprecated Use `.request({ method: 'eth_requestAccounts' })` instead. */\n  enable() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      (_a = _this4.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n        method: \"provider::enable\",\n        addresses_length: _this4._addresses.length,\n        sessionIdHash: _this4._relay ? Session_1.Session.hash(_this4._relay.session.id) : undefined\n      });\n      if (_this4._isAuthorized()) {\n        return [..._this4._addresses];\n      }\n      return yield _this4.send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    })();\n  }\n  close() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const relay = yield _this5.initializeRelay();\n      relay.resetAndReload();\n    })();\n  }\n  send(requestOrMethod, callbackOrParams) {\n    // send<T>(method, params): Promise<T>\n    try {\n      const result = this._send(requestOrMethod, callbackOrParams);\n      if (result instanceof Promise) {\n        return result.catch(error => {\n          throw (0, errors_1.serializeError)(error, requestOrMethod);\n        });\n      }\n    } catch (error) {\n      throw (0, errors_1.serializeError)(error, requestOrMethod);\n    }\n  }\n  _send(requestOrMethod, callbackOrParams) {\n    if (typeof requestOrMethod === \"string\") {\n      const method = requestOrMethod;\n      const params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n      const request = {\n        jsonrpc: \"2.0\",\n        id: 0,\n        method,\n        params\n      };\n      return this._sendRequestAsync(request).then(res => res.result);\n    }\n    // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n    if (typeof callbackOrParams === \"function\") {\n      const request = requestOrMethod;\n      const callback = callbackOrParams;\n      return this._sendAsync(request, callback);\n    }\n    // send(JSONRPCRequest[]): JSONRPCResponse[]\n    if (Array.isArray(requestOrMethod)) {\n      const requests = requestOrMethod;\n      return requests.map(r => this._sendRequest(r));\n    }\n    // send(JSONRPCRequest): JSONRPCResponse\n    const req = requestOrMethod;\n    return this._sendRequest(req);\n  }\n  sendAsync(request, callback) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        return _this6._sendAsync(request, callback).catch(error => {\n          throw (0, errors_1.serializeError)(error, request);\n        });\n      } catch (error) {\n        return Promise.reject((0, errors_1.serializeError)(error, request));\n      }\n    })();\n  }\n  _sendAsync(request, callback) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      }\n      // send(JSONRPCRequest[], callback): void\n      if (Array.isArray(request)) {\n        const arrayCb = callback;\n        _this7._sendMultipleRequestsAsync(request).then(responses => arrayCb(null, responses)).catch(err => arrayCb(err, null));\n        return;\n      }\n      // send(JSONRPCRequest, callback): void\n      const cb = callback;\n      return _this7._sendRequestAsync(request).then(response => cb(null, response)).catch(err => cb(err, null));\n    })();\n  }\n  request(args) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        return _this8._request(args).catch(error => {\n          throw (0, errors_1.serializeError)(error, args.method);\n        });\n      } catch (error) {\n        return Promise.reject((0, errors_1.serializeError)(error, args.method));\n      }\n    })();\n  }\n  _request(args) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n        throw errors_1.standardErrors.rpc.invalidRequest({\n          message: \"Expected a single, non-array, object argument.\",\n          data: args\n        });\n      }\n      const {\n        method,\n        params\n      } = args;\n      if (typeof method !== \"string\" || method.length === 0) {\n        throw errors_1.standardErrors.rpc.invalidRequest({\n          message: \"'args.method' must be a non-empty string.\",\n          data: args\n        });\n      }\n      if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n        throw errors_1.standardErrors.rpc.invalidRequest({\n          message: \"'args.params' must be an object or array if provided.\",\n          data: args\n        });\n      }\n      const newParams = params === undefined ? [] : params;\n      // Coinbase Wallet Requests\n      const id = _this9._relayEventManager.makeRequestId();\n      const result = yield _this9._sendRequestAsync({\n        method,\n        params: newParams,\n        jsonrpc: \"2.0\",\n        id\n      });\n      return result.result;\n    })();\n  }\n  scanQRCode(match) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const relay = yield _this10.initializeRelay();\n      const res = yield relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n      if (typeof res.result !== \"string\") {\n        throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.scanQRCode);\n      }\n      return res.result;\n    })();\n  }\n  genericRequest(data, action) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const relay = yield _this11.initializeRelay();\n      const res = yield relay.genericRequest(data, action).promise;\n      if (typeof res.result !== \"string\") {\n        throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.generic);\n      }\n      return res.result;\n    })();\n  }\n  selectProvider(providerOptions) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const relay = yield _this12.initializeRelay();\n      const res = yield relay.selectProvider(providerOptions).promise;\n      if (typeof res.result !== \"string\") {\n        throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.selectProvider);\n      }\n      return res.result;\n    })();\n  }\n  supportsSubscriptions() {\n    return false;\n  }\n  subscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n  unsubscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n  disconnect() {\n    return true;\n  }\n  _sendRequest(request) {\n    const response = {\n      jsonrpc: \"2.0\",\n      id: request.id\n    };\n    const {\n      method\n    } = request;\n    response.result = this._handleSynchronousMethods(request);\n    if (response.result === undefined) {\n      throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n    }\n    return response;\n  }\n  _setAddresses(addresses, _) {\n    if (!Array.isArray(addresses)) {\n      throw new Error(\"addresses is not an array\");\n    }\n    const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n    if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n      return;\n    }\n    this._addresses = newAddresses;\n    this.emit(\"accountsChanged\", this._addresses);\n    this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n  }\n  _sendRequestAsync(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        const syncResult = this._handleSynchronousMethods(request);\n        if (syncResult !== undefined) {\n          return resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: syncResult\n          });\n        }\n        const filterPromise = this._handleAsynchronousFilterMethods(request);\n        if (filterPromise !== undefined) {\n          filterPromise.then(res => resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }))).catch(err => reject(err));\n          return;\n        }\n        const subscriptionPromise = this._handleSubscriptionMethods(request);\n        if (subscriptionPromise !== undefined) {\n          subscriptionPromise.then(res => resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: res.result\n          })).catch(err => reject(err));\n          return;\n        }\n      } catch (err) {\n        return reject(err);\n      }\n      this._handleAsynchronousMethods(request).then(res => res && resolve(Object.assign(Object.assign({}, res), {\n        id: request.id\n      }))).catch(err => reject(err));\n    });\n  }\n  _sendMultipleRequestsAsync(requests) {\n    return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n  }\n  _handleSynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_accounts:\n        return this._eth_accounts();\n      case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n        return this._eth_coinbase();\n      case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n        return this._eth_uninstallFilter(params);\n      case JSONRPC_1.JSONRPCMethod.net_version:\n        return this._net_version();\n      case JSONRPC_1.JSONRPCMethod.eth_chainId:\n        return this._eth_chainId();\n      default:\n        return undefined;\n    }\n  }\n  _handleAsynchronousMethods(request) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        method\n      } = request;\n      const params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n          return _this13._eth_requestAccounts();\n        case JSONRPC_1.JSONRPCMethod.eth_sign:\n          return _this13._eth_sign(params);\n        case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n          return _this13._eth_ecRecover(params);\n        case JSONRPC_1.JSONRPCMethod.personal_sign:\n          return _this13._personal_sign(params);\n        case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n          return _this13._personal_ecRecover(params);\n        case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n          return _this13._eth_signTransaction(params);\n        case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n          return _this13._eth_sendRawTransaction(params);\n        case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n          return _this13._eth_sendTransaction(params);\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n          return _this13._eth_signTypedData_v1(params);\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n          return _this13._throwUnsupportedMethodError();\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n          return _this13._eth_signTypedData_v3(params);\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n          return _this13._eth_signTypedData_v4(params);\n        case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n          return _this13._cbwallet_arbitrary(params);\n        case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n          return _this13._wallet_addEthereumChain(params);\n        case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n          return _this13._wallet_switchEthereumChain(params);\n        case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n          return _this13._wallet_watchAsset(params);\n      }\n      const relay = yield _this13.initializeRelay();\n      return relay.makeEthereumJSONRPCRequest(request, _this13.jsonRpcUrl);\n    })();\n  }\n  _handleAsynchronousFilterMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n        return this._eth_newFilter(params);\n      case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n        return this._eth_newBlockFilter();\n      case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n        return this._eth_newPendingTransactionFilter();\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n        return this._eth_getFilterChanges(params);\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n        return this._eth_getFilterLogs(params);\n    }\n    return undefined;\n  }\n  _handleSubscriptionMethods(request) {\n    switch (request.method) {\n      case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n      case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n        return this._subscriptionManager.handleRequest(request);\n    }\n    return undefined;\n  }\n  _isKnownAddress(addressString) {\n    try {\n      const addressStr = (0, util_1.ensureAddressString)(addressString);\n      const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n      return lowercaseAddresses.includes(addressStr);\n    } catch (_a) {}\n    return false;\n  }\n  _ensureKnownAddress(addressString) {\n    var _a;\n    if (!this._isKnownAddress(addressString)) {\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n      throw new Error(\"Unknown Ethereum address\");\n    }\n  }\n  _prepareTransactionParams(tx) {\n    const fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n    if (!fromAddress) {\n      throw new Error(\"Ethereum address is unavailable\");\n    }\n    this._ensureKnownAddress(fromAddress);\n    const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n    const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n    const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n    const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n    const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n    const chainId = this.getChainId();\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId\n    };\n  }\n  _isAuthorized() {\n    return this._addresses.length > 0;\n  }\n  _requireAuthorization() {\n    if (!this._isAuthorized()) {\n      throw errors_1.standardErrors.provider.unauthorized({});\n    }\n  }\n  _throwUnsupportedMethodError() {\n    throw errors_1.standardErrors.provider.unsupportedMethod({});\n  }\n  _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      _this14._ensureKnownAddress(address);\n      try {\n        const relay = yield _this14.initializeRelay();\n        const res = yield relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          result: res.result\n        };\n      } catch (err) {\n        if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n          throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied message signature\");\n        }\n        throw err;\n      }\n    })();\n  }\n  _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      const relay = yield _this15.initializeRelay();\n      const res = yield relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    })();\n  }\n  _eth_accounts() {\n    return [...this._addresses];\n  }\n  _eth_coinbase() {\n    return this.selectedAddress || null;\n  }\n  _net_version() {\n    return this.getChainId().toString(10);\n  }\n  _eth_chainId() {\n    return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n  }\n  getChainId() {\n    const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n    if (!chainIdStr) {\n      return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n    }\n    const chainId = parseInt(chainIdStr, 10);\n    return (0, util_1.ensureIntNumber)(chainId);\n  }\n  _eth_requestAccounts() {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      (_a = _this16.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n        method: \"provider::_eth_requestAccounts\",\n        addresses_length: _this16._addresses.length,\n        sessionIdHash: _this16._relay ? Session_1.Session.hash(_this16._relay.session.id) : undefined\n      });\n      if (_this16._isAuthorized()) {\n        return Promise.resolve({\n          jsonrpc: \"2.0\",\n          id: 0,\n          result: _this16._addresses\n        });\n      }\n      let res;\n      try {\n        const relay = yield _this16.initializeRelay();\n        res = yield relay.requestEthereumAccounts().promise;\n      } catch (err) {\n        if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n          throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n        }\n        throw err;\n      }\n      if (!res.result) {\n        throw new Error(\"accounts received is empty\");\n      }\n      _this16._setAddresses(res.result);\n      if (!_this16.isCoinbaseBrowser) {\n        yield _this16.switchEthereumChain(_this16.getChainId());\n      }\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: _this16._addresses\n      };\n    })();\n  }\n  _eth_sign(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const message = (0, util_1.ensureBuffer)(params[1]);\n    return this._signEthereumMessage(message, address, false);\n  }\n  _eth_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, false);\n  }\n  _personal_sign(params) {\n    this._requireAuthorization();\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    return this._signEthereumMessage(message, address, true);\n  }\n  _personal_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, true);\n  }\n  _eth_signTransaction(params) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      _this17._requireAuthorization();\n      const tx = _this17._prepareTransactionParams(params[0] || {});\n      try {\n        const relay = yield _this17.initializeRelay();\n        const res = yield relay.signEthereumTransaction(tx).promise;\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          result: res.result\n        };\n      } catch (err) {\n        if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n          throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n        }\n        throw err;\n      }\n    })();\n  }\n  _eth_sendRawTransaction(params) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n      const relay = yield _this18.initializeRelay();\n      const res = yield relay.submitEthereumTransaction(signedTransaction, _this18.getChainId()).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    })();\n  }\n  _eth_sendTransaction(params) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      _this19._requireAuthorization();\n      const tx = _this19._prepareTransactionParams(params[0] || {});\n      try {\n        const relay = yield _this19.initializeRelay();\n        const res = yield relay.signAndSubmitEthereumTransaction(tx).promise;\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          result: res.result\n        };\n      } catch (err) {\n        if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n          throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n        }\n        throw err;\n      }\n    })();\n  }\n  _eth_signTypedData_v1(params) {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      _this20._requireAuthorization();\n      const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n      const address = (0, util_1.ensureAddressString)(params[1]);\n      _this20._ensureKnownAddress(address);\n      const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n        data: typedData\n      });\n      const typedDataJSON = JSON.stringify(typedData, null, 2);\n      return _this20._signEthereumMessage(message, address, false, typedDataJSON);\n    })();\n  }\n  _eth_signTypedData_v3(params) {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      _this21._requireAuthorization();\n      const address = (0, util_1.ensureAddressString)(params[0]);\n      const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n      _this21._ensureKnownAddress(address);\n      const message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n        data: typedData\n      });\n      const typedDataJSON = JSON.stringify(typedData, null, 2);\n      return _this21._signEthereumMessage(message, address, false, typedDataJSON);\n    })();\n  }\n  _eth_signTypedData_v4(params) {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      _this22._requireAuthorization();\n      const address = (0, util_1.ensureAddressString)(params[0]);\n      const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n      _this22._ensureKnownAddress(address);\n      const message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n        data: typedData\n      });\n      const typedDataJSON = JSON.stringify(typedData, null, 2);\n      return _this22._signEthereumMessage(message, address, false, typedDataJSON);\n    })();\n  }\n  /** @deprecated */\n  _cbwallet_arbitrary(params) {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      const action = params[0];\n      const data = params[1];\n      if (typeof data !== \"string\") {\n        throw new Error(\"parameter must be a string\");\n      }\n      if (typeof action !== \"object\" || action === null) {\n        throw new Error(\"parameter must be an object\");\n      }\n      const result = yield _this23.genericRequest(action, data);\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result\n      };\n    })();\n  }\n  _wallet_addEthereumChain(params) {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d;\n      const request = params[0];\n      if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          error: {\n            code: 2,\n            message: \"please pass in at least 1 rpcUrl\"\n          }\n        };\n      }\n      if (!request.chainName || request.chainName.trim() === \"\") {\n        throw errors_1.standardErrors.rpc.invalidParams(\"chainName is a required field\");\n      }\n      if (!request.nativeCurrency) {\n        throw errors_1.standardErrors.rpc.invalidParams(\"nativeCurrency is a required field\");\n      }\n      const chainIdNumber = parseInt(request.chainId, 16);\n      const success = yield _this24.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n      if (success) {\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          result: null\n        };\n      } else {\n        return {\n          jsonrpc: \"2.0\",\n          id: 0,\n          error: {\n            code: 2,\n            message: \"unable to add ethereum chain\"\n          }\n        };\n      }\n    })();\n  }\n  _wallet_switchEthereumChain(params) {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      const request = params[0];\n      yield _this25.switchEthereumChain(parseInt(request.chainId, 16));\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: null\n      };\n    })();\n  }\n  _wallet_watchAsset(params) {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      const request = Array.isArray(params) ? params[0] : params;\n      if (!request.type) {\n        throw errors_1.standardErrors.rpc.invalidParams(\"Type is required\");\n      }\n      if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n        throw errors_1.standardErrors.rpc.invalidParams(\"Asset of type '\".concat(request.type, \"' is not supported\"));\n      }\n      if (!(request === null || request === void 0 ? void 0 : request.options)) {\n        throw errors_1.standardErrors.rpc.invalidParams(\"Options are required\");\n      }\n      if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n        throw errors_1.standardErrors.rpc.invalidParams(\"Address is required\");\n      }\n      const chainId = _this26.getChainId();\n      const {\n        address,\n        symbol,\n        image,\n        decimals\n      } = request.options;\n      const res = yield _this26.watchAsset(request.type, address, symbol, decimals, image, chainId);\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res\n      };\n    })();\n  }\n  _eth_uninstallFilter(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.uninstallFilter(filterId);\n  }\n  _eth_newFilter(params) {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      const param = params[0];\n      const filterId = yield _this27._filterPolyfill.newFilter(param);\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: filterId\n      };\n    })();\n  }\n  _eth_newBlockFilter() {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      const filterId = yield _this28._filterPolyfill.newBlockFilter();\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: filterId\n      };\n    })();\n  }\n  _eth_newPendingTransactionFilter() {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      const filterId = yield _this29._filterPolyfill.newPendingTransactionFilter();\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: filterId\n      };\n    })();\n  }\n  _eth_getFilterChanges(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterChanges(filterId);\n  }\n  _eth_getFilterLogs(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterLogs(filterId);\n  }\n  initializeRelay() {\n    if (this._relay) {\n      return Promise.resolve(this._relay);\n    }\n    return this._relayProvider().then(relay => {\n      relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n      relay.setChainCallback((chainId, jsonRpcUrl) => {\n        this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n      });\n      relay.setDappDefaultChainCallback(this._chainIdFromOpts);\n      this._relay = relay;\n      return relay;\n    });\n  }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["_asyncToGenerator","require","default","__importDefault","mod","__esModule","Object","defineProperty","exports","value","CoinbaseWalletProvider","safe_event_emitter_1","bn_js_1","DiagnosticLogger_1","errors_1","Session_1","WalletSDKRelayAbstract_1","Web3Method_1","Web3Response_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","constructor","options","_a","_b","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","setProviderInfo","bind","updateProviderInfo","getChainId","setAppInfo","enable","close","send","sendAsync","request","_setAddresses","scanQRCode","genericRequest","_chainIdFromOpts","chainId","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","diagnostic","diagnosticLogger","reloadOnDisconnect","isCoinbaseWallet","overrideIsCoinbaseWallet","isCoinbaseBrowser","overrideIsCoinbaseBrowser","qrUrl","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","_isAuthorized","initializeRelay","window","addEventListener","event","origin","location","source","action","_chainId","Number","selectedAddress","undefined","networkVersion","isWalletLink","isMetaMask","host","connected","isConnected","setItem","disableReloadOnDisconnect","originalChainId","chainChanged","ensureIntNumber","watchAsset","symbol","decimals","image","_this","relay","result","promise","addEthereumChain","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","_this2","isWhitelistedNetworkOrStandalone","inlineAddEthereumChain","requestEthereumAccounts","res","isApproved","switchEthereumChain","_this3","isErrorResponse","errorCode","standardErrorCodes","provider","unsupportedChain","standardErrors","custom","message","errorMessage","code","switchResponse","rpcUrl","length","appName","appLogoUrl","then","_this4","log","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","_this5","resetAndReload","requestOrMethod","callbackOrParams","_send","Promise","catch","error","serializeError","Array","isArray","jsonrpc","_sendRequestAsync","callback","_sendAsync","requests","r","_sendRequest","req","_this6","reject","_this7","Error","arrayCb","_sendMultipleRequestsAsync","responses","err","cb","response","args","_this8","_request","_this9","rpc","invalidRequest","newParams","makeRequestId","match","_this10","ensureRegExpString","Web3Method","_this11","generic","selectProvider","providerOptions","_this12","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","concat","_","newAddresses","JSON","stringify","join","resolve","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_this13","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","cbWallet_arbitrary","_cbwallet_arbitrary","wallet_addEthereumChain","_wallet_addEthereumChain","wallet_switchEthereumChain","_wallet_switchEthereumChain","wallet_watchAsset","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","addressStr","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBN","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage","addPrefix","typedDataJson","_this14","signEthereumMessage","userRejectedRequest","_ethereumAddressFromSignedMessage","signature","_this15","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","_this16","_this17","signEthereumTransaction","_this18","signedTransaction","submitEthereumTransaction","_this19","signAndSubmitEthereumTransaction","_this20","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","_this21","hashForSignTypedData_v3","_this22","hashForSignTypedData_v4","_this23","_this24","_c","_d","trim","invalidParams","chainIdNumber","success","_this25","_this26","filterId","ensureHexString","uninstallFilter","_this27","param","newFilter","_this28","newBlockFilter","_this29","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","isDisconnect","setChainCallback","setDappDefaultChainCallback"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst errors_1 = require(\"../errors\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst Web3Method_1 = require(\"../relay/Web3Method\");\nconst Web3Response_1 = require(\"../relay/Web3Response\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a, _b;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._chainIdFromOpts = options.chainId;\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this.reloadOnDisconnect = true;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this.qrUrl = options.qrUrl;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params,\n            });\n        });\n        if (this._isAuthorized()) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            // Used to verify the source and window are correct before proceeding\n            if (event.origin !== location.origin || event.source !== window) {\n                return;\n            }\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"dappChainSwitched\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n            }\n            if (event.data.data.action === \"addressChanged\") {\n                this._setAddresses([event.data.data.address]);\n            }\n        });\n    }\n    /** @deprecated Use `.request({ method: 'eth_accounts' })` instead. */\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    /** @deprecated Use the chain ID. If you still need the network ID, use `.request({ method: 'net_version' })`. */\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    /** @deprecated Use `.request({ method: 'eth_chainId' })` instead. */\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        // backward compatibility\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    disableReloadOnDisconnect() {\n        this.reloadOnDisconnect = false;\n    }\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (!this.isCoinbaseBrowser) {\n            this._chainIdFromOpts = chainId;\n            this._jsonRpcUrlFromOpts = jsonRpcUrl;\n        }\n        this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n    updateProviderInfo(jsonRpcUrl, chainId) {\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this.updateProviderInfo(rpcUrls[0], chainId);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n        // backward compatibility\n        if ((0, Web3Response_1.isErrorResponse)(res) && res.errorCode) {\n            if (res.errorCode === errors_1.standardErrorCodes.provider.unsupportedChain) {\n                throw errors_1.standardErrors.provider.unsupportedChain(chainId);\n            }\n            else {\n                throw errors_1.standardErrors.provider.custom({\n                    message: res.errorMessage,\n                    code: res.errorCode,\n                });\n            }\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    /** @deprecated Use `.request({ method: 'eth_requestAccounts' })` instead. */\n    async enable() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._isAuthorized()) {\n            return [...this._addresses];\n        }\n        return await this.send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    async close() {\n        const relay = await this.initializeRelay();\n        relay.resetAndReload();\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        try {\n            const result = this._send(requestOrMethod, callbackOrParams);\n            if (result instanceof Promise) {\n                return result.catch(error => {\n                    throw (0, errors_1.serializeError)(error, requestOrMethod);\n                });\n            }\n        }\n        catch (error) {\n            throw (0, errors_1.serializeError)(error, requestOrMethod);\n        }\n    }\n    _send(requestOrMethod, callbackOrParams) {\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params,\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    async sendAsync(request, callback) {\n        try {\n            return this._sendAsync(request, callback).catch(error => {\n                throw (0, errors_1.serializeError)(error, request);\n            });\n        }\n        catch (error) {\n            return Promise.reject((0, errors_1.serializeError)(error, request));\n        }\n    }\n    async _sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        return this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        try {\n            return this._request(args).catch(error => {\n                throw (0, errors_1.serializeError)(error, args.method);\n            });\n        }\n        catch (error) {\n            return Promise.reject((0, errors_1.serializeError)(error, args.method));\n        }\n    }\n    async _request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id,\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.scanQRCode);\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.generic);\n        }\n        return res.result;\n    }\n    async selectProvider(providerOptions) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.selectProvider(providerOptions).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.selectProvider);\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id,\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses, _) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result,\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null\n            ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas)\n            : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw errors_1.standardErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw errors_1.standardErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (!chainIdStr) {\n            return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n        }\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._isAuthorized()) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        if (!this.isCoinbaseBrowser) {\n            await this.switchEthereumChain(this.getChainId());\n        }\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    /** @deprecated */\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw errors_1.standardErrors.rpc.invalidParams(\"chainName is a required field\");\n        }\n        if (!request.nativeCurrency) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"nativeCurrency is a required field\");\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` },\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Type is required\");\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n            throw errors_1.standardErrors.rpc.invalidParams(`Asset of type '${request.type}' is not supported`);\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Options are required\");\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Address is required\");\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n            });\n            relay.setDappDefaultChainCallback(this._chainIdFromOpts);\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}