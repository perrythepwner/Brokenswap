{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoneType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NoneType extends basic_1.BasicType {\n  constructor() {\n    super(...arguments);\n    this.typeName = \"none\";\n    this.byteLength = 0;\n    this.itemsPerChunk = 32;\n    this.fixedSize = 0;\n    this.minSize = 0;\n    this.maxSize = 0;\n  }\n  defaultValue() {\n    return null;\n  }\n  // bytes serdes\n  value_serializeToBytes(output, offset, value) {\n    return offset;\n  }\n  value_deserializeFromBytes(data, start) {\n    return null;\n  }\n  tree_serializeToBytes(output, offset, node) {\n    return offset;\n  }\n  tree_deserializeFromBytes(data, start, end) {\n    return persistent_merkle_tree_1.zeroNode(0);\n  }\n  // Fast tree opts\n  tree_getFromNode(leafNode) {\n    return null;\n  }\n  tree_setToNode(leafNode, value) {\n    return;\n  }\n  tree_getFromPackedNode(leafNode, index) {\n    return null;\n  }\n  tree_setToPackedNode(leafNode, index, value) {\n    return;\n  }\n  // JSON\n  fromJson(json) {\n    if (json !== null) {\n      throw Error(\"JSON invalid type none must be null\");\n    }\n    return null;\n  }\n  toJson(value) {\n    return null;\n  }\n}\nexports.NoneType = NoneType;","map":{"version":3,"sources":["../../src/type/none.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,wBAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;AACA;AAEA,MAAa,QAAS,SAAQ,OAAA,CAAA,SAAe,CAAA;EAA7C,WAAA,CAAA,EAAA;;IACW,IAAA,CAAA,QAAQ,GAAG,MAAM;IACjB,IAAA,CAAA,UAAU,GAAG,CAAC;IACd,IAAA,CAAA,aAAa,GAAG,EAAE;IAClB,IAAA,CAAA,SAAS,GAAG,CAAC;IACb,IAAA,CAAA,OAAO,GAAG,CAAC;IACX,IAAA,CAAA,OAAO,GAAG,CAAC;EAsDtB;EApDE,YAAY,CAAA,EAAA;IACV,OAAO,IAAI;EACb;EAEA;EAEA,sBAAsB,CAAC,MAAiB,EAAE,MAAc,EAAE,KAAW,EAAA;IACnE,OAAO,MAAM;EACf;EAEA,0BAA0B,CAAC,IAAe,EAAE,KAAa,EAAA;IACvD,OAAO,IAAI;EACb;EAEA,qBAAqB,CAAC,MAAiB,EAAE,MAAc,EAAE,IAAU,EAAA;IACjE,OAAO,MAAM;EACf;EAEA,yBAAyB,CAAC,IAAe,EAAE,KAAa,EAAE,GAAW,EAAA;IACnE,OAAO,wBAAA,CAAA,QAAQ,CAAC,CAAC,CAAC;EACpB;EAEA;EAEA,gBAAgB,CAAC,QAAkB,EAAA;IACjC,OAAO,IAAI;EACb;EAEA,cAAc,CAAC,QAAkB,EAAE,KAAW,EAAA;IAC5C;EACF;EAEA,sBAAsB,CAAC,QAAkB,EAAE,KAAa,EAAA;IACtD,OAAO,IAAI;EACb;EAEA,oBAAoB,CAAC,QAAkB,EAAE,KAAa,EAAE,KAAW,EAAA;IACjE;EACF;EAEA;EAEA,QAAQ,CAAC,IAAa,EAAA;IACpB,IAAI,IAAI,KAAK,IAAI,EAAE;MACjB,MAAM,KAAK,CAAC,qCAAqC,CAAC;IACnD;IACD,OAAO,IAAI;EACb;EAEA,MAAM,CAAC,KAAW,EAAA;IAChB,OAAO,IAAI;EACb;AACD;AA5DD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoneType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NoneType extends basic_1.BasicType {\n    constructor() {\n        super(...arguments);\n        this.typeName = \"none\";\n        this.byteLength = 0;\n        this.itemsPerChunk = 32;\n        this.fixedSize = 0;\n        this.minSize = 0;\n        this.maxSize = 0;\n    }\n    defaultValue() {\n        return null;\n    }\n    // bytes serdes\n    value_serializeToBytes(output, offset, value) {\n        return offset;\n    }\n    value_deserializeFromBytes(data, start) {\n        return null;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        return offset;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return persistent_merkle_tree_1.zeroNode(0);\n    }\n    // Fast tree opts\n    tree_getFromNode(leafNode) {\n        return null;\n    }\n    tree_setToNode(leafNode, value) {\n        return;\n    }\n    tree_getFromPackedNode(leafNode, index) {\n        return null;\n    }\n    tree_setToPackedNode(leafNode, index, value) {\n        return;\n    }\n    // JSON\n    fromJson(json) {\n        if (json !== null) {\n            throw Error(\"JSON invalid type none must be null\");\n        }\n        return null;\n    }\n    toJson(value) {\n        return null;\n    }\n}\nexports.NoneType = NoneType;\n//# sourceMappingURL=none.js.map"]},"metadata":{},"sourceType":"script"}