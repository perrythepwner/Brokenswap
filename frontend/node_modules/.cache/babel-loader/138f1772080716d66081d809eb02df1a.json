{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\nfunction hash(a, b) {\n  input.set(a, 0);\n  input.set(b, 32);\n  return as_sha256_1.digest64(input);\n}\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\nfunction hashTwoObjects(a, b) {\n  return as_sha256_1.digest64HashObjects(a, b);\n}\nexports.hashTwoObjects = hashTwoObjects;\nfunction hashObjectToUint8Array(obj) {\n  const byteArr = new Uint8Array(32);\n  as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n  return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n  return as_sha256_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\nfunction isHashObject(hash) {\n  // @ts-ignore\n  return hash.length === undefined;\n}\nexports.isHashObject = isHashObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","isHashObject","uint8ArrayToHashObject","hashObjectToUint8Array","hashTwoObjects","hash","as_sha256_1","require","input","Uint8Array","a","b","set","digest64","digest64HashObjects","obj","byteArr","hashObjectToByteArray","byteArrayToHashObject","length","undefined"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@chainsafe/persistent-merkle-tree/lib/hash.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\nfunction hash(a, b) {\n    input.set(a, 0);\n    input.set(b, 32);\n    return as_sha256_1.digest64(input);\n}\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\nfunction hashTwoObjects(a, b) {\n    return as_sha256_1.digest64HashObjects(a, b);\n}\nexports.hashTwoObjects = hashTwoObjects;\nfunction hashObjectToUint8Array(obj) {\n    const byteArr = new Uint8Array(32);\n    as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n    return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n    return as_sha256_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\nfunction isHashObject(hash) {\n    // @ts-ignore\n    return hash.length === undefined;\n}\nexports.isHashObject = isHashObject;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,sBAAsB,GAAGH,OAAO,CAACI,sBAAsB,GAAGJ,OAAO,CAACK,cAAc,GAAGL,OAAO,CAACM,IAAI,GAAG,KAAK,CAAC;AACvI,MAAMC,WAAW,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AAChC;AACA;AACA;AACA,SAASJ,IAAIA,CAACK,CAAC,EAAEC,CAAC,EAAE;EAChBH,KAAK,CAACI,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC;EACfF,KAAK,CAACI,GAAG,CAACD,CAAC,EAAE,EAAE,CAAC;EAChB,OAAOL,WAAW,CAACO,QAAQ,CAACL,KAAK,CAAC;AACtC;AACAT,OAAO,CAACM,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA,SAASD,cAAcA,CAACM,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAOL,WAAW,CAACQ,mBAAmB,CAACJ,CAAC,EAAEC,CAAC,CAAC;AAChD;AACAZ,OAAO,CAACK,cAAc,GAAGA,cAAc;AACvC,SAASD,sBAAsBA,CAACY,GAAG,EAAE;EACjC,MAAMC,OAAO,GAAG,IAAIP,UAAU,CAAC,EAAE,CAAC;EAClCH,WAAW,CAACW,qBAAqB,CAACF,GAAG,EAAEC,OAAO,EAAE,CAAC,CAAC;EAClD,OAAOA,OAAO;AAClB;AACAjB,OAAO,CAACI,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,sBAAsBA,CAACc,OAAO,EAAE;EACrC,OAAOV,WAAW,CAACY,qBAAqB,CAACF,OAAO,CAAC;AACrD;AACAjB,OAAO,CAACG,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,YAAYA,CAACI,IAAI,EAAE;EACxB;EACA,OAAOA,IAAI,CAACc,MAAM,KAAKC,SAAS;AACpC;AACArB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}