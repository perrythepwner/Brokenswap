{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HeartBeat = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = require(\"events\");\nconst time_1 = require(\"@walletconnect/time\");\nconst types_1 = require(\"./types\");\nconst constants_1 = require(\"./constants\");\nclass HeartBeat extends types_1.IHeartBeat {\n  constructor(opts) {\n    super(opts);\n    this.events = new events_1.EventEmitter();\n    this.interval = constants_1.HEARTBEAT_INTERVAL;\n    this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;\n  }\n  static init(opts) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const heartbeat = new HeartBeat(opts);\n      yield heartbeat.init();\n      return heartbeat;\n    });\n  }\n  init() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      yield this.initialize();\n    });\n  }\n  stop() {\n    clearInterval(this.intervalRef);\n  }\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n  initialize() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));\n    });\n  }\n  pulse() {\n    this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);\n  }\n}\nexports.HeartBeat = HeartBeat;","map":{"version":3,"sources":["../../src/heartbeat.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA,MAAa,SAAU,SAAQ,OAAA,CAAA,UAAU,CAAA;EAYvC,WAAA,CAAY,IAAuB,EAAA;IACjC,KAAK,CAAC,IAAI,CAAC;IANN,IAAA,CAAA,MAAM,GAAG,IAAI,QAAA,CAAA,YAAY,CAAA,CAAE;IAE3B,IAAA,CAAA,QAAQ,GAAG,WAAA,CAAA,kBAAkB;IAKlC,IAAI,CAAC,QAAQ,GAAG,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,QAAQ,KAAI,WAAA,CAAA,kBAAkB;EACtD;EAdA,OAAa,IAAI,CAAC,IAAuB,EAAA;;MACvC,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC;MACrC,MAAM,SAAS,CAAC,IAAI,CAAA,CAAE;MACtB,OAAO,SAAS;IAClB,CAAC,CAAA;EAAA;EAYY,IAAI,CAAA,EAAA;;MACf,MAAM,IAAI,CAAC,UAAU,CAAA,CAAE;IACzB,CAAC,CAAA;EAAA;EAEM,IAAI,CAAA,EAAA;IACT,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;EACjC;EAEO,EAAE,CAAC,KAAa,EAAE,QAAa,EAAA;IACpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;EACjC;EAEO,IAAI,CAAC,KAAa,EAAE,QAAa,EAAA;IACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;EACnC;EAEO,GAAG,CAAC,KAAa,EAAE,QAAa,EAAA;IACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;EAClC;EAEO,cAAc,CAAC,KAAa,EAAE,QAAa,EAAA;IAChD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC;EAC7C;EAIc,UAAU,CAAA,EAAA;;MACtB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,IAAI,CAAC,KAAK,CAAA,CAAE,EAAE,MAAA,CAAA,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC,CAAA;EAAA;EAEO,KAAK,CAAA,EAAA;IACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAA,CAAA,gBAAgB,CAAC,KAAK,CAAC;EAC1C;AACD;AAlDD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeartBeat = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = require(\"events\");\nconst time_1 = require(\"@walletconnect/time\");\nconst types_1 = require(\"./types\");\nconst constants_1 = require(\"./constants\");\nclass HeartBeat extends types_1.IHeartBeat {\n    constructor(opts) {\n        super(opts);\n        this.events = new events_1.EventEmitter();\n        this.interval = constants_1.HEARTBEAT_INTERVAL;\n        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;\n    }\n    static init(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const heartbeat = new HeartBeat(opts);\n            yield heartbeat.init();\n            return heartbeat;\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            yield this.initialize();\n        });\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    initialize() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));\n        });\n    }\n    pulse() {\n        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);\n    }\n}\nexports.HeartBeat = HeartBeat;\n//# sourceMappingURL=heartbeat.js.map"]},"metadata":{},"sourceType":"script"}