{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WrapperCache = void 0;\nvar base_1 = require(\"./base\");\nvar celo_tokens_1 = require(\"./celo-tokens\");\nvar Accounts_1 = require(\"./wrappers/Accounts\");\nvar Attestations_1 = require(\"./wrappers/Attestations\");\nvar BlockchainParameters_1 = require(\"./wrappers/BlockchainParameters\");\nvar DoubleSigningSlasher_1 = require(\"./wrappers/DoubleSigningSlasher\");\nvar DowntimeSlasher_1 = require(\"./wrappers/DowntimeSlasher\");\nvar Election_1 = require(\"./wrappers/Election\");\nvar EpochRewards_1 = require(\"./wrappers/EpochRewards\");\nvar Erc20Wrapper_1 = require(\"./wrappers/Erc20Wrapper\");\nvar Escrow_1 = require(\"./wrappers/Escrow\");\nvar Exchange_1 = require(\"./wrappers/Exchange\");\nvar FederatedAttestations_1 = require(\"./wrappers/FederatedAttestations\");\nvar Freezer_1 = require(\"./wrappers/Freezer\");\nvar GasPriceMinimum_1 = require(\"./wrappers/GasPriceMinimum\");\nvar GoldTokenWrapper_1 = require(\"./wrappers/GoldTokenWrapper\");\nvar Governance_1 = require(\"./wrappers/Governance\");\nvar GrandaMento_1 = require(\"./wrappers/GrandaMento\");\nvar LockedGold_1 = require(\"./wrappers/LockedGold\");\nvar MetaTransactionWallet_1 = require(\"./wrappers/MetaTransactionWallet\");\nvar MetaTransactionWalletDeployer_1 = require(\"./wrappers/MetaTransactionWalletDeployer\");\nvar MultiSig_1 = require(\"./wrappers/MultiSig\");\nvar OdisPayments_1 = require(\"./wrappers/OdisPayments\");\nvar Reserve_1 = require(\"./wrappers/Reserve\");\nvar SortedOracles_1 = require(\"./wrappers/SortedOracles\");\nvar StableTokenWrapper_1 = require(\"./wrappers/StableTokenWrapper\");\nvar Validators_1 = require(\"./wrappers/Validators\");\nvar WrapperFactories = (_a = {}, _a[base_1.CeloContract.Accounts] = Accounts_1.AccountsWrapper, _a[base_1.CeloContract.BlockchainParameters] = BlockchainParameters_1.BlockchainParametersWrapper, _a[base_1.CeloContract.EpochRewards] = EpochRewards_1.EpochRewardsWrapper, _a[base_1.CeloContract.ERC20] = Erc20Wrapper_1.Erc20Wrapper, _a[base_1.CeloContract.Escrow] = Escrow_1.EscrowWrapper, _a[base_1.CeloContract.Exchange] = Exchange_1.ExchangeWrapper, _a[base_1.CeloContract.ExchangeEUR] = Exchange_1.ExchangeWrapper, _a[base_1.CeloContract.ExchangeBRL] = Exchange_1.ExchangeWrapper, _a[base_1.CeloContract.FederatedAttestations] = FederatedAttestations_1.FederatedAttestationsWrapper,\n// [CeloContract.FeeCurrencyWhitelist]: FeeCurrencyWhitelistWrapper,\n_a[base_1.CeloContract.Freezer] = Freezer_1.FreezerWrapper, _a[base_1.CeloContract.GasPriceMinimum] = GasPriceMinimum_1.GasPriceMinimumWrapper, _a[base_1.CeloContract.GoldToken] = GoldTokenWrapper_1.GoldTokenWrapper, _a[base_1.CeloContract.GrandaMento] = GrandaMento_1.GrandaMentoWrapper,\n// [CeloContract.Random]: RandomWrapper,\n// [CeloContract.Registry]: RegistryWrapper,\n_a[base_1.CeloContract.MetaTransactionWallet] = MetaTransactionWallet_1.MetaTransactionWalletWrapper, _a[base_1.CeloContract.MetaTransactionWalletDeployer] = MetaTransactionWalletDeployer_1.MetaTransactionWalletDeployerWrapper, _a[base_1.CeloContract.MultiSig] = MultiSig_1.MultiSigWrapper, _a[base_1.CeloContract.OdisPayments] = OdisPayments_1.OdisPaymentsWrapper, _a[base_1.CeloContract.Reserve] = Reserve_1.ReserveWrapper, _a[base_1.CeloContract.StableToken] = StableTokenWrapper_1.StableTokenWrapper, _a[base_1.CeloContract.StableTokenEUR] = StableTokenWrapper_1.StableTokenWrapper, _a[base_1.CeloContract.StableTokenBRL] = StableTokenWrapper_1.StableTokenWrapper, _a);\nvar WithRegistry = (_b = {}, _b[base_1.CeloContract.SortedOracles] = SortedOracles_1.SortedOraclesWrapper, _b);\nvar WrapperFactoriesWhichNeedCache = (_c = {}, _c[base_1.CeloContract.Attestations] = Attestations_1.AttestationsWrapper, _c[base_1.CeloContract.DoubleSigningSlasher] = DoubleSigningSlasher_1.DoubleSigningSlasherWrapper, _c[base_1.CeloContract.DowntimeSlasher] = DowntimeSlasher_1.DowntimeSlasherWrapper, _c[base_1.CeloContract.Election] = Election_1.ElectionWrapper, _c[base_1.CeloContract.Governance] = Governance_1.GovernanceWrapper, _c[base_1.CeloContract.LockedGold] = LockedGold_1.LockedGoldWrapper, _c[base_1.CeloContract.Validators] = Validators_1.ValidatorsWrapper, _c);\nvar contractsWhichRequireCache = new Set(Object.keys(WrapperFactoriesWhichNeedCache));\n/**\n * Kit ContractWrappers factory & cache.\n *\n * Provides access to all contract wrappers for celo core contracts\n *\n * @remarks\n *\n * Because it provides access to all contract wrappers it must load all wrappers and the contract ABIs for them\n * Consider Using {@link MiniWrapperCache}, building your own, or if you only need one Wrapper using it directly\n */\nvar WrapperCache = /** @class */function () {\n  function WrapperCache(connection, _web3Contracts, registry) {\n    this.connection = connection;\n    this._web3Contracts = _web3Contracts;\n    this.registry = registry;\n    this.wrapperCache = {};\n  }\n  WrapperCache.prototype.getAccounts = function () {\n    return this.getContract(base_1.CeloContract.Accounts);\n  };\n  WrapperCache.prototype.getAttestations = function () {\n    return this.getContract(base_1.CeloContract.Attestations);\n  };\n  WrapperCache.prototype.getBlockchainParameters = function () {\n    return this.getContract(base_1.CeloContract.BlockchainParameters);\n  };\n  WrapperCache.prototype.getDoubleSigningSlasher = function () {\n    return this.getContract(base_1.CeloContract.DoubleSigningSlasher);\n  };\n  WrapperCache.prototype.getDowntimeSlasher = function () {\n    return this.getContract(base_1.CeloContract.DowntimeSlasher);\n  };\n  WrapperCache.prototype.getElection = function () {\n    return this.getContract(base_1.CeloContract.Election);\n  };\n  WrapperCache.prototype.getEpochRewards = function () {\n    return this.getContract(base_1.CeloContract.EpochRewards);\n  };\n  WrapperCache.prototype.getErc20 = function (address) {\n    return this.getContract(base_1.CeloContract.ERC20, address);\n  };\n  WrapperCache.prototype.getEscrow = function () {\n    return this.getContract(base_1.CeloContract.Escrow);\n  };\n  WrapperCache.prototype.getExchange = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = celo_tokens_1.StableToken.cUSD;\n    }\n    return this.getContract(celo_tokens_1.stableTokenInfos[stableToken].exchangeContract);\n  };\n  WrapperCache.prototype.getFreezer = function () {\n    return this.getContract(base_1.CeloContract.Freezer);\n  };\n  WrapperCache.prototype.getFederatedAttestations = function () {\n    return this.getContract(base_1.CeloContract.FederatedAttestations);\n  };\n  WrapperCache.prototype.getGasPriceMinimum = function () {\n    return this.getContract(base_1.CeloContract.GasPriceMinimum);\n  };\n  WrapperCache.prototype.getGoldToken = function () {\n    return this.getContract(base_1.CeloContract.GoldToken);\n  };\n  WrapperCache.prototype.getGovernance = function () {\n    return this.getContract(base_1.CeloContract.Governance);\n  };\n  WrapperCache.prototype.getGrandaMento = function () {\n    return this.getContract(base_1.CeloContract.GrandaMento);\n  };\n  WrapperCache.prototype.getLockedGold = function () {\n    return this.getContract(base_1.CeloContract.LockedGold);\n  };\n  WrapperCache.prototype.getMetaTransactionWallet = function (address) {\n    return this.getContract(base_1.CeloContract.MetaTransactionWallet, address);\n  };\n  WrapperCache.prototype.getMetaTransactionWalletDeployer = function (address) {\n    return this.getContract(base_1.CeloContract.MetaTransactionWalletDeployer, address);\n  };\n  WrapperCache.prototype.getMultiSig = function (address) {\n    return this.getContract(base_1.CeloContract.MultiSig, address);\n  };\n  WrapperCache.prototype.getOdisPayments = function () {\n    return this.getContract(base_1.CeloContract.OdisPayments);\n  };\n  WrapperCache.prototype.getReserve = function () {\n    return this.getContract(base_1.CeloContract.Reserve);\n  };\n  WrapperCache.prototype.getSortedOracles = function () {\n    return this.getContract(base_1.CeloContract.SortedOracles);\n  };\n  WrapperCache.prototype.getStableToken = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = celo_tokens_1.StableToken.cUSD;\n    }\n    return this.getContract(celo_tokens_1.stableTokenInfos[stableToken].contract);\n  };\n  WrapperCache.prototype.getValidators = function () {\n    return this.getContract(base_1.CeloContract.Validators);\n  };\n  /**\n   * Get Contract wrapper\n   */\n  WrapperCache.prototype.getContract = function (contract, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var instance, Klass, contractName, Klass, wrapper, simpleContractName, Klass;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.wrapperCache[contract] == null || address !== undefined)) return [3 /*break*/, 2];\n            return [4 /*yield*/, this._web3Contracts.getContract(contract, address)];\n          case 1:\n            instance = _a.sent();\n            if (contract === base_1.CeloContract.SortedOracles) {\n              Klass = WithRegistry[base_1.CeloContract.SortedOracles];\n              this.wrapperCache[base_1.CeloContract.SortedOracles] = new Klass(this.connection, instance, this.registry);\n            } else if (contractsWhichRequireCache.has(contract)) {\n              contractName = contract;\n              Klass = WrapperFactoriesWhichNeedCache[contractName];\n              wrapper = new Klass(this.connection, instance, this);\n              this.wrapperCache[contractName] = wrapper;\n            } else {\n              simpleContractName = contract;\n              Klass = WrapperFactories[simpleContractName];\n              this.wrapperCache[simpleContractName] = new Klass(this.connection, instance);\n            }\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, this.wrapperCache[contract]];\n        }\n      });\n    });\n  };\n  WrapperCache.prototype.invalidateContract = function (contract) {\n    this._web3Contracts.invalidateContract(contract);\n    this.wrapperCache[contract] = undefined;\n  };\n  return WrapperCache;\n}();\nexports.WrapperCache = WrapperCache;","map":null,"metadata":{},"sourceType":"script"}