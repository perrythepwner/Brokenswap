{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_NETWORKS = exports.getProviderForWallet = exports.STATIC_NETWORK_WALLETS = exports.Localhost = exports.Mainnet = exports.Cannoli = exports.Baklava = exports.Alfajores = exports.NetworkNames = exports.PROVIDERS = exports.WalletIds = exports.Platform = exports.Priorities = exports.WalletTypes = exports.SupportedProviders = exports.localStorageKeys = void 0;\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst Icons = __importStar(require(\"./components/icons\"));\nconst types_1 = require(\"./types\");\nconst ethereum_1 = require(\"./utils/ethereum\");\nvar localStorageKeys;\n(function (localStorageKeys) {\n  localStorageKeys[\"lastUsedAddress\"] = \"react-celo/last-used-address\";\n  localStorageKeys[\"lastUsedNetwork\"] = \"react-celo/last-used-network\";\n  localStorageKeys[\"lastUsedWalletType\"] = \"react-celo/last-used-wallet\";\n  localStorageKeys[\"lastUsedWalletId\"] = \"react-celo/last-used-wallet-id\";\n  localStorageKeys[\"lastUsedWallets\"] = \"react-celo/last-used-wallets\";\n  localStorageKeys[\"lastUsedIndex\"] = \"react-celo/last-used-index\";\n  localStorageKeys[\"lastUsedPrivateKey\"] = \"react-celo/last-used-private-key\";\n  localStorageKeys[\"lastUsedFeeCurrency\"] = \"react-celo/last-used-fee-currency\";\n})(localStorageKeys = exports.localStorageKeys || (exports.localStorageKeys = {}));\nvar SupportedProviders;\n(function (SupportedProviders) {\n  SupportedProviders[\"CeloExtensionWallet\"] = \"Celo Extension Wallet\";\n  SupportedProviders[\"CeloTerminal\"] = \"Celo Terminal\";\n  SupportedProviders[\"CeloWallet\"] = \"Celo Wallet\";\n  SupportedProviders[\"CeloDance\"] = \"CeloDance\";\n  SupportedProviders[\"Injected\"] = \"Injected\";\n  SupportedProviders[\"Ledger\"] = \"Ledger\";\n  SupportedProviders[\"MetaMask\"] = \"MetaMask\";\n  SupportedProviders[\"PrivateKey\"] = \"Private key\";\n  SupportedProviders[\"Valora\"] = \"Valora\";\n  SupportedProviders[\"WalletConnect\"] = \"WalletConnect\";\n  // backwards compatibility\n  SupportedProviders[\"Steakwallet\"] = \"Omni\";\n  SupportedProviders[\"Omni\"] = \"Omni\";\n  SupportedProviders[\"CoinbaseWallet\"] = \"Coinbase Wallet\";\n})(SupportedProviders = exports.SupportedProviders || (exports.SupportedProviders = {}));\nvar WalletTypes;\n(function (WalletTypes) {\n  WalletTypes[\"Valora\"] = \"Valora\";\n  WalletTypes[\"MetaMask\"] = \"MetaMask\";\n  WalletTypes[\"WalletConnect\"] = \"WalletConnect\";\n  WalletTypes[\"CeloDance\"] = \"CeloDance\";\n  WalletTypes[\"CeloWallet\"] = \"CeloWallet\";\n  WalletTypes[\"CeloTerminal\"] = \"CeloTerminal\";\n  WalletTypes[\"CeloExtensionWallet\"] = \"CeloExtensionWallet\";\n  WalletTypes[\"Ledger\"] = \"Ledger\";\n  WalletTypes[\"Injected\"] = \"Injected\";\n  WalletTypes[\"PrivateKey\"] = \"PrivateKey\";\n  WalletTypes[\"Unauthenticated\"] = \"Unauthenticated\";\n  WalletTypes[\"CoinbaseWallet\"] = \"CoinbaseWallet\";\n})(WalletTypes = exports.WalletTypes || (exports.WalletTypes = {}));\nvar Priorities;\n(function (Priorities) {\n  Priorities[Priorities[\"Default\"] = 0] = \"Default\";\n  Priorities[Priorities[\"Popular\"] = 1] = \"Popular\";\n  Priorities[Priorities[\"Recent\"] = 2] = \"Recent\";\n})(Priorities = exports.Priorities || (exports.Priorities = {}));\nvar Platform;\n(function (Platform) {\n  Platform[\"Mobile\"] = \"Mobile\";\n  Platform[\"Desktop\"] = \"Desktop\";\n  Platform[\"Web\"] = \"Web\";\n})(Platform = exports.Platform || (exports.Platform = {}));\nexports.WalletIds = {\n  WalletConnect: '_',\n  Valora: 'd01c7758d741b363e637a817a09bcf579feae4db9f5bb16f599fdd1f66e2f974',\n  CeloWallet: '36d854b702817e228d5c853c528d7bdb46f4bb041d255f67b82eb47111e5676b',\n  CeloDance: 'TODO',\n  CeloTerminal: '8f8506b7f191a8ab95a8295fc8ca147aa152b1358bee4283d6ad2468d97e0ca4',\n  Omni: 'afbd95522f4041c71dd4f1a065f971fd32372865b416f95a0b1db759ae33f2a7'\n};\nexports.PROVIDERS = {\n  [SupportedProviders.Valora]: {\n    name: SupportedProviders.Valora,\n    type: WalletTypes.WalletConnect,\n    description: 'Connect to Valora, a mobile payments app that works worldwide',\n    icon: Icons.Valora,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Popular,\n    installURL: 'https://valoraapp.com/',\n    walletConnectId: exports.WalletIds.Valora,\n    supportedPlatforms: [Platform.Mobile],\n    getLink: function getLink(uri) {\n      let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Platform.Mobile;\n      switch (platform) {\n        case Platform.Mobile:\n          return \"celo://wallet/wc?uri=\".concat(uri);\n        default:\n          return false;\n      }\n    }\n  },\n  [SupportedProviders.WalletConnect]: {\n    name: SupportedProviders.WalletConnect,\n    type: WalletTypes.WalletConnect,\n    description: 'Scan a QR code to connect your wallet',\n    icon: Icons.WalletConnect,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Default,\n    supportedPlatforms: [Platform.Mobile]\n  },\n  [SupportedProviders.Ledger]: {\n    name: SupportedProviders.Ledger,\n    type: WalletTypes.Ledger,\n    description: 'Sync with your Ledger hardware wallet',\n    icon: Icons.Ledger,\n    canConnect: () => true,\n    showInList: () => !react_device_detect_1.isMobile,\n    listPriority: () => Priorities.Popular\n  },\n  [SupportedProviders.CeloWallet]: {\n    name: SupportedProviders.CeloWallet,\n    type: WalletTypes.WalletConnect,\n    description: 'Connect to Celo Wallet for web or desktop',\n    icon: Icons.Celo,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Default,\n    walletConnectId: exports.WalletIds.CeloWallet,\n    installURL: 'https://celowallet.app/',\n    supportedPlatforms: [Platform.Desktop, Platform.Web],\n    getLink: function getLink(uri) {\n      let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Platform.Mobile;\n      switch (platform) {\n        case Platform.Desktop:\n          return \"celowallet://wc?uri=\".concat(encodeURIComponent(uri));\n        case Platform.Web:\n          return \"https://celowallet.app/wc?uri=\".concat(encodeURIComponent(uri));\n        default:\n          return false;\n      }\n    }\n  },\n  [SupportedProviders.CeloTerminal]: {\n    name: SupportedProviders.CeloTerminal,\n    type: WalletTypes.WalletConnect,\n    description: 'Connect to the Celo Terminal desktop app',\n    icon: Icons.CeloTerminal,\n    canConnect: () => true,\n    showInList: () => !react_device_detect_1.isMobile,\n    listPriority: () => Priorities.Default,\n    installURL: 'https://celoterminal.com/',\n    walletConnectId: exports.WalletIds.CeloTerminal,\n    supportedPlatforms: []\n  },\n  [SupportedProviders.MetaMask]: {\n    name: SupportedProviders.MetaMask,\n    type: WalletTypes.MetaMask,\n    description: react_device_detect_1.isMobile ? (0, ethereum_1.isEthereumFromMetamask)() ? 'Connect with MetaMask Mobile App' : 'Open MetaMask Mobile App' : 'Use the Metamask browser extension. Celo support is limited.',\n    icon: Icons.MetaMask,\n    canConnect: () => react_device_detect_1.isMobile || (0, ethereum_1.isEthereumFromMetamask)(),\n    showInList: () => true,\n    listPriority: () => Priorities.Popular,\n    installURL: react_device_detect_1.isMobile ? 'https://metamask.app.link/dapp/' + window.location.href.replace(/^https?:\\/\\//, '') : 'https://metamask.app.link/'\n  },\n  [SupportedProviders.CeloExtensionWallet]: {\n    name: SupportedProviders.CeloExtensionWallet,\n    type: WalletTypes.CeloExtensionWallet,\n    description: 'Use a wallet from the the Celo chrome extension',\n    icon: Icons.ChromeExtensionStore,\n    canConnect: () => !!window.celo,\n    showInList: () => !react_device_detect_1.isMobile,\n    listPriority: () => Priorities.Default,\n    installURL: 'https://chrome.google.com/webstore/detail/celoextensionwallet/kkilomkmpmkbdnfelcpgckmpcaemjcdh/related'\n  },\n  [SupportedProviders.Injected]: {\n    name: SupportedProviders.Injected,\n    type: WalletTypes.Injected,\n    description: 'Connect any Ethereum wallet to Celo',\n    icon: Icons.Ethereum,\n    canConnect: () => (0, ethereum_1.isEthereumPresent)(),\n    showInList: () => (0, ethereum_1.isEthereumFromMetamask)(),\n    listPriority: () => Priorities.Default\n  },\n  [SupportedProviders.PrivateKey]: {\n    name: SupportedProviders.PrivateKey,\n    type: WalletTypes.PrivateKey,\n    description: 'Enter a plaintext private key to load your account (testing only)',\n    icon: Icons.PrivateKey,\n    canConnect: () => true,\n    showInList: () => process.env.NODE_ENV !== 'production',\n    listPriority: () => Priorities.Default\n  },\n  [SupportedProviders.CeloDance]: {\n    name: SupportedProviders.CeloDance,\n    type: WalletTypes.WalletConnect,\n    description: 'Send, vote, and earn rewards within one wallet',\n    icon: Icons.CeloDance,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Default,\n    installURL: 'https://celo.dance/',\n    walletConnectId: exports.WalletIds.CeloDance,\n    supportedPlatforms: [Platform.Mobile],\n    getLink: function getLink(uri) {\n      let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Platform.Mobile;\n      switch (platform) {\n        case Platform.Mobile:\n          return \"celo://wallet/wc?uri=\".concat(uri);\n        default:\n          return false;\n      }\n    }\n  },\n  [SupportedProviders.Omni]: {\n    name: SupportedProviders.Omni,\n    description: 'Scan a QR code to connect your wallet',\n    type: WalletTypes.WalletConnect,\n    icon: Icons.Omni,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Default,\n    installURL: 'https://omniwallet.app.link',\n    walletConnectId: exports.WalletIds.Omni,\n    supportedPlatforms: [Platform.Mobile],\n    getLink: function getLink(uri) {\n      let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Platform.Mobile;\n      switch (platform) {\n        case Platform.Mobile:\n          return \"omni://wc?uri=\".concat(uri);\n        default:\n          return false;\n      }\n    }\n  },\n  [SupportedProviders.CoinbaseWallet]: {\n    name: SupportedProviders.CoinbaseWallet,\n    type: WalletTypes.CoinbaseWallet,\n    description: 'Scan a QR code to connect your wallet',\n    icon: Icons.CoinbaseWallet,\n    canConnect: () => true,\n    showInList: () => true,\n    listPriority: () => Priorities.Default\n  }\n};\n// If adding another chain be sure to add it to the ChainId enum\n// and to requiredNamespaces in packages/walletconnect/src/wc-wallet.ts\nexports.NetworkNames = {\n  Alfajores: 'Alfajores',\n  Baklava: 'Baklava',\n  Mainnet: 'Mainnet',\n  Cannoli: 'Cannoli',\n  Localhost: 'Localhost'\n};\nexports.Alfajores = {\n  name: exports.NetworkNames.Alfajores,\n  rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n  graphQl: 'https://explorer.celo.org/alfajores/graphiql',\n  explorer: 'https://explorer.celo.org/alfajores',\n  chainId: types_1.ChainId.Alfajores\n};\nexports.Baklava = {\n  name: exports.NetworkNames.Baklava,\n  rpcUrl: 'https://baklava-forno.celo-testnet.org',\n  graphQl: 'https://explorer.celo.org/baklava/graphiql',\n  explorer: 'https://explorer.celo.org/baklava',\n  chainId: types_1.ChainId.Baklava\n};\nexports.Cannoli = {\n  name: exports.NetworkNames.Cannoli,\n  rpcUrl: 'https://forno.cannoli.celo-testnet.org',\n  graphQl: 'https://explorer.celo.org/cannoli/graphiql',\n  explorer: 'https://explorer.celo.org/cannoli',\n  chainId: types_1.ChainId.Cannoli\n};\nexports.Mainnet = {\n  name: exports.NetworkNames.Mainnet,\n  rpcUrl: 'https://forno.celo.org',\n  graphQl: 'https://explorer.celo.org/mainnet/graphiql',\n  explorer: 'https://explorer.celo.org/mainnet',\n  chainId: types_1.ChainId.Mainnet\n};\nexports.Localhost = {\n  name: exports.NetworkNames.Localhost,\n  rpcUrl: 'http://localhost:8545',\n  graphQl: '',\n  explorer: '',\n  chainId: 1337\n};\n/**\n * These wallets cannot have their networks\n * updated via react-celo\n */\nexports.STATIC_NETWORK_WALLETS = [WalletTypes['CeloExtensionWallet']];\n/**\n * Gets the provider associated with a wallet type.\n * @param wallet\n * @returns\n */\nconst getProviderForWallet = wallet => wallet === WalletTypes.Unauthenticated ? null : SupportedProviders[wallet];\nexports.getProviderForWallet = getProviderForWallet;\n/**\n * Default networks to connect to.\n */\nexports.DEFAULT_NETWORKS = [exports.Mainnet, exports.Alfajores, exports.Baklava, exports.Cannoli, ...(process.env.NODE_ENV !== 'production' ? [exports.Localhost] : [])];","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","DEFAULT_NETWORKS","getProviderForWallet","STATIC_NETWORK_WALLETS","Localhost","Mainnet","Cannoli","Baklava","Alfajores","NetworkNames","PROVIDERS","WalletIds","Platform","Priorities","WalletTypes","SupportedProviders","localStorageKeys","react_device_detect_1","require","Icons","types_1","ethereum_1","WalletConnect","Valora","CeloWallet","CeloDance","CeloTerminal","Omni","name","type","description","icon","canConnect","showInList","listPriority","Popular","installURL","walletConnectId","supportedPlatforms","Mobile","getLink","uri","platform","arguments","length","concat","Default","Ledger","isMobile","Celo","Desktop","Web","encodeURIComponent","MetaMask","isEthereumFromMetamask","window","location","href","replace","CeloExtensionWallet","ChromeExtensionStore","celo","Injected","Ethereum","isEthereumPresent","PrivateKey","process","env","NODE_ENV","CoinbaseWallet","rpcUrl","graphQl","explorer","chainId","ChainId","wallet","Unauthenticated"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@celo/react-celo/lib/constants.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_NETWORKS = exports.getProviderForWallet = exports.STATIC_NETWORK_WALLETS = exports.Localhost = exports.Mainnet = exports.Cannoli = exports.Baklava = exports.Alfajores = exports.NetworkNames = exports.PROVIDERS = exports.WalletIds = exports.Platform = exports.Priorities = exports.WalletTypes = exports.SupportedProviders = exports.localStorageKeys = void 0;\nconst react_device_detect_1 = require(\"react-device-detect\");\nconst Icons = __importStar(require(\"./components/icons\"));\nconst types_1 = require(\"./types\");\nconst ethereum_1 = require(\"./utils/ethereum\");\nvar localStorageKeys;\n(function (localStorageKeys) {\n    localStorageKeys[\"lastUsedAddress\"] = \"react-celo/last-used-address\";\n    localStorageKeys[\"lastUsedNetwork\"] = \"react-celo/last-used-network\";\n    localStorageKeys[\"lastUsedWalletType\"] = \"react-celo/last-used-wallet\";\n    localStorageKeys[\"lastUsedWalletId\"] = \"react-celo/last-used-wallet-id\";\n    localStorageKeys[\"lastUsedWallets\"] = \"react-celo/last-used-wallets\";\n    localStorageKeys[\"lastUsedIndex\"] = \"react-celo/last-used-index\";\n    localStorageKeys[\"lastUsedPrivateKey\"] = \"react-celo/last-used-private-key\";\n    localStorageKeys[\"lastUsedFeeCurrency\"] = \"react-celo/last-used-fee-currency\";\n})(localStorageKeys = exports.localStorageKeys || (exports.localStorageKeys = {}));\nvar SupportedProviders;\n(function (SupportedProviders) {\n    SupportedProviders[\"CeloExtensionWallet\"] = \"Celo Extension Wallet\";\n    SupportedProviders[\"CeloTerminal\"] = \"Celo Terminal\";\n    SupportedProviders[\"CeloWallet\"] = \"Celo Wallet\";\n    SupportedProviders[\"CeloDance\"] = \"CeloDance\";\n    SupportedProviders[\"Injected\"] = \"Injected\";\n    SupportedProviders[\"Ledger\"] = \"Ledger\";\n    SupportedProviders[\"MetaMask\"] = \"MetaMask\";\n    SupportedProviders[\"PrivateKey\"] = \"Private key\";\n    SupportedProviders[\"Valora\"] = \"Valora\";\n    SupportedProviders[\"WalletConnect\"] = \"WalletConnect\";\n    // backwards compatibility\n    SupportedProviders[\"Steakwallet\"] = \"Omni\";\n    SupportedProviders[\"Omni\"] = \"Omni\";\n    SupportedProviders[\"CoinbaseWallet\"] = \"Coinbase Wallet\";\n})(SupportedProviders = exports.SupportedProviders || (exports.SupportedProviders = {}));\nvar WalletTypes;\n(function (WalletTypes) {\n    WalletTypes[\"Valora\"] = \"Valora\";\n    WalletTypes[\"MetaMask\"] = \"MetaMask\";\n    WalletTypes[\"WalletConnect\"] = \"WalletConnect\";\n    WalletTypes[\"CeloDance\"] = \"CeloDance\";\n    WalletTypes[\"CeloWallet\"] = \"CeloWallet\";\n    WalletTypes[\"CeloTerminal\"] = \"CeloTerminal\";\n    WalletTypes[\"CeloExtensionWallet\"] = \"CeloExtensionWallet\";\n    WalletTypes[\"Ledger\"] = \"Ledger\";\n    WalletTypes[\"Injected\"] = \"Injected\";\n    WalletTypes[\"PrivateKey\"] = \"PrivateKey\";\n    WalletTypes[\"Unauthenticated\"] = \"Unauthenticated\";\n    WalletTypes[\"CoinbaseWallet\"] = \"CoinbaseWallet\";\n})(WalletTypes = exports.WalletTypes || (exports.WalletTypes = {}));\nvar Priorities;\n(function (Priorities) {\n    Priorities[Priorities[\"Default\"] = 0] = \"Default\";\n    Priorities[Priorities[\"Popular\"] = 1] = \"Popular\";\n    Priorities[Priorities[\"Recent\"] = 2] = \"Recent\";\n})(Priorities = exports.Priorities || (exports.Priorities = {}));\nvar Platform;\n(function (Platform) {\n    Platform[\"Mobile\"] = \"Mobile\";\n    Platform[\"Desktop\"] = \"Desktop\";\n    Platform[\"Web\"] = \"Web\";\n})(Platform = exports.Platform || (exports.Platform = {}));\nexports.WalletIds = {\n    WalletConnect: '_',\n    Valora: 'd01c7758d741b363e637a817a09bcf579feae4db9f5bb16f599fdd1f66e2f974',\n    CeloWallet: '36d854b702817e228d5c853c528d7bdb46f4bb041d255f67b82eb47111e5676b',\n    CeloDance: 'TODO',\n    CeloTerminal: '8f8506b7f191a8ab95a8295fc8ca147aa152b1358bee4283d6ad2468d97e0ca4',\n    Omni: 'afbd95522f4041c71dd4f1a065f971fd32372865b416f95a0b1db759ae33f2a7',\n};\nexports.PROVIDERS = {\n    [SupportedProviders.Valora]: {\n        name: SupportedProviders.Valora,\n        type: WalletTypes.WalletConnect,\n        description: 'Connect to Valora, a mobile payments app that works worldwide',\n        icon: Icons.Valora,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Popular,\n        installURL: 'https://valoraapp.com/',\n        walletConnectId: exports.WalletIds.Valora,\n        supportedPlatforms: [Platform.Mobile],\n        getLink: (uri, platform = Platform.Mobile) => {\n            switch (platform) {\n                case Platform.Mobile:\n                    return `celo://wallet/wc?uri=${uri}`;\n                default:\n                    return false;\n            }\n        },\n    },\n    [SupportedProviders.WalletConnect]: {\n        name: SupportedProviders.WalletConnect,\n        type: WalletTypes.WalletConnect,\n        description: 'Scan a QR code to connect your wallet',\n        icon: Icons.WalletConnect,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Default,\n        supportedPlatforms: [Platform.Mobile],\n    },\n    [SupportedProviders.Ledger]: {\n        name: SupportedProviders.Ledger,\n        type: WalletTypes.Ledger,\n        description: 'Sync with your Ledger hardware wallet',\n        icon: Icons.Ledger,\n        canConnect: () => true,\n        showInList: () => !react_device_detect_1.isMobile,\n        listPriority: () => Priorities.Popular,\n    },\n    [SupportedProviders.CeloWallet]: {\n        name: SupportedProviders.CeloWallet,\n        type: WalletTypes.WalletConnect,\n        description: 'Connect to Celo Wallet for web or desktop',\n        icon: Icons.Celo,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Default,\n        walletConnectId: exports.WalletIds.CeloWallet,\n        installURL: 'https://celowallet.app/',\n        supportedPlatforms: [Platform.Desktop, Platform.Web],\n        getLink: (uri, platform = Platform.Mobile) => {\n            switch (platform) {\n                case Platform.Desktop:\n                    return `celowallet://wc?uri=${encodeURIComponent(uri)}`;\n                case Platform.Web:\n                    return `https://celowallet.app/wc?uri=${encodeURIComponent(uri)}`;\n                default:\n                    return false;\n            }\n        },\n    },\n    [SupportedProviders.CeloTerminal]: {\n        name: SupportedProviders.CeloTerminal,\n        type: WalletTypes.WalletConnect,\n        description: 'Connect to the Celo Terminal desktop app',\n        icon: Icons.CeloTerminal,\n        canConnect: () => true,\n        showInList: () => !react_device_detect_1.isMobile,\n        listPriority: () => Priorities.Default,\n        installURL: 'https://celoterminal.com/',\n        walletConnectId: exports.WalletIds.CeloTerminal,\n        supportedPlatforms: [],\n    },\n    [SupportedProviders.MetaMask]: {\n        name: SupportedProviders.MetaMask,\n        type: WalletTypes.MetaMask,\n        description: react_device_detect_1.isMobile\n            ? (0, ethereum_1.isEthereumFromMetamask)()\n                ? 'Connect with MetaMask Mobile App'\n                : 'Open MetaMask Mobile App'\n            : 'Use the Metamask browser extension. Celo support is limited.',\n        icon: Icons.MetaMask,\n        canConnect: () => react_device_detect_1.isMobile || (0, ethereum_1.isEthereumFromMetamask)(),\n        showInList: () => true,\n        listPriority: () => Priorities.Popular,\n        installURL: react_device_detect_1.isMobile\n            ? 'https://metamask.app.link/dapp/' +\n                window.location.href.replace(/^https?:\\/\\//, '')\n            : 'https://metamask.app.link/',\n    },\n    [SupportedProviders.CeloExtensionWallet]: {\n        name: SupportedProviders.CeloExtensionWallet,\n        type: WalletTypes.CeloExtensionWallet,\n        description: 'Use a wallet from the the Celo chrome extension',\n        icon: Icons.ChromeExtensionStore,\n        canConnect: () => !!window.celo,\n        showInList: () => !react_device_detect_1.isMobile,\n        listPriority: () => Priorities.Default,\n        installURL: 'https://chrome.google.com/webstore/detail/celoextensionwallet/kkilomkmpmkbdnfelcpgckmpcaemjcdh/related',\n    },\n    [SupportedProviders.Injected]: {\n        name: SupportedProviders.Injected,\n        type: WalletTypes.Injected,\n        description: 'Connect any Ethereum wallet to Celo',\n        icon: Icons.Ethereum,\n        canConnect: () => (0, ethereum_1.isEthereumPresent)(),\n        showInList: () => (0, ethereum_1.isEthereumFromMetamask)(),\n        listPriority: () => Priorities.Default,\n    },\n    [SupportedProviders.PrivateKey]: {\n        name: SupportedProviders.PrivateKey,\n        type: WalletTypes.PrivateKey,\n        description: 'Enter a plaintext private key to load your account (testing only)',\n        icon: Icons.PrivateKey,\n        canConnect: () => true,\n        showInList: () => process.env.NODE_ENV !== 'production',\n        listPriority: () => Priorities.Default,\n    },\n    [SupportedProviders.CeloDance]: {\n        name: SupportedProviders.CeloDance,\n        type: WalletTypes.WalletConnect,\n        description: 'Send, vote, and earn rewards within one wallet',\n        icon: Icons.CeloDance,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Default,\n        installURL: 'https://celo.dance/',\n        walletConnectId: exports.WalletIds.CeloDance,\n        supportedPlatforms: [Platform.Mobile],\n        getLink: (uri, platform = Platform.Mobile) => {\n            switch (platform) {\n                case Platform.Mobile:\n                    return `celo://wallet/wc?uri=${uri}`;\n                default:\n                    return false;\n            }\n        },\n    },\n    [SupportedProviders.Omni]: {\n        name: SupportedProviders.Omni,\n        description: 'Scan a QR code to connect your wallet',\n        type: WalletTypes.WalletConnect,\n        icon: Icons.Omni,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Default,\n        installURL: 'https://omniwallet.app.link',\n        walletConnectId: exports.WalletIds.Omni,\n        supportedPlatforms: [Platform.Mobile],\n        getLink: (uri, platform = Platform.Mobile) => {\n            switch (platform) {\n                case Platform.Mobile:\n                    return `omni://wc?uri=${uri}`;\n                default:\n                    return false;\n            }\n        },\n    },\n    [SupportedProviders.CoinbaseWallet]: {\n        name: SupportedProviders.CoinbaseWallet,\n        type: WalletTypes.CoinbaseWallet,\n        description: 'Scan a QR code to connect your wallet',\n        icon: Icons.CoinbaseWallet,\n        canConnect: () => true,\n        showInList: () => true,\n        listPriority: () => Priorities.Default,\n    },\n};\n// If adding another chain be sure to add it to the ChainId enum\n// and to requiredNamespaces in packages/walletconnect/src/wc-wallet.ts\nexports.NetworkNames = {\n    Alfajores: 'Alfajores',\n    Baklava: 'Baklava',\n    Mainnet: 'Mainnet',\n    Cannoli: 'Cannoli',\n    Localhost: 'Localhost',\n};\nexports.Alfajores = {\n    name: exports.NetworkNames.Alfajores,\n    rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n    graphQl: 'https://explorer.celo.org/alfajores/graphiql',\n    explorer: 'https://explorer.celo.org/alfajores',\n    chainId: types_1.ChainId.Alfajores,\n};\nexports.Baklava = {\n    name: exports.NetworkNames.Baklava,\n    rpcUrl: 'https://baklava-forno.celo-testnet.org',\n    graphQl: 'https://explorer.celo.org/baklava/graphiql',\n    explorer: 'https://explorer.celo.org/baklava',\n    chainId: types_1.ChainId.Baklava,\n};\nexports.Cannoli = {\n    name: exports.NetworkNames.Cannoli,\n    rpcUrl: 'https://forno.cannoli.celo-testnet.org',\n    graphQl: 'https://explorer.celo.org/cannoli/graphiql',\n    explorer: 'https://explorer.celo.org/cannoli',\n    chainId: types_1.ChainId.Cannoli,\n};\nexports.Mainnet = {\n    name: exports.NetworkNames.Mainnet,\n    rpcUrl: 'https://forno.celo.org',\n    graphQl: 'https://explorer.celo.org/mainnet/graphiql',\n    explorer: 'https://explorer.celo.org/mainnet',\n    chainId: types_1.ChainId.Mainnet,\n};\nexports.Localhost = {\n    name: exports.NetworkNames.Localhost,\n    rpcUrl: 'http://localhost:8545',\n    graphQl: '',\n    explorer: '',\n    chainId: 1337,\n};\n/**\n * These wallets cannot have their networks\n * updated via react-celo\n */\nexports.STATIC_NETWORK_WALLETS = [WalletTypes['CeloExtensionWallet']];\n/**\n * Gets the provider associated with a wallet type.\n * @param wallet\n * @returns\n */\nconst getProviderForWallet = (wallet) => wallet === WalletTypes.Unauthenticated ? null : SupportedProviders[wallet];\nexports.getProviderForWallet = getProviderForWallet;\n/**\n * Default networks to connect to.\n */\nexports.DEFAULT_NETWORKS = [\n    exports.Mainnet,\n    exports.Alfajores,\n    exports.Baklava,\n    exports.Cannoli,\n    ...(process.env.NODE_ENV !== 'production' ? [exports.Localhost] : []),\n];\n//# sourceMappingURL=constants.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}