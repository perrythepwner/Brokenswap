{"ast":null,"code":"import _objectSpread from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _taggedTemplateLiteral from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{gql,useApolloClient,useQuery}from'@apollo/client';import{useCelo}from'@celo/react-celo';import{BigNumber}from'@ethersproject/bignumber';import{formatEther,parseEther}from'@ethersproject/units';import{Percent}from'@ubeswap/sdk';import{ethers}from'ethers';import React,{useEffect}from'react';import farmRegistryAbi from'../../constants/abis/FarmRegistry.json';import{CACHED_FARM_INFO_BLOCK,cachedFarmInfoEvents,cachedLpInfoEvents}from'./cachedFarmInfo';import{useCustomStakingInfo}from'./useCustomStakingInfo';const blacklist={'0x4488682fd16562a68ea0d0f898413e075f42e6da':true,'0xC245976Db329Bb0414253376246a367B7c96C762':true};const featuredPoolWhitelist={'0x6F11B6eA70DEe4f167b1A4ED1F01C903f6781960':false,// PACT\n'0xEfe2f9d62E45815837b4f20c1F44F0A83605B540':false,// ARI\n'0x155DA6F164D925E3a91F510B50DEC08aA03B4071':false,// IMMO\n'0x3c8e2eB988f0890B68b5667C2FB867249E68E3C7':false// CELO-SYMM\n};const pairDataGql=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query getPairHourData($id: String!) {\\n    pair(id: $id) {\\n      pairHourData(first: 24, orderBy: hourStartUnix, orderDirection: desc) {\\n        hourStartUnix\\n        hourlyVolumeUSD\\n      }\\n    }\\n  }\\n\"])));const COMPOUNDS_PER_YEAR=2;const CREATION_BLOCK=9840049;const LAST_N_BLOCKS=5760;// Last 8 hours\nexport const useFarmRegistry=()=>{const{kit}=useCelo();const client=useApolloClient();const[farmSummaries,setFarmSummaries]=React.useState([]);const call=React.useCallback(/*#__PURE__*/_asyncToGenerator(function*(){const farmRegistry=new kit.connection.web3.eth.Contract(farmRegistryAbi,'0xa2bf67e12EeEDA23C7cA1e5a34ae2441a17789Ec');const lastBlock=yield kit.connection.web3.eth.getBlockNumber();const[farmInfoEvents,lpInfoEvents,farmDataEvents]=yield Promise.all([farmRegistry.getPastEvents('FarmInfo',{fromBlock:CACHED_FARM_INFO_BLOCK,toBlock:lastBlock}).then(events=>events.concat(cachedFarmInfoEvents)),farmRegistry.getPastEvents('LPInfo',{fromBlock:CACHED_FARM_INFO_BLOCK,toBlock:lastBlock}).then(events=>events.concat(cachedLpInfoEvents)),farmRegistry.getPastEvents('FarmData',{fromBlock:lastBlock-LAST_N_BLOCKS,toBlock:lastBlock})]);const lps={};lpInfoEvents.forEach(e=>{lps[e.returnValues.lpAddress]=[e.returnValues.token0Address,e.returnValues.token1Address];});const farmData={};farmDataEvents.forEach(e=>{farmData[e.returnValues.stakingAddress]={tvlUSD:e.returnValues.tvlUSD,rewardsUSDPerYear:e.returnValues.rewardsUSDPerYear};});const farmSummaries=[];farmInfoEvents.filter(e=>!blacklist[e.returnValues.stakingAddress.toLowerCase()]).forEach(e=>{// sometimes there is no farm data for the staking address return early to avoid crash\nif(!farmData[e.returnValues.stakingAddress]){return;}farmSummaries.push({farmName:ethers.utils.parseBytes32String(e.returnValues.farmName),stakingAddress:e.returnValues.stakingAddress,lpAddress:e.returnValues.lpAddress,token0Address:lps[e.returnValues.lpAddress][0],token1Address:lps[e.returnValues.lpAddress][1],tvlUSD:BigNumber.from(farmData[e.returnValues.stakingAddress].tvlUSD),rewardsUSDPerYear:BigNumber.from(farmData[e.returnValues.stakingAddress].rewardsUSDPerYear),isFeatured:!!featuredPoolWhitelist[e.returnValues.stakingAddress],isImported:false});});farmSummaries.sort((a,b)=>Number(formatEther(b.rewardsUSDPerYear.sub(a.rewardsUSDPerYear)))).sort((a,b)=>Number(a.tvlUSD&&b.tvlUSD?formatEther(b.tvlUSD.sub(a.tvlUSD)):0));const results=yield Promise.all(farmSummaries.map(summary=>{return client.query({query:pairDataGql,variables:{id:summary.lpAddress.toLowerCase()}});}));const farmInfos=results.map((result,index)=>calcAPR(result,farmSummaries[index]));setFarmSummaries(farmSummaries.map((summary,index)=>_objectSpread(_objectSpread({},summary),farmInfos[index])));}),[kit.connection.web3.eth,client]);useEffect(()=>{call();},[call]);return farmSummaries;};export const useImportedFarmRegistry=farmAddress=>{const{stakingToken,totalRewardRates,valueOfTotalStakedAmountInCUSD,tokens,rewardsUSDPerYear,totalStakedAmount}=useCustomStakingInfo(farmAddress);const result=useQuery(pairDataGql,{variables:{id:stakingToken===null||stakingToken===void 0?void 0:stakingToken.address.toLowerCase()}});if(stakingToken&&totalRewardRates&&tokens){const farmSummary={farmName:'',stakingAddress:farmAddress,lpAddress:stakingToken===null||stakingToken===void 0?void 0:stakingToken.address,token0Address:tokens[0].address,token1Address:tokens[1].address,isFeatured:false,tvlUSD:valueOfTotalStakedAmountInCUSD?parseEther(valueOfTotalStakedAmountInCUSD):undefined,totalStakedAmount:totalStakedAmount,rewardsUSDPerYear:BigNumber.from(rewardsUSDPerYear),isImported:true,totalRewardRates};const farmInfo=calcAPR(result,farmSummary);return _objectSpread(_objectSpread({},farmSummary),farmInfo);}return undefined;};export const useUniqueBestFarms=()=>{const farmSummaries=useFarmRegistry();const farmsUniqueByBestFarm=farmSummaries.reduce((prev,current)=>{if(!prev[current.lpAddress]){prev[current.lpAddress]=current;}else if(current.rewardsUSDPerYear.gt(prev[current.lpAddress].rewardsUSDPerYear)){prev[current.lpAddress]=current;}return prev;},{});return farmsUniqueByBestFarm;};// formula is 1 + ((nom/compoundsPerYear)^compoundsPerYear) - 1\nfunction annualizedPercentageYield(nominal,compounds){const ONE=1;const divideNominalByNAddOne=Number(nominal.divide(BigInt(compounds)).add(BigInt(ONE)).toFixed(10));// multiply 100 to turn decimal into percent, to fixed since we only display integer\nreturn((divideNominalByNAddOne**compounds-ONE)*100).toFixed(0);}// calculate rewardAPR, swapAPR, APY & APR from a farmSummary\nfunction calcAPR(result,summary){var _summary$tvlUSD,_summary$tvlUSD2,_summary$tvlUSD3,_summary$tvlUSD4;let swapRewardsUSDPerYear=BigNumber.from(0);const{loading,error,data}=result;if(!loading&&!error&&data!==null&&data!==void 0&&data.pair){const lastDayVolumeUsd=data.pair.pairHourData.reduce((acc,curr)=>acc+Number(curr.hourlyVolumeUSD),0);swapRewardsUSDPerYear=parseEther(Math.floor(lastDayVolumeUsd*365*0.0025).toString());}const rewardApr=new Percent(summary.rewardsUSDPerYear.toString(),(_summary$tvlUSD=summary.tvlUSD)===null||_summary$tvlUSD===void 0?void 0:_summary$tvlUSD.toString());const swapApr=new Percent(swapRewardsUSDPerYear.toString(),(_summary$tvlUSD2=summary.tvlUSD)===null||_summary$tvlUSD2===void 0?void 0:_summary$tvlUSD2.toString());const apr=new Percent(swapRewardsUSDPerYear.add(summary.rewardsUSDPerYear).toString(),(_summary$tvlUSD3=summary.tvlUSD)===null||_summary$tvlUSD3===void 0?void 0:_summary$tvlUSD3.toString());let apy='0';if((_summary$tvlUSD4=summary.tvlUSD)!==null&&_summary$tvlUSD4!==void 0&&_summary$tvlUSD4.gt(0)){try{apy=annualizedPercentageYield(apr,COMPOUNDS_PER_YEAR);}catch(e){console.error('apy calc overflow',summary.farmName,e);}}return{rewardApr,swapApr,apr,apy};}","map":null,"metadata":{},"sourceType":"module"}