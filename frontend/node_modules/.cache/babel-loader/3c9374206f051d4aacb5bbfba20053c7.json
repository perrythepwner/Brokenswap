{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = React.useContext(getApolloContext());\n  var client = override || context.client;\n  invariant(!!client, 49);\n  return client;\n}","map":{"version":3,"sources":["../../../src/react/hooks/useApolloClient.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,kCAAkC;AAC5D,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,gBAAgB,QAAQ,qBAAqB;AAEtD,OAAM,SAAU,eAAe,CAC7B,QAA+B,EAAA;EAE/B,IAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAA,CAAE,CAAC;EACpD,IAAM,MAAM,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAM;EACzC,SAAS,CACP,CAAC,CAAC,MAAM,EACR,EAAA,CAAA;EACE,OAAA,MAAA;AACA","sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}