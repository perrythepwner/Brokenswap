{"ast":null,"code":"var _jsxFileName = \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/ConfirmSwapModal.tsx\",\n  _s = $RefreshSig$();\nimport { currencyEquals } from '@ubeswap/sdk';\nimport React, { useCallback, useMemo } from 'react';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from '../TransactionConfirmationModal';\nimport { describeTrade } from './routing/describeTrade';\nimport SwapModalFooter from './SwapModalFooter';\nimport SwapModalHeader from './SwapModalHeader';\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction tradeMeaningfullyDiffers(tradeA, tradeB) {\n  return tradeA.tradeType !== tradeB.tradeType || !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) || !tradeA.inputAmount.equalTo(tradeB.inputAmount) || !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) || !tradeA.outputAmount.equalTo(tradeB.outputAmount);\n}\nexport default function ConfirmSwapModal(_ref) {\n  _s();\n  var _trade$inputAmount, _trade$inputAmount2, _trade$inputAmount2$c, _trade$outputAmount, _trade$outputAmount2, _trade$outputAmount2$;\n  let {\n    trade,\n    originalTrade,\n    onAcceptChanges,\n    allowedSlippage,\n    onConfirm,\n    onDismiss,\n    recipient,\n    swapErrorMessage,\n    isOpen,\n    attemptingTxn,\n    txHash\n  } = _ref;\n  const showAcceptChanges = useMemo(() => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)), [originalTrade, trade]);\n  const {\n    label\n  } = describeTrade(trade);\n  const modalHeader = useCallback(() => {\n    return trade ? /*#__PURE__*/_jsxDEV(SwapModalHeader, {\n      trade: trade,\n      allowedSlippage: allowedSlippage,\n      recipient: recipient,\n      showAcceptChanges: showAcceptChanges,\n      onAcceptChanges: onAcceptChanges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this) : null;\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade]);\n  const modalBottom = useCallback(() => {\n    return trade ? /*#__PURE__*/_jsxDEV(SwapModalFooter, {\n      onConfirm: onConfirm,\n      trade: trade,\n      disabledConfirm: showAcceptChanges,\n      swapErrorMessage: swapErrorMessage,\n      allowedSlippage: allowedSlippage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this) : null;\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade]);\n\n  // text to show while loading\n  const pendingText = \"Swapping \".concat(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : _trade$inputAmount.toSignificant(6), \" \").concat(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount2 = trade.inputAmount) === null || _trade$inputAmount2 === void 0 ? void 0 : (_trade$inputAmount2$c = _trade$inputAmount2.currency) === null || _trade$inputAmount2$c === void 0 ? void 0 : _trade$inputAmount2$c.symbol, \" for \").concat(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount = trade.outputAmount) === null || _trade$outputAmount === void 0 ? void 0 : _trade$outputAmount.toSignificant(6), \" \").concat(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount2 = trade.outputAmount) === null || _trade$outputAmount2 === void 0 ? void 0 : (_trade$outputAmount2$ = _trade$outputAmount2.currency) === null || _trade$outputAmount2$ === void 0 ? void 0 : _trade$outputAmount2$.symbol);\n  const confirmationContent = useCallback(() => swapErrorMessage ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n    onDismiss: onDismiss,\n    message: swapErrorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n    title: \"Confirm \".concat(label),\n    onDismiss: onDismiss,\n    topContent: modalHeader,\n    bottomContent: modalBottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this), [onDismiss, modalBottom, modalHeader, swapErrorMessage, label]);\n  return /*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: confirmationContent,\n    pendingText: pendingText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmSwapModal, \"XVlkTQm3sEHx0PNYtOwfjDIHtrg=\");\n_c = ConfirmSwapModal;\nvar _c;\n$RefreshReg$(_c, \"ConfirmSwapModal\");","map":{"version":3,"names":["currencyEquals","React","useCallback","useMemo","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","describeTrade","SwapModalFooter","SwapModalHeader","jsxDEV","_jsxDEV","tradeMeaningfullyDiffers","tradeA","tradeB","tradeType","inputAmount","currency","equalTo","outputAmount","ConfirmSwapModal","_ref","_s","_trade$inputAmount","_trade$inputAmount2","_trade$inputAmount2$c","_trade$outputAmount","_trade$outputAmount2","_trade$outputAmount2$","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","recipient","swapErrorMessage","isOpen","attemptingTxn","txHash","showAcceptChanges","Boolean","label","modalHeader","fileName","_jsxFileName","lineNumber","columnNumber","modalBottom","disabledConfirm","pendingText","concat","toSignificant","symbol","confirmationContent","message","title","topContent","bottomContent","hash","content","_c","$RefreshReg$"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/ConfirmSwapModal.tsx"],"sourcesContent":["import { currencyEquals, Trade } from '@ubeswap/sdk'\nimport React, { useCallback, useMemo } from 'react'\n\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from '../TransactionConfirmationModal'\nimport { describeTrade } from './routing/describeTrade'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n}: {\n  isOpen: boolean\n  trade: Trade | undefined\n  originalTrade: Trade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n  const { label } = describeTrade(trade)\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    trade?.inputAmount?.currency?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title={`Confirm ${label}`}\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage, label]\n  )\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}