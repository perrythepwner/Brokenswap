{"ast":null,"code":"import _asyncToGenerator from \"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useCelo, useConnectedSigner } from '@celo/react-celo';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { TokenAmount } from '@ubeswap/sdk';\nimport { useDoTransaction } from 'components/swap/routing';\nimport { MoolaRouterTrade } from 'components/swap/routing/hooks/useTrade';\nimport { MoolaDirectTrade } from 'components/swap/routing/moola/MoolaDirectTrade';\nimport { useMoolaConfig } from 'components/swap/routing/moola/useMoola';\nimport { MinimaRouterTrade } from 'components/swap/routing/trade';\nimport { useCallback, useMemo } from 'react';\nimport { useUserMinApprove } from 'state/user/hooks';\nimport { MINIMA_ROUTER_ADDRESS, ROUTER_ADDRESS, UBESWAP_MOOLA_ROUTER_ADDRESS } from '../constants';\nimport { useTokenAllowance } from '../data/Allowances';\nimport { Field } from '../state/swap/actions';\nimport { useHasPendingApproval } from '../state/transactions/hooks';\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\nimport { useTokenContract } from './useContract';\nexport let ApprovalState = /*#__PURE__*/function (ApprovalState) {\n  ApprovalState[ApprovalState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApprovalState[ApprovalState[\"NOT_APPROVED\"] = 1] = \"NOT_APPROVED\";\n  ApprovalState[ApprovalState[\"PENDING\"] = 2] = \"PENDING\";\n  ApprovalState[ApprovalState[\"APPROVED\"] = 3] = \"APPROVED\";\n  return ApprovalState;\n}({});\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(amountToApprove, spender) {\n  _s();\n  const {\n    address: account\n  } = useCelo();\n  const signer = useConnectedSigner();\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const [minApprove] = useUserMinApprove();\n  const currentAllowance = useTokenAllowance(token, account !== null && account !== void 0 ? account : undefined, spender);\n  const pendingApproval = useHasPendingApproval(token === null || token === void 0 ? void 0 : token.address, spender);\n\n  // check the current approval status\n  const approvalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove) ? pendingApproval ? ApprovalState.PENDING : ApprovalState.NOT_APPROVED : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n  const tokenContractDisconnected = useTokenContract(token === null || token === void 0 ? void 0 : token.address);\n  const doTransaction = useDoTransaction();\n  const approve = useCallback( /*#__PURE__*/_asyncToGenerator(function* () {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n    if (!tokenContractDisconnected) {\n      console.error('tokenContract is null');\n      return;\n    }\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n\n    // connect\n    const tokenContract = tokenContractDisconnected.connect(signer);\n    if (minApprove) {\n      yield doTransaction(tokenContract, 'approve', {\n        args: [spender, amountToApprove.raw.toString()],\n        summary: \"Approve \".concat(amountToApprove.toSignificant(6), \" \").concat(amountToApprove.currency.symbol),\n        approval: {\n          tokenAddress: token.address,\n          spender: spender\n        }\n      });\n    } else {\n      yield doTransaction(tokenContract, 'approve', {\n        args: [spender, MaxUint256],\n        summary: \"Approve \".concat(amountToApprove.currency.symbol),\n        approval: {\n          tokenAddress: token.address,\n          spender: spender\n        }\n      });\n    }\n  }), [approvalState, token, tokenContractDisconnected, amountToApprove, spender, signer, minApprove, doTransaction]);\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\n_s(useApproveCallback, \"eNcjRcDM2HzJ8iSqAB5FOaHqFJw=\", false, function () {\n  return [useCelo, useConnectedSigner, useUserMinApprove, useTokenAllowance, useHasPendingApproval, useTokenContract, useDoTransaction];\n});\nexport function useApproveCallbackFromTrade(trade) {\n  _s2();\n  let allowedSlippage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const amountToApprove = useMemo(() => trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined, [trade, allowedSlippage]);\n  const moola = useMoolaConfig();\n  return useApproveCallback(amountToApprove, trade instanceof MinimaRouterTrade ? MINIMA_ROUTER_ADDRESS : trade instanceof MoolaDirectTrade ? moola === null || moola === void 0 ? void 0 : moola.lendingPool : trade instanceof MoolaRouterTrade ? UBESWAP_MOOLA_ROUTER_ADDRESS : ROUTER_ADDRESS);\n}\n_s2(useApproveCallbackFromTrade, \"ZXESz88/IbqGY9952lQy0JUbtZo=\", false, function () {\n  return [useMoolaConfig, useApproveCallback];\n});","map":{"version":3,"names":["useCelo","useConnectedSigner","MaxUint256","TokenAmount","useDoTransaction","MoolaRouterTrade","MoolaDirectTrade","useMoolaConfig","MinimaRouterTrade","useCallback","useMemo","useUserMinApprove","MINIMA_ROUTER_ADDRESS","ROUTER_ADDRESS","UBESWAP_MOOLA_ROUTER_ADDRESS","useTokenAllowance","Field","useHasPendingApproval","computeSlippageAdjustedAmounts","useTokenContract","ApprovalState","useApproveCallback","amountToApprove","spender","_s","address","account","signer","token","undefined","minApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","lessThan","PENDING","NOT_APPROVED","APPROVED","tokenContractDisconnected","doTransaction","approve","_asyncToGenerator","console","error","tokenContract","connect","args","raw","toString","summary","concat","toSignificant","currency","symbol","approval","tokenAddress","useApproveCallbackFromTrade","trade","_s2","allowedSlippage","arguments","length","INPUT","moola","lendingPool"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { useCelo, useConnectedSigner } from '@celo/react-celo'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { JsonRpcSigner } from '@ethersproject/providers'\nimport { TokenAmount, Trade } from '@ubeswap/sdk'\nimport { useDoTransaction } from 'components/swap/routing'\nimport { MoolaRouterTrade } from 'components/swap/routing/hooks/useTrade'\nimport { MoolaDirectTrade } from 'components/swap/routing/moola/MoolaDirectTrade'\nimport { useMoolaConfig } from 'components/swap/routing/moola/useMoola'\nimport { MinimaRouterTrade } from 'components/swap/routing/trade'\nimport { useCallback, useMemo } from 'react'\nimport { useUserMinApprove } from 'state/user/hooks'\n\nimport { MINIMA_ROUTER_ADDRESS, ROUTER_ADDRESS, UBESWAP_MOOLA_ROUTER_ADDRESS } from '../constants'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { Field } from '../state/swap/actions'\nimport { useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: TokenAmount,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { address: account } = useCelo()\n  const signer = useConnectedSigner() as JsonRpcSigner\n\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const [minApprove] = useUserMinApprove()\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContractDisconnected = useTokenContract(token?.address)\n  const doTransaction = useDoTransaction()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContractDisconnected) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    // connect\n    const tokenContract = tokenContractDisconnected.connect(signer)\n\n    if (minApprove) {\n      await doTransaction(tokenContract, 'approve', {\n        args: [spender, amountToApprove.raw.toString()],\n        summary: `Approve ${amountToApprove.toSignificant(6)} ${amountToApprove.currency.symbol}`,\n        approval: { tokenAddress: token.address, spender: spender },\n      })\n    } else {\n      await doTransaction(tokenContract, 'approve', {\n        args: [spender, MaxUint256],\n        summary: `Approve ${amountToApprove.currency.symbol}`,\n        approval: { tokenAddress: token.address, spender: spender },\n      })\n    }\n  }, [approvalState, token, tokenContractDisconnected, amountToApprove, spender, signer, minApprove, doTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage]\n  )\n  const moola = useMoolaConfig()\n  return useApproveCallback(\n    amountToApprove,\n    trade instanceof MinimaRouterTrade\n      ? MINIMA_ROUTER_ADDRESS\n      : trade instanceof MoolaDirectTrade\n      ? moola?.lendingPool\n      : trade instanceof MoolaRouterTrade\n      ? UBESWAP_MOOLA_ROUTER_ADDRESS\n      : ROUTER_ADDRESS\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}