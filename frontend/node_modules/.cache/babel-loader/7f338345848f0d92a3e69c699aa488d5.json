{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletSDKRelay = void 0;\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst WalletSDKConnection_1 = require(\"../connection/WalletSDKConnection\");\nconst errors_1 = require(\"../errors\");\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\nconst Session_1 = require(\"./Session\");\nconst WalletSDKRelayAbstract_1 = require(\"./WalletSDKRelayAbstract\");\nconst Web3Method_1 = require(\"./Web3Method\");\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\nconst Web3Response_1 = require(\"./Web3Response\");\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\nclass WalletSDKRelay extends WalletSDKRelayAbstract_1.WalletSDKRelayAbstract {\n  constructor(options) {\n    var _a;\n    super();\n    this.accountsCallback = null;\n    this.chainCallback = null;\n    this.dappDefaultChainSubject = new rxjs_1.BehaviorSubject(1);\n    this.dappDefaultChain = 1;\n    this.appName = \"\";\n    this.appLogoUrl = null;\n    this.subscriptions = new rxjs_1.Subscription();\n    this.linkAPIUrl = options.linkAPIUrl;\n    this.storage = options.storage;\n    this.options = options;\n    const {\n      session,\n      ui,\n      connection\n    } = this.subscribe();\n    this._session = session;\n    this.connection = connection;\n    this.relayEventManager = options.relayEventManager;\n    if (options.diagnosticLogger && options.eventListener) {\n      throw new Error(\"Can't have both eventListener and diagnosticLogger options, use only diagnosticLogger\");\n    }\n    if (options.eventListener) {\n      this.diagnostic = {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        log: options.eventListener.onEvent\n      };\n    } else {\n      this.diagnostic = options.diagnosticLogger;\n    }\n    this._reloadOnDisconnect = (_a = options.reloadOnDisconnect) !== null && _a !== void 0 ? _a : true;\n    this.ui = ui;\n  }\n  subscribe() {\n    this.subscriptions.add(this.dappDefaultChainSubject.subscribe(chainId => {\n      if (this.dappDefaultChain !== chainId) {\n        this.dappDefaultChain = chainId;\n      }\n    }));\n    const session = Session_1.Session.load(this.storage) || new Session_1.Session(this.storage).save();\n    const connection = new WalletSDKConnection_1.WalletSDKConnection(session.id, session.key, this.linkAPIUrl, this.diagnostic);\n    this.subscriptions.add(connection.sessionConfig$.subscribe({\n      next: sessionConfig => {\n        this.onSessionConfigChanged(sessionConfig);\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"error while invoking session config callback\"\n        });\n      }\n    }));\n    this.subscriptions.add(connection.incomingEvent$.pipe((0, operators_1.filter)(m => m.event === \"Web3Response\")).subscribe({\n      next: this.handleIncomingEvent\n    }));\n    this.subscriptions.add(connection.linked$.pipe((0, operators_1.skip)(1), (0, operators_1.tap)(linked => {\n      var _a;\n      this.isLinked = linked;\n      const cachedAddresses = this.storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n      if (linked) {\n        // Only set linked session variable one way\n        this.session.linked = linked;\n      }\n      this.isUnlinkedErrorState = false;\n      if (cachedAddresses) {\n        const addresses = cachedAddresses.split(\" \");\n        const wasConnectedViaStandalone = this.storage.getItem(\"IsStandaloneSigning\") === \"true\";\n        if (addresses[0] !== \"\" && !linked && this.session.linked && !wasConnectedViaStandalone) {\n          this.isUnlinkedErrorState = true;\n          const sessionIdHash = this.getSessionIdHash();\n          (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNLINKED_ERROR_STATE, {\n            sessionIdHash\n          });\n        }\n      }\n    })).subscribe());\n    // if session is marked destroyed, reset and reload\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => !!c.metadata && c.metadata.__destroyed === \"1\")).subscribe(() => {\n      var _a;\n      const alreadyDestroyed = connection.isDestroyed;\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.METADATA_DESTROYED, {\n        alreadyDestroyed,\n        sessionIdHash: this.getSessionIdHash()\n      });\n      return this.resetAndReload();\n    }));\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => c.metadata && c.metadata.WalletUsername !== undefined)).pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.WalletUsername, session.secret))).subscribe({\n      next: walletUsername => {\n        this.storage.setItem(WalletSDKRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error decrypting\",\n          value: \"username\"\n        });\n      }\n    }));\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => c.metadata && c.metadata.AppVersion !== undefined)).pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.AppVersion, session.secret))).subscribe({\n      next: appVersion => {\n        this.storage.setItem(WalletSDKRelayAbstract_1.APP_VERSION_KEY, appVersion);\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error decrypting\",\n          value: \"appversion\"\n        });\n      }\n    }));\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => c.metadata && c.metadata.ChainId !== undefined && c.metadata.JsonRpcUrl !== undefined)).pipe((0, operators_1.mergeMap)(c => (0, rxjs_1.zip)(aes256gcm.decrypt(c.metadata.ChainId, session.secret), aes256gcm.decrypt(c.metadata.JsonRpcUrl, session.secret)))).pipe((0, operators_1.distinctUntilChanged)()).subscribe({\n      next: _ref => {\n        let [chainId, jsonRpcUrl] = _ref;\n        if (this.chainCallback) {\n          this.chainCallback(chainId, jsonRpcUrl);\n        }\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error decrypting\",\n          value: \"chainId|jsonRpcUrl\"\n        });\n      }\n    }));\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => c.metadata && c.metadata.EthereumAddress !== undefined)).pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.EthereumAddress, session.secret))).subscribe({\n      next: selectedAddress => {\n        if (this.accountsCallback) {\n          this.accountsCallback([selectedAddress]);\n        }\n        if (WalletSDKRelay.accountRequestCallbackIds.size > 0) {\n          // We get the ethereum address from the metadata.  If for whatever\n          // reason we don't get a response via an explicit web3 message\n          // we can still fulfill the eip1102 request.\n          Array.from(WalletSDKRelay.accountRequestCallbackIds.values()).forEach(id => {\n            const message = (0, Web3ResponseMessage_1.Web3ResponseMessage)({\n              id,\n              response: (0, Web3Response_1.RequestEthereumAccountsResponse)([selectedAddress])\n            });\n            this.invokeCallback(Object.assign(Object.assign({}, message), {\n              id\n            }));\n          });\n          WalletSDKRelay.accountRequestCallbackIds.clear();\n        }\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error decrypting\",\n          value: \"selectedAddress\"\n        });\n      }\n    }));\n    this.subscriptions.add(connection.sessionConfig$.pipe((0, operators_1.filter)(c => c.metadata && c.metadata.AppSrc !== undefined)).pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.AppSrc, session.secret))).subscribe({\n      next: appSrc => {\n        this.ui.setAppSrc(appSrc);\n      },\n      error: () => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error decrypting\",\n          value: \"appSrc\"\n        });\n      }\n    }));\n    const ui = this.options.uiConstructor({\n      linkAPIUrl: this.options.linkAPIUrl,\n      version: this.options.version,\n      darkMode: this.options.darkMode,\n      session,\n      connected$: connection.connected$,\n      chainId$: this.dappDefaultChainSubject\n    });\n    connection.connect();\n    return {\n      session,\n      ui,\n      connection\n    };\n  }\n  attachUI() {\n    this.ui.attach();\n  }\n  resetAndReload() {\n    this.connection.setSessionMetadata(\"__destroyed\", \"1\").pipe((0, operators_1.timeout)(1000), (0, operators_1.catchError)(_ => (0, rxjs_1.of)(null))).subscribe(_ => {\n      var _a, _b, _c;\n      const isStandalone = this.ui.isStandalone();\n      try {\n        this.subscriptions.unsubscribe();\n      } catch (err) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error unsubscribing\"\n        });\n      }\n      (_b = this.diagnostic) === null || _b === void 0 ? void 0 : _b.log(DiagnosticLogger_1.EVENTS.SESSION_STATE_CHANGE, {\n        method: \"relay::resetAndReload\",\n        sessionMetadataChange: \"__destroyed, 1\",\n        sessionIdHash: this.getSessionIdHash()\n      });\n      this.connection.destroy();\n      /**\n       * Only clear storage if the session id we have in memory matches the one on disk\n       * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n       * storage already.  In that case if we clear storage again, the user will be in\n       * a state where the first tab allows the user to connect but the session that\n       * was used isn't persisted.  This leaves the user in a state where they aren't\n       * connected to the mobile app.\n       */\n      const storedSession = Session_1.Session.load(this.storage);\n      if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n        this.storage.clear();\n      } else if (storedSession) {\n        (_c = this.diagnostic) === null || _c === void 0 ? void 0 : _c.log(DiagnosticLogger_1.EVENTS.SKIPPED_CLEARING_SESSION, {\n          sessionIdHash: this.getSessionIdHash(),\n          storedSessionIdHash: Session_1.Session.hash(storedSession.id)\n        });\n      }\n      if (this._reloadOnDisconnect) {\n        this.ui.reloadUI();\n        return;\n      }\n      if (this.accountsCallback) {\n        this.accountsCallback([], true);\n      }\n      this.subscriptions = new rxjs_1.Subscription();\n      const {\n        session,\n        ui,\n        connection\n      } = this.subscribe();\n      this._session = session;\n      this.connection = connection;\n      this.ui = ui;\n      if (isStandalone && this.ui.setStandalone) this.ui.setStandalone(true);\n      this.attachUI();\n    }, err => {\n      var _a;\n      (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.FAILURE, {\n        method: \"relay::resetAndReload\",\n        message: \"failed to reset and reload with \".concat(err),\n        sessionIdHash: this.getSessionIdHash()\n      });\n    });\n  }\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n  get session() {\n    return this._session;\n  }\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumMessage,\n      params: {\n        message: (0, util_1.hexStringFromBuffer)(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n      params: {\n        message: (0, util_1.hexStringFromBuffer)(message, true),\n        signature: (0, util_1.hexStringFromBuffer)(signature, true),\n        addPrefix\n      }\n    });\n  }\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n        data: (0, util_1.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxPriorityFeePerGas: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n        data: (0, util_1.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.maxFeePerGas ? (0, util_1.bigIntStringFromBN)(params.maxFeePerGas) : null,\n        maxPriorityFeePerGas: params.maxPriorityFeePerGas ? (0, util_1.bigIntStringFromBN)(params.maxPriorityFeePerGas) : null,\n        gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.submitEthereumTransaction,\n      params: {\n        signedTransaction: (0, util_1.hexStringFromBuffer)(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.scanQRCode,\n      params: {\n        regExp\n      }\n    });\n  }\n  getQRCodeUrl() {\n    return (0, util_1.createQrUrl)(this._session.id, this._session.secret, this.linkAPIUrl, false, this.options.version, this.dappDefaultChain);\n  }\n  genericRequest(data, action) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.generic,\n      params: {\n        action,\n        data\n      }\n    });\n  }\n  sendGenericMessage(request) {\n    return this.sendRequest(request);\n  }\n  sendRequest(request) {\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    const promise = new Promise((resolve, reject) => {\n      if (!this.ui.isStandalone()) {\n        hideSnackbarItem = this.ui.showConnecting({\n          isUnlinkedErrorState: this.isUnlinkedErrorState,\n          onCancel: cancel,\n          onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n        });\n      }\n\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      if (this.ui.isStandalone()) {\n        this.sendRequestStandalone(id, request);\n      } else {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  setConnectDisabled(disabled) {\n    this.ui.setConnectDisabled(disabled);\n  }\n  setAccountsCallback(accountsCallback) {\n    this.accountsCallback = accountsCallback;\n  }\n  setChainCallback(chainCallback) {\n    this.chainCallback = chainCallback;\n  }\n  setDappDefaultChainCallback(chainId) {\n    this.dappDefaultChainSubject.next(chainId);\n  }\n  publishWeb3RequestEvent(id, request) {\n    var _a;\n    const message = (0, Web3RequestMessage_1.Web3RequestMessage)({\n      id,\n      request\n    });\n    const storedSession = Session_1.Session.load(this.storage);\n    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST, {\n      eventId: message.id,\n      method: \"relay::\".concat(message.request.method),\n      sessionIdHash: this.getSessionIdHash(),\n      storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : \"\",\n      isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString()\n    });\n    this.subscriptions.add(this.publishEvent(\"Web3Request\", message, true).subscribe({\n      next: _ => {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST_PUBLISHED, {\n          eventId: message.id,\n          method: \"relay::\".concat(message.request.method),\n          sessionIdHash: this.getSessionIdHash(),\n          storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : \"\",\n          isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString()\n        });\n      },\n      error: err => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id: message.id,\n          response: {\n            method: message.request.method,\n            errorMessage: err.message\n          }\n        }));\n      }\n    }));\n  }\n  publishWeb3RequestCanceledEvent(id) {\n    const message = (0, Web3RequestCanceledMessage_1.Web3RequestCanceledMessage)(id);\n    this.subscriptions.add(this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe());\n  }\n  publishEvent(event, message, callWebhook) {\n    const secret = this.session.secret;\n    return new rxjs_1.Observable(subscriber => {\n      void aes256gcm.encrypt(JSON.stringify(Object.assign(Object.assign({}, message), {\n        origin: location.origin\n      })), secret).then(encrypted => {\n        subscriber.next(encrypted);\n        subscriber.complete();\n      });\n    }).pipe((0, operators_1.mergeMap)(encrypted => {\n      return this.connection.publishEvent(event, encrypted, callWebhook);\n    }));\n  }\n  handleIncomingEvent(event) {\n    try {\n      this.subscriptions.add((0, rxjs_1.from)(aes256gcm.decrypt(event.data, this.session.secret)).pipe((0, operators_1.map)(c => JSON.parse(c))).subscribe({\n        next: json => {\n          const message = (0, Web3ResponseMessage_1.isWeb3ResponseMessage)(json) ? json : null;\n          if (!message) {\n            return;\n          }\n          this.handleWeb3ResponseMessage(message);\n        },\n        error: () => {\n          var _a;\n          (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n            message: \"Had error decrypting\",\n            value: \"incomingEvent\"\n          });\n        }\n      }));\n    } catch (_a) {\n      return;\n    }\n  }\n  handleWeb3ResponseMessage(message) {\n    var _a;\n    const {\n      response\n    } = message;\n    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_RESPONSE, {\n      eventId: message.id,\n      method: \"relay::\".concat(response.method),\n      sessionIdHash: this.getSessionIdHash()\n    });\n    if ((0, Web3Response_1.isRequestEthereumAccountsResponse)(response)) {\n      WalletSDKRelay.accountRequestCallbackIds.forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), {\n        id\n      })));\n      WalletSDKRelay.accountRequestCallbackIds.clear();\n      return;\n    }\n    this.invokeCallback(message);\n  }\n  handleErrorResponse(id, method, error, errorCode) {\n    var _a;\n    const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : (0, errors_1.standardErrorMessage)(errorCode);\n    this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n      id,\n      response: {\n        method,\n        errorMessage,\n        errorCode\n      }\n    }));\n  }\n  invokeCallback(message) {\n    const callback = this.relayEventManager.callbacks.get(message.id);\n    if (callback) {\n      callback(message.response);\n      this.relayEventManager.callbacks.delete(message.id);\n    }\n  }\n  requestEthereumAccounts() {\n    const request = {\n      method: Web3Method_1.Web3Method.requestEthereumAccounts,\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    };\n    const hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    const promise = new Promise((resolve, reject) => {\n      var _a;\n      this.relayEventManager.callbacks.set(id, response => {\n        this.ui.hideRequestEthereumAccounts();\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n      if (userAgent && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n        let location;\n        try {\n          if ((0, util_1.isInIFrame)() && window.top) {\n            location = window.top.location;\n          } else {\n            location = window.location;\n          }\n        } catch (e) {\n          location = window.location;\n        }\n        location.href = \"https://www.coinbase.com/connect-dapp?uri=\".concat(encodeURIComponent(location.href));\n        return;\n      }\n      if (this.ui.inlineAccountsResponse()) {\n        const onAccounts = accounts => {\n          this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n            id,\n            response: (0, Web3Response_1.RequestEthereumAccountsResponse)(accounts)\n          }));\n        };\n        this.ui.requestEthereumAccounts({\n          onCancel: cancel,\n          onAccounts\n        });\n      } else {\n        // Error if user closes TryExtensionLinkDialog without connecting\n        const err = errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n        this.ui.requestEthereumAccounts({\n          onCancel: () => cancel(err)\n        });\n      }\n      WalletSDKRelay.accountRequestCallbackIds.add(id);\n      if (!this.ui.inlineAccountsResponse() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  selectProvider(providerOptions) {\n    const request = {\n      method: Web3Method_1.Web3Method.selectProvider,\n      params: {\n        providerOptions\n      }\n    };\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.SelectProviderResponse)(types_1.ProviderType.Unselected)\n        }));\n      };\n      const approve = selectedProviderKey => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.SelectProviderResponse)(selectedProviderKey)\n        }));\n      };\n      if (this.ui.selectProvider) this.ui.selectProvider({\n        onApprove: approve,\n        onCancel: _cancel,\n        providerOptions\n      });\n    });\n    return {\n      cancel,\n      promise\n    };\n  }\n  watchAsset(type, address, symbol, decimals, image, chainId) {\n    const request = {\n      method: Web3Method_1.Web3Method.watchAsset,\n      params: {\n        type,\n        options: {\n          address,\n          symbol,\n          decimals,\n          image\n        },\n        chainId\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    if (!this.ui.inlineWatchAsset()) {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.WatchAssetReponse)(false)\n        }));\n      };\n      const approve = () => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.WatchAssetReponse)(true)\n        }));\n      };\n      if (this.ui.inlineWatchAsset()) {\n        this.ui.watchAsset({\n          onApprove: approve,\n          onCancel: _cancel,\n          type,\n          address,\n          symbol,\n          decimals,\n          image,\n          chainId\n        });\n      }\n      if (!this.ui.inlineWatchAsset() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      cancel,\n      promise\n    };\n  }\n  addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n    const request = {\n      method: Web3Method_1.Web3Method.addEthereumChain,\n      params: {\n        chainId,\n        rpcUrls,\n        blockExplorerUrls,\n        chainName,\n        iconUrls,\n        nativeCurrency\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    if (!this.ui.inlineAddEthereumChain(chainId)) {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = _error => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.AddEthereumChainResponse)({\n            isApproved: false,\n            rpcUrl: \"\"\n          })\n        }));\n      };\n      const approve = rpcUrl => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.AddEthereumChainResponse)({\n            isApproved: true,\n            rpcUrl\n          })\n        }));\n      };\n      if (this.ui.inlineAddEthereumChain(chainId)) {\n        this.ui.addEthereumChain({\n          onCancel: _cancel,\n          onApprove: approve,\n          chainId: request.params.chainId,\n          rpcUrls: request.params.rpcUrls,\n          blockExplorerUrls: request.params.blockExplorerUrls,\n          chainName: request.params.chainName,\n          iconUrls: request.params.iconUrls,\n          nativeCurrency: request.params.nativeCurrency\n        });\n      }\n      if (!this.ui.inlineAddEthereumChain(chainId) && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  switchEthereumChain(chainId, address) {\n    const request = {\n      method: Web3Method_1.Web3Method.switchEthereumChain,\n      params: Object.assign({\n        chainId\n      }, {\n        address\n      })\n    };\n    const id = (0, util_1.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n          return reject(errors_1.standardErrors.provider.custom({\n            code: response.errorCode,\n            message: \"Unrecognized chain ID. Try adding the chain using addEthereumChain first.\"\n          }));\n        } else if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      const _cancel = error => {\n        var _a;\n        if (error) {\n          // backward compatibility\n          const errorCode = (_a = (0, errors_1.getErrorCode)(error)) !== null && _a !== void 0 ? _a : errors_1.standardErrorCodes.provider.unsupportedChain;\n          this.handleErrorResponse(id, Web3Method_1.Web3Method.switchEthereumChain, error instanceof Error ? error : errors_1.standardErrors.provider.unsupportedChain(chainId), errorCode);\n        } else {\n          this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n            id,\n            response: (0, Web3Response_1.SwitchEthereumChainResponse)({\n              isApproved: false,\n              rpcUrl: \"\"\n            })\n          }));\n        }\n      };\n      const approve = rpcUrl => {\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n          id,\n          response: (0, Web3Response_1.SwitchEthereumChainResponse)({\n            isApproved: true,\n            rpcUrl\n          })\n        }));\n      };\n      this.ui.switchEthereumChain({\n        onCancel: _cancel,\n        onApprove: approve,\n        chainId: request.params.chainId,\n        address: request.params.address\n      });\n      if (!this.ui.inlineSwitchEthereumChain() && !this.ui.isStandalone()) {\n        this.publishWeb3RequestEvent(id, request);\n      }\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n  inlineAddEthereumChain(chainId) {\n    return this.ui.inlineAddEthereumChain(chainId);\n  }\n  getSessionIdHash() {\n    return Session_1.Session.hash(this._session.id);\n  }\n  sendRequestStandalone(id, request) {\n    const _cancel = error => {\n      this.handleErrorResponse(id, request.method, error);\n    };\n    const onSuccess = response => {\n      this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n        id,\n        response\n      }));\n    };\n    switch (request.method) {\n      case Web3Method_1.Web3Method.signEthereumMessage:\n        this.ui.signEthereumMessage({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case Web3Method_1.Web3Method.signEthereumTransaction:\n        this.ui.signEthereumTransaction({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case Web3Method_1.Web3Method.submitEthereumTransaction:\n        this.ui.submitEthereumTransaction({\n          request,\n          onSuccess,\n          onCancel: _cancel\n        });\n        break;\n      case Web3Method_1.Web3Method.ethereumAddressFromSignedMessage:\n        this.ui.ethereumAddressFromSignedMessage({\n          request,\n          onSuccess\n        });\n        break;\n      default:\n        _cancel();\n        break;\n    }\n  }\n  onSessionConfigChanged(_nextSessionConfig) {}\n}\nWalletSDKRelay.accountRequestCallbackIds = new Set();\n__decorate([bind_decorator_1.default], WalletSDKRelay.prototype, \"resetAndReload\", null);\n__decorate([bind_decorator_1.default], WalletSDKRelay.prototype, \"handleIncomingEvent\", null);\nexports.WalletSDKRelay = WalletSDKRelay;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","WalletSDKRelay","bind_decorator_1","require","rxjs_1","operators_1","DiagnosticLogger_1","WalletSDKConnection_1","errors_1","types_1","util_1","aes256gcm","Session_1","WalletSDKRelayAbstract_1","Web3Method_1","Web3RequestCanceledMessage_1","Web3RequestMessage_1","Web3Response_1","Web3ResponseMessage_1","WalletSDKRelayAbstract","constructor","options","_a","accountsCallback","chainCallback","dappDefaultChainSubject","BehaviorSubject","dappDefaultChain","appName","appLogoUrl","subscriptions","Subscription","linkAPIUrl","storage","session","ui","connection","subscribe","_session","relayEventManager","diagnosticLogger","eventListener","Error","diagnostic","log","onEvent","_reloadOnDisconnect","reloadOnDisconnect","add","chainId","Session","load","save","WalletSDKConnection","id","sessionConfig$","next","sessionConfig","onSessionConfigChanged","error","EVENTS","GENERAL_ERROR","message","incomingEvent$","pipe","filter","event","handleIncomingEvent","linked$","skip","tap","linked","isLinked","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","isUnlinkedErrorState","addresses","split","wasConnectedViaStandalone","sessionIdHash","getSessionIdHash","UNLINKED_ERROR_STATE","metadata","__destroyed","alreadyDestroyed","isDestroyed","METADATA_DESTROYED","resetAndReload","WalletUsername","mergeMap","decrypt","secret","walletUsername","setItem","WALLET_USER_NAME_KEY","AppVersion","appVersion","APP_VERSION_KEY","ChainId","JsonRpcUrl","zip","distinctUntilChanged","_ref","jsonRpcUrl","EthereumAddress","selectedAddress","accountRequestCallbackIds","size","Array","from","values","forEach","Web3ResponseMessage","response","RequestEthereumAccountsResponse","invokeCallback","assign","clear","AppSrc","appSrc","setAppSrc","uiConstructor","version","darkMode","connected$","chainId$","connect","attachUI","attach","setSessionMetadata","timeout","catchError","_","of","_b","_c","isStandalone","unsubscribe","err","SESSION_STATE_CHANGE","method","sessionMetadataChange","destroy","storedSession","SKIPPED_CLEARING_SESSION","storedSessionIdHash","hash","reloadUI","setStandalone","FAILURE","concat","setAppInfo","getStorageItem","setStorageItem","signEthereumMessage","address","addPrefix","typedDataJson","sendRequest","Web3Method","params","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBN","data","nonce","gasPriceInWei","maxFeePerGas","maxPriorityFeePerGas","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","getQRCodeUrl","createQrUrl","genericRequest","action","generic","sendGenericMessage","request","hideSnackbarItem","randomBytesHex","cancel","publishWeb3RequestCanceledEvent","handleErrorResponse","promise","Promise","resolve","reject","showConnecting","onCancel","onResetConnection","callbacks","set","errorMessage","sendRequestStandalone","publishWeb3RequestEvent","setConnectDisabled","disabled","setAccountsCallback","setChainCallback","setDappDefaultChainCallback","Web3RequestMessage","WEB3_REQUEST","eventId","isSessionMismatched","toString","publishEvent","WEB3_REQUEST_PUBLISHED","handleWeb3ResponseMessage","Web3RequestCanceledMessage","callWebhook","Observable","subscriber","encrypt","JSON","stringify","origin","location","then","encrypted","complete","map","parse","json","isWeb3ResponseMessage","WEB3_RESPONSE","isRequestEthereumAccountsResponse","errorCode","standardErrorMessage","callback","delete","requestEthereumAccounts","hideRequestEthereumAccounts","userAgent","window","navigator","test","isInIFrame","top","e","href","encodeURIComponent","inlineAccountsResponse","onAccounts","accounts","standardErrors","provider","userRejectedRequest","selectProvider","providerOptions","_cancel","_error","SelectProviderResponse","ProviderType","Unselected","approve","selectedProviderKey","onApprove","watchAsset","type","symbol","decimals","image","inlineWatchAsset","WatchAssetReponse","addEthereumChain","rpcUrls","iconUrls","blockExplorerUrls","chainName","nativeCurrency","inlineAddEthereumChain","AddEthereumChainResponse","isApproved","rpcUrl","switchEthereumChain","isErrorResponse","custom","code","getErrorCode","standardErrorCodes","unsupportedChain","SwitchEthereumChainResponse","inlineSwitchEthereumChain","onSuccess","_nextSessionConfig","Set","default"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@coinbase/wallet-sdk/dist/relay/WalletSDKRelay.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletSDKRelay = void 0;\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst WalletSDKConnection_1 = require(\"../connection/WalletSDKConnection\");\nconst errors_1 = require(\"../errors\");\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\nconst Session_1 = require(\"./Session\");\nconst WalletSDKRelayAbstract_1 = require(\"./WalletSDKRelayAbstract\");\nconst Web3Method_1 = require(\"./Web3Method\");\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\nconst Web3Response_1 = require(\"./Web3Response\");\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\nclass WalletSDKRelay extends WalletSDKRelayAbstract_1.WalletSDKRelayAbstract {\n    constructor(options) {\n        var _a;\n        super();\n        this.accountsCallback = null;\n        this.chainCallback = null;\n        this.dappDefaultChainSubject = new rxjs_1.BehaviorSubject(1);\n        this.dappDefaultChain = 1;\n        this.appName = \"\";\n        this.appLogoUrl = null;\n        this.subscriptions = new rxjs_1.Subscription();\n        this.linkAPIUrl = options.linkAPIUrl;\n        this.storage = options.storage;\n        this.options = options;\n        const { session, ui, connection } = this.subscribe();\n        this._session = session;\n        this.connection = connection;\n        this.relayEventManager = options.relayEventManager;\n        if (options.diagnosticLogger && options.eventListener) {\n            throw new Error(\"Can't have both eventListener and diagnosticLogger options, use only diagnosticLogger\");\n        }\n        if (options.eventListener) {\n            this.diagnostic = {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                log: options.eventListener.onEvent,\n            };\n        }\n        else {\n            this.diagnostic = options.diagnosticLogger;\n        }\n        this._reloadOnDisconnect = (_a = options.reloadOnDisconnect) !== null && _a !== void 0 ? _a : true;\n        this.ui = ui;\n    }\n    subscribe() {\n        this.subscriptions.add(this.dappDefaultChainSubject.subscribe(chainId => {\n            if (this.dappDefaultChain !== chainId) {\n                this.dappDefaultChain = chainId;\n            }\n        }));\n        const session = Session_1.Session.load(this.storage) || new Session_1.Session(this.storage).save();\n        const connection = new WalletSDKConnection_1.WalletSDKConnection(session.id, session.key, this.linkAPIUrl, this.diagnostic);\n        this.subscriptions.add(connection.sessionConfig$.subscribe({\n            next: sessionConfig => {\n                this.onSessionConfigChanged(sessionConfig);\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"error while invoking session config callback\",\n                });\n            },\n        }));\n        this.subscriptions.add(connection.incomingEvent$\n            .pipe((0, operators_1.filter)(m => m.event === \"Web3Response\"))\n            .subscribe({ next: this.handleIncomingEvent }));\n        this.subscriptions.add(connection.linked$\n            .pipe((0, operators_1.skip)(1), (0, operators_1.tap)((linked) => {\n            var _a;\n            this.isLinked = linked;\n            const cachedAddresses = this.storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n            if (linked) {\n                // Only set linked session variable one way\n                this.session.linked = linked;\n            }\n            this.isUnlinkedErrorState = false;\n            if (cachedAddresses) {\n                const addresses = cachedAddresses.split(\" \");\n                const wasConnectedViaStandalone = this.storage.getItem(\"IsStandaloneSigning\") === \"true\";\n                if (addresses[0] !== \"\" &&\n                    !linked &&\n                    this.session.linked &&\n                    !wasConnectedViaStandalone) {\n                    this.isUnlinkedErrorState = true;\n                    const sessionIdHash = this.getSessionIdHash();\n                    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNLINKED_ERROR_STATE, {\n                        sessionIdHash,\n                    });\n                }\n            }\n        }))\n            .subscribe());\n        // if session is marked destroyed, reset and reload\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => !!c.metadata && c.metadata.__destroyed === \"1\"))\n            .subscribe(() => {\n            var _a;\n            const alreadyDestroyed = connection.isDestroyed;\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.METADATA_DESTROYED, {\n                alreadyDestroyed,\n                sessionIdHash: this.getSessionIdHash(),\n            });\n            return this.resetAndReload();\n        }));\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => c.metadata && c.metadata.WalletUsername !== undefined))\n            .pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.WalletUsername, session.secret)))\n            .subscribe({\n            next: walletUsername => {\n                this.storage.setItem(WalletSDKRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error decrypting\",\n                    value: \"username\",\n                });\n            },\n        }));\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => c.metadata && c.metadata.AppVersion !== undefined))\n            .pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.AppVersion, session.secret)))\n            .subscribe({\n            next: appVersion => {\n                this.storage.setItem(WalletSDKRelayAbstract_1.APP_VERSION_KEY, appVersion);\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error decrypting\",\n                    value: \"appversion\",\n                });\n            },\n        }));\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => c.metadata &&\n            c.metadata.ChainId !== undefined &&\n            c.metadata.JsonRpcUrl !== undefined))\n            .pipe((0, operators_1.mergeMap)(c => (0, rxjs_1.zip)(aes256gcm.decrypt(c.metadata.ChainId, session.secret), aes256gcm.decrypt(c.metadata.JsonRpcUrl, session.secret))))\n            .pipe((0, operators_1.distinctUntilChanged)())\n            .subscribe({\n            next: ([chainId, jsonRpcUrl]) => {\n                if (this.chainCallback) {\n                    this.chainCallback(chainId, jsonRpcUrl);\n                }\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error decrypting\",\n                    value: \"chainId|jsonRpcUrl\",\n                });\n            },\n        }));\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => c.metadata && c.metadata.EthereumAddress !== undefined))\n            .pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.EthereumAddress, session.secret)))\n            .subscribe({\n            next: selectedAddress => {\n                if (this.accountsCallback) {\n                    this.accountsCallback([selectedAddress]);\n                }\n                if (WalletSDKRelay.accountRequestCallbackIds.size > 0) {\n                    // We get the ethereum address from the metadata.  If for whatever\n                    // reason we don't get a response via an explicit web3 message\n                    // we can still fulfill the eip1102 request.\n                    Array.from(WalletSDKRelay.accountRequestCallbackIds.values()).forEach(id => {\n                        const message = (0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                            id,\n                            response: (0, Web3Response_1.RequestEthereumAccountsResponse)([\n                                selectedAddress,\n                            ]),\n                        });\n                        this.invokeCallback(Object.assign(Object.assign({}, message), { id }));\n                    });\n                    WalletSDKRelay.accountRequestCallbackIds.clear();\n                }\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error decrypting\",\n                    value: \"selectedAddress\",\n                });\n            },\n        }));\n        this.subscriptions.add(connection.sessionConfig$\n            .pipe((0, operators_1.filter)(c => c.metadata && c.metadata.AppSrc !== undefined))\n            .pipe((0, operators_1.mergeMap)(c => aes256gcm.decrypt(c.metadata.AppSrc, session.secret)))\n            .subscribe({\n            next: appSrc => {\n                this.ui.setAppSrc(appSrc);\n            },\n            error: () => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error decrypting\",\n                    value: \"appSrc\",\n                });\n            },\n        }));\n        const ui = this.options.uiConstructor({\n            linkAPIUrl: this.options.linkAPIUrl,\n            version: this.options.version,\n            darkMode: this.options.darkMode,\n            session,\n            connected$: connection.connected$,\n            chainId$: this.dappDefaultChainSubject,\n        });\n        connection.connect();\n        return { session, ui, connection };\n    }\n    attachUI() {\n        this.ui.attach();\n    }\n    resetAndReload() {\n        this.connection\n            .setSessionMetadata(\"__destroyed\", \"1\")\n            .pipe((0, operators_1.timeout)(1000), (0, operators_1.catchError)(_ => (0, rxjs_1.of)(null)))\n            .subscribe(_ => {\n            var _a, _b, _c;\n            const isStandalone = this.ui.isStandalone();\n            try {\n                this.subscriptions.unsubscribe();\n            }\n            catch (err) {\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error unsubscribing\",\n                });\n            }\n            (_b = this.diagnostic) === null || _b === void 0 ? void 0 : _b.log(DiagnosticLogger_1.EVENTS.SESSION_STATE_CHANGE, {\n                method: \"relay::resetAndReload\",\n                sessionMetadataChange: \"__destroyed, 1\",\n                sessionIdHash: this.getSessionIdHash(),\n            });\n            this.connection.destroy();\n            /**\n             * Only clear storage if the session id we have in memory matches the one on disk\n             * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n             * storage already.  In that case if we clear storage again, the user will be in\n             * a state where the first tab allows the user to connect but the session that\n             * was used isn't persisted.  This leaves the user in a state where they aren't\n             * connected to the mobile app.\n             */\n            const storedSession = Session_1.Session.load(this.storage);\n            if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n                this.storage.clear();\n            }\n            else if (storedSession) {\n                (_c = this.diagnostic) === null || _c === void 0 ? void 0 : _c.log(DiagnosticLogger_1.EVENTS.SKIPPED_CLEARING_SESSION, {\n                    sessionIdHash: this.getSessionIdHash(),\n                    storedSessionIdHash: Session_1.Session.hash(storedSession.id),\n                });\n            }\n            if (this._reloadOnDisconnect) {\n                this.ui.reloadUI();\n                return;\n            }\n            if (this.accountsCallback) {\n                this.accountsCallback([], true);\n            }\n            this.subscriptions = new rxjs_1.Subscription();\n            const { session, ui, connection } = this.subscribe();\n            this._session = session;\n            this.connection = connection;\n            this.ui = ui;\n            if (isStandalone && this.ui.setStandalone)\n                this.ui.setStandalone(true);\n            this.attachUI();\n        }, (err) => {\n            var _a;\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.FAILURE, {\n                method: \"relay::resetAndReload\",\n                message: `failed to reset and reload with ${err}`,\n                sessionIdHash: this.getSessionIdHash(),\n            });\n        });\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    get session() {\n        return this._session;\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumMessage,\n            params: {\n                message: (0, util_1.hexStringFromBuffer)(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null,\n            },\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n            params: {\n                message: (0, util_1.hexStringFromBuffer)(message, true),\n                signature: (0, util_1.hexStringFromBuffer)(signature, true),\n                addPrefix,\n            },\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n                data: (0, util_1.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.gasPriceInWei\n                    ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei)\n                    : null,\n                maxPriorityFeePerGas: params.gasPriceInWei\n                    ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false,\n            },\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_1.bigIntStringFromBN)(params.weiValue),\n                data: (0, util_1.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? (0, util_1.bigIntStringFromBN)(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.maxFeePerGas\n                    ? (0, util_1.bigIntStringFromBN)(params.maxFeePerGas)\n                    : null,\n                maxPriorityFeePerGas: params.maxPriorityFeePerGas\n                    ? (0, util_1.bigIntStringFromBN)(params.maxPriorityFeePerGas)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_1.bigIntStringFromBN)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true,\n            },\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.submitEthereumTransaction,\n            params: {\n                signedTransaction: (0, util_1.hexStringFromBuffer)(signedTransaction, true),\n                chainId,\n            },\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.scanQRCode,\n            params: { regExp },\n        });\n    }\n    getQRCodeUrl() {\n        return (0, util_1.createQrUrl)(this._session.id, this._session.secret, this.linkAPIUrl, false, this.options.version, this.dappDefaultChain);\n    }\n    genericRequest(data, action) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.generic,\n            params: {\n                action,\n                data,\n            },\n        });\n    }\n    sendGenericMessage(request) {\n        return this.sendRequest(request);\n    }\n    sendRequest(request) {\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        const promise = new Promise((resolve, reject) => {\n            if (!this.ui.isStandalone()) {\n                hideSnackbarItem = this.ui.showConnecting({\n                    isUnlinkedErrorState: this.isUnlinkedErrorState,\n                    onCancel: cancel,\n                    onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n                });\n            }\n            this.relayEventManager.callbacks.set(id, response => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            if (this.ui.isStandalone()) {\n                this.sendRequestStandalone(id, request);\n            }\n            else {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    setConnectDisabled(disabled) {\n        this.ui.setConnectDisabled(disabled);\n    }\n    setAccountsCallback(accountsCallback) {\n        this.accountsCallback = accountsCallback;\n    }\n    setChainCallback(chainCallback) {\n        this.chainCallback = chainCallback;\n    }\n    setDappDefaultChainCallback(chainId) {\n        this.dappDefaultChainSubject.next(chainId);\n    }\n    publishWeb3RequestEvent(id, request) {\n        var _a;\n        const message = (0, Web3RequestMessage_1.Web3RequestMessage)({ id, request });\n        const storedSession = Session_1.Session.load(this.storage);\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST, {\n            eventId: message.id,\n            method: `relay::${message.request.method}`,\n            sessionIdHash: this.getSessionIdHash(),\n            storedSessionIdHash: storedSession ? Session_1.Session.hash(storedSession.id) : \"\",\n            isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString(),\n        });\n        this.subscriptions.add(this.publishEvent(\"Web3Request\", message, true).subscribe({\n            next: _ => {\n                var _a;\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_REQUEST_PUBLISHED, {\n                    eventId: message.id,\n                    method: `relay::${message.request.method}`,\n                    sessionIdHash: this.getSessionIdHash(),\n                    storedSessionIdHash: storedSession\n                        ? Session_1.Session.hash(storedSession.id)\n                        : \"\",\n                    isSessionMismatched: ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) !== this._session.id).toString(),\n                });\n            },\n            error: err => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id: message.id,\n                    response: {\n                        method: message.request.method,\n                        errorMessage: err.message,\n                    },\n                }));\n            },\n        }));\n    }\n    publishWeb3RequestCanceledEvent(id) {\n        const message = (0, Web3RequestCanceledMessage_1.Web3RequestCanceledMessage)(id);\n        this.subscriptions.add(this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe());\n    }\n    publishEvent(event, message, callWebhook) {\n        const secret = this.session.secret;\n        return new rxjs_1.Observable(subscriber => {\n            void aes256gcm\n                .encrypt(JSON.stringify(Object.assign(Object.assign({}, message), { origin: location.origin })), secret)\n                .then((encrypted) => {\n                subscriber.next(encrypted);\n                subscriber.complete();\n            });\n        }).pipe((0, operators_1.mergeMap)((encrypted) => {\n            return this.connection.publishEvent(event, encrypted, callWebhook);\n        }));\n    }\n    handleIncomingEvent(event) {\n        try {\n            this.subscriptions.add((0, rxjs_1.from)(aes256gcm.decrypt(event.data, this.session.secret))\n                .pipe((0, operators_1.map)(c => JSON.parse(c)))\n                .subscribe({\n                next: json => {\n                    const message = (0, Web3ResponseMessage_1.isWeb3ResponseMessage)(json) ? json : null;\n                    if (!message) {\n                        return;\n                    }\n                    this.handleWeb3ResponseMessage(message);\n                },\n                error: () => {\n                    var _a;\n                    (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.GENERAL_ERROR, {\n                        message: \"Had error decrypting\",\n                        value: \"incomingEvent\",\n                    });\n                },\n            }));\n        }\n        catch (_a) {\n            return;\n        }\n    }\n    handleWeb3ResponseMessage(message) {\n        var _a;\n        const { response } = message;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.WEB3_RESPONSE, {\n            eventId: message.id,\n            method: `relay::${response.method}`,\n            sessionIdHash: this.getSessionIdHash(),\n        });\n        if ((0, Web3Response_1.isRequestEthereumAccountsResponse)(response)) {\n            WalletSDKRelay.accountRequestCallbackIds.forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), { id })));\n            WalletSDKRelay.accountRequestCallbackIds.clear();\n            return;\n        }\n        this.invokeCallback(message);\n    }\n    handleErrorResponse(id, method, error, errorCode) {\n        var _a;\n        const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : (0, errors_1.standardErrorMessage)(errorCode);\n        this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n            id,\n            response: {\n                method,\n                errorMessage,\n                errorCode,\n            },\n        }));\n    }\n    invokeCallback(message) {\n        const callback = this.relayEventManager.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            this.relayEventManager.callbacks.delete(message.id);\n        }\n    }\n    requestEthereumAccounts() {\n        const request = {\n            method: Web3Method_1.Web3Method.requestEthereumAccounts,\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null,\n            },\n        };\n        const hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        const promise = new Promise((resolve, reject) => {\n            var _a;\n            this.relayEventManager.callbacks.set(id, response => {\n                this.ui.hideRequestEthereumAccounts();\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n            if (userAgent &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n                let location;\n                try {\n                    if ((0, util_1.isInIFrame)() && window.top) {\n                        location = window.top.location;\n                    }\n                    else {\n                        location = window.location;\n                    }\n                }\n                catch (e) {\n                    location = window.location;\n                }\n                location.href = `https://www.coinbase.com/connect-dapp?uri=${encodeURIComponent(location.href)}`;\n                return;\n            }\n            if (this.ui.inlineAccountsResponse()) {\n                const onAccounts = (accounts) => {\n                    this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                        id,\n                        response: (0, Web3Response_1.RequestEthereumAccountsResponse)(accounts),\n                    }));\n                };\n                this.ui.requestEthereumAccounts({\n                    onCancel: cancel,\n                    onAccounts,\n                });\n            }\n            else {\n                // Error if user closes TryExtensionLinkDialog without connecting\n                const err = errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n                this.ui.requestEthereumAccounts({\n                    onCancel: () => cancel(err),\n                });\n            }\n            WalletSDKRelay.accountRequestCallbackIds.add(id);\n            if (!this.ui.inlineAccountsResponse() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    selectProvider(providerOptions) {\n        const request = {\n            method: Web3Method_1.Web3Method.selectProvider,\n            params: {\n                providerOptions,\n            },\n        };\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, response => {\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.SelectProviderResponse)(types_1.ProviderType.Unselected),\n                }));\n            };\n            const approve = (selectedProviderKey) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.SelectProviderResponse)(selectedProviderKey),\n                }));\n            };\n            if (this.ui.selectProvider)\n                this.ui.selectProvider({\n                    onApprove: approve,\n                    onCancel: _cancel,\n                    providerOptions,\n                });\n        });\n        return { cancel, promise };\n    }\n    watchAsset(type, address, symbol, decimals, image, chainId) {\n        const request = {\n            method: Web3Method_1.Web3Method.watchAsset,\n            params: {\n                type,\n                options: {\n                    address,\n                    symbol,\n                    decimals,\n                    image,\n                },\n                chainId,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        if (!this.ui.inlineWatchAsset()) {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, response => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.WatchAssetReponse)(false),\n                }));\n            };\n            const approve = () => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.WatchAssetReponse)(true),\n                }));\n            };\n            if (this.ui.inlineWatchAsset()) {\n                this.ui.watchAsset({\n                    onApprove: approve,\n                    onCancel: _cancel,\n                    type,\n                    address,\n                    symbol,\n                    decimals,\n                    image,\n                    chainId,\n                });\n            }\n            if (!this.ui.inlineWatchAsset() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { cancel, promise };\n    }\n    addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n        const request = {\n            method: Web3Method_1.Web3Method.addEthereumChain,\n            params: {\n                chainId,\n                rpcUrls,\n                blockExplorerUrls,\n                chainName,\n                iconUrls,\n                nativeCurrency,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        if (!this.ui.inlineAddEthereumChain(chainId)) {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, response => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (_error) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.AddEthereumChainResponse)({\n                        isApproved: false,\n                        rpcUrl: \"\",\n                    }),\n                }));\n            };\n            const approve = (rpcUrl) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.AddEthereumChainResponse)({ isApproved: true, rpcUrl }),\n                }));\n            };\n            if (this.ui.inlineAddEthereumChain(chainId)) {\n                this.ui.addEthereumChain({\n                    onCancel: _cancel,\n                    onApprove: approve,\n                    chainId: request.params.chainId,\n                    rpcUrls: request.params.rpcUrls,\n                    blockExplorerUrls: request.params.blockExplorerUrls,\n                    chainName: request.params.chainName,\n                    iconUrls: request.params.iconUrls,\n                    nativeCurrency: request.params.nativeCurrency,\n                });\n            }\n            if (!this.ui.inlineAddEthereumChain(chainId) && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    switchEthereumChain(chainId, address) {\n        const request = {\n            method: Web3Method_1.Web3Method.switchEthereumChain,\n            params: Object.assign({ chainId }, { address }),\n        };\n        const id = (0, util_1.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, response => {\n                if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n                    return reject(errors_1.standardErrors.provider.custom({\n                        code: response.errorCode,\n                        message: `Unrecognized chain ID. Try adding the chain using addEthereumChain first.`,\n                    }));\n                }\n                else if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const _cancel = (error) => {\n                var _a;\n                if (error) {\n                    // backward compatibility\n                    const errorCode = (_a = (0, errors_1.getErrorCode)(error)) !== null && _a !== void 0 ? _a : errors_1.standardErrorCodes.provider.unsupportedChain;\n                    this.handleErrorResponse(id, Web3Method_1.Web3Method.switchEthereumChain, error instanceof Error\n                        ? error\n                        : errors_1.standardErrors.provider.unsupportedChain(chainId), errorCode);\n                }\n                else {\n                    this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                        id,\n                        response: (0, Web3Response_1.SwitchEthereumChainResponse)({\n                            isApproved: false,\n                            rpcUrl: \"\",\n                        }),\n                    }));\n                }\n            };\n            const approve = (rpcUrl) => {\n                this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                    id,\n                    response: (0, Web3Response_1.SwitchEthereumChainResponse)({\n                        isApproved: true,\n                        rpcUrl,\n                    }),\n                }));\n            };\n            this.ui.switchEthereumChain({\n                onCancel: _cancel,\n                onApprove: approve,\n                chainId: request.params.chainId,\n                address: request.params.address,\n            });\n            if (!this.ui.inlineSwitchEthereumChain() && !this.ui.isStandalone()) {\n                this.publishWeb3RequestEvent(id, request);\n            }\n        });\n        return { promise, cancel };\n    }\n    inlineAddEthereumChain(chainId) {\n        return this.ui.inlineAddEthereumChain(chainId);\n    }\n    getSessionIdHash() {\n        return Session_1.Session.hash(this._session.id);\n    }\n    sendRequestStandalone(id, request) {\n        const _cancel = (error) => {\n            this.handleErrorResponse(id, request.method, error);\n        };\n        const onSuccess = (response) => {\n            this.handleWeb3ResponseMessage((0, Web3ResponseMessage_1.Web3ResponseMessage)({\n                id,\n                response,\n            }));\n        };\n        switch (request.method) {\n            case Web3Method_1.Web3Method.signEthereumMessage:\n                this.ui.signEthereumMessage({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case Web3Method_1.Web3Method.signEthereumTransaction:\n                this.ui.signEthereumTransaction({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case Web3Method_1.Web3Method.submitEthereumTransaction:\n                this.ui.submitEthereumTransaction({\n                    request,\n                    onSuccess,\n                    onCancel: _cancel,\n                });\n                break;\n            case Web3Method_1.Web3Method.ethereumAddressFromSignedMessage:\n                this.ui.ethereumAddressFromSignedMessage({\n                    request,\n                    onSuccess,\n                });\n                break;\n            default:\n                _cancel();\n                break;\n        }\n    }\n    onSessionConfigChanged(_nextSessionConfig) { }\n}\nWalletSDKRelay.accountRequestCallbackIds = new Set();\n__decorate([\n    bind_decorator_1.default\n], WalletSDKRelay.prototype, \"resetAndReload\", null);\n__decorate([\n    bind_decorator_1.default\n], WalletSDKRelay.prototype, \"handleIncomingEvent\", null);\nexports.WalletSDKRelay = WalletSDKRelay;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}