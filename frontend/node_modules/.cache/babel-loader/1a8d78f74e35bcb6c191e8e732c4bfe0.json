{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { isPrimitive } from './is';\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope(headers, items) {\n  if (items === void 0) {\n    items = [];\n  }\n  return [headers, items];\n}\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope(envelope, newItem) {\n  var _a = __read(envelope, 2),\n    headers = _a[0],\n    items = _a[1];\n  return [headers, __spread(items, [newItem])];\n}\n/**\n * Get the type of the envelope. Grabs the type from the first envelope item.\n */\nexport function getEnvelopeType(envelope) {\n  var _a = __read(envelope, 2),\n    _b = __read(_a[1], 1),\n    _c = __read(_b[0], 1),\n    firstItemHeader = _c[0];\n  return firstItemHeader.type;\n}\n/**\n * Serializes an envelope into a string.\n */\nexport function serializeEnvelope(envelope) {\n  var _a = __read(envelope, 2),\n    headers = _a[0],\n    items = _a[1];\n  var serializedHeaders = JSON.stringify(headers);\n  // Have to cast items to any here since Envelope is a union type\n  // Fixed in Typescript 4.2\n  // TODO: Remove any[] cast when we upgrade to TS 4.2\n  // https://github.com/microsoft/TypeScript/issues/36390\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return items.reduce(function (acc, item) {\n    var _a = __read(item, 2),\n      itemHeaders = _a[0],\n      payload = _a[1];\n    // We do not serialize payloads that are primitives\n    var serializedPayload = isPrimitive(payload) ? String(payload) : JSON.stringify(payload);\n    return acc + \"\\n\" + JSON.stringify(itemHeaders) + \"\\n\" + serializedPayload;\n  }, serializedHeaders);\n}","map":null,"metadata":{},"sourceType":"module"}