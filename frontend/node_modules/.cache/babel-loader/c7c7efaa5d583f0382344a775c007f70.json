{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$();\n// @ts-nocheck\n\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { currencyEquals, Token } from '@ubeswap/sdk';\nimport { arrayify } from 'ethers/lib/utils';\nimport { useMemo } from 'react';\nimport { filterTokens } from '../components/SearchModal/filtering';\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks';\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport { useUserAddedTokens } from '../state/user/hooks';\nimport { isAddress } from '../utils';\nimport { useDefaultTokenList, useUnsupportedTokenList } from './../state/lists/hooks';\nimport { useBytes32TokenContract, useTokenContract } from './useContract';\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap, includeUserAdded, chainIdOpt) {\n  _s();\n  const chainId = 62;\n  return useMemo(() => {\n    if (!chainId || !tokenMap[chainId]) return {};\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token;\n      return newMap;\n    }, {});\n    return mapWithoutUrls;\n  }, [chainId, tokenMap, includeUserAdded]);\n}\n_s(useTokensFromMap, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport function useDefaultTokens() {\n  _s2();\n  const defaultList = useDefaultTokenList();\n  return useTokensFromMap(defaultList, false);\n}\n_s2(useDefaultTokens, \"KFd6g+TcR728AgRacaW35zCvQZc=\", false, function () {\n  return [useDefaultTokenList, useTokensFromMap];\n});\nexport function useAllTokens(chainId) {\n  _s3();\n  const allTokens = useCombinedActiveList();\n  return useTokensFromMap(allTokens, true, chainId);\n}\n_s3(useAllTokens, \"jCGW4tI4Rs1UGm9shzKA8VnDJ0A=\", false, function () {\n  return [useCombinedActiveList, useTokensFromMap];\n});\nexport function useAllInactiveTokens() {\n  _s4();\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList();\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false);\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens());\n  const filteredInactive = activeTokensAddresses ? Object.keys(inactiveTokens).reduce((newMap, address) => {\n    if (!activeTokensAddresses.includes(address)) {\n      newMap[address] = inactiveTokens[address];\n    }\n    return newMap;\n  }, {}) : inactiveTokens;\n  return filteredInactive;\n}\n_s4(useAllInactiveTokens, \"y9223uP8GCC/3ME2n383kLmFOz4=\", false, function () {\n  return [useCombinedInactiveList, useTokensFromMap, useAllTokens];\n});\nexport function useUnsupportedTokens() {\n  _s5();\n  const unsupportedTokensMap = useUnsupportedTokenList();\n  return useTokensFromMap(unsupportedTokensMap, false);\n}\n_s5(useUnsupportedTokens, \"cfUcH2/tU9tFbaAvFr6x9maL1ms=\", false, function () {\n  return [useUnsupportedTokenList, useTokensFromMap];\n});\nexport function useIsTokenActive(token) {\n  _s6();\n  const activeTokens = useAllTokens();\n  if (!activeTokens || !token) {\n    return false;\n  }\n  return !!activeTokens[token.address];\n}\n\n// used to detect extra search results\n_s6(useIsTokenActive, \"/DZnqUeqi963rU8m84lshLFLG1g=\", false, function () {\n  return [useAllTokens];\n});\nexport function useFoundOnInactiveList(searchQuery) {\n  _s7();\n  const chainId = 62;\n  const inactiveTokens = useAllInactiveTokens();\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined;\n    } else {\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery);\n      return tokens;\n    }\n  }, [chainId, inactiveTokens, searchQuery]);\n}\n\n// Check if currency is included in custom list from user storage\n_s7(useFoundOnInactiveList, \"CHbNST6y0dGVgg9eTLvDjW+3J30=\", false, function () {\n  return [useAllInactiveTokens];\n});\nexport function useIsUserAddedToken(currency) {\n  _s8();\n  const userAddedTokens = useUserAddedTokens();\n  if (!currency) {\n    return false;\n  }\n  return !!userAddedTokens.find(token => currencyEquals(currency, token));\n}\n\n// parse a name or symbol from a token response\n_s8(useIsUserAddedToken, \"/J12HuilTfT8HPlUWn/aslQP0JY=\", false, function () {\n  return [useUserAddedTokens];\n});\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\nexport function parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0 ? str :\n  // need to check for proper bytes string and valid terminator\n  bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0 ? parseBytes32String(bytes32) : defaultValue;\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  _s9();\n  const chainId = 62;\n  const tokens = useAllTokens();\n  const address = isAddress(tokenAddress);\n  const tokenContract = useTokenContract(address ? address : undefined, false);\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false);\n  const token = address ? tokens[address] : undefined;\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\n  const tokenNameBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'name', undefined, NEVER_RELOAD);\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD);\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\n  return useMemo(() => {\n    if (token) return token;\n    if (!chainId || !address) return undefined;\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\n    if (decimals.result) {\n      var _symbol$result, _symbolBytes32$result, _tokenName$result, _tokenNameBytes32$res;\n      return new Token(chainId, address, decimals.result[0], parseStringOrBytes32((_symbol$result = symbol.result) === null || _symbol$result === void 0 ? void 0 : _symbol$result[0], (_symbolBytes32$result = symbolBytes32.result) === null || _symbolBytes32$result === void 0 ? void 0 : _symbolBytes32$result[0], 'UNKNOWN'), parseStringOrBytes32((_tokenName$result = tokenName.result) === null || _tokenName$result === void 0 ? void 0 : _tokenName$result[0], (_tokenNameBytes32$res = tokenNameBytes32.result) === null || _tokenNameBytes32$res === void 0 ? void 0 : _tokenNameBytes32$res[0], 'Unknown Token'));\n    }\n    return undefined;\n  }, [address, chainId, decimals.loading, decimals.result, symbol.loading, symbol.result, symbolBytes32.result, token, tokenName.loading, tokenName.result, tokenNameBytes32.result]);\n}\n_s9(useToken, \"KO1r0hadSodid04FfA2vVJINJRY=\", false, function () {\n  return [useAllTokens, useTokenContract, useBytes32TokenContract, useSingleCallResult, useSingleCallResult, useSingleCallResult, useSingleCallResult, useSingleCallResult];\n});\nexport function useCurrency(currencyId) {\n  _s10();\n  const token = useToken(currencyId);\n  return token;\n}\n_s10(useCurrency, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});","map":{"version":3,"names":["parseBytes32String","currencyEquals","Token","arrayify","useMemo","filterTokens","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useDefaultTokenList","useUnsupportedTokenList","useBytes32TokenContract","useTokenContract","useTokensFromMap","tokenMap","includeUserAdded","chainIdOpt","_s","chainId","mapWithoutUrls","Object","keys","reduce","newMap","address","token","useDefaultTokens","_s2","defaultList","useAllTokens","_s3","allTokens","useAllInactiveTokens","_s4","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useUnsupportedTokens","_s5","unsupportedTokensMap","useIsTokenActive","_s6","activeTokens","useFoundOnInactiveList","searchQuery","_s7","undefined","tokens","values","useIsUserAddedToken","currency","_s8","userAddedTokens","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","_s9","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","useCurrency","currencyId","_s10"],"sources":["/app/src/hooks/Tokens.ts"],"sourcesContent":["// @ts-nocheck\nimport { ChainId, useCelo } from '@celo/react-celo'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { currencyEquals, Token } from '@ubeswap/sdk'\nimport { arrayify } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\n\nimport { filterTokens } from '../components/SearchModal/filtering'\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\nimport { TokenAddressMap, useDefaultTokenList, useUnsupportedTokenList } from './../state/lists/hooks'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(\n  tokenMap: TokenAddressMap,\n  includeUserAdded: boolean,\n  chainIdOpt?: ChainId\n): { [address: string]: Token } {\n  const chainId = 62\n\n  return useMemo(() => {\n    if (!chainId || !tokenMap[chainId]) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    return mapWithoutUrls\n  }, [chainId, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(chainId?: ChainId): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true, chainId)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const chainId = 62\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    } else {\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n      return tokens\n    }\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Token | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nexport function parseStringOrBytes32(\n  str: string | undefined,\n  bytes32: string | undefined,\n  defaultValue: string\n): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const chainId = 62\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId as number,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Token | null | undefined {\n  const token = useToken(currencyId)\n  return token\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}