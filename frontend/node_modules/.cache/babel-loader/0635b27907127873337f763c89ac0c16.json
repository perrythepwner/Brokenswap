{"ast":null,"code":"import _objectSpread from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useCelo,useConnectedSigner}from'@celo/react-celo';import{ChainId}from'@ubeswap/sdk';import useENS from'hooks/useENS';import{SwapCallbackState,useSwapCallback}from'hooks/useSwapCallback';import{useMemo}from'react';import{INITIAL_ALLOWED_SLIPPAGE}from'../../../constants';import{isAddress,shortenAddress}from'../../../utils';import{useDoTransaction}from'.';import{executeMinimaTrade}from'./minima/executeMinimaTrade';import{executeMoolaDirectTrade}from'./moola/executeMoolaDirectTrade';import{MoolaDirectTrade}from'./moola/MoolaDirectTrade';import{MinimaRouterTrade}from'./trade';/**\n * Use callback to allow trading\n * @param trade\n * @param allowedSlippage\n * @param recipientAddressOrName\n * @returns\n */export const useTradeCallback=function useTradeCallback(trade){let allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INITIAL_ALLOWED_SLIPPAGE;let recipientAddressOrName=arguments.length>2?arguments[2]:undefined;const{address:account,network}=useCelo();const signer=useConnectedSigner();const chainId=network.chainId;const doTransaction=useDoTransaction();const{address:recipientAddress}=useENS(recipientAddressOrName);const recipient=recipientAddressOrName===null?account:recipientAddress;const withRecipient=recipient===account?'':\" to \".concat(recipientAddressOrName&&isAddress(recipientAddressOrName)?shortenAddress(recipientAddressOrName):recipientAddressOrName);const{state:swapState,callback:swapCallback,error}=useSwapCallback(trade,allowedSlippage,recipientAddressOrName);return useMemo(()=>{if(error){return{state:swapState,callback:null,error};}if(!trade||!account){return{state:SwapCallbackState.INVALID,callback:null,error:'Missing dependencies'};}if(chainId===ChainId.BAKLAVA){return{state:SwapCallbackState.INVALID,callback:null,error:'Baklava is not supported'};}const env={signer,chainId,doTransaction};if(trade instanceof MinimaRouterTrade){return{state:SwapCallbackState.VALID,callback:function(){var _callback=_asyncToGenerator(function*(){return(yield executeMinimaTrade(_objectSpread(_objectSpread({},env),{},{trade,recipient,withRecipient}))).hash;});function callback(){return _callback.apply(this,arguments);}return callback;}(),error:null};}else if(trade instanceof MoolaDirectTrade){return{state:SwapCallbackState.VALID,callback:function(){var _callback2=_asyncToGenerator(function*(){return(yield executeMoolaDirectTrade(_objectSpread(_objectSpread({},env),{},{trade}))).hash;});function callback(){return _callback2.apply(this,arguments);}return callback;}(),error:null};}else if(swapCallback){return{state:SwapCallbackState.VALID,callback:swapCallback,error:null};}else{return{state:SwapCallbackState.INVALID,callback:null,error:'Unknown trade type'};}},[error,signer,trade,account,chainId,doTransaction,swapCallback,swapState,recipient,withRecipient]);};","map":{"version":3,"names":["useCelo","useConnectedSigner","ChainId","useENS","SwapCallbackState","useSwapCallback","useMemo","INITIAL_ALLOWED_SLIPPAGE","isAddress","shortenAddress","useDoTransaction","executeMinimaTrade","executeMoolaDirectTrade","MoolaDirectTrade","MinimaRouterTrade","useTradeCallback","trade","allowedSlippage","arguments","length","undefined","recipientAddressOrName","address","account","network","signer","chainId","doTransaction","recipientAddress","recipient","withRecipient","concat","state","swapState","callback","swapCallback","error","INVALID","BAKLAVA","env","VALID","_callback","_asyncToGenerator","_objectSpread","hash","apply","_callback2"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/components/swap/routing/useTradeCallback.ts"],"sourcesContent":["import { useCelo, useConnectedSigner } from '@celo/react-celo'\nimport { JsonRpcSigner } from '@ethersproject/providers'\nimport { ChainId, Trade } from '@ubeswap/sdk'\nimport useENS from 'hooks/useENS'\nimport { SwapCallbackState, useSwapCallback } from 'hooks/useSwapCallback'\nimport { useMemo } from 'react'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../../constants'\nimport { isAddress, shortenAddress } from '../../../utils'\nimport { useDoTransaction } from '.'\nimport { executeMinimaTrade } from './minima/executeMinimaTrade'\nimport { executeMoolaDirectTrade } from './moola/executeMoolaDirectTrade'\nimport { MoolaDirectTrade } from './moola/MoolaDirectTrade'\nimport { MinimaRouterTrade } from './trade'\n/**\n * Use callback to allow trading\n * @param trade\n * @param allowedSlippage\n * @param recipientAddressOrName\n * @returns\n */\nexport const useTradeCallback = (\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } => {\n  const { address: account, network } = useCelo()\n  const signer = useConnectedSigner() as JsonRpcSigner\n  const chainId = network.chainId as unknown as ChainId\n  const doTransaction = useDoTransaction()\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const withRecipient =\n    recipient === account\n      ? ''\n      : ` to ${\n          recipientAddressOrName && isAddress(recipientAddressOrName)\n            ? shortenAddress(recipientAddressOrName)\n            : recipientAddressOrName\n        }`\n\n  const {\n    state: swapState,\n    callback: swapCallback,\n    error,\n  } = useSwapCallback(trade, allowedSlippage, recipientAddressOrName)\n\n  return useMemo(() => {\n    if (error) {\n      return { state: swapState, callback: null, error }\n    }\n\n    if (!trade || !account) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n\n    if (chainId === ChainId.BAKLAVA) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Baklava is not supported' }\n    }\n\n    const env = { signer, chainId, doTransaction }\n    if (trade instanceof MinimaRouterTrade) {\n      return {\n        state: SwapCallbackState.VALID,\n        callback: async () => (await executeMinimaTrade({ ...env, trade, recipient, withRecipient })).hash,\n        error: null,\n      }\n    } else if (trade instanceof MoolaDirectTrade) {\n      return {\n        state: SwapCallbackState.VALID,\n        callback: async () => (await executeMoolaDirectTrade({ ...env, trade })).hash,\n        error: null,\n      }\n    } else if (swapCallback) {\n      return { state: SwapCallbackState.VALID, callback: swapCallback, error: null }\n    } else {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Unknown trade type' }\n    }\n  }, [error, signer, trade, account, chainId, doTransaction, swapCallback, swapState, recipient, withRecipient])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}