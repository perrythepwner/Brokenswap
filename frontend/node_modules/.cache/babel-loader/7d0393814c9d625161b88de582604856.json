{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidAddress = exports.isValidPrivateKey = exports.publicKeyToAddress = exports.privateKeyToPublicKey = exports.privateKeyToAddress = exports.toChecksumAddress = exports.isValidChecksumAddress = exports.trimLeading0x = exports.NULL_ADDRESS = exports.normalizeAddressWith0x = exports.normalizeAddress = exports.mapAddressListOnto = exports.mapAddressListDataOnto = exports.isHexString = exports.hexToBuffer = exports.getAddressChunks = exports.findAddressIndex = exports.eqAddress = exports.ensureLeading0x = exports.bufferToHex = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar util_1 = require(\"@ethereumjs/util\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar address_2 = require(\"@celo/base/lib/address\");\nObject.defineProperty(exports, \"bufferToHex\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.bufferToHex;\n  }\n});\nObject.defineProperty(exports, \"ensureLeading0x\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.ensureLeading0x;\n  }\n});\nObject.defineProperty(exports, \"eqAddress\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.eqAddress;\n  }\n});\nObject.defineProperty(exports, \"findAddressIndex\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.findAddressIndex;\n  }\n});\nObject.defineProperty(exports, \"getAddressChunks\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.getAddressChunks;\n  }\n});\nObject.defineProperty(exports, \"hexToBuffer\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.hexToBuffer;\n  }\n});\nObject.defineProperty(exports, \"isHexString\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.isHexString;\n  }\n});\nObject.defineProperty(exports, \"mapAddressListDataOnto\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.mapAddressListDataOnto;\n  }\n});\nObject.defineProperty(exports, \"mapAddressListOnto\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.mapAddressListOnto;\n  }\n});\nObject.defineProperty(exports, \"normalizeAddress\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.normalizeAddress;\n  }\n});\nObject.defineProperty(exports, \"normalizeAddressWith0x\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.normalizeAddressWith0x;\n  }\n});\nObject.defineProperty(exports, \"NULL_ADDRESS\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.NULL_ADDRESS;\n  }\n});\nObject.defineProperty(exports, \"trimLeading0x\", {\n  enumerable: true,\n  get: function get() {\n    return address_2.trimLeading0x;\n  }\n});\nvar util_2 = require(\"@ethereumjs/util\");\nObject.defineProperty(exports, \"isValidChecksumAddress\", {\n  enumerable: true,\n  get: function get() {\n    return util_2.isValidChecksumAddress;\n  }\n});\nObject.defineProperty(exports, \"toChecksumAddress\", {\n  enumerable: true,\n  get: function get() {\n    return util_2.toChecksumAddress;\n  }\n});\nvar privateKeyToAddress = function privateKeyToAddress(privateKey) {\n  return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.privateToAddress)((0, address_1.hexToBuffer)(privateKey)).toString('hex')));\n};\nexports.privateKeyToAddress = privateKeyToAddress;\nvar privateKeyToPublicKey = function privateKeyToPublicKey(privateKey) {\n  return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.privateToPublic)((0, address_1.hexToBuffer)(privateKey)).toString('hex')));\n};\nexports.privateKeyToPublicKey = privateKeyToPublicKey;\nvar publicKeyToAddress = function publicKeyToAddress(publicKey) {\n  return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.pubToAddress)((0, util_1.toBuffer)((0, address_1.ensureLeading0x)(publicKey)), true).toString('hex')));\n};\nexports.publicKeyToAddress = publicKeyToAddress;\nvar isValidPrivateKey = function isValidPrivateKey(privateKey) {\n  return privateKey.startsWith('0x') && (0, util_1.isValidPrivate)((0, address_1.hexToBuffer)(privateKey));\n};\nexports.isValidPrivateKey = isValidPrivateKey;\nvar isValidAddress = function isValidAddress(input) {\n  if ('string' !== typeof input) {\n    return false;\n  }\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(input)) {\n    return false;\n  }\n  if (/^(0x|0X)?[0-9A-F]{40}$/.test(input.toUpperCase())) {\n    return true;\n  }\n  if ((0, util_1.toChecksumAddress)(input) === input) {\n    return true;\n  }\n  return false;\n};\nexports.isValidAddress = isValidAddress;","map":{"version":3,"sources":["../src/address.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidAddress = exports.isValidPrivateKey = exports.publicKeyToAddress = exports.privateKeyToPublicKey = exports.privateKeyToAddress = exports.toChecksumAddress = exports.isValidChecksumAddress = exports.trimLeading0x = exports.NULL_ADDRESS = exports.normalizeAddressWith0x = exports.normalizeAddress = exports.mapAddressListOnto = exports.mapAddressListDataOnto = exports.isHexString = exports.hexToBuffer = exports.getAddressChunks = exports.findAddressIndex = exports.eqAddress = exports.ensureLeading0x = exports.bufferToHex = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar util_1 = require(\"@ethereumjs/util\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar address_2 = require(\"@celo/base/lib/address\");\nObject.defineProperty(exports, \"bufferToHex\", { enumerable: true, get: function () { return address_2.bufferToHex; } });\nObject.defineProperty(exports, \"ensureLeading0x\", { enumerable: true, get: function () { return address_2.ensureLeading0x; } });\nObject.defineProperty(exports, \"eqAddress\", { enumerable: true, get: function () { return address_2.eqAddress; } });\nObject.defineProperty(exports, \"findAddressIndex\", { enumerable: true, get: function () { return address_2.findAddressIndex; } });\nObject.defineProperty(exports, \"getAddressChunks\", { enumerable: true, get: function () { return address_2.getAddressChunks; } });\nObject.defineProperty(exports, \"hexToBuffer\", { enumerable: true, get: function () { return address_2.hexToBuffer; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return address_2.isHexString; } });\nObject.defineProperty(exports, \"mapAddressListDataOnto\", { enumerable: true, get: function () { return address_2.mapAddressListDataOnto; } });\nObject.defineProperty(exports, \"mapAddressListOnto\", { enumerable: true, get: function () { return address_2.mapAddressListOnto; } });\nObject.defineProperty(exports, \"normalizeAddress\", { enumerable: true, get: function () { return address_2.normalizeAddress; } });\nObject.defineProperty(exports, \"normalizeAddressWith0x\", { enumerable: true, get: function () { return address_2.normalizeAddressWith0x; } });\nObject.defineProperty(exports, \"NULL_ADDRESS\", { enumerable: true, get: function () { return address_2.NULL_ADDRESS; } });\nObject.defineProperty(exports, \"trimLeading0x\", { enumerable: true, get: function () { return address_2.trimLeading0x; } });\nvar util_2 = require(\"@ethereumjs/util\");\nObject.defineProperty(exports, \"isValidChecksumAddress\", { enumerable: true, get: function () { return util_2.isValidChecksumAddress; } });\nObject.defineProperty(exports, \"toChecksumAddress\", { enumerable: true, get: function () { return util_2.toChecksumAddress; } });\nvar privateKeyToAddress = function (privateKey) {\n    return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.privateToAddress)((0, address_1.hexToBuffer)(privateKey)).toString('hex')));\n};\nexports.privateKeyToAddress = privateKeyToAddress;\nvar privateKeyToPublicKey = function (privateKey) {\n    return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.privateToPublic)((0, address_1.hexToBuffer)(privateKey)).toString('hex')));\n};\nexports.privateKeyToPublicKey = privateKeyToPublicKey;\nvar publicKeyToAddress = function (publicKey) {\n    return (0, util_1.toChecksumAddress)((0, address_1.ensureLeading0x)((0, util_1.pubToAddress)((0, util_1.toBuffer)((0, address_1.ensureLeading0x)(publicKey)), true).toString('hex')));\n};\nexports.publicKeyToAddress = publicKeyToAddress;\nvar isValidPrivateKey = function (privateKey) {\n    return privateKey.startsWith('0x') && (0, util_1.isValidPrivate)((0, address_1.hexToBuffer)(privateKey));\n};\nexports.isValidPrivateKey = isValidPrivateKey;\nvar isValidAddress = function (input) {\n    if ('string' !== typeof input) {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(input)) {\n        return false;\n    }\n    if (/^(0x|0X)?[0-9A-F]{40}$/.test(input.toUpperCase())) {\n        return true;\n    }\n    if ((0, util_1.toChecksumAddress)(input) === input) {\n        return true;\n    }\n    return false;\n};\nexports.isValidAddress = isValidAddress;\n//# sourceMappingURL=address.js.map"]},"metadata":{},"sourceType":"script"}