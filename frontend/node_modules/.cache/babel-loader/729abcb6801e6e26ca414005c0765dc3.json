{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\nvar _templateObject;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst formats_1 = require(\"./formats\");\nconst limit_1 = require(\"./limit\");\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst fullName = new codegen_1.Name(\"fullFormats\");\nconst fastName = new codegen_1.Name(\"fastFormats\");\nconst formatsPlugin = function formatsPlugin(ajv) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    keywords: true\n  };\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, formats_1.fullFormats, fullName);\n    return ajv;\n  }\n  const [formats, exportName] = opts.mode === \"fast\" ? [formats_1.fastFormats, fastName] : [formats_1.fullFormats, fullName];\n  const list = opts.formats || formats_1.formatNames;\n  addFormats(ajv, list, formats, exportName);\n  if (opts.keywords) limit_1.default(ajv);\n  return ajv;\n};\nformatsPlugin.get = function (name) {\n  let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"full\";\n  const formats = mode === \"fast\" ? formats_1.fastFormats : formats_1.fullFormats;\n  const f = formats[name];\n  if (!f) throw new Error(\"Unknown format \\\"\".concat(name, \"\\\"\"));\n  return f;\n};\nfunction addFormats(ajv, list, fs, exportName) {\n  var _a;\n  var _b;\n  (_a = (_b = ajv.opts.code).formats) !== null && _a !== void 0 ? _a : _b.formats = codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"require(\\\"ajv-formats/dist/formats\\\").\", \"\"])), exportName);\n  for (const f of list) ajv.addFormat(f, fs[f]);\n}\nmodule.exports = exports = formatsPlugin;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatsPlugin;","map":null,"metadata":{},"sourceType":"script"}