{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListCompositeTreeView = void 0;\nconst arrayComposite_1 = require(\"./arrayComposite\");\nclass ListCompositeTreeView extends arrayComposite_1.ArrayCompositeTreeView {\n  constructor(type, tree) {\n    super(type, tree);\n    this.type = type;\n    this.tree = tree;\n  }\n  /**\n   * Adds one view element at the end of the array and adds 1 to the current Tree length.\n   */\n  push(view) {\n    const length = this.length;\n    if (length >= this.type.limit) {\n      throw Error(\"Error pushing over limit\");\n    }\n    this.type.tree_setLength(this.tree, length + 1);\n    // No need for pre-initialization like in ListBasic.push since ArrayCompositeTreeView.set() doesn't do a get node\n    this.set(length, view);\n  }\n}\nexports.ListCompositeTreeView = ListCompositeTreeView;","map":null,"metadata":{},"sourceType":"script"}