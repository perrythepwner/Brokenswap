{"ast":null,"code":"import _objectSpread from\"/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCelo}from'@celo/react-celo';import{JSBI,TokenAmount}from'@ubeswap/sdk';import{useToken}from'hooks/Tokens';import{useMultiStakingContract}from'hooks/useContract';import zip from'lodash/zip';import{useMemo}from'react';import{useSingleCallResult,useSingleContractMultipleData}from'state/multicall/hooks';import{INT_SECONDS_IN_WEEK}from'./../../constants/index';export const useMultiStakeRewards=(address,underlyingPool,numRewards,active)=>{var _useSingleCallResult,_useSingleCallResult$,_useSingleCallResult2,_useSingleCallResult3,_useSingleCallResult4,_useSingleCallResult5,_useSingleContractMul,_useSingleCallResult6,_useSingleCallResult7,_useSingleCallResult8,_useSingleCallResult9,_useSingleCallResult10,_useSingleCallResult11,_useSingleCallResult12,_useSingleCallResult13;const{address:owner}=useCelo();const accountArg=useMemo(()=>[owner!==null&&owner!==void 0?owner:undefined],[owner]);const stakeRewards=useMultiStakingContract(address);const totalSupply=(_useSingleCallResult=useSingleCallResult(stakeRewards,'totalSupply',[]))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];const rewardRate=(_useSingleCallResult2=useSingleCallResult(stakeRewards,'rewardRate',[]))===null||_useSingleCallResult2===void 0?void 0:(_useSingleCallResult3=_useSingleCallResult2.result)===null||_useSingleCallResult3===void 0?void 0:_useSingleCallResult3[0];const rewardsToken=useToken((_useSingleCallResult4=useSingleCallResult(stakeRewards,'rewardsToken',[]))===null||_useSingleCallResult4===void 0?void 0:(_useSingleCallResult5=_useSingleCallResult4.result)===null||_useSingleCallResult5===void 0?void 0:_useSingleCallResult5[0]);const externalRewardsTokens=(_useSingleContractMul=useSingleContractMultipleData(stakeRewards,'externalRewardsTokens',[...[...Array(numRewards-2).keys()].map(i=>[i])]))===null||_useSingleContractMul===void 0?void 0:_useSingleContractMul.map(cr=>cr===null||cr===void 0?void 0:cr.result).reduce((acc,curr,idx)=>_objectSpread(_objectSpread({},acc),{},{[curr]:idx}),{});const stakeBalance=(_useSingleCallResult6=useSingleCallResult(stakeRewards,'balanceOf',accountArg))===null||_useSingleCallResult6===void 0?void 0:(_useSingleCallResult7=_useSingleCallResult6.result)===null||_useSingleCallResult7===void 0?void 0:_useSingleCallResult7[0];const earned=(_useSingleCallResult8=useSingleCallResult(stakeRewards,'earned',accountArg))===null||_useSingleCallResult8===void 0?void 0:(_useSingleCallResult9=_useSingleCallResult8.result)===null||_useSingleCallResult9===void 0?void 0:_useSingleCallResult9[0];const earnedExternal=(_useSingleCallResult10=useSingleCallResult(stakeRewards,'earnedExternal',accountArg))===null||_useSingleCallResult10===void 0?void 0:(_useSingleCallResult11=_useSingleCallResult10.result)===null||_useSingleCallResult11===void 0?void 0:_useSingleCallResult11[0];const periodFinish=(_useSingleCallResult12=useSingleCallResult(stakeRewards,'periodFinish',[]))===null||_useSingleCallResult12===void 0?void 0:(_useSingleCallResult13=_useSingleCallResult12.result)===null||_useSingleCallResult13===void 0?void 0:_useSingleCallResult13[0];const data=useMemo(()=>({totalSupply,rewardRate,rewardsToken,periodFinish,myBalance:stakeBalance,earned:[earned,...(earnedExternal?earnedExternal:[])]}),[earned,earnedExternal,rewardRate,rewardsToken,stakeBalance,totalSupply,periodFinish]);return useMemo(()=>{var _myBalance$toString,_totalSupplyRaw$toStr,_totalRewardRateRaw$t;if(!data||!rewardsToken||!underlyingPool){return null;}const{totalSupply:totalSupplyRaw,rewardRate:totalRewardRateRaw,myBalance,earned,periodFinish}=data;const{stakingToken}=underlyingPool;const getHypotheticalRewardRate=(stakedAmount,totalStakedAmount,totalRewardRates)=>{return totalRewardRates.map(totalRewardRate=>{return new TokenAmount(totalRewardRate.token,JSBI.greaterThan(totalStakedAmount.raw,JSBI.BigInt(0))?JSBI.divide(JSBI.multiply(totalRewardRate.raw,stakedAmount.raw),totalStakedAmount.raw):JSBI.BigInt(0));});};const rewardsFinished=Math.floor(Date.now()/1000)-periodFinish.toNumber()>INT_SECONDS_IN_WEEK;const stakedAmount=myBalance?new TokenAmount(stakingToken,(_myBalance$toString=myBalance===null||myBalance===void 0?void 0:myBalance.toString())!==null&&_myBalance$toString!==void 0?_myBalance$toString:'0'):undefined;const totalStakedAmount=new TokenAmount(stakingToken,(_totalSupplyRaw$toStr=totalSupplyRaw===null||totalSupplyRaw===void 0?void 0:totalSupplyRaw.toString())!==null&&_totalSupplyRaw$toStr!==void 0?_totalSupplyRaw$toStr:'0');const totalRewardRates=[new TokenAmount(rewardsToken,rewardsFinished?JSBI.BigInt(0):(_totalRewardRateRaw$t=totalRewardRateRaw===null||totalRewardRateRaw===void 0?void 0:totalRewardRateRaw.toString())!==null&&_totalRewardRateRaw$t!==void 0?_totalRewardRateRaw$t:'0'),...underlyingPool.totalRewardRates].sort((a,b)=>{var _a$token,_b$token;return(_a$token=a.token)!==null&&_a$token!==void 0&&_a$token.symbol&&b!==null&&b!==void 0&&(_b$token=b.token)!==null&&_b$token!==void 0&&_b$token.symbol?a.token.symbol.localeCompare(b.token.symbol):0;});const rewardRates=stakedAmount?getHypotheticalRewardRate(stakedAmount,totalStakedAmount,totalRewardRates):totalRewardRates.map(totalRewardRate=>new TokenAmount(totalRewardRate.token,'0'));const underlyingRewardTokens=underlyingPool.rewardTokens.sort((a,b)=>externalRewardsTokens[a===null||a===void 0?void 0:a.address]-externalRewardsTokens[b===null||b===void 0?void 0:b.address]);const rewardTokens=rewardsToken?[rewardsToken,...underlyingRewardTokens]:[...underlyingRewardTokens];const earnedAmounts=earned&&earned.length===rewardTokens.length?zip(earned,rewardTokens).map(_ref=>{var _amount$toString;let[amount,token]=_ref;return new TokenAmount(token,(_amount$toString=amount===null||amount===void 0?void 0:amount.toString())!==null&&_amount$toString!==void 0?_amount$toString:'0');}).sort((a,b)=>{var _a$token2,_b$token2;return a!==null&&a!==void 0&&(_a$token2=a.token)!==null&&_a$token2!==void 0&&_a$token2.symbol&&b!==null&&b!==void 0&&(_b$token2=b.token)!==null&&_b$token2!==void 0&&_b$token2.symbol?a.token.symbol.localeCompare(b.token.symbol):0;}):undefined;return{stakingRewardAddress:address,stakingToken,tokens:underlyingPool.tokens,stakedAmount,totalStakedAmount,earnedAmounts,rewardRates,totalRewardRates,periodFinish:new Date(),active,getHypotheticalRewardRate,nextPeriodRewards:underlyingPool.nextPeriodRewards,poolInfo:underlyingPool.poolInfo,rewardTokens};},[data,rewardsToken,underlyingPool,address,active,externalRewardsTokens]);};","map":null,"metadata":{},"sourceType":"module"}