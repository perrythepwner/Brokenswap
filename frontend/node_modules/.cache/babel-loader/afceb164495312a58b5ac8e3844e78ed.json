{"ast":null,"code":"import{JSBI,Percent,TokenAmount}from'@ubeswap/sdk';import{MinimaRouterTrade}from'components/swap/routing/trade';import{ALLOWED_PRICE_IMPACT_HIGH,ALLOWED_PRICE_IMPACT_LOW,ALLOWED_PRICE_IMPACT_MEDIUM,BLOCKED_PRICE_IMPACT_NON_EXPERT,ZERO_PERCENT}from'../constants';import{Field}from'../state/swap/actions';import{basisPointsToPercent}from'./index';const BASE_FEE=new Percent(JSBI.BigInt(30),JSBI.BigInt(10000));const ONE_HUNDRED_PERCENT=new Percent(JSBI.BigInt(10000),JSBI.BigInt(10000));const INPUT_FRACTION_AFTER_FEE=ONE_HUNDRED_PERCENT.subtract(BASE_FEE);// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade){// for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n// e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\nconst realizedLPFee=!trade?undefined:trade instanceof MinimaRouterTrade?ZERO_PERCENT:ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce(currentFee=>currentFee.multiply(INPUT_FRACTION_AFTER_FEE),ONE_HUNDRED_PERCENT));// remove lp fees from price impact\nconst priceImpactWithoutFeeFraction=trade&&realizedLPFee?trade.priceImpact.subtract(realizedLPFee):undefined;// the x*y=k impact\nconst priceImpactWithoutFeePercent=priceImpactWithoutFeeFraction?new Percent(priceImpactWithoutFeeFraction===null||priceImpactWithoutFeeFraction===void 0?void 0:priceImpactWithoutFeeFraction.numerator,priceImpactWithoutFeeFraction===null||priceImpactWithoutFeeFraction===void 0?void 0:priceImpactWithoutFeeFraction.denominator):undefined;// the amount of the input that accrues to LPs\nconst realizedLPFeeAmount=realizedLPFee&&trade&&new TokenAmount(trade.inputAmount.token,realizedLPFee.multiply(trade.inputAmount.raw).quotient);return{priceImpactWithoutFee:priceImpactWithoutFeePercent,realizedLPFee:realizedLPFeeAmount};}// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(trade,allowedSlippage){const pct=basisPointsToPercent(allowedSlippage);return{[Field.INPUT]:trade===null||trade===void 0?void 0:trade.maximumAmountIn(pct),[Field.OUTPUT]:trade===null||trade===void 0?void 0:trade.minimumAmountOut(pct)};}export function warningSeverity(priceImpact){if(!(priceImpact!==null&&priceImpact!==void 0&&priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)))return 4;if(!(priceImpact!==null&&priceImpact!==void 0&&priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)))return 3;if(!(priceImpact!==null&&priceImpact!==void 0&&priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)))return 2;if(!(priceImpact!==null&&priceImpact!==void 0&&priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW)))return 1;return 0;}export function formatExecutionPrice(trade,inverted){if(!trade){return'';}return inverted?\"\".concat(trade.executionPrice.invert().toSignificant(6),\" \").concat(trade.inputAmount.currency.symbol,\" / \").concat(trade.outputAmount.currency.symbol):\"\".concat(trade.executionPrice.toSignificant(6),\" \").concat(trade.outputAmount.currency.symbol,\" / \").concat(trade.inputAmount.currency.symbol);}","map":{"version":3,"names":["JSBI","Percent","TokenAmount","MinimaRouterTrade","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","BLOCKED_PRICE_IMPACT_NON_EXPERT","ZERO_PERCENT","Field","basisPointsToPercent","BASE_FEE","BigInt","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","undefined","route","pairs","reduce","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","realizedLPFeeAmount","inputAmount","token","raw","quotient","priceImpactWithoutFee","computeSlippageAdjustedAmounts","allowedSlippage","pct","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","formatExecutionPrice","inverted","concat","executionPrice","invert","toSignificant","currency","symbol","outputAmount"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/utils/prices.ts"],"sourcesContent":["import { Fraction, JSBI, Percent, TokenAmount, Trade } from '@ubeswap/sdk'\nimport { MinimaRouterTrade } from 'components/swap/routing/trade'\n\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ZERO_PERCENT,\n} from '../constants'\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: TokenAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : trade instanceof MinimaRouterTrade\n    ? ZERO_PERCENT\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT\n        )\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number\n): { [field in Field]?: TokenAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n"],"mappings":"AAAA,OAAmBA,IAAI,CAAEC,OAAO,CAAEC,WAAW,KAAe,cAAc,CAC1E,OAASC,iBAAiB,KAAQ,+BAA+B,CAEjE,OACEC,yBAAyB,CACzBC,wBAAwB,CACxBC,2BAA2B,CAC3BC,+BAA+B,CAC/BC,YAAY,KACP,cAAc,CACrB,OAASC,KAAK,KAAQ,uBAAuB,CAC7C,OAASC,oBAAoB,KAAQ,SAAS,CAE9C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAV,OAAO,CAACD,IAAI,CAACY,MAAM,CAAC,EAAE,CAAC,CAAEZ,IAAI,CAACY,MAAM,CAAC,KAAK,CAAC,CAAC,CACjE,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAAZ,OAAO,CAACD,IAAI,CAACY,MAAM,CAAC,KAAK,CAAC,CAAEZ,IAAI,CAACY,MAAM,CAAC,KAAK,CAAC,CAAC,CAC/E,KAAM,CAAAE,wBAAwB,CAAGD,mBAAmB,CAACE,QAAQ,CAACJ,QAAQ,CAAC,CAEvE;AACA,MAAO,SAAS,CAAAK,0BAA0BA,CAACC,KAAoB,CAG7D,CACA;AACA;AACA,KAAM,CAAAC,aAAa,CAAG,CAACD,KAAK,CACxBE,SAAS,CACTF,KAAK,WAAY,CAAAd,iBAAiB,CAClCK,YAAY,CACZK,mBAAmB,CAACE,QAAQ,CAC1BE,KAAK,CAACG,KAAK,CAACC,KAAK,CAACC,MAAM,CACrBC,UAAoB,EAAeA,UAAU,CAACC,QAAQ,CAACV,wBAAwB,CAAC,CACjFD,mBACF,CACF,CAAC,CAEL;AACA,KAAM,CAAAY,6BAA6B,CAAGR,KAAK,EAAIC,aAAa,CAAGD,KAAK,CAACS,WAAW,CAACX,QAAQ,CAACG,aAAa,CAAC,CAAGC,SAAS,CAEpH;AACA,KAAM,CAAAQ,4BAA4B,CAAGF,6BAA6B,CAC9D,GAAI,CAAAxB,OAAO,CAACwB,6BAA6B,SAA7BA,6BAA6B,iBAA7BA,6BAA6B,CAAEG,SAAS,CAAEH,6BAA6B,SAA7BA,6BAA6B,iBAA7BA,6BAA6B,CAAEI,WAAW,CAAC,CACjGV,SAAS,CAEb;AACA,KAAM,CAAAW,mBAAmB,CACvBZ,aAAa,EACbD,KAAK,EACL,GAAI,CAAAf,WAAW,CAACe,KAAK,CAACc,WAAW,CAACC,KAAK,CAAEd,aAAa,CAACM,QAAQ,CAACP,KAAK,CAACc,WAAW,CAACE,GAAG,CAAC,CAACC,QAAQ,CAAC,CAElG,MAAO,CAAEC,qBAAqB,CAAER,4BAA4B,CAAET,aAAa,CAAEY,mBAAoB,CAAC,CACpG,CAEA;AACA,MAAO,SAAS,CAAAM,8BAA8BA,CAC5CnB,KAAwB,CACxBoB,eAAuB,CACa,CACpC,KAAM,CAAAC,GAAG,CAAG5B,oBAAoB,CAAC2B,eAAe,CAAC,CACjD,MAAO,CACL,CAAC5B,KAAK,CAAC8B,KAAK,EAAGtB,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEuB,eAAe,CAACF,GAAG,CAAC,CAC1C,CAAC7B,KAAK,CAACgC,MAAM,EAAGxB,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEyB,gBAAgB,CAACJ,GAAG,CAC7C,CAAC,CACH,CAEA,MAAO,SAAS,CAAAK,eAAeA,CAACjB,WAAgC,CAAqB,CACnF,GAAI,EAACA,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEkB,QAAQ,CAACrC,+BAA+B,CAAC,EAAE,MAAO,EAAC,CACrE,GAAI,EAACmB,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEkB,QAAQ,CAACxC,yBAAyB,CAAC,EAAE,MAAO,EAAC,CAC/D,GAAI,EAACsB,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEkB,QAAQ,CAACtC,2BAA2B,CAAC,EAAE,MAAO,EAAC,CACjE,GAAI,EAACoB,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEkB,QAAQ,CAACvC,wBAAwB,CAAC,EAAE,MAAO,EAAC,CAC9D,MAAO,EAAC,CACV,CAEA,MAAO,SAAS,CAAAwC,oBAAoBA,CAAC5B,KAAa,CAAE6B,QAAkB,CAAU,CAC9E,GAAI,CAAC7B,KAAK,CAAE,CACV,MAAO,EAAE,CACX,CACA,MAAO,CAAA6B,QAAQ,IAAAC,MAAA,CACR9B,KAAK,CAAC+B,cAAc,CAACC,MAAM,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC,MAAAH,MAAA,CAAI9B,KAAK,CAACc,WAAW,CAACoB,QAAQ,CAACC,MAAM,QAAAL,MAAA,CACpF9B,KAAK,CAACoC,YAAY,CAACF,QAAQ,CAACC,MAAM,KAAAL,MAAA,CAEjC9B,KAAK,CAAC+B,cAAc,CAACE,aAAa,CAAC,CAAC,CAAC,MAAAH,MAAA,CAAI9B,KAAK,CAACoC,YAAY,CAACF,QAAQ,CAACC,MAAM,QAAAL,MAAA,CAC5E9B,KAAK,CAACc,WAAW,CAACoB,QAAQ,CAACC,MAAM,CACjC,CACR"},"metadata":{},"sourceType":"module"}