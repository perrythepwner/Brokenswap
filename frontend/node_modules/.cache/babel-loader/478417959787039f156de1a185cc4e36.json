{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{addTransaction,checkedTransaction,clearAllTransactions,finalizeTransaction}from'./actions';const now=()=>new Date().getTime();export const initialState={};export default createReducer(initialState,builder=>builder.addCase(addTransaction,(transactions,_ref)=>{var _transactions$chainId,_transactions$chainId2;let{payload:{chainId,from,hash,approval,summary,claim}}=_ref;if((_transactions$chainId=transactions[chainId])!==null&&_transactions$chainId!==void 0&&_transactions$chainId[hash]){throw Error('Attempted to add existing transaction.');}const txs=(_transactions$chainId2=transactions[chainId])!==null&&_transactions$chainId2!==void 0?_transactions$chainId2:{};txs[hash]={hash,approval,summary,claim,from,addedTime:now()};transactions[chainId]=txs;}).addCase(clearAllTransactions,(transactions,_ref2)=>{let{payload:{chainId}}=_ref2;if(!transactions[chainId])return;transactions[chainId]={};}).addCase(checkedTransaction,(transactions,_ref3)=>{var _transactions$chainId3;let{payload:{chainId,hash,blockNumber}}=_ref3;const tx=(_transactions$chainId3=transactions[chainId])===null||_transactions$chainId3===void 0?void 0:_transactions$chainId3[hash];if(!tx){return;}if(!tx.lastCheckedBlockNumber){tx.lastCheckedBlockNumber=blockNumber;}else{tx.lastCheckedBlockNumber=Math.max(blockNumber,tx.lastCheckedBlockNumber);}}).addCase(finalizeTransaction,(transactions,_ref4)=>{var _transactions$chainId4;let{payload:{hash,chainId,receipt}}=_ref4;const tx=(_transactions$chainId4=transactions[chainId])===null||_transactions$chainId4===void 0?void 0:_transactions$chainId4[hash];if(!tx){return;}tx.receipt=receipt;tx.confirmedTime=now();}));","map":{"version":3,"names":["createReducer","addTransaction","checkedTransaction","clearAllTransactions","finalizeTransaction","now","Date","getTime","initialState","builder","addCase","transactions","_ref","_transactions$chainId","_transactions$chainId2","payload","chainId","from","hash","approval","summary","claim","Error","txs","addedTime","_ref2","_ref3","_transactions$chainId3","blockNumber","tx","lastCheckedBlockNumber","Math","max","_ref4","_transactions$chainId4","receipt","confirmedTime"],"sources":["/home/simone/Scrivania/progetti/HTB_challs/HackTheBoo_23/VeryEasy2/Brokenswap/frontend/src/state/transactions/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAEhD,OACEC,cAAc,CACdC,kBAAkB,CAClBC,oBAAoB,CACpBC,mBAAmB,KAEd,WAAW,CAElB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAoBtC,MAAO,MAAM,CAAAC,YAA8B,CAAG,CAAC,CAAC,CAEhD,cAAe,CAAAR,aAAa,CAACQ,YAAY,CAAGC,OAAO,EACjDA,OAAO,CACJC,OAAO,CAACT,cAAc,CAAE,CAACU,YAAY,CAAAC,IAAA,GAAqE,KAAAC,qBAAA,CAAAC,sBAAA,IAAnE,CAAEC,OAAO,CAAE,CAAEC,OAAO,CAAEC,IAAI,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,KAAM,CAAE,CAAC,CAAAT,IAAA,CACpG,IAAAC,qBAAA,CAAIF,YAAY,CAACK,OAAO,CAAC,UAAAH,qBAAA,WAArBA,qBAAA,CAAwBK,IAAI,CAAC,CAAE,CACjC,KAAM,CAAAI,KAAK,CAAC,wCAAwC,CAAC,CACvD,CACA,KAAM,CAAAC,GAAG,EAAAT,sBAAA,CAAGH,YAAY,CAACK,OAAO,CAAC,UAAAF,sBAAA,UAAAA,sBAAA,CAAI,CAAC,CAAC,CACvCS,GAAG,CAACL,IAAI,CAAC,CAAG,CAAEA,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,KAAK,CAAEJ,IAAI,CAAEO,SAAS,CAAEnB,GAAG,CAAC,CAAE,CAAC,CACtEM,YAAY,CAACK,OAAO,CAAC,CAAGO,GAAG,CAC7B,CAAC,CAAC,CACDb,OAAO,CAACP,oBAAoB,CAAE,CAACQ,YAAY,CAAAc,KAAA,GAA+B,IAA7B,CAAEV,OAAO,CAAE,CAAEC,OAAQ,CAAE,CAAC,CAAAS,KAAA,CACpE,GAAI,CAACd,YAAY,CAACK,OAAO,CAAC,CAAE,OAC5BL,YAAY,CAACK,OAAO,CAAC,CAAG,CAAC,CAAC,CAC5B,CAAC,CAAC,CACDN,OAAO,CAACR,kBAAkB,CAAE,CAACS,YAAY,CAAAe,KAAA,GAAkD,KAAAC,sBAAA,IAAhD,CAAEZ,OAAO,CAAE,CAAEC,OAAO,CAAEE,IAAI,CAAEU,WAAY,CAAE,CAAC,CAAAF,KAAA,CACrF,KAAM,CAAAG,EAAE,EAAAF,sBAAA,CAAGhB,YAAY,CAACK,OAAO,CAAC,UAAAW,sBAAA,iBAArBA,sBAAA,CAAwBT,IAAI,CAAC,CACxC,GAAI,CAACW,EAAE,CAAE,CACP,OACF,CACA,GAAI,CAACA,EAAE,CAACC,sBAAsB,CAAE,CAC9BD,EAAE,CAACC,sBAAsB,CAAGF,WAAW,CACzC,CAAC,IAAM,CACLC,EAAE,CAACC,sBAAsB,CAAGC,IAAI,CAACC,GAAG,CAACJ,WAAW,CAAEC,EAAE,CAACC,sBAAsB,CAAC,CAC9E,CACF,CAAC,CAAC,CACDpB,OAAO,CAACN,mBAAmB,CAAE,CAACO,YAAY,CAAAsB,KAAA,GAA8C,KAAAC,sBAAA,IAA5C,CAAEnB,OAAO,CAAE,CAAEG,IAAI,CAAEF,OAAO,CAAEmB,OAAQ,CAAE,CAAC,CAAAF,KAAA,CAClF,KAAM,CAAAJ,EAAE,EAAAK,sBAAA,CAAGvB,YAAY,CAACK,OAAO,CAAC,UAAAkB,sBAAA,iBAArBA,sBAAA,CAAwBhB,IAAI,CAAC,CACxC,GAAI,CAACW,EAAE,CAAE,CACP,OACF,CACAA,EAAE,CAACM,OAAO,CAAGA,OAAO,CACpBN,EAAE,CAACO,aAAa,CAAG/B,GAAG,CAAC,CAAC,CAC1B,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module"}