{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3ContractCache = exports.ContractFactories = void 0;\nvar debug_1 = __importDefault(require(\"debug\"));\nvar base_1 = require(\"./base\");\nvar celo_tokens_1 = require(\"./celo-tokens\");\nvar Accounts_1 = require(\"./generated/Accounts\");\nvar Attestations_1 = require(\"./generated/Attestations\");\nvar BlockchainParameters_1 = require(\"./generated/BlockchainParameters\");\nvar DoubleSigningSlasher_1 = require(\"./generated/DoubleSigningSlasher\");\nvar DowntimeSlasher_1 = require(\"./generated/DowntimeSlasher\");\nvar Election_1 = require(\"./generated/Election\");\nvar EpochRewards_1 = require(\"./generated/EpochRewards\");\nvar Escrow_1 = require(\"./generated/Escrow\");\nvar Exchange_1 = require(\"./generated/Exchange\");\nvar ExchangeBRL_1 = require(\"./generated/ExchangeBRL\");\nvar ExchangeEUR_1 = require(\"./generated/ExchangeEUR\");\nvar FederatedAttestations_1 = require(\"./generated/FederatedAttestations\");\nvar FeeCurrencyWhitelist_1 = require(\"./generated/FeeCurrencyWhitelist\");\nvar Freezer_1 = require(\"./generated/Freezer\");\nvar GasPriceMinimum_1 = require(\"./generated/GasPriceMinimum\");\nvar GoldToken_1 = require(\"./generated/GoldToken\");\nvar Governance_1 = require(\"./generated/Governance\");\nvar GrandaMento_1 = require(\"./generated/GrandaMento\");\nvar IERC20_1 = require(\"./generated/IERC20\");\nvar LockedGold_1 = require(\"./generated/LockedGold\");\nvar MetaTransactionWallet_1 = require(\"./generated/MetaTransactionWallet\");\nvar MetaTransactionWalletDeployer_1 = require(\"./generated/MetaTransactionWalletDeployer\");\nvar MultiSig_1 = require(\"./generated/MultiSig\");\nvar OdisPayments_1 = require(\"./generated/OdisPayments\");\nvar Proxy_1 = require(\"./generated/Proxy\");\nvar Random_1 = require(\"./generated/Random\");\nvar Registry_1 = require(\"./generated/Registry\");\nvar Reserve_1 = require(\"./generated/Reserve\");\nvar SortedOracles_1 = require(\"./generated/SortedOracles\");\nvar StableToken_1 = require(\"./generated/StableToken\");\nvar TransferWhitelist_1 = require(\"./generated/TransferWhitelist\");\nvar Validators_1 = require(\"./generated/Validators\");\nvar debug = (0, debug_1.default)('kit:web3-contract-cache');\nexports.ContractFactories = (_a = {}, _a[base_1.CeloContract.Accounts] = Accounts_1.newAccounts, _a[base_1.CeloContract.Attestations] = Attestations_1.newAttestations, _a[base_1.CeloContract.BlockchainParameters] = BlockchainParameters_1.newBlockchainParameters, _a[base_1.CeloContract.DoubleSigningSlasher] = DoubleSigningSlasher_1.newDoubleSigningSlasher, _a[base_1.CeloContract.DowntimeSlasher] = DowntimeSlasher_1.newDowntimeSlasher, _a[base_1.CeloContract.Election] = Election_1.newElection, _a[base_1.CeloContract.EpochRewards] = EpochRewards_1.newEpochRewards, _a[base_1.CeloContract.ERC20] = IERC20_1.newIerc20, _a[base_1.CeloContract.Escrow] = Escrow_1.newEscrow, _a[base_1.CeloContract.Exchange] = Exchange_1.newExchange, _a[base_1.CeloContract.ExchangeEUR] = ExchangeEUR_1.newExchangeEur, _a[base_1.CeloContract.ExchangeBRL] = ExchangeBRL_1.newExchangeBrl, _a[base_1.CeloContract.FederatedAttestations] = FederatedAttestations_1.newFederatedAttestations, _a[base_1.CeloContract.FeeCurrencyWhitelist] = FeeCurrencyWhitelist_1.newFeeCurrencyWhitelist, _a[base_1.CeloContract.Freezer] = Freezer_1.newFreezer, _a[base_1.CeloContract.GasPriceMinimum] = GasPriceMinimum_1.newGasPriceMinimum, _a[base_1.CeloContract.GoldToken] = GoldToken_1.newGoldToken, _a[base_1.CeloContract.Governance] = Governance_1.newGovernance, _a[base_1.CeloContract.GrandaMento] = GrandaMento_1.newGrandaMento, _a[base_1.CeloContract.LockedGold] = LockedGold_1.newLockedGold, _a[base_1.CeloContract.MetaTransactionWallet] = MetaTransactionWallet_1.newMetaTransactionWallet, _a[base_1.CeloContract.MetaTransactionWalletDeployer] = MetaTransactionWalletDeployer_1.newMetaTransactionWalletDeployer, _a[base_1.CeloContract.MultiSig] = MultiSig_1.newMultiSig, _a[base_1.CeloContract.OdisPayments] = OdisPayments_1.newOdisPayments, _a[base_1.CeloContract.Random] = Random_1.newRandom, _a[base_1.CeloContract.Registry] = Registry_1.newRegistry, _a[base_1.CeloContract.Reserve] = Reserve_1.newReserve, _a[base_1.CeloContract.SortedOracles] = SortedOracles_1.newSortedOracles, _a[base_1.CeloContract.StableToken] = StableToken_1.newStableToken, _a[base_1.CeloContract.StableTokenEUR] = StableToken_1.newStableToken, _a[base_1.CeloContract.StableTokenBRL] = StableToken_1.newStableToken, _a[base_1.CeloContract.TransferWhitelist] = TransferWhitelist_1.newTransferWhitelist, _a[base_1.CeloContract.Validators] = Validators_1.newValidators, _a);\nvar StableToContract = (_b = {}, _b[celo_tokens_1.StableToken.cEUR] = base_1.CeloContract.StableTokenEUR, _b[celo_tokens_1.StableToken.cUSD] = base_1.CeloContract.StableToken, _b[celo_tokens_1.StableToken.cREAL] = base_1.CeloContract.StableTokenBRL, _b);\nvar StableToExchange = (_c = {}, _c[celo_tokens_1.StableToken.cEUR] = base_1.CeloContract.ExchangeEUR, _c[celo_tokens_1.StableToken.cUSD] = base_1.CeloContract.Exchange, _c[celo_tokens_1.StableToken.cREAL] = base_1.CeloContract.ExchangeBRL, _c);\n/**\n * Native Web3 contracts factory and cache.\n *\n * Exposes accessors to all `CeloContract` web3 contracts.\n *\n * Mostly a private cache, kit users would normally use\n * a contract wrapper\n */\nvar Web3ContractCache = /** @class */function () {\n  /** core contract's address registry */\n  function Web3ContractCache(registry) {\n    this.registry = registry;\n    this.cacheMap = {};\n  }\n  Web3ContractCache.prototype.getAccounts = function () {\n    return this.getContract(base_1.CeloContract.Accounts);\n  };\n  Web3ContractCache.prototype.getAttestations = function () {\n    return this.getContract(base_1.CeloContract.Attestations);\n  };\n  Web3ContractCache.prototype.getBlockchainParameters = function () {\n    return this.getContract(base_1.CeloContract.BlockchainParameters);\n  };\n  Web3ContractCache.prototype.getDoubleSigningSlasher = function () {\n    return this.getContract(base_1.CeloContract.DoubleSigningSlasher);\n  };\n  Web3ContractCache.prototype.getDowntimeSlasher = function () {\n    return this.getContract(base_1.CeloContract.DowntimeSlasher);\n  };\n  Web3ContractCache.prototype.getElection = function () {\n    return this.getContract(base_1.CeloContract.Election);\n  };\n  Web3ContractCache.prototype.getEpochRewards = function () {\n    return this.getContract(base_1.CeloContract.EpochRewards);\n  };\n  Web3ContractCache.prototype.getErc20 = function (address) {\n    return this.getContract(base_1.CeloContract.ERC20, address);\n  };\n  Web3ContractCache.prototype.getEscrow = function () {\n    return this.getContract(base_1.CeloContract.Escrow);\n  };\n  Web3ContractCache.prototype.getExchange = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = celo_tokens_1.StableToken.cUSD;\n    }\n    return this.getContract(StableToExchange[stableToken]);\n  };\n  Web3ContractCache.prototype.getFederatedAttestations = function () {\n    return this.getContract(base_1.CeloContract.FederatedAttestations);\n  };\n  Web3ContractCache.prototype.getFeeCurrencyWhitelist = function () {\n    return this.getContract(base_1.CeloContract.FeeCurrencyWhitelist);\n  };\n  Web3ContractCache.prototype.getFreezer = function () {\n    return this.getContract(base_1.CeloContract.Freezer);\n  };\n  Web3ContractCache.prototype.getGasPriceMinimum = function () {\n    return this.getContract(base_1.CeloContract.GasPriceMinimum);\n  };\n  Web3ContractCache.prototype.getGoldToken = function () {\n    return this.getContract(base_1.CeloContract.GoldToken);\n  };\n  Web3ContractCache.prototype.getGovernance = function () {\n    return this.getContract(base_1.CeloContract.Governance);\n  };\n  Web3ContractCache.prototype.getGrandaMento = function () {\n    return this.getContract(base_1.CeloContract.GrandaMento);\n  };\n  Web3ContractCache.prototype.getLockedGold = function () {\n    return this.getContract(base_1.CeloContract.LockedGold);\n  };\n  Web3ContractCache.prototype.getMetaTransactionWallet = function (address) {\n    return this.getContract(base_1.CeloContract.MetaTransactionWallet, address);\n  };\n  Web3ContractCache.prototype.getMetaTransactionWalletDeployer = function (address) {\n    return this.getContract(base_1.CeloContract.MetaTransactionWalletDeployer, address);\n  };\n  Web3ContractCache.prototype.getMultiSig = function (address) {\n    return this.getContract(base_1.CeloContract.MultiSig, address);\n  };\n  Web3ContractCache.prototype.getOdisPayments = function () {\n    return this.getContract(base_1.CeloContract.OdisPayments);\n  };\n  Web3ContractCache.prototype.getRandom = function () {\n    return this.getContract(base_1.CeloContract.Random);\n  };\n  Web3ContractCache.prototype.getRegistry = function () {\n    return this.getContract(base_1.CeloContract.Registry);\n  };\n  Web3ContractCache.prototype.getReserve = function () {\n    return this.getContract(base_1.CeloContract.Reserve);\n  };\n  Web3ContractCache.prototype.getSortedOracles = function () {\n    return this.getContract(base_1.CeloContract.SortedOracles);\n  };\n  Web3ContractCache.prototype.getStableToken = function (stableToken) {\n    if (stableToken === void 0) {\n      stableToken = celo_tokens_1.StableToken.cUSD;\n    }\n    return this.getContract(StableToContract[stableToken]);\n  };\n  Web3ContractCache.prototype.getTransferWhitelist = function () {\n    return this.getContract(base_1.CeloContract.TransferWhitelist);\n  };\n  Web3ContractCache.prototype.getValidators = function () {\n    return this.getContract(base_1.CeloContract.Validators);\n  };\n  /**\n   * Get native web3 contract wrapper\n   */\n  Web3ContractCache.prototype.getContract = function (contract, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var createFn;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.cacheMap[contract] == null || address !== undefined)) return [3 /*break*/, 3];\n            if (!!address) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.registry.addressFor(contract)];\n          case 1:\n            address = _a.sent();\n            _a.label = 2;\n          case 2:\n            debug('Initiating contract %s', contract);\n            createFn = base_1.ProxyContracts.includes(contract) ? Proxy_1.newProxy : exports.ContractFactories[contract];\n            this.cacheMap[contract] = createFn(this.registry.connection.web3, address);\n            _a.label = 3;\n          case 3:\n            // we know it's defined (thus the !)\n            return [2 /*return*/, this.cacheMap[contract]];\n        }\n      });\n    });\n  };\n  Web3ContractCache.prototype.invalidateContract = function (contract) {\n    this.cacheMap[contract] = undefined;\n  };\n  return Web3ContractCache;\n}();\nexports.Web3ContractCache = Web3ContractCache;","map":null,"metadata":{},"sourceType":"script"}