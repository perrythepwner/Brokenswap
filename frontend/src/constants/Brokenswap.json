{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feesPoolAddress",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEERATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INVARIANT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_moveAmountToFeesPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balanceOfToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        }
      ],
      "name": "calcOutputAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052604051610bf7380380610bf78339810160408190526100229161009a565b60058211610031576005610033565b815b6080526001600160a01b0390811660a0529283166000908152600160208190526040808320805460ff19908116841790915594909516825293902080549092169092179055506100e7565b80516001600160a01b038116811461009557600080fd5b919050565b600080600080608085870312156100b057600080fd5b6100b98561007e565b93506100c76020860161007e565b9250604085015191506100dc6060860161007e565b905092959194509250565b60805160a051610ade6101196000396000818160f401526101e301526000818161016c01526106440152610ade6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b99152d01161005b578063b99152d01461012e578063d6f9472014610141578063df791e5014610154578063fcc07a8c1461016757600080fd5b8063076b45c41461008d5780634a4ffd6b146100a957806368c4ac26146100cc5780636b259690146100ef575b600080fd5b61009660005481565b6040519081526020015b60405180910390f35b6100bc6100b73660046108fb565b61018e565b60405190151581526020016100a0565b6100bc6100da366004610925565b60016020526000908152604090205460ff1681565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a0565b61009661013c366004610925565b610212565b61009661014f366004610940565b6102b7565b6100bc610162366004610973565b61041f565b6100967f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038216600090815260016020819052604082205460ff161515146101d45760405162461bcd60e51b81526004016101cb906109af565b60405180910390fd5b6102086001600160a01b0384167f0000000000000000000000000000000000000000000000000000000000000000846106e1565b5060015b92915050565b6001600160a01b038116600090815260016020819052604082205460ff1615151461024f5760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610293573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c91906109dc565b6001600160a01b038216600090815260016020819052604082205460ff16151514801561030257506001600160a01b03821660009081526001602081905260409091205460ff161515145b61031e5760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038991906109dc565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f791906109dc565b90506000826000546104099190610a0b565b90506104158183610a2d565b9695505050505050565b6001600160a01b038316600090815260016020819052604082205460ff16151514801561046a57506001600160a01b03831660009081526001602081905260409091205460ff161515145b6104865760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b8152306004820152849084906001600160a01b038216906370a0823190602401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f291906109dc565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906109dc565b6105649190610a40565b600055604051636eb1769f60e11b815233600482015230602482015284906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906109dc565b10156106255760405162461bcd60e51b815260206004820152601f60248201527f596f75206d75737420617070726f7665207472616e736665722066697273740060448201526064016101cb565b61063a6001600160a01b038316333087610745565b60006103e86106697f000000000000000000000000000000000000000000000000000000000000000087610a40565b6106739190610a0b565b905061067f838261018e565b50600061068c84846102b7565b90506106a26001600160a01b03841633836106e1565b8181877f92d941e0c114cd4379ba1e7d068a433f9e84070e2bd5213006935001f2720c3c60405160405180910390a460019450505050505b9392505050565b6040516001600160a01b0383811660248301526044820183905261074091859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610784565b505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261077e9186918216906323b872dd9060840161070e565b50505050565b60006107996001600160a01b038416836107e7565b905080516000141580156107be5750808060200190518101906107bc9190610a57565b155b1561074057604051635274afe760e01b81526001600160a01b03841660048201526024016101cb565b60606106da8383600084600080856001600160a01b0316848660405161080d9190610a79565b60006040518083038185875af1925050503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b509150915061041586838360608261086f5761086a826108b6565b6106da565b815115801561088657506001600160a01b0384163b155b156108af57604051639996b31560e01b81526001600160a01b03851660048201526024016101cb565b50806106da565b8051156108c65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146108f657600080fd5b919050565b6000806040838503121561090e57600080fd5b610917836108df565b946020939093013593505050565b60006020828403121561093757600080fd5b6106da826108df565b6000806040838503121561095357600080fd5b61095c836108df565b915061096a602084016108df565b90509250929050565b60008060006060848603121561098857600080fd5b610991846108df565b925061099f602085016108df565b9150604084013590509250925092565b602080825260139082015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604082015260600190565b6000602082840312156109ee57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082610a2857634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561020c5761020c6109f5565b808202811582820484141761020c5761020c6109f5565b600060208284031215610a6957600080fd5b815180151581146106da57600080fd5b6000825160005b81811015610a9a5760208186018101518583015201610a80565b50600092019182525091905056fea2646970667358221220fe5282d2a0a4fdc4f68d72d5ead92bf61f0a87c91db4f81606b8fd8fb818a83c64736f6c63430008150033",
    "sourceMap": "415:4922:9:-:0;;;1324:306;;;;;;;;;;;;;;;;;;:::i;:::-;1450:1;1440:7;:11;1439:27;;1465:1;1439:27;;;1455:7;1439:27;1429:37;;-1:-1:-1;;;;;1517:26:9;;;;;1553:23;;;;;;;1579:4;1553:23;;;;;;;;:30;;-1:-1:-1;;1553:30:9;;;;;;;;1593:23;;;;;;;;;:30;;;;;;;;;;-1:-1:-1;415:4922:9;;14:177:14;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:440::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;558:2;547:9;543:18;537:25;527:35;;581:49;626:2;615:9;611:18;581:49;:::i;:::-;571:59;;196:440;;;;;;;:::o;:::-;415:4922:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b99152d01161005b578063b99152d01461012e578063d6f9472014610141578063df791e5014610154578063fcc07a8c1461016757600080fd5b8063076b45c41461008d5780634a4ffd6b146100a957806368c4ac26146100cc5780636b259690146100ef575b600080fd5b61009660005481565b6040519081526020015b60405180910390f35b6100bc6100b73660046108fb565b61018e565b60405190151581526020016100a0565b6100bc6100da366004610925565b60016020526000908152604090205460ff1681565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a0565b61009661013c366004610925565b610212565b61009661014f366004610940565b6102b7565b6100bc610162366004610973565b61041f565b6100967f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038216600090815260016020819052604082205460ff161515146101d45760405162461bcd60e51b81526004016101cb906109af565b60405180910390fd5b6102086001600160a01b0384167f0000000000000000000000000000000000000000000000000000000000000000846106e1565b5060015b92915050565b6001600160a01b038116600090815260016020819052604082205460ff1615151461024f5760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610293573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c91906109dc565b6001600160a01b038216600090815260016020819052604082205460ff16151514801561030257506001600160a01b03821660009081526001602081905260409091205460ff161515145b61031e5760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038991906109dc565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f791906109dc565b90506000826000546104099190610a0b565b90506104158183610a2d565b9695505050505050565b6001600160a01b038316600090815260016020819052604082205460ff16151514801561046a57506001600160a01b03831660009081526001602081905260409091205460ff161515145b6104865760405162461bcd60e51b81526004016101cb906109af565b6040516370a0823160e01b8152306004820152849084906001600160a01b038216906370a0823190602401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f291906109dc565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906109dc565b6105649190610a40565b600055604051636eb1769f60e11b815233600482015230602482015284906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906109dc565b10156106255760405162461bcd60e51b815260206004820152601f60248201527f596f75206d75737420617070726f7665207472616e736665722066697273740060448201526064016101cb565b61063a6001600160a01b038316333087610745565b60006103e86106697f000000000000000000000000000000000000000000000000000000000000000087610a40565b6106739190610a0b565b905061067f838261018e565b50600061068c84846102b7565b90506106a26001600160a01b03841633836106e1565b8181877f92d941e0c114cd4379ba1e7d068a433f9e84070e2bd5213006935001f2720c3c60405160405180910390a460019450505050505b9392505050565b6040516001600160a01b0383811660248301526044820183905261074091859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610784565b505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261077e9186918216906323b872dd9060840161070e565b50505050565b60006107996001600160a01b038416836107e7565b905080516000141580156107be5750808060200190518101906107bc9190610a57565b155b1561074057604051635274afe760e01b81526001600160a01b03841660048201526024016101cb565b60606106da8383600084600080856001600160a01b0316848660405161080d9190610a79565b60006040518083038185875af1925050503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b509150915061041586838360608261086f5761086a826108b6565b6106da565b815115801561088657506001600160a01b0384163b155b156108af57604051639996b31560e01b81526001600160a01b03851660048201526024016101cb565b50806106da565b8051156108c65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146108f657600080fd5b919050565b6000806040838503121561090e57600080fd5b610917836108df565b946020939093013593505050565b60006020828403121561093757600080fd5b6106da826108df565b6000806040838503121561095357600080fd5b61095c836108df565b915061096a602084016108df565b90509250929050565b60008060006060848603121561098857600080fd5b610991846108df565b925061099f602085016108df565b9150604084013590509250925092565b602080825260139082015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b604082015260600190565b6000602082840312156109ee57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082610a2857634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561020c5761020c6109f5565b808202811582820484141761020c5761020c6109f5565b600060208284031215610a6957600080fd5b815180151581146106da57600080fd5b6000825160005b81811015610a9a5760208186018101518583015201610a80565b50600092019182525091905056fea2646970667358221220fe5282d2a0a4fdc4f68d72d5ead92bf61f0a87c91db4f81606b8fd8fb818a83c64736f6c63430008150033",
    "sourceMap": "415:4922:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:24;;;;;;;;;160:25:14;;;148:2;133:18;474:24:9;;;;;;;;3845:256;;;;;;:::i;:::-;;:::i;:::-;;;798:14:14;;791:22;773:41;;761:2;746:18;3845:256:9;633:187:14;758:47:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;678:33;;;;;;;;-1:-1:-1;;;;;1180:32:14;;;1162:51;;1150:2;1135:18;678:33:9;1016:203:14;5132::9;;;;;;:::i;:::-;;:::i;4356:575::-;;;;;;:::i;:::-;;:::i;2019:1537::-;;;;;;:::i;:::-;;:::i;577:32::-;;;;;3845:256;-1:-1:-1;;;;;3953:28:9;;3929:4;3953:28;;;:15;:28;;;;;;;;;;:36;;;3945:68;;;;-1:-1:-1;;;3945:68:9;;;;;;;:::i;:::-;;;;;;;;;4023:50;-1:-1:-1;;;;;4023:32:9;;4056:8;4066:6;4023:32;:50::i;:::-;-1:-1:-1;4090:4:9;3845:256;;;;;:::o;5132:203::-;-1:-1:-1;;;;;5219:22:9;;5192:7;5219:22;;;:15;:22;;;;;;;;;;:30;;;5211:62;;;;-1:-1:-1;;;5211:62:9;;;;;;;:::i;:::-;5290:38;;-1:-1:-1;;;5290:38:9;;5322:4;5290:38;;;1162:51:14;-1:-1:-1;;;;;5290:23:9;;;;;1135:18:14;;5290:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4356:575::-;-1:-1:-1;;;;;4471:27:9;;4444:7;4471:27;;;:15;:27;;;;;;;;;;:35;;;:75;;;;-1:-1:-1;;;;;;4510:28:9;;;;;;:15;:28;;;;;;;;;;;:36;;;4471:75;4463:107;;;;-1:-1:-1;;;4463:107:9;;;;;;;:::i;:::-;4605:43;;-1:-1:-1;;;4605:43:9;;4642:4;4605:43;;;1162:51:14;4580:22:9;;-1:-1:-1;;;;;4605:28:9;;;;;1135:18:14;;4605:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4684:44;;-1:-1:-1;;;4684:44:9;;4722:4;4684:44;;;1162:51:14;4580:68:9;;-1:-1:-1;4658:23:9;;-1:-1:-1;;;;;4684:29:9;;;;;1135:18:14;;4684:44:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4658:70;;4814:26;4855:14;4843:9;;:26;;;;:::i;:::-;4814:55;-1:-1:-1;4887:36:9;4814:55;4887:15;:36;:::i;:::-;4879:45;4356:575;-1:-1:-1;;;;;;4356:575:9:o;2019:1537::-;-1:-1:-1;;;;;2181:27:9;;2111:4;2181:27;;;:15;:27;;;;;;;;;;:35;;;:75;;;;-1:-1:-1;;;;;;2220:28:9;;;;;;:15;:28;;;;;;;;;;;:36;;;2181:75;2173:107;;;;-1:-1:-1;;;2173:107:9;;;;;;;:::i;:::-;2497:33;;-1:-1:-1;;;2497:33:9;;2524:4;2497:33;;;1162:51:14;2314:10:9;;2360:11;;-1:-1:-1;;;;;2497:18:9;;;;;1135::14;;2497:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2462:32;;-1:-1:-1;;;2462:32:9;;2488:4;2462:32;;;1162:51:14;-1:-1:-1;;;;;2462:17:9;;;;;1135:18:14;;2462:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;;:::i;:::-;2450:9;:80;2641:44;;-1:-1:-1;;;2641:44:9;;2659:10;2641:44;;;3231:34:14;2679:4:9;3281:18:14;;;3274:43;2689:11:9;;-1:-1:-1;;;;;2641:17:9;;;;;3166:18:14;;2641:44:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;2633:103;;;;-1:-1:-1;;;2633:103:9;;3530:2:14;2633:103:9;;;3512:21:14;3569:2;3549:18;;;3542:30;3608:33;3588:18;;;3581:61;3659:18;;2633:103:9;3328:355:14;2633:103:9;2829:64;-1:-1:-1;;;;;2829:24:9;;2854:10;2874:4;2881:11;2829:24;:64::i;:::-;2955:12;2996:4;2971:21;2985:7;2971:11;:21;:::i;:::-;2970:30;;;;:::i;:::-;2955:45;;3062;3092:7;3102:4;3062:21;:45::i;:::-;;3193:21;3217:53;3242:7;3260:8;3217:16;:53::i;:::-;3193:77;-1:-1:-1;3354:48:9;-1:-1:-1;;;;;3354:21:9;;3376:10;3193:77;3354:21;:48::i;:::-;3514:4;3499:13;3486:11;3481:38;;;;;;;;;;3545:4;3538:11;;;;;;2019:1537;;;;;;:::o;1303:160:6:-;1412:43;;-1:-1:-1;;;;;3880:32:14;;;1412:43:6;;;3862:51:14;3929:18;;;3922:34;;;1385:71:6;;1405:5;;1427:14;;;;;3835:18:14;;1412:43:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:6;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1829:53;;-1:-1:-1;;;;;4225:15:14;;;1829:53:6;;;4207:34:14;4277:15;;;4257:18;;;4250:43;4309:18;;;4302:34;;;1802:81:6;;1822:5;;1844:18;;;;;4142::14;;1829:53:6;3967:375:14;1802:81:6;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:6;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:6;;-1:-1:-1;;;;;1180:32:14;;4631:40:6;;;1162:51:14;1135:18;;4631:40:6;1016:203:14;2705:151:7;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:7;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:7;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:7;;-1:-1:-1;;;;;1180:32:14;;5121:24:7;;;1162:51:14;1135:18;;5121:24:7;1016:203:14;5041:119:7;-1:-1:-1;5180:10:7;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:7;;;;;;;;;;;196:173:14;264:20;;-1:-1:-1;;;;;313:31:14;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;618:2;603:18;;;;590:32;;-1:-1:-1;;;374:254:14:o;825:186::-;884:6;937:2;925:9;916:7;912:23;908:32;905:52;;;953:1;950;943:12;905:52;976:29;995:9;976:29;:::i;1224:260::-;1292:6;1300;1353:2;1341:9;1332:7;1328:23;1324:32;1321:52;;;1369:1;1366;1359:12;1321:52;1392:29;1411:9;1392:29;:::i;:::-;1382:39;;1440:38;1474:2;1463:9;1459:18;1440:38;:::i;:::-;1430:48;;1224:260;;;;;:::o;1489:328::-;1566:6;1574;1582;1635:2;1623:9;1614:7;1610:23;1606:32;1603:52;;;1651:1;1648;1641:12;1603:52;1674:29;1693:9;1674:29;:::i;:::-;1664:39;;1722:38;1756:2;1745:9;1741:18;1722:38;:::i;:::-;1712:48;;1807:2;1796:9;1792:18;1779:32;1769:42;;1489:328;;;;;:::o;1822:343::-;2024:2;2006:21;;;2063:2;2043:18;;;2036:30;-1:-1:-1;;;2097:2:14;2082:18;;2075:49;2156:2;2141:18;;1822:343::o;2170:184::-;2240:6;2293:2;2281:9;2272:7;2268:23;2264:32;2261:52;;;2309:1;2306;2299:12;2261:52;-1:-1:-1;2332:16:14;;2170:184;-1:-1:-1;2170:184:14:o;2359:127::-;2420:10;2415:3;2411:20;2408:1;2401:31;2451:4;2448:1;2441:15;2475:4;2472:1;2465:15;2491:217;2531:1;2557;2547:132;;2601:10;2596:3;2592:20;2589:1;2582:31;2636:4;2633:1;2626:15;2664:4;2661:1;2654:15;2547:132;-1:-1:-1;2693:9:14;;2491:217::o;2713:128::-;2780:9;;;2801:11;;;2798:37;;;2815:18;;:::i;2846:168::-;2919:9;;;2950;;2967:15;;;2961:22;;2947:37;2937:71;;2988:18;;:::i;4347:277::-;4414:6;4467:2;4455:9;4446:7;4442:23;4438:32;4435:52;;;4483:1;4480;4473:12;4435:52;4515:9;4509:16;4568:5;4561:13;4554:21;4547:5;4544:32;4534:60;;4590:1;4587;4580:12;4629:412;4758:3;4796:6;4790:13;4821:1;4831:129;4845:6;4842:1;4839:13;4831:129;;;4943:4;4927:14;;;4923:25;;4917:32;4904:11;;;4897:53;4860:12;4831:129;;;-1:-1:-1;5015:1:14;4979:16;;5004:13;;;-1:-1:-1;4979:16:14;4629:412;-1:-1:-1;4629:412:14:o",
    "linkReferences": {},
    "immutableReferences": {
      "1518": [
        {
          "start": 364,
          "length": 32
        },
        {
          "start": 1604,
          "length": 32
        }
      ],
      "1520": [
        {
          "start": 244,
          "length": 32
        },
        {
          "start": 483,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FEERATE()": "fcc07a8c",
    "INVARIANT()": "076b45c4",
    "_moveAmountToFeesPool(address,uint256)": "4a4ffd6b",
    "balanceOfToken(address)": "b99152d0",
    "calcOutputAmount(address,address)": "d6f94720",
    "feesPool()": "6b259690",
    "supportedTokens(address)": "68c4ac26",
    "swap(address,address,uint256)": "df791e50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feesPoolAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEERATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVARIANT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_moveAmountToFeesPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"}],\"name\":\"calcOutputAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"_moveAmountToFeesPool(address,uint256)\":{\"params\":{\"amount\":\"The amount to move to the fees pool.\",\"payingToken\":\"The address of the token used to pay fees.\"},\"returns\":{\"_0\":\"A boolean indicating the success of the transfer.\"}},\"balanceOfToken(address)\":{\"params\":{\"token\":\"The address of the supported token.\"},\"returns\":{\"_0\":\"The balance of the token held by the contract.\"}},\"calcOutputAmount(address,address)\":{\"params\":{\"inputToken\":\"The address of the input token.\",\"outputToken\":\"The address of the output token.\"},\"returns\":{\"_0\":\"The calculated output amount.\"}},\"constructor\":{\"params\":{\"feeRate\":\"The fee rate, expressed as a percentage (e.g., 5 for 0.5%).\",\"feesPoolAddress\":\"The address where fees are collected.\",\"tokenA\":\"The address of the first supported token.\",\"tokenB\":\"The address of the second supported token.\"}},\"swap(address,address,uint256)\":{\"params\":{\"inputAmount\":\"The amount of input token to swap, in 18 decimals. e.g inputAmount=1e18 to swap 1 token.\",\"inputToken\":\"The address of the token we're swapping from.\",\"outputToken\":\"The address of the output token we're swapping to.\"},\"returns\":{\"_0\":\"A boolean indicating the success of the swap.\"}}},\"title\":\"Brokenswap, \\\"people said i was broke so i funded Brokenswap\\\".\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_moveAmountToFeesPool(address,uint256)\":{\"notice\":\"Internal function to move a specified amount of token to the fees pool.\"},\"balanceOfToken(address)\":{\"notice\":\"Get the balance of a supported token held by the contract.\"},\"calcOutputAmount(address,address)\":{\"notice\":\"Calculate the output amount for a given input and output token pair.\"},\"constructor\":{\"notice\":\"Constructor to initialize the Brokenswap contract.\"},\"swap(address,address,uint256)\":{\"notice\":\"Swaps one supported token for another.\"}},\"notice\":\"AMM decentralized exchange (DEX) for swapping supported tokens with a fee mechanism.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Brokenswap.sol\":\"Brokenswap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/Brokenswap.sol\":{\"keccak256\":\"0x259cb61cd86e48e51d404c4ede510c6220d87dd959287632d803f3e0c4a99a99\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae4ffee75edc7d063034526df2208e397ab2c8561c9469be32dd586abe1c8bb8\",\"dweb:/ipfs/QmX5K3FAdyL2vo7rronQBbyfz4aPQo7VWGJTEntmvJZMxu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeRate",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feesPoolAddress",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inputAmount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "outputAmount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fees",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEERATE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "INVARIANT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "payingToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_moveAmountToFeesPool",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcOutputAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feesPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportedTokens",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_moveAmountToFeesPool(address,uint256)": {
            "params": {
              "amount": "The amount to move to the fees pool.",
              "payingToken": "The address of the token used to pay fees."
            },
            "returns": {
              "_0": "A boolean indicating the success of the transfer."
            }
          },
          "balanceOfToken(address)": {
            "params": {
              "token": "The address of the supported token."
            },
            "returns": {
              "_0": "The balance of the token held by the contract."
            }
          },
          "calcOutputAmount(address,address)": {
            "params": {
              "inputToken": "The address of the input token.",
              "outputToken": "The address of the output token."
            },
            "returns": {
              "_0": "The calculated output amount."
            }
          },
          "constructor": {
            "params": {
              "feeRate": "The fee rate, expressed as a percentage (e.g., 5 for 0.5%).",
              "feesPoolAddress": "The address where fees are collected.",
              "tokenA": "The address of the first supported token.",
              "tokenB": "The address of the second supported token."
            }
          },
          "swap(address,address,uint256)": {
            "params": {
              "inputAmount": "The amount of input token to swap, in 18 decimals. e.g inputAmount=1e18 to swap 1 token.",
              "inputToken": "The address of the token we're swapping from.",
              "outputToken": "The address of the output token we're swapping to."
            },
            "returns": {
              "_0": "A boolean indicating the success of the swap."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_moveAmountToFeesPool(address,uint256)": {
            "notice": "Internal function to move a specified amount of token to the fees pool."
          },
          "balanceOfToken(address)": {
            "notice": "Get the balance of a supported token held by the contract."
          },
          "calcOutputAmount(address,address)": {
            "notice": "Calculate the output amount for a given input and output token pair."
          },
          "constructor": {
            "notice": "Constructor to initialize the Brokenswap contract."
          },
          "swap(address,address,uint256)": {
            "notice": "Swaps one supported token for another."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Brokenswap.sol": "Brokenswap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/Brokenswap.sol": {
        "keccak256": "0x259cb61cd86e48e51d404c4ede510c6220d87dd959287632d803f3e0c4a99a99",
        "urls": [
          "bzz-raw://ae4ffee75edc7d063034526df2208e397ab2c8561c9469be32dd586abe1c8bb8",
          "dweb:/ipfs/QmX5K3FAdyL2vo7rronQBbyfz4aPQo7VWGJTEntmvJZMxu"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Brokenswap.sol",
    "id": 1825,
    "exportedSymbols": {
      "Address": [
        1482
      ],
      "Brokenswap": [
        1824
      ],
      "Context": [
        1504
      ],
      "ERC20": [
        799
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        903
      ],
      "IERC20Permit": [
        939
      ],
      "SafeERC20": [
        1229
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5299:9",
    "nodes": [
      {
        "id": 1506,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 1507,
        "nodeType": "ImportDirective",
        "src": "65:56:9",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1825,
        "sourceUnit": 878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1508,
        "nodeType": "ImportDirective",
        "src": "122:55:9",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1825,
        "sourceUnit": 800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1509,
        "nodeType": "ImportDirective",
        "src": "178:65:9",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1825,
        "sourceUnit": 1230,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1824,
        "nodeType": "ContractDefinition",
        "src": "415:4922:9",
        "nodes": [
          {
            "id": 1514,
            "nodeType": "UsingForDirective",
            "src": "441:27:9",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1511,
              "name": "SafeERC20",
              "nameLocations": [
                "447:9:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1229,
              "src": "447:9:9"
            },
            "typeName": {
              "id": 1513,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1512,
                "name": "IERC20",
                "nameLocations": [
                  "461:6:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 877,
                "src": "461:6:9"
              },
              "referencedDeclaration": 877,
              "src": "461:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$877",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1516,
            "nodeType": "VariableDeclaration",
            "src": "474:24:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "076b45c4",
            "mutability": "mutable",
            "name": "INVARIANT",
            "nameLocation": "489:9:9",
            "scope": 1824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1515,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "474:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1518,
            "nodeType": "VariableDeclaration",
            "src": "577:32:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "fcc07a8c",
            "mutability": "immutable",
            "name": "FEERATE",
            "nameLocation": "602:7:9",
            "scope": 1824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1517,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "577:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1520,
            "nodeType": "VariableDeclaration",
            "src": "678:33:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "6b259690",
            "mutability": "immutable",
            "name": "feesPool",
            "nameLocation": "703:8:9",
            "scope": 1824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1519,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1524,
            "nodeType": "VariableDeclaration",
            "src": "758:47:9",
            "nodes": [],
            "constant": false,
            "functionSelector": "68c4ac26",
            "mutability": "mutable",
            "name": "supportedTokens",
            "nameLocation": "790:15:9",
            "scope": 1824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1523,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "766:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "758:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1522,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "777:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1532,
            "nodeType": "EventDefinition",
            "src": "848:122:9",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "92d941e0c114cd4379ba1e7d068a433f9e84070e2bd5213006935001f2720c3c",
            "name": "Swap",
            "nameLocation": "854:4:9",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "884:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "868:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1528,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nameLocation": "921:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "905:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1530,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "959:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "943:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:111:9"
            }
          },
          {
            "id": 1571,
            "nodeType": "FunctionDefinition",
            "src": "1324:306:9",
            "nodes": [],
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "1419:211:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1544,
                      "name": "FEERATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "1429:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1545,
                              "name": "feeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1539,
                              "src": "1440:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1450:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "1440:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1548,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1439:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "35",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1465:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "1439:27:9",
                      "trueExpression": {
                        "id": 1549,
                        "name": "feeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1539,
                        "src": "1455:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1429:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1553,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:37:9"
                },
                {
                  "expression": {
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1554,
                      "name": "feesPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1520,
                      "src": "1517:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1555,
                      "name": "feesPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "1528:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1517:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:26:9"
                },
                {
                  "expression": {
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1558,
                        "name": "supportedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "1553:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1560,
                      "indexExpression": {
                        "id": 1559,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1535,
                        "src": "1569:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1553:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1579:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1553:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:30:9"
                },
                {
                  "expression": {
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1564,
                        "name": "supportedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "1593:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1566,
                      "indexExpression": {
                        "id": 1565,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "1609:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1593:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1619:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1593:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:30:9"
                }
              ]
            },
            "documentation": {
              "id": 1533,
              "nodeType": "StructuredDocumentation",
              "src": "976:343:9",
              "text": "@notice Constructor to initialize the Brokenswap contract.\n @param tokenA The address of the first supported token.\n @param tokenB The address of the second supported token.\n @param feeRate The fee rate, expressed as a percentage (e.g., 5 for 0.5%).\n @param feesPoolAddress The address where fees are collected."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "1345:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "1337:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "1361:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "1353:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "feeRate",
                  "nameLocation": "1377:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "1369:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "feesPoolAddress",
                  "nameLocation": "1394:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "1386:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:74:9"
            },
            "returnParameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:0:9"
            },
            "scope": 1824,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1704,
            "nodeType": "FunctionDefinition",
            "src": "2019:1537:9",
            "nodes": [],
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "2117:1439:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1584,
                              "name": "supportedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "2181:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1586,
                            "indexExpression": {
                              "id": 1585,
                              "name": "inputToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "2197:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2181:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 1587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2212:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2181:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1589,
                              "name": "supportedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "2220:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1591,
                            "indexExpression": {
                              "id": 1590,
                              "name": "outputToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "2236:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2220:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 1592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2252:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2220:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2181:75:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2258:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        },
                        "value": "Token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        }
                      ],
                      "id": 1583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2173:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:107:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:107:9"
                },
                {
                  "assignments": [
                    1600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1600,
                      "mutability": "mutable",
                      "name": "inToken",
                      "nameLocation": "2297:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "2290:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$877",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1599,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1598,
                          "name": "IERC20",
                          "nameLocations": [
                            "2290:6:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 877,
                          "src": "2290:6:9"
                        },
                        "referencedDeclaration": 877,
                        "src": "2290:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1602,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "2314:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1601,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "2307:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2307:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2290:35:9"
                },
                {
                  "assignments": [
                    1607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1607,
                      "mutability": "mutable",
                      "name": "outToken",
                      "nameLocation": "2342:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "2335:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$877",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1606,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1605,
                          "name": "IERC20",
                          "nameLocations": [
                            "2335:6:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 877,
                          "src": "2335:6:9"
                        },
                        "referencedDeclaration": 877,
                        "src": "2335:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1611,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1609,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "2360:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1608,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "2353:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2335:37:9"
                },
                {
                  "expression": {
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1612,
                      "name": "INVARIANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "2450:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1617,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2488:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                  "typeString": "contract Brokenswap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                  "typeString": "contract Brokenswap"
                                }
                              ],
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2480:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2480:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2480:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1613,
                            "name": "inToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "2462:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2470:9:9",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 834,
                          "src": "2462:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2462:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1624,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2524:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                  "typeString": "contract Brokenswap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                  "typeString": "contract Brokenswap"
                                }
                              ],
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2516:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2516:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2516:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1620,
                            "name": "outToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1607,
                            "src": "2497:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2506:9:9",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 834,
                          "src": "2497:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2462:68:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2450:80:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:80:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1633,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2659:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2663:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2659:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1637,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2679:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                    "typeString": "contract Brokenswap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Brokenswap_$1824",
                                    "typeString": "contract Brokenswap"
                                  }
                                ],
                                "id": 1636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2671:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1635,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2671:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2671:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1631,
                              "name": "inToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1600,
                              "src": "2641:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2649:9:9",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 854,
                            "src": "2641:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2641:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1640,
                          "name": "inputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1578,
                          "src": "2689:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2641:59:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420617070726f7665207472616e73666572206669727374",
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2702:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69e8115cd2171ab613ed809c5d694fb25146927574b2af7fea0c0bc60f022f21",
                          "typeString": "literal_string \"You must approve transfer first\""
                        },
                        "value": "You must approve transfer first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69e8115cd2171ab613ed809c5d694fb25146927574b2af7fea0c0bc60f022f21",
                          "typeString": "literal_string \"You must approve transfer first\""
                        }
                      ],
                      "id": 1630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2633:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2633:103:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:103:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2854:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2858:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2854:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2874:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          ],
                          "id": 1651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2866:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2866:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2866:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1654,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "2881:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1645,
                        "name": "inToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1600,
                        "src": "2829:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2837:16:9",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1016,
                      "src": "2829:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1656,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:64:9"
                },
                {
                  "assignments": [
                    1658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1658,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "2963:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "2955:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2955:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1665,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1659,
                            "name": "inputAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "2971:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1660,
                            "name": "FEERATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "2985:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2971:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1662,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2970:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2996:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "2970:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2955:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1669,
                            "name": "inToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "3092:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3084:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1667,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3084:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3084:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1671,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1658,
                        "src": "3102:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1666,
                      "name": "_moveAmountToFeesPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1734,
                      "src": "3062:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3062:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1673,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:45:9"
                },
                {
                  "assignments": [
                    1675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1675,
                      "mutability": "mutable",
                      "name": "_outputAmount",
                      "nameLocation": "3201:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "3193:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3193:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1686,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1679,
                            "name": "inToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "3242:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3234:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1677,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3234:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3234:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1683,
                            "name": "outToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1607,
                            "src": "3260:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3252:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3252:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3252:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1676,
                      "name": "calcOutputAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "3217:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:53:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3193:77:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3376:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3380:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3376:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1692,
                        "name": "_outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "3388:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1687,
                        "name": "outToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "3354:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3363:12:9",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 989,
                      "src": "3354:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1694,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:48:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1696,
                        "name": "inputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1578,
                        "src": "3486:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1697,
                        "name": "_outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "3499:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1698,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1658,
                        "src": "3514:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1695,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1532,
                      "src": "3481:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3481:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1700,
                  "nodeType": "EmitStatement",
                  "src": "3476:43:9"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3545:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1582,
                  "id": 1702,
                  "nodeType": "Return",
                  "src": "3538:11:9"
                }
              ]
            },
            "documentation": {
              "id": 1572,
              "nodeType": "StructuredDocumentation",
              "src": "1636:378:9",
              "text": "@notice Swaps one supported token for another.\n @param inputToken The address of the token we're swapping from.\n @param outputToken The address of the output token we're swapping to.\n @param inputAmount The amount of input token to swap, in 18 decimals. e.g inputAmount=1e18 to swap 1 token.\n @return A boolean indicating the success of the swap."
            },
            "functionSelector": "df791e50",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "2028:4:9",
            "parameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "2041:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2033:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1576,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "2061:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2053:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nameLocation": "2082:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2074:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:62:9"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "2111:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:6:9"
            },
            "scope": 1824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1734,
            "nodeType": "FunctionDefinition",
            "src": "3845:256:9",
            "nodes": [],
            "body": {
              "id": 1733,
              "nodeType": "Block",
              "src": "3935:166:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1715,
                            "name": "supportedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "3953:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1717,
                          "indexExpression": {
                            "id": 1716,
                            "name": "payingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "3969:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3953:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3985:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3953:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "id": 1720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3991:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        },
                        "value": "Token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        }
                      ],
                      "id": 1714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3945:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3945:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1722,
                  "nodeType": "ExpressionStatement",
                  "src": "3945:68:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1727,
                        "name": "feesPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "4056:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1728,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "4066:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1724,
                            "name": "payingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "4030:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1723,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "4023:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4023:19:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4043:12:9",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 989,
                      "src": "4023:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:50:9"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4090:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1713,
                  "id": 1732,
                  "nodeType": "Return",
                  "src": "4083:11:9"
                }
              ]
            },
            "documentation": {
              "id": 1705,
              "nodeType": "StructuredDocumentation",
              "src": "3562:278:9",
              "text": "@notice Internal function to move a specified amount of token to the fees pool.\n @param payingToken The address of the token used to pay fees.\n @param amount The amount to move to the fees pool.\n @return A boolean indicating the success of the transfer."
            },
            "functionSelector": "4a4ffd6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveAmountToFeesPool",
            "nameLocation": "3854:21:9",
            "parameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "payingToken",
                  "nameLocation": "3884:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "3876:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3905:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "3897:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3875:37:9"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "3929:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3928:6:9"
            },
            "scope": 1824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1795,
            "nodeType": "FunctionDefinition",
            "src": "4356:575:9",
            "nodes": [],
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "4453:478:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1745,
                              "name": "supportedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "4471:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1747,
                            "indexExpression": {
                              "id": 1746,
                              "name": "inputToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "4487:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4471:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 1748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4502:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4471:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1750,
                              "name": "supportedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "4510:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1752,
                            "indexExpression": {
                              "id": 1751,
                              "name": "outputToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "4526:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4510:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4542:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4510:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4471:75:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4548:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        },
                        "value": "Token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        }
                      ],
                      "id": 1744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4463:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4463:107:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1758,
                  "nodeType": "ExpressionStatement",
                  "src": "4463:107:9"
                },
                {
                  "assignments": [
                    1760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1760,
                      "mutability": "mutable",
                      "name": "balanceInToken",
                      "nameLocation": "4588:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "4580:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4580:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1770,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1767,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4642:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          ],
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4634:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1765,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4634:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4634:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1762,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "4612:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1761,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "4605:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4605:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4624:9:9",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "4605:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4605:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4580:68:9"
                },
                {
                  "assignments": [
                    1772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1772,
                      "mutability": "mutable",
                      "name": "balanceOutToken",
                      "nameLocation": "4666:15:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "4658:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1771,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4658:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1782,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1779,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4722:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          ],
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4714:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1777,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4714:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4714:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1774,
                            "name": "outputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "4691:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1773,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "4684:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4684:19:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4704:9:9",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "4684:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4658:70:9"
                },
                {
                  "assignments": [
                    1784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "newBalanceOutToken",
                      "nameLocation": "4822:18:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "4814:26:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4814:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1788,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1785,
                      "name": "INVARIANT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "4843:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1786,
                      "name": "balanceInToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "4855:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4843:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4814:55:9"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1789,
                          "name": "balanceOutToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1772,
                          "src": "4887:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1790,
                          "name": "newBalanceOutToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1784,
                          "src": "4905:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4887:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1792,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4886:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1743,
                  "id": 1793,
                  "nodeType": "Return",
                  "src": "4879:45:9"
                }
              ]
            },
            "documentation": {
              "id": 1735,
              "nodeType": "StructuredDocumentation",
              "src": "4107:244:9",
              "text": "@notice Calculate the output amount for a given input and output token pair.\n @param inputToken The address of the input token.\n @param outputToken The address of the output token.\n @return The calculated output amount."
            },
            "functionSelector": "d6f94720",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcOutputAmount",
            "nameLocation": "4365:16:9",
            "parameters": {
              "id": 1740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1737,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "4390:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "4382:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1739,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "4410:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "4402:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4381:41:9"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "4444:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4444:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4443:9:9"
            },
            "scope": 1824,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1823,
            "nodeType": "FunctionDefinition",
            "src": "5132:203:9",
            "nodes": [],
            "body": {
              "id": 1822,
              "nodeType": "Block",
              "src": "5201:134:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1804,
                            "name": "supportedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "5219:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1806,
                          "indexExpression": {
                            "id": 1805,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1798,
                            "src": "5235:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5219:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5245:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5219:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "id": 1809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5251:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        },
                        "value": "Token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        }
                      ],
                      "id": 1803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5211:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "5211:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1818,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5322:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Brokenswap_$1824",
                              "typeString": "contract Brokenswap"
                            }
                          ],
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5314:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5314:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5314:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1813,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1798,
                            "src": "5297:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1812,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "5290:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5290:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5304:9:9",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 834,
                      "src": "5290:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5290:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1802,
                  "id": 1821,
                  "nodeType": "Return",
                  "src": "5283:45:9"
                }
              ]
            },
            "documentation": {
              "id": 1796,
              "nodeType": "StructuredDocumentation",
              "src": "4937:190:9",
              "text": "@notice Get the balance of a supported token held by the contract.\n @param token The address of the supported token.\n @return The balance of the token held by the contract."
            },
            "functionSelector": "b99152d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfToken",
            "nameLocation": "5141:14:9",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5164:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "5156:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5155:15:9"
            },
            "returnParameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1801,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "5192:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5192:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5191:9:9"
            },
            "scope": 1824,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Brokenswap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1510,
          "nodeType": "StructuredDocumentation",
          "src": "245:170:9",
          "text": "@title Brokenswap, \"people said i was broke so i funded Brokenswap\".\n @notice AMM decentralized exchange (DEX) for swapping supported tokens with a fee mechanism."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1824
        ],
        "name": "Brokenswap",
        "nameLocation": "424:10:9",
        "scope": 1825,
        "usedErrors": [
          956,
          1237,
          1242,
          1245
        ],
        "usedEvents": [
          1532
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 9
}